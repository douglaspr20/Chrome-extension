export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: string;
  String: string;
  Boolean: boolean;
  Int: number;
  Float: number;
  float8: any;
  numeric: any;
  time: any;
  timestamp: any;
  timestamptz: any;
  uuid: any;
};

/** Boolean expression to compare columns of type "Boolean". All fields are combined with logical 'AND'. */
export type Boolean_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['Boolean']>;
  _gt?: InputMaybe<Scalars['Boolean']>;
  _gte?: InputMaybe<Scalars['Boolean']>;
  _in?: InputMaybe<Array<Scalars['Boolean']>>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  _lt?: InputMaybe<Scalars['Boolean']>;
  _lte?: InputMaybe<Scalars['Boolean']>;
  _neq?: InputMaybe<Scalars['Boolean']>;
  _nin?: InputMaybe<Array<Scalars['Boolean']>>;
};

/** User cognito attributes */
export type CognitoUserAttributes = {
  __typename?: 'CognitoUserAttributes';
  isEnabled?: Maybe<Scalars['Boolean']>;
};

/** Users list for google scripts */
export type GetUsersListForGoogleScriptsResult = {
  __typename?: 'GetUsersListForGoogleScriptsResult';
  dob?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
};

/** Google group information */
export type GoogleGroup = {
  __typename?: 'GoogleGroup';
  email: Scalars['String'];
  id: Scalars['String'];
  name: Scalars['String'];
};

/** Google user information */
export type GoogleUser = {
  __typename?: 'GoogleUser';
  aliases: Array<Scalars['String']>;
  groups: Array<GoogleGroup>;
  id: Scalars['String'];
  name: Scalars['String'];
  primaryEmail: Scalars['String'];
};

export type IndustryForGoogleSlides = {
  __typename?: 'IndustryForGoogleSlides';
  id: Scalars['String'];
  name: Scalars['String'];
};

/** Industry */
export type IndustryType = {
  __typename?: 'IndustryType';
  id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
};

/** Boolean expression to compare columns of type "Int". All fields are combined with logical 'AND'. */
export type Int_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['Int']>;
  _gt?: InputMaybe<Scalars['Int']>;
  _gte?: InputMaybe<Scalars['Int']>;
  _in?: InputMaybe<Array<Scalars['Int']>>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  _lt?: InputMaybe<Scalars['Int']>;
  _lte?: InputMaybe<Scalars['Int']>;
  _neq?: InputMaybe<Scalars['Int']>;
  _nin?: InputMaybe<Array<Scalars['Int']>>;
};

/** User industry experiences */
export type IntranetUserIndustryExperience = {
  __typename?: 'IntranetUserIndustryExperience';
  id?: Maybe<Scalars['String']>;
  industry?: Maybe<IndustryType>;
};

/** New Google user details */
export type NewGoogleUser = {
  __typename?: 'NewGoogleUser';
  id: Scalars['String'];
};

/** Return values of the send forgot password confirmation mutation */
export type SendForgotPasswordConfirmationCodeReturn = {
  __typename?: 'SendForgotPasswordConfirmationCodeReturn';
  userPool?: Maybe<Scalars['String']>;
  username?: Maybe<Scalars['String']>;
};

/** Skill */
export type SkillType = {
  __typename?: 'SkillType';
  name: Scalars['String'];
};

/** Slack channel information */
export type SlackChannel = {
  __typename?: 'SlackChannel';
  id: Scalars['String'];
  isArchived: Scalars['Boolean'];
  isChannel: Scalars['Boolean'];
  isGroup: Scalars['Boolean'];
  isPrivate: Scalars['Boolean'];
  name: Scalars['String'];
};

/** Slack user information */
export type SlackUser = {
  __typename?: 'SlackUser';
  displayName: Scalars['String'];
  email: Scalars['String'];
  id: Scalars['String'];
  name: Scalars['String'];
  profileAvatar_24: Scalars['String'];
  profileAvatar_32: Scalars['String'];
  realName: Scalars['String'];
};

/** Boolean expression to compare columns of type "String". All fields are combined with logical 'AND'. */
export type String_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['String']>;
  _gt?: InputMaybe<Scalars['String']>;
  _gte?: InputMaybe<Scalars['String']>;
  /** does the column match the given case-insensitive pattern */
  _ilike?: InputMaybe<Scalars['String']>;
  _in?: InputMaybe<Array<Scalars['String']>>;
  /** does the column match the given POSIX regular expression, case insensitive */
  _iregex?: InputMaybe<Scalars['String']>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  /** does the column match the given pattern */
  _like?: InputMaybe<Scalars['String']>;
  _lt?: InputMaybe<Scalars['String']>;
  _lte?: InputMaybe<Scalars['String']>;
  _neq?: InputMaybe<Scalars['String']>;
  /** does the column NOT match the given case-insensitive pattern */
  _nilike?: InputMaybe<Scalars['String']>;
  _nin?: InputMaybe<Array<Scalars['String']>>;
  /** does the column NOT match the given POSIX regular expression, case insensitive */
  _niregex?: InputMaybe<Scalars['String']>;
  /** does the column NOT match the given pattern */
  _nlike?: InputMaybe<Scalars['String']>;
  /** does the column NOT match the given POSIX regular expression, case sensitive */
  _nregex?: InputMaybe<Scalars['String']>;
  /** does the column NOT match the given SQL regular expression */
  _nsimilar?: InputMaybe<Scalars['String']>;
  /** does the column match the given POSIX regular expression, case sensitive */
  _regex?: InputMaybe<Scalars['String']>;
  /** does the column match the given SQL regular expression */
  _similar?: InputMaybe<Scalars['String']>;
};

export type TeamForGoogleSlides = {
  __typename?: 'TeamForGoogleSlides';
  id: Scalars['String'];
  name: Scalars['String'];
};

/** User basic information */
export type UserBasicInformation = {
  __typename?: 'UserBasicInformation';
  addressLine1?: Maybe<Scalars['String']>;
  addressLine2?: Maybe<Scalars['String']>;
  city?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  phone?: Maybe<Scalars['String']>;
  stateOrProvince?: Maybe<Scalars['String']>;
  zipOrPostalCode?: Maybe<Scalars['String']>;
};

/** User information */
export type UserDetailsForIntranetData = {
  __typename?: 'UserDetailsForIntranetData';
  about?: Maybe<Scalars['String']>;
  avatarURL?: Maybe<Scalars['String']>;
  email?: Maybe<Scalars['String']>;
  firstName?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  lastName?: Maybe<Scalars['String']>;
  ripplingID?: Maybe<Scalars['String']>;
  skillList?: Maybe<Array<UserSkillLevel>>;
  slackID?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['String']>;
  user_basic_information?: Maybe<UserBasicInformation>;
  user_industry_experiences?: Maybe<Array<IntranetUserIndustryExperience>>;
  user_professional_information?: Maybe<UserProfessionalInformation>;
  user_profile_visibility?: Maybe<UserProfileVisibility>;
  user_profiles?: Maybe<Array<UserProfileForIntranet>>;
  user_skills?: Maybe<Array<UserSkill>>;
  username?: Maybe<Scalars['String']>;
};

/** User for slack bot result */
export type UserForSlackBotResult = {
  __typename?: 'UserForSlackBotResult';
  created_at: Scalars['String'];
  dob?: Maybe<Scalars['String']>;
  id: Scalars['String'];
  slackID?: Maybe<Scalars['String']>;
};

/** User private information */
export type UserPrivateInformationData = {
  __typename?: 'UserPrivateInformationData';
  createdAt?: Maybe<Scalars['String']>;
  dietaryRestrictions?: Maybe<Scalars['String']>;
  dob?: Maybe<Scalars['String']>;
  emergencyContactEmail?: Maybe<Scalars['String']>;
  emergencyContactName?: Maybe<Scalars['String']>;
  emergencyContactPhone?: Maybe<Scalars['String']>;
  emergencyContactRelationship?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  owner?: Maybe<Scalars['String']>;
  ssn?: Maybe<Scalars['String']>;
  tShirtSize?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['String']>;
  userMetaID?: Maybe<Scalars['String']>;
  username?: Maybe<Scalars['String']>;
};

export type UserPrivateInformationInput = {
  dietaryRestrictions?: InputMaybe<Scalars['String']>;
  dob: Scalars['String'];
  emergencyContactEmail: Scalars['String'];
  emergencyContactName: Scalars['String'];
  emergencyContactPhone: Scalars['String'];
  emergencyContactRelationship: Scalars['String'];
  ssn: Scalars['String'];
  tShirtSize?: InputMaybe<Scalars['String']>;
  userMetaID: Scalars['String'];
  username?: InputMaybe<Scalars['String']>;
};

/** User professional information */
export type UserProfessionalInformation = {
  __typename?: 'UserProfessionalInformation';
  availabilityStartTime?: Maybe<Scalars['String']>;
  availabilityTimeZone?: Maybe<Scalars['String']>;
  currencyType?: Maybe<Scalars['String']>;
  dailyRate?: Maybe<Scalars['Int']>;
  fourWeeklyRate?: Maybe<Scalars['Int']>;
  hourlyRate?: Maybe<Scalars['Int']>;
  linkedInUrl?: Maybe<Scalars['String']>;
  twitterUrl?: Maybe<Scalars['String']>;
  weeklyRate?: Maybe<Scalars['Int']>;
};

/** User profile information */
export type UserProfile = {
  __typename?: 'UserProfile';
  id: Scalars['String'];
  isDefault?: Maybe<Scalars['Boolean']>;
  role: Scalars['String'];
  slideUrl?: Maybe<Scalars['String']>;
  summary: Scalars['String'];
  user_meta?: Maybe<UserDetailsForIntranetData>;
  user_profile_teams?: Maybe<Array<UserProfileTeamForGoogleSlides>>;
  user_work_experiences?: Maybe<Array<UserWorkExperienceForGoogleSlides>>;
};

export type UserProfileCompanyForGoogleSlides = {
  __typename?: 'UserProfileCompanyForGoogleSlides';
  companyLogoURL: Scalars['String'];
  companySize: Scalars['String'];
  id: Scalars['String'];
  industry?: Maybe<IndustryForGoogleSlides>;
  name: Scalars['String'];
  website: Scalars['String'];
};

/** User profile information */
export type UserProfileForIntranet = {
  __typename?: 'UserProfileForIntranet';
  id: Scalars['String'];
  isDefault: Scalars['Boolean'];
  role: Scalars['String'];
  slideUrl?: Maybe<Scalars['String']>;
  summary: Scalars['String'];
};

export type UserProfileTeamForGoogleSlides = {
  __typename?: 'UserProfileTeamForGoogleSlides';
  team?: Maybe<TeamForGoogleSlides>;
};

/** USer profile visibility */
export type UserProfileVisibility = {
  __typename?: 'UserProfileVisibility';
  name: Scalars['String'];
};

/** User skill */
export type UserSkill = {
  __typename?: 'UserSkill';
  id: Scalars['String'];
  skill?: Maybe<SkillType>;
};

/** Skills with level */
export type UserSkillLevel = {
  __typename?: 'UserSkillLevel';
  level: Scalars['String'];
  skill: Scalars['String'];
};

export type UserWorkExperienceForGoogleSlides = {
  __typename?: 'UserWorkExperienceForGoogleSlides';
  description: Scalars['String'];
  id: Scalars['String'];
  jobTitle: Scalars['String'];
  user_profile_company?: Maybe<UserProfileCompanyForGoogleSlides>;
};

/** columns and relationships of "api_user_token" */
export type Api_User_Token = {
  __typename?: 'api_user_token';
  id: Scalars['uuid'];
  token: Scalars['String'];
  user: Scalars['String'];
};

/** aggregated selection of "api_user_token" */
export type Api_User_Token_Aggregate = {
  __typename?: 'api_user_token_aggregate';
  aggregate?: Maybe<Api_User_Token_Aggregate_Fields>;
  nodes: Array<Api_User_Token>;
};

/** aggregate fields of "api_user_token" */
export type Api_User_Token_Aggregate_Fields = {
  __typename?: 'api_user_token_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<Api_User_Token_Max_Fields>;
  min?: Maybe<Api_User_Token_Min_Fields>;
};

/** aggregate fields of "api_user_token" */
export type Api_User_Token_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Api_User_Token_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** Boolean expression to filter rows from the table "api_user_token". All fields are combined with a logical 'AND'. */
export type Api_User_Token_Bool_Exp = {
  _and?: InputMaybe<Array<Api_User_Token_Bool_Exp>>;
  _not?: InputMaybe<Api_User_Token_Bool_Exp>;
  _or?: InputMaybe<Array<Api_User_Token_Bool_Exp>>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  token?: InputMaybe<String_Comparison_Exp>;
  user?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "api_user_token" */
export enum Api_User_Token_Constraint {
  /** unique or primary key constraint on columns "id" */
  ApiUserTokenPkey = 'api_user_token_pkey',
  /** unique or primary key constraint on columns "token" */
  ApiUserTokenTokenKey = 'api_user_token_token_key',
  /** unique or primary key constraint on columns "user" */
  ApiUserTokenUserKey = 'api_user_token_user_key',
}

/** input type for inserting data into table "api_user_token" */
export type Api_User_Token_Insert_Input = {
  id?: InputMaybe<Scalars['uuid']>;
  token?: InputMaybe<Scalars['String']>;
  user?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Api_User_Token_Max_Fields = {
  __typename?: 'api_user_token_max_fields';
  id?: Maybe<Scalars['uuid']>;
  token?: Maybe<Scalars['String']>;
  user?: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type Api_User_Token_Min_Fields = {
  __typename?: 'api_user_token_min_fields';
  id?: Maybe<Scalars['uuid']>;
  token?: Maybe<Scalars['String']>;
  user?: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "api_user_token" */
export type Api_User_Token_Mutation_Response = {
  __typename?: 'api_user_token_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Api_User_Token>;
};

/** on_conflict condition type for table "api_user_token" */
export type Api_User_Token_On_Conflict = {
  constraint: Api_User_Token_Constraint;
  update_columns?: Array<Api_User_Token_Update_Column>;
  where?: InputMaybe<Api_User_Token_Bool_Exp>;
};

/** Ordering options when selecting data from "api_user_token". */
export type Api_User_Token_Order_By = {
  id?: InputMaybe<Order_By>;
  token?: InputMaybe<Order_By>;
  user?: InputMaybe<Order_By>;
};

/** primary key columns input for table: api_user_token */
export type Api_User_Token_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "api_user_token" */
export enum Api_User_Token_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Token = 'token',
  /** column name */
  User = 'user',
}

/** input type for updating data in table "api_user_token" */
export type Api_User_Token_Set_Input = {
  id?: InputMaybe<Scalars['uuid']>;
  token?: InputMaybe<Scalars['String']>;
  user?: InputMaybe<Scalars['String']>;
};

/** Streaming cursor of the table "api_user_token" */
export type Api_User_Token_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Api_User_Token_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Api_User_Token_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['uuid']>;
  token?: InputMaybe<Scalars['String']>;
  user?: InputMaybe<Scalars['String']>;
};

/** update columns of table "api_user_token" */
export enum Api_User_Token_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Token = 'token',
  /** column name */
  User = 'user',
}

export type Api_User_Token_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Api_User_Token_Set_Input>;
  where: Api_User_Token_Bool_Exp;
};

/** columns and relationships of "billing_frequency" */
export type Billing_Frequency = {
  __typename?: 'billing_frequency';
  /** An array relationship */
  customers: Array<Customer>;
  /** An aggregate relationship */
  customers_aggregate: Customer_Aggregate;
  id: Scalars['uuid'];
  name: Scalars['String'];
};

/** columns and relationships of "billing_frequency" */
export type Billing_FrequencyCustomersArgs = {
  distinct_on?: InputMaybe<Array<Customer_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Customer_Order_By>>;
  where?: InputMaybe<Customer_Bool_Exp>;
};

/** columns and relationships of "billing_frequency" */
export type Billing_FrequencyCustomers_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Customer_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Customer_Order_By>>;
  where?: InputMaybe<Customer_Bool_Exp>;
};

/** aggregated selection of "billing_frequency" */
export type Billing_Frequency_Aggregate = {
  __typename?: 'billing_frequency_aggregate';
  aggregate?: Maybe<Billing_Frequency_Aggregate_Fields>;
  nodes: Array<Billing_Frequency>;
};

/** aggregate fields of "billing_frequency" */
export type Billing_Frequency_Aggregate_Fields = {
  __typename?: 'billing_frequency_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<Billing_Frequency_Max_Fields>;
  min?: Maybe<Billing_Frequency_Min_Fields>;
};

/** aggregate fields of "billing_frequency" */
export type Billing_Frequency_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Billing_Frequency_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** Boolean expression to filter rows from the table "billing_frequency". All fields are combined with a logical 'AND'. */
export type Billing_Frequency_Bool_Exp = {
  _and?: InputMaybe<Array<Billing_Frequency_Bool_Exp>>;
  _not?: InputMaybe<Billing_Frequency_Bool_Exp>;
  _or?: InputMaybe<Array<Billing_Frequency_Bool_Exp>>;
  customers?: InputMaybe<Customer_Bool_Exp>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "billing_frequency" */
export enum Billing_Frequency_Constraint {
  /** unique or primary key constraint on columns "name" */
  BillingFrequencyNameKey = 'billing_frequency_name_key',
  /** unique or primary key constraint on columns "id" */
  BillingFrequencyPkey = 'billing_frequency_pkey',
}

/** input type for inserting data into table "billing_frequency" */
export type Billing_Frequency_Insert_Input = {
  customers?: InputMaybe<Customer_Arr_Rel_Insert_Input>;
  id?: InputMaybe<Scalars['uuid']>;
  name?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Billing_Frequency_Max_Fields = {
  __typename?: 'billing_frequency_max_fields';
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type Billing_Frequency_Min_Fields = {
  __typename?: 'billing_frequency_min_fields';
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "billing_frequency" */
export type Billing_Frequency_Mutation_Response = {
  __typename?: 'billing_frequency_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Billing_Frequency>;
};

/** input type for inserting object relation for remote table "billing_frequency" */
export type Billing_Frequency_Obj_Rel_Insert_Input = {
  data: Billing_Frequency_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Billing_Frequency_On_Conflict>;
};

/** on_conflict condition type for table "billing_frequency" */
export type Billing_Frequency_On_Conflict = {
  constraint: Billing_Frequency_Constraint;
  update_columns?: Array<Billing_Frequency_Update_Column>;
  where?: InputMaybe<Billing_Frequency_Bool_Exp>;
};

/** Ordering options when selecting data from "billing_frequency". */
export type Billing_Frequency_Order_By = {
  customers_aggregate?: InputMaybe<Customer_Aggregate_Order_By>;
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: billing_frequency */
export type Billing_Frequency_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "billing_frequency" */
export enum Billing_Frequency_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
}

/** input type for updating data in table "billing_frequency" */
export type Billing_Frequency_Set_Input = {
  id?: InputMaybe<Scalars['uuid']>;
  name?: InputMaybe<Scalars['String']>;
};

/** Streaming cursor of the table "billing_frequency" */
export type Billing_Frequency_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Billing_Frequency_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Billing_Frequency_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['uuid']>;
  name?: InputMaybe<Scalars['String']>;
};

/** update columns of table "billing_frequency" */
export enum Billing_Frequency_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
}

export type Billing_Frequency_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Billing_Frequency_Set_Input>;
  where: Billing_Frequency_Bool_Exp;
};

/** columns and relationships of "bookmark_folder" */
export type Bookmark_Folder = {
  __typename?: 'bookmark_folder';
  /** An array relationship */
  bookmark_links: Array<Bookmark_Link>;
  /** An aggregate relationship */
  bookmark_links_aggregate: Bookmark_Link_Aggregate;
  /** An object relationship */
  bookmarks_subfolder?: Maybe<Bookmark_Folder>;
  /** An array relationship */
  bookmarks_subfolders: Array<Bookmark_Folder>;
  /** An aggregate relationship */
  bookmarks_subfolders_aggregate: Bookmark_Folder_Aggregate;
  folderParent?: Maybe<Scalars['uuid']>;
  id: Scalars['uuid'];
  name: Scalars['String'];
  orderDisplay: Scalars['Int'];
  userType?: Maybe<Scalars['uuid']>;
};

/** columns and relationships of "bookmark_folder" */
export type Bookmark_FolderBookmark_LinksArgs = {
  distinct_on?: InputMaybe<Array<Bookmark_Link_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Bookmark_Link_Order_By>>;
  where?: InputMaybe<Bookmark_Link_Bool_Exp>;
};

/** columns and relationships of "bookmark_folder" */
export type Bookmark_FolderBookmark_Links_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Bookmark_Link_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Bookmark_Link_Order_By>>;
  where?: InputMaybe<Bookmark_Link_Bool_Exp>;
};

/** columns and relationships of "bookmark_folder" */
export type Bookmark_FolderBookmarks_SubfoldersArgs = {
  distinct_on?: InputMaybe<Array<Bookmark_Folder_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Bookmark_Folder_Order_By>>;
  where?: InputMaybe<Bookmark_Folder_Bool_Exp>;
};

/** columns and relationships of "bookmark_folder" */
export type Bookmark_FolderBookmarks_Subfolders_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Bookmark_Folder_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Bookmark_Folder_Order_By>>;
  where?: InputMaybe<Bookmark_Folder_Bool_Exp>;
};

/** aggregated selection of "bookmark_folder" */
export type Bookmark_Folder_Aggregate = {
  __typename?: 'bookmark_folder_aggregate';
  aggregate?: Maybe<Bookmark_Folder_Aggregate_Fields>;
  nodes: Array<Bookmark_Folder>;
};

/** aggregate fields of "bookmark_folder" */
export type Bookmark_Folder_Aggregate_Fields = {
  __typename?: 'bookmark_folder_aggregate_fields';
  avg?: Maybe<Bookmark_Folder_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Bookmark_Folder_Max_Fields>;
  min?: Maybe<Bookmark_Folder_Min_Fields>;
  stddev?: Maybe<Bookmark_Folder_Stddev_Fields>;
  stddev_pop?: Maybe<Bookmark_Folder_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Bookmark_Folder_Stddev_Samp_Fields>;
  sum?: Maybe<Bookmark_Folder_Sum_Fields>;
  var_pop?: Maybe<Bookmark_Folder_Var_Pop_Fields>;
  var_samp?: Maybe<Bookmark_Folder_Var_Samp_Fields>;
  variance?: Maybe<Bookmark_Folder_Variance_Fields>;
};

/** aggregate fields of "bookmark_folder" */
export type Bookmark_Folder_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Bookmark_Folder_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "bookmark_folder" */
export type Bookmark_Folder_Aggregate_Order_By = {
  avg?: InputMaybe<Bookmark_Folder_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Bookmark_Folder_Max_Order_By>;
  min?: InputMaybe<Bookmark_Folder_Min_Order_By>;
  stddev?: InputMaybe<Bookmark_Folder_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Bookmark_Folder_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Bookmark_Folder_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Bookmark_Folder_Sum_Order_By>;
  var_pop?: InputMaybe<Bookmark_Folder_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Bookmark_Folder_Var_Samp_Order_By>;
  variance?: InputMaybe<Bookmark_Folder_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "bookmark_folder" */
export type Bookmark_Folder_Arr_Rel_Insert_Input = {
  data: Array<Bookmark_Folder_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Bookmark_Folder_On_Conflict>;
};

/** aggregate avg on columns */
export type Bookmark_Folder_Avg_Fields = {
  __typename?: 'bookmark_folder_avg_fields';
  orderDisplay?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "bookmark_folder" */
export type Bookmark_Folder_Avg_Order_By = {
  orderDisplay?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "bookmark_folder". All fields are combined with a logical 'AND'. */
export type Bookmark_Folder_Bool_Exp = {
  _and?: InputMaybe<Array<Bookmark_Folder_Bool_Exp>>;
  _not?: InputMaybe<Bookmark_Folder_Bool_Exp>;
  _or?: InputMaybe<Array<Bookmark_Folder_Bool_Exp>>;
  bookmark_links?: InputMaybe<Bookmark_Link_Bool_Exp>;
  bookmarks_subfolder?: InputMaybe<Bookmark_Folder_Bool_Exp>;
  bookmarks_subfolders?: InputMaybe<Bookmark_Folder_Bool_Exp>;
  folderParent?: InputMaybe<Uuid_Comparison_Exp>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  orderDisplay?: InputMaybe<Int_Comparison_Exp>;
  userType?: InputMaybe<Uuid_Comparison_Exp>;
};

/** unique or primary key constraints on table "bookmark_folder" */
export enum Bookmark_Folder_Constraint {
  /** unique or primary key constraint on columns "id" */
  BookmarkFolderPkey = 'bookmark_folder_pkey',
}

/** input type for incrementing numeric columns in table "bookmark_folder" */
export type Bookmark_Folder_Inc_Input = {
  orderDisplay?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "bookmark_folder" */
export type Bookmark_Folder_Insert_Input = {
  bookmark_links?: InputMaybe<Bookmark_Link_Arr_Rel_Insert_Input>;
  bookmarks_subfolder?: InputMaybe<Bookmark_Folder_Obj_Rel_Insert_Input>;
  bookmarks_subfolders?: InputMaybe<Bookmark_Folder_Arr_Rel_Insert_Input>;
  folderParent?: InputMaybe<Scalars['uuid']>;
  id?: InputMaybe<Scalars['uuid']>;
  name?: InputMaybe<Scalars['String']>;
  orderDisplay?: InputMaybe<Scalars['Int']>;
  userType?: InputMaybe<Scalars['uuid']>;
};

/** aggregate max on columns */
export type Bookmark_Folder_Max_Fields = {
  __typename?: 'bookmark_folder_max_fields';
  folderParent?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
  orderDisplay?: Maybe<Scalars['Int']>;
  userType?: Maybe<Scalars['uuid']>;
};

/** order by max() on columns of table "bookmark_folder" */
export type Bookmark_Folder_Max_Order_By = {
  folderParent?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  orderDisplay?: InputMaybe<Order_By>;
  userType?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Bookmark_Folder_Min_Fields = {
  __typename?: 'bookmark_folder_min_fields';
  folderParent?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
  orderDisplay?: Maybe<Scalars['Int']>;
  userType?: Maybe<Scalars['uuid']>;
};

/** order by min() on columns of table "bookmark_folder" */
export type Bookmark_Folder_Min_Order_By = {
  folderParent?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  orderDisplay?: InputMaybe<Order_By>;
  userType?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "bookmark_folder" */
export type Bookmark_Folder_Mutation_Response = {
  __typename?: 'bookmark_folder_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Bookmark_Folder>;
};

/** input type for inserting object relation for remote table "bookmark_folder" */
export type Bookmark_Folder_Obj_Rel_Insert_Input = {
  data: Bookmark_Folder_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Bookmark_Folder_On_Conflict>;
};

/** on_conflict condition type for table "bookmark_folder" */
export type Bookmark_Folder_On_Conflict = {
  constraint: Bookmark_Folder_Constraint;
  update_columns?: Array<Bookmark_Folder_Update_Column>;
  where?: InputMaybe<Bookmark_Folder_Bool_Exp>;
};

/** Ordering options when selecting data from "bookmark_folder". */
export type Bookmark_Folder_Order_By = {
  bookmark_links_aggregate?: InputMaybe<Bookmark_Link_Aggregate_Order_By>;
  bookmarks_subfolder?: InputMaybe<Bookmark_Folder_Order_By>;
  bookmarks_subfolders_aggregate?: InputMaybe<Bookmark_Folder_Aggregate_Order_By>;
  folderParent?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  orderDisplay?: InputMaybe<Order_By>;
  userType?: InputMaybe<Order_By>;
};

/** primary key columns input for table: bookmark_folder */
export type Bookmark_Folder_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "bookmark_folder" */
export enum Bookmark_Folder_Select_Column {
  /** column name */
  FolderParent = 'folderParent',
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
  /** column name */
  OrderDisplay = 'orderDisplay',
  /** column name */
  UserType = 'userType',
}

/** input type for updating data in table "bookmark_folder" */
export type Bookmark_Folder_Set_Input = {
  folderParent?: InputMaybe<Scalars['uuid']>;
  id?: InputMaybe<Scalars['uuid']>;
  name?: InputMaybe<Scalars['String']>;
  orderDisplay?: InputMaybe<Scalars['Int']>;
  userType?: InputMaybe<Scalars['uuid']>;
};

/** aggregate stddev on columns */
export type Bookmark_Folder_Stddev_Fields = {
  __typename?: 'bookmark_folder_stddev_fields';
  orderDisplay?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "bookmark_folder" */
export type Bookmark_Folder_Stddev_Order_By = {
  orderDisplay?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Bookmark_Folder_Stddev_Pop_Fields = {
  __typename?: 'bookmark_folder_stddev_pop_fields';
  orderDisplay?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "bookmark_folder" */
export type Bookmark_Folder_Stddev_Pop_Order_By = {
  orderDisplay?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Bookmark_Folder_Stddev_Samp_Fields = {
  __typename?: 'bookmark_folder_stddev_samp_fields';
  orderDisplay?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "bookmark_folder" */
export type Bookmark_Folder_Stddev_Samp_Order_By = {
  orderDisplay?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "bookmark_folder" */
export type Bookmark_Folder_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Bookmark_Folder_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Bookmark_Folder_Stream_Cursor_Value_Input = {
  folderParent?: InputMaybe<Scalars['uuid']>;
  id?: InputMaybe<Scalars['uuid']>;
  name?: InputMaybe<Scalars['String']>;
  orderDisplay?: InputMaybe<Scalars['Int']>;
  userType?: InputMaybe<Scalars['uuid']>;
};

/** aggregate sum on columns */
export type Bookmark_Folder_Sum_Fields = {
  __typename?: 'bookmark_folder_sum_fields';
  orderDisplay?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "bookmark_folder" */
export type Bookmark_Folder_Sum_Order_By = {
  orderDisplay?: InputMaybe<Order_By>;
};

/** update columns of table "bookmark_folder" */
export enum Bookmark_Folder_Update_Column {
  /** column name */
  FolderParent = 'folderParent',
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
  /** column name */
  OrderDisplay = 'orderDisplay',
  /** column name */
  UserType = 'userType',
}

export type Bookmark_Folder_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Bookmark_Folder_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Bookmark_Folder_Set_Input>;
  where: Bookmark_Folder_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Bookmark_Folder_Var_Pop_Fields = {
  __typename?: 'bookmark_folder_var_pop_fields';
  orderDisplay?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "bookmark_folder" */
export type Bookmark_Folder_Var_Pop_Order_By = {
  orderDisplay?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Bookmark_Folder_Var_Samp_Fields = {
  __typename?: 'bookmark_folder_var_samp_fields';
  orderDisplay?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "bookmark_folder" */
export type Bookmark_Folder_Var_Samp_Order_By = {
  orderDisplay?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Bookmark_Folder_Variance_Fields = {
  __typename?: 'bookmark_folder_variance_fields';
  orderDisplay?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "bookmark_folder" */
export type Bookmark_Folder_Variance_Order_By = {
  orderDisplay?: InputMaybe<Order_By>;
};

/** columns and relationships of "bookmark_link" */
export type Bookmark_Link = {
  __typename?: 'bookmark_link';
  /** An object relationship */
  bookmark_folder?: Maybe<Bookmark_Folder>;
  bookmark_folder_id?: Maybe<Scalars['uuid']>;
  id: Scalars['uuid'];
  orderDisplay: Scalars['Int'];
  title: Scalars['String'];
  url: Scalars['String'];
  userType?: Maybe<Scalars['uuid']>;
};

/** aggregated selection of "bookmark_link" */
export type Bookmark_Link_Aggregate = {
  __typename?: 'bookmark_link_aggregate';
  aggregate?: Maybe<Bookmark_Link_Aggregate_Fields>;
  nodes: Array<Bookmark_Link>;
};

/** aggregate fields of "bookmark_link" */
export type Bookmark_Link_Aggregate_Fields = {
  __typename?: 'bookmark_link_aggregate_fields';
  avg?: Maybe<Bookmark_Link_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Bookmark_Link_Max_Fields>;
  min?: Maybe<Bookmark_Link_Min_Fields>;
  stddev?: Maybe<Bookmark_Link_Stddev_Fields>;
  stddev_pop?: Maybe<Bookmark_Link_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Bookmark_Link_Stddev_Samp_Fields>;
  sum?: Maybe<Bookmark_Link_Sum_Fields>;
  var_pop?: Maybe<Bookmark_Link_Var_Pop_Fields>;
  var_samp?: Maybe<Bookmark_Link_Var_Samp_Fields>;
  variance?: Maybe<Bookmark_Link_Variance_Fields>;
};

/** aggregate fields of "bookmark_link" */
export type Bookmark_Link_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Bookmark_Link_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "bookmark_link" */
export type Bookmark_Link_Aggregate_Order_By = {
  avg?: InputMaybe<Bookmark_Link_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Bookmark_Link_Max_Order_By>;
  min?: InputMaybe<Bookmark_Link_Min_Order_By>;
  stddev?: InputMaybe<Bookmark_Link_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Bookmark_Link_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Bookmark_Link_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Bookmark_Link_Sum_Order_By>;
  var_pop?: InputMaybe<Bookmark_Link_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Bookmark_Link_Var_Samp_Order_By>;
  variance?: InputMaybe<Bookmark_Link_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "bookmark_link" */
export type Bookmark_Link_Arr_Rel_Insert_Input = {
  data: Array<Bookmark_Link_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Bookmark_Link_On_Conflict>;
};

/** aggregate avg on columns */
export type Bookmark_Link_Avg_Fields = {
  __typename?: 'bookmark_link_avg_fields';
  orderDisplay?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "bookmark_link" */
export type Bookmark_Link_Avg_Order_By = {
  orderDisplay?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "bookmark_link". All fields are combined with a logical 'AND'. */
export type Bookmark_Link_Bool_Exp = {
  _and?: InputMaybe<Array<Bookmark_Link_Bool_Exp>>;
  _not?: InputMaybe<Bookmark_Link_Bool_Exp>;
  _or?: InputMaybe<Array<Bookmark_Link_Bool_Exp>>;
  bookmark_folder?: InputMaybe<Bookmark_Folder_Bool_Exp>;
  bookmark_folder_id?: InputMaybe<Uuid_Comparison_Exp>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  orderDisplay?: InputMaybe<Int_Comparison_Exp>;
  title?: InputMaybe<String_Comparison_Exp>;
  url?: InputMaybe<String_Comparison_Exp>;
  userType?: InputMaybe<Uuid_Comparison_Exp>;
};

/** unique or primary key constraints on table "bookmark_link" */
export enum Bookmark_Link_Constraint {
  /** unique or primary key constraint on columns "id" */
  BookmarkLinkPkey = 'bookmark_link_pkey',
}

/** input type for incrementing numeric columns in table "bookmark_link" */
export type Bookmark_Link_Inc_Input = {
  orderDisplay?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "bookmark_link" */
export type Bookmark_Link_Insert_Input = {
  bookmark_folder?: InputMaybe<Bookmark_Folder_Obj_Rel_Insert_Input>;
  bookmark_folder_id?: InputMaybe<Scalars['uuid']>;
  id?: InputMaybe<Scalars['uuid']>;
  orderDisplay?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Scalars['String']>;
  url?: InputMaybe<Scalars['String']>;
  userType?: InputMaybe<Scalars['uuid']>;
};

/** aggregate max on columns */
export type Bookmark_Link_Max_Fields = {
  __typename?: 'bookmark_link_max_fields';
  bookmark_folder_id?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  orderDisplay?: Maybe<Scalars['Int']>;
  title?: Maybe<Scalars['String']>;
  url?: Maybe<Scalars['String']>;
  userType?: Maybe<Scalars['uuid']>;
};

/** order by max() on columns of table "bookmark_link" */
export type Bookmark_Link_Max_Order_By = {
  bookmark_folder_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  orderDisplay?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  url?: InputMaybe<Order_By>;
  userType?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Bookmark_Link_Min_Fields = {
  __typename?: 'bookmark_link_min_fields';
  bookmark_folder_id?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  orderDisplay?: Maybe<Scalars['Int']>;
  title?: Maybe<Scalars['String']>;
  url?: Maybe<Scalars['String']>;
  userType?: Maybe<Scalars['uuid']>;
};

/** order by min() on columns of table "bookmark_link" */
export type Bookmark_Link_Min_Order_By = {
  bookmark_folder_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  orderDisplay?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  url?: InputMaybe<Order_By>;
  userType?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "bookmark_link" */
export type Bookmark_Link_Mutation_Response = {
  __typename?: 'bookmark_link_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Bookmark_Link>;
};

/** on_conflict condition type for table "bookmark_link" */
export type Bookmark_Link_On_Conflict = {
  constraint: Bookmark_Link_Constraint;
  update_columns?: Array<Bookmark_Link_Update_Column>;
  where?: InputMaybe<Bookmark_Link_Bool_Exp>;
};

/** Ordering options when selecting data from "bookmark_link". */
export type Bookmark_Link_Order_By = {
  bookmark_folder?: InputMaybe<Bookmark_Folder_Order_By>;
  bookmark_folder_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  orderDisplay?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  url?: InputMaybe<Order_By>;
  userType?: InputMaybe<Order_By>;
};

/** primary key columns input for table: bookmark_link */
export type Bookmark_Link_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "bookmark_link" */
export enum Bookmark_Link_Select_Column {
  /** column name */
  BookmarkFolderId = 'bookmark_folder_id',
  /** column name */
  Id = 'id',
  /** column name */
  OrderDisplay = 'orderDisplay',
  /** column name */
  Title = 'title',
  /** column name */
  Url = 'url',
  /** column name */
  UserType = 'userType',
}

/** input type for updating data in table "bookmark_link" */
export type Bookmark_Link_Set_Input = {
  bookmark_folder_id?: InputMaybe<Scalars['uuid']>;
  id?: InputMaybe<Scalars['uuid']>;
  orderDisplay?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Scalars['String']>;
  url?: InputMaybe<Scalars['String']>;
  userType?: InputMaybe<Scalars['uuid']>;
};

/** aggregate stddev on columns */
export type Bookmark_Link_Stddev_Fields = {
  __typename?: 'bookmark_link_stddev_fields';
  orderDisplay?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "bookmark_link" */
export type Bookmark_Link_Stddev_Order_By = {
  orderDisplay?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Bookmark_Link_Stddev_Pop_Fields = {
  __typename?: 'bookmark_link_stddev_pop_fields';
  orderDisplay?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "bookmark_link" */
export type Bookmark_Link_Stddev_Pop_Order_By = {
  orderDisplay?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Bookmark_Link_Stddev_Samp_Fields = {
  __typename?: 'bookmark_link_stddev_samp_fields';
  orderDisplay?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "bookmark_link" */
export type Bookmark_Link_Stddev_Samp_Order_By = {
  orderDisplay?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "bookmark_link" */
export type Bookmark_Link_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Bookmark_Link_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Bookmark_Link_Stream_Cursor_Value_Input = {
  bookmark_folder_id?: InputMaybe<Scalars['uuid']>;
  id?: InputMaybe<Scalars['uuid']>;
  orderDisplay?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Scalars['String']>;
  url?: InputMaybe<Scalars['String']>;
  userType?: InputMaybe<Scalars['uuid']>;
};

/** aggregate sum on columns */
export type Bookmark_Link_Sum_Fields = {
  __typename?: 'bookmark_link_sum_fields';
  orderDisplay?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "bookmark_link" */
export type Bookmark_Link_Sum_Order_By = {
  orderDisplay?: InputMaybe<Order_By>;
};

/** update columns of table "bookmark_link" */
export enum Bookmark_Link_Update_Column {
  /** column name */
  BookmarkFolderId = 'bookmark_folder_id',
  /** column name */
  Id = 'id',
  /** column name */
  OrderDisplay = 'orderDisplay',
  /** column name */
  Title = 'title',
  /** column name */
  Url = 'url',
  /** column name */
  UserType = 'userType',
}

export type Bookmark_Link_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Bookmark_Link_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Bookmark_Link_Set_Input>;
  where: Bookmark_Link_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Bookmark_Link_Var_Pop_Fields = {
  __typename?: 'bookmark_link_var_pop_fields';
  orderDisplay?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "bookmark_link" */
export type Bookmark_Link_Var_Pop_Order_By = {
  orderDisplay?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Bookmark_Link_Var_Samp_Fields = {
  __typename?: 'bookmark_link_var_samp_fields';
  orderDisplay?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "bookmark_link" */
export type Bookmark_Link_Var_Samp_Order_By = {
  orderDisplay?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Bookmark_Link_Variance_Fields = {
  __typename?: 'bookmark_link_variance_fields';
  orderDisplay?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "bookmark_link" */
export type Bookmark_Link_Variance_Order_By = {
  orderDisplay?: InputMaybe<Order_By>;
};

/** columns and relationships of "capability" */
export type Capability = {
  __typename?: 'capability';
  /** An array relationship */
  capability_endpoints: Array<Capability_Endpoint>;
  /** An aggregate relationship */
  capability_endpoints_aggregate: Capability_Endpoint_Aggregate;
  id: Scalars['uuid'];
  name: Scalars['String'];
  /** An array relationship */
  user_role_capabilities: Array<User_Role_Capability>;
  /** An aggregate relationship */
  user_role_capabilities_aggregate: User_Role_Capability_Aggregate;
};

/** columns and relationships of "capability" */
export type CapabilityCapability_EndpointsArgs = {
  distinct_on?: InputMaybe<Array<Capability_Endpoint_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Capability_Endpoint_Order_By>>;
  where?: InputMaybe<Capability_Endpoint_Bool_Exp>;
};

/** columns and relationships of "capability" */
export type CapabilityCapability_Endpoints_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Capability_Endpoint_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Capability_Endpoint_Order_By>>;
  where?: InputMaybe<Capability_Endpoint_Bool_Exp>;
};

/** columns and relationships of "capability" */
export type CapabilityUser_Role_CapabilitiesArgs = {
  distinct_on?: InputMaybe<Array<User_Role_Capability_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Role_Capability_Order_By>>;
  where?: InputMaybe<User_Role_Capability_Bool_Exp>;
};

/** columns and relationships of "capability" */
export type CapabilityUser_Role_Capabilities_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Role_Capability_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Role_Capability_Order_By>>;
  where?: InputMaybe<User_Role_Capability_Bool_Exp>;
};

/** aggregated selection of "capability" */
export type Capability_Aggregate = {
  __typename?: 'capability_aggregate';
  aggregate?: Maybe<Capability_Aggregate_Fields>;
  nodes: Array<Capability>;
};

/** aggregate fields of "capability" */
export type Capability_Aggregate_Fields = {
  __typename?: 'capability_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<Capability_Max_Fields>;
  min?: Maybe<Capability_Min_Fields>;
};

/** aggregate fields of "capability" */
export type Capability_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Capability_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** Boolean expression to filter rows from the table "capability". All fields are combined with a logical 'AND'. */
export type Capability_Bool_Exp = {
  _and?: InputMaybe<Array<Capability_Bool_Exp>>;
  _not?: InputMaybe<Capability_Bool_Exp>;
  _or?: InputMaybe<Array<Capability_Bool_Exp>>;
  capability_endpoints?: InputMaybe<Capability_Endpoint_Bool_Exp>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  user_role_capabilities?: InputMaybe<User_Role_Capability_Bool_Exp>;
};

/** unique or primary key constraints on table "capability" */
export enum Capability_Constraint {
  /** unique or primary key constraint on columns "name" */
  CapabilityNameKey = 'capability_name_key',
  /** unique or primary key constraint on columns "id" */
  CapabilityPkey = 'capability_pkey',
}

/** columns and relationships of "capability_endpoint" */
export type Capability_Endpoint = {
  __typename?: 'capability_endpoint';
  /** An object relationship */
  capability: Capability;
  capabilityID: Scalars['uuid'];
  /** An object relationship */
  endpoint: Endpoint;
  endpointID: Scalars['uuid'];
  id: Scalars['uuid'];
};

/** aggregated selection of "capability_endpoint" */
export type Capability_Endpoint_Aggregate = {
  __typename?: 'capability_endpoint_aggregate';
  aggregate?: Maybe<Capability_Endpoint_Aggregate_Fields>;
  nodes: Array<Capability_Endpoint>;
};

/** aggregate fields of "capability_endpoint" */
export type Capability_Endpoint_Aggregate_Fields = {
  __typename?: 'capability_endpoint_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<Capability_Endpoint_Max_Fields>;
  min?: Maybe<Capability_Endpoint_Min_Fields>;
};

/** aggregate fields of "capability_endpoint" */
export type Capability_Endpoint_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Capability_Endpoint_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "capability_endpoint" */
export type Capability_Endpoint_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Capability_Endpoint_Max_Order_By>;
  min?: InputMaybe<Capability_Endpoint_Min_Order_By>;
};

/** input type for inserting array relation for remote table "capability_endpoint" */
export type Capability_Endpoint_Arr_Rel_Insert_Input = {
  data: Array<Capability_Endpoint_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Capability_Endpoint_On_Conflict>;
};

/** Boolean expression to filter rows from the table "capability_endpoint". All fields are combined with a logical 'AND'. */
export type Capability_Endpoint_Bool_Exp = {
  _and?: InputMaybe<Array<Capability_Endpoint_Bool_Exp>>;
  _not?: InputMaybe<Capability_Endpoint_Bool_Exp>;
  _or?: InputMaybe<Array<Capability_Endpoint_Bool_Exp>>;
  capability?: InputMaybe<Capability_Bool_Exp>;
  capabilityID?: InputMaybe<Uuid_Comparison_Exp>;
  endpoint?: InputMaybe<Endpoint_Bool_Exp>;
  endpointID?: InputMaybe<Uuid_Comparison_Exp>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
};

/** unique or primary key constraints on table "capability_endpoint" */
export enum Capability_Endpoint_Constraint {
  /** unique or primary key constraint on columns "endpointID", "capabilityID" */
  CapabilityEndpointCapabilityIdEndpointIdKey = 'capability_endpoint_capabilityID_endpointID_key',
  /** unique or primary key constraint on columns "id" */
  CapabilityEndpointPkey = 'capability_endpoint_pkey',
}

/** input type for inserting data into table "capability_endpoint" */
export type Capability_Endpoint_Insert_Input = {
  capability?: InputMaybe<Capability_Obj_Rel_Insert_Input>;
  capabilityID?: InputMaybe<Scalars['uuid']>;
  endpoint?: InputMaybe<Endpoint_Obj_Rel_Insert_Input>;
  endpointID?: InputMaybe<Scalars['uuid']>;
  id?: InputMaybe<Scalars['uuid']>;
};

/** aggregate max on columns */
export type Capability_Endpoint_Max_Fields = {
  __typename?: 'capability_endpoint_max_fields';
  capabilityID?: Maybe<Scalars['uuid']>;
  endpointID?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
};

/** order by max() on columns of table "capability_endpoint" */
export type Capability_Endpoint_Max_Order_By = {
  capabilityID?: InputMaybe<Order_By>;
  endpointID?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Capability_Endpoint_Min_Fields = {
  __typename?: 'capability_endpoint_min_fields';
  capabilityID?: Maybe<Scalars['uuid']>;
  endpointID?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
};

/** order by min() on columns of table "capability_endpoint" */
export type Capability_Endpoint_Min_Order_By = {
  capabilityID?: InputMaybe<Order_By>;
  endpointID?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "capability_endpoint" */
export type Capability_Endpoint_Mutation_Response = {
  __typename?: 'capability_endpoint_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Capability_Endpoint>;
};

/** on_conflict condition type for table "capability_endpoint" */
export type Capability_Endpoint_On_Conflict = {
  constraint: Capability_Endpoint_Constraint;
  update_columns?: Array<Capability_Endpoint_Update_Column>;
  where?: InputMaybe<Capability_Endpoint_Bool_Exp>;
};

/** Ordering options when selecting data from "capability_endpoint". */
export type Capability_Endpoint_Order_By = {
  capability?: InputMaybe<Capability_Order_By>;
  capabilityID?: InputMaybe<Order_By>;
  endpoint?: InputMaybe<Endpoint_Order_By>;
  endpointID?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: capability_endpoint */
export type Capability_Endpoint_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "capability_endpoint" */
export enum Capability_Endpoint_Select_Column {
  /** column name */
  CapabilityId = 'capabilityID',
  /** column name */
  EndpointId = 'endpointID',
  /** column name */
  Id = 'id',
}

/** input type for updating data in table "capability_endpoint" */
export type Capability_Endpoint_Set_Input = {
  capabilityID?: InputMaybe<Scalars['uuid']>;
  endpointID?: InputMaybe<Scalars['uuid']>;
  id?: InputMaybe<Scalars['uuid']>;
};

/** Streaming cursor of the table "capability_endpoint" */
export type Capability_Endpoint_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Capability_Endpoint_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Capability_Endpoint_Stream_Cursor_Value_Input = {
  capabilityID?: InputMaybe<Scalars['uuid']>;
  endpointID?: InputMaybe<Scalars['uuid']>;
  id?: InputMaybe<Scalars['uuid']>;
};

/** update columns of table "capability_endpoint" */
export enum Capability_Endpoint_Update_Column {
  /** column name */
  CapabilityId = 'capabilityID',
  /** column name */
  EndpointId = 'endpointID',
  /** column name */
  Id = 'id',
}

export type Capability_Endpoint_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Capability_Endpoint_Set_Input>;
  where: Capability_Endpoint_Bool_Exp;
};

/** input type for inserting data into table "capability" */
export type Capability_Insert_Input = {
  capability_endpoints?: InputMaybe<Capability_Endpoint_Arr_Rel_Insert_Input>;
  id?: InputMaybe<Scalars['uuid']>;
  name?: InputMaybe<Scalars['String']>;
  user_role_capabilities?: InputMaybe<User_Role_Capability_Arr_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type Capability_Max_Fields = {
  __typename?: 'capability_max_fields';
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type Capability_Min_Fields = {
  __typename?: 'capability_min_fields';
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "capability" */
export type Capability_Mutation_Response = {
  __typename?: 'capability_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Capability>;
};

/** input type for inserting object relation for remote table "capability" */
export type Capability_Obj_Rel_Insert_Input = {
  data: Capability_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Capability_On_Conflict>;
};

/** on_conflict condition type for table "capability" */
export type Capability_On_Conflict = {
  constraint: Capability_Constraint;
  update_columns?: Array<Capability_Update_Column>;
  where?: InputMaybe<Capability_Bool_Exp>;
};

/** Ordering options when selecting data from "capability". */
export type Capability_Order_By = {
  capability_endpoints_aggregate?: InputMaybe<Capability_Endpoint_Aggregate_Order_By>;
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  user_role_capabilities_aggregate?: InputMaybe<User_Role_Capability_Aggregate_Order_By>;
};

/** primary key columns input for table: capability */
export type Capability_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "capability" */
export enum Capability_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
}

/** input type for updating data in table "capability" */
export type Capability_Set_Input = {
  id?: InputMaybe<Scalars['uuid']>;
  name?: InputMaybe<Scalars['String']>;
};

/** Streaming cursor of the table "capability" */
export type Capability_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Capability_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Capability_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['uuid']>;
  name?: InputMaybe<Scalars['String']>;
};

/** update columns of table "capability" */
export enum Capability_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
}

export type Capability_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Capability_Set_Input>;
  where: Capability_Bool_Exp;
};

/** columns and relationships of "case_study" */
export type Case_Study = {
  __typename?: 'case_study';
  /** An array relationship */
  case_study_companies: Array<Case_Study_Company>;
  /** An aggregate relationship */
  case_study_companies_aggregate: Case_Study_Company_Aggregate;
  /** An array relationship */
  case_study_industries: Array<Case_Study_Industry>;
  /** An aggregate relationship */
  case_study_industries_aggregate: Case_Study_Industry_Aggregate;
  /** An array relationship */
  case_study_markets: Array<Case_Study_Market>;
  /** An aggregate relationship */
  case_study_markets_aggregate: Case_Study_Market_Aggregate;
  /** An array relationship */
  case_study_skills: Array<Case_Study_Skill>;
  /** An aggregate relationship */
  case_study_skills_aggregate: Case_Study_Skill_Aggregate;
  /** An array relationship */
  case_study_teams: Array<Case_Study_Team>;
  /** An aggregate relationship */
  case_study_teams_aggregate: Case_Study_Team_Aggregate;
  /** An array relationship */
  case_study_users: Array<Case_Study_User>;
  /** An aggregate relationship */
  case_study_users_aggregate: Case_Study_User_Aggregate;
  createdByUserCognitoSub?: Maybe<Scalars['String']>;
  created_at: Scalars['timestamptz'];
  googleSlideLink: Scalars['String'];
  id: Scalars['uuid'];
  link: Scalars['String'];
  name: Scalars['String'];
  otherLink?: Maybe<Scalars['String']>;
  /** An object relationship */
  public_user_meta?: Maybe<Public_User_Meta>;
  thumbnailKey?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
  /** An object relationship */
  user_meta?: Maybe<User_Meta>;
};

/** columns and relationships of "case_study" */
export type Case_StudyCase_Study_CompaniesArgs = {
  distinct_on?: InputMaybe<Array<Case_Study_Company_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Case_Study_Company_Order_By>>;
  where?: InputMaybe<Case_Study_Company_Bool_Exp>;
};

/** columns and relationships of "case_study" */
export type Case_StudyCase_Study_Companies_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Case_Study_Company_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Case_Study_Company_Order_By>>;
  where?: InputMaybe<Case_Study_Company_Bool_Exp>;
};

/** columns and relationships of "case_study" */
export type Case_StudyCase_Study_IndustriesArgs = {
  distinct_on?: InputMaybe<Array<Case_Study_Industry_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Case_Study_Industry_Order_By>>;
  where?: InputMaybe<Case_Study_Industry_Bool_Exp>;
};

/** columns and relationships of "case_study" */
export type Case_StudyCase_Study_Industries_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Case_Study_Industry_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Case_Study_Industry_Order_By>>;
  where?: InputMaybe<Case_Study_Industry_Bool_Exp>;
};

/** columns and relationships of "case_study" */
export type Case_StudyCase_Study_MarketsArgs = {
  distinct_on?: InputMaybe<Array<Case_Study_Market_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Case_Study_Market_Order_By>>;
  where?: InputMaybe<Case_Study_Market_Bool_Exp>;
};

/** columns and relationships of "case_study" */
export type Case_StudyCase_Study_Markets_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Case_Study_Market_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Case_Study_Market_Order_By>>;
  where?: InputMaybe<Case_Study_Market_Bool_Exp>;
};

/** columns and relationships of "case_study" */
export type Case_StudyCase_Study_SkillsArgs = {
  distinct_on?: InputMaybe<Array<Case_Study_Skill_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Case_Study_Skill_Order_By>>;
  where?: InputMaybe<Case_Study_Skill_Bool_Exp>;
};

/** columns and relationships of "case_study" */
export type Case_StudyCase_Study_Skills_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Case_Study_Skill_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Case_Study_Skill_Order_By>>;
  where?: InputMaybe<Case_Study_Skill_Bool_Exp>;
};

/** columns and relationships of "case_study" */
export type Case_StudyCase_Study_TeamsArgs = {
  distinct_on?: InputMaybe<Array<Case_Study_Team_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Case_Study_Team_Order_By>>;
  where?: InputMaybe<Case_Study_Team_Bool_Exp>;
};

/** columns and relationships of "case_study" */
export type Case_StudyCase_Study_Teams_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Case_Study_Team_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Case_Study_Team_Order_By>>;
  where?: InputMaybe<Case_Study_Team_Bool_Exp>;
};

/** columns and relationships of "case_study" */
export type Case_StudyCase_Study_UsersArgs = {
  distinct_on?: InputMaybe<Array<Case_Study_User_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Case_Study_User_Order_By>>;
  where?: InputMaybe<Case_Study_User_Bool_Exp>;
};

/** columns and relationships of "case_study" */
export type Case_StudyCase_Study_Users_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Case_Study_User_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Case_Study_User_Order_By>>;
  where?: InputMaybe<Case_Study_User_Bool_Exp>;
};

/** aggregated selection of "case_study" */
export type Case_Study_Aggregate = {
  __typename?: 'case_study_aggregate';
  aggregate?: Maybe<Case_Study_Aggregate_Fields>;
  nodes: Array<Case_Study>;
};

/** aggregate fields of "case_study" */
export type Case_Study_Aggregate_Fields = {
  __typename?: 'case_study_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<Case_Study_Max_Fields>;
  min?: Maybe<Case_Study_Min_Fields>;
};

/** aggregate fields of "case_study" */
export type Case_Study_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Case_Study_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "case_study" */
export type Case_Study_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Case_Study_Max_Order_By>;
  min?: InputMaybe<Case_Study_Min_Order_By>;
};

/** input type for inserting array relation for remote table "case_study" */
export type Case_Study_Arr_Rel_Insert_Input = {
  data: Array<Case_Study_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Case_Study_On_Conflict>;
};

/** Boolean expression to filter rows from the table "case_study". All fields are combined with a logical 'AND'. */
export type Case_Study_Bool_Exp = {
  _and?: InputMaybe<Array<Case_Study_Bool_Exp>>;
  _not?: InputMaybe<Case_Study_Bool_Exp>;
  _or?: InputMaybe<Array<Case_Study_Bool_Exp>>;
  case_study_companies?: InputMaybe<Case_Study_Company_Bool_Exp>;
  case_study_industries?: InputMaybe<Case_Study_Industry_Bool_Exp>;
  case_study_markets?: InputMaybe<Case_Study_Market_Bool_Exp>;
  case_study_skills?: InputMaybe<Case_Study_Skill_Bool_Exp>;
  case_study_teams?: InputMaybe<Case_Study_Team_Bool_Exp>;
  case_study_users?: InputMaybe<Case_Study_User_Bool_Exp>;
  createdByUserCognitoSub?: InputMaybe<String_Comparison_Exp>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  googleSlideLink?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  link?: InputMaybe<String_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  otherLink?: InputMaybe<String_Comparison_Exp>;
  public_user_meta?: InputMaybe<Public_User_Meta_Bool_Exp>;
  thumbnailKey?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  user_meta?: InputMaybe<User_Meta_Bool_Exp>;
};

/** columns and relationships of "case_study_company" */
export type Case_Study_Company = {
  __typename?: 'case_study_company';
  caseStudyID: Scalars['uuid'];
  /** An object relationship */
  case_study: Case_Study;
  /** An object relationship */
  company: Company;
  companyID: Scalars['uuid'];
  id: Scalars['uuid'];
};

/** aggregated selection of "case_study_company" */
export type Case_Study_Company_Aggregate = {
  __typename?: 'case_study_company_aggregate';
  aggregate?: Maybe<Case_Study_Company_Aggregate_Fields>;
  nodes: Array<Case_Study_Company>;
};

/** aggregate fields of "case_study_company" */
export type Case_Study_Company_Aggregate_Fields = {
  __typename?: 'case_study_company_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<Case_Study_Company_Max_Fields>;
  min?: Maybe<Case_Study_Company_Min_Fields>;
};

/** aggregate fields of "case_study_company" */
export type Case_Study_Company_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Case_Study_Company_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "case_study_company" */
export type Case_Study_Company_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Case_Study_Company_Max_Order_By>;
  min?: InputMaybe<Case_Study_Company_Min_Order_By>;
};

/** input type for inserting array relation for remote table "case_study_company" */
export type Case_Study_Company_Arr_Rel_Insert_Input = {
  data: Array<Case_Study_Company_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Case_Study_Company_On_Conflict>;
};

/** Boolean expression to filter rows from the table "case_study_company". All fields are combined with a logical 'AND'. */
export type Case_Study_Company_Bool_Exp = {
  _and?: InputMaybe<Array<Case_Study_Company_Bool_Exp>>;
  _not?: InputMaybe<Case_Study_Company_Bool_Exp>;
  _or?: InputMaybe<Array<Case_Study_Company_Bool_Exp>>;
  caseStudyID?: InputMaybe<Uuid_Comparison_Exp>;
  case_study?: InputMaybe<Case_Study_Bool_Exp>;
  company?: InputMaybe<Company_Bool_Exp>;
  companyID?: InputMaybe<Uuid_Comparison_Exp>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
};

/** unique or primary key constraints on table "case_study_company" */
export enum Case_Study_Company_Constraint {
  /** unique or primary key constraint on columns "caseStudyID", "companyID" */
  CaseStudyCompanyCompanyIdCaseStudyIdKey = 'case_study_company_companyID_caseStudyID_key',
  /** unique or primary key constraint on columns "id" */
  CaseStudyCompanyPkey = 'case_study_company_pkey',
}

/** input type for inserting data into table "case_study_company" */
export type Case_Study_Company_Insert_Input = {
  caseStudyID?: InputMaybe<Scalars['uuid']>;
  case_study?: InputMaybe<Case_Study_Obj_Rel_Insert_Input>;
  company?: InputMaybe<Company_Obj_Rel_Insert_Input>;
  companyID?: InputMaybe<Scalars['uuid']>;
  id?: InputMaybe<Scalars['uuid']>;
};

/** aggregate max on columns */
export type Case_Study_Company_Max_Fields = {
  __typename?: 'case_study_company_max_fields';
  caseStudyID?: Maybe<Scalars['uuid']>;
  companyID?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
};

/** order by max() on columns of table "case_study_company" */
export type Case_Study_Company_Max_Order_By = {
  caseStudyID?: InputMaybe<Order_By>;
  companyID?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Case_Study_Company_Min_Fields = {
  __typename?: 'case_study_company_min_fields';
  caseStudyID?: Maybe<Scalars['uuid']>;
  companyID?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
};

/** order by min() on columns of table "case_study_company" */
export type Case_Study_Company_Min_Order_By = {
  caseStudyID?: InputMaybe<Order_By>;
  companyID?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "case_study_company" */
export type Case_Study_Company_Mutation_Response = {
  __typename?: 'case_study_company_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Case_Study_Company>;
};

/** on_conflict condition type for table "case_study_company" */
export type Case_Study_Company_On_Conflict = {
  constraint: Case_Study_Company_Constraint;
  update_columns?: Array<Case_Study_Company_Update_Column>;
  where?: InputMaybe<Case_Study_Company_Bool_Exp>;
};

/** Ordering options when selecting data from "case_study_company". */
export type Case_Study_Company_Order_By = {
  caseStudyID?: InputMaybe<Order_By>;
  case_study?: InputMaybe<Case_Study_Order_By>;
  company?: InputMaybe<Company_Order_By>;
  companyID?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: case_study_company */
export type Case_Study_Company_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "case_study_company" */
export enum Case_Study_Company_Select_Column {
  /** column name */
  CaseStudyId = 'caseStudyID',
  /** column name */
  CompanyId = 'companyID',
  /** column name */
  Id = 'id',
}

/** input type for updating data in table "case_study_company" */
export type Case_Study_Company_Set_Input = {
  caseStudyID?: InputMaybe<Scalars['uuid']>;
  companyID?: InputMaybe<Scalars['uuid']>;
  id?: InputMaybe<Scalars['uuid']>;
};

/** Streaming cursor of the table "case_study_company" */
export type Case_Study_Company_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Case_Study_Company_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Case_Study_Company_Stream_Cursor_Value_Input = {
  caseStudyID?: InputMaybe<Scalars['uuid']>;
  companyID?: InputMaybe<Scalars['uuid']>;
  id?: InputMaybe<Scalars['uuid']>;
};

/** update columns of table "case_study_company" */
export enum Case_Study_Company_Update_Column {
  /** column name */
  CaseStudyId = 'caseStudyID',
  /** column name */
  CompanyId = 'companyID',
  /** column name */
  Id = 'id',
}

export type Case_Study_Company_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Case_Study_Company_Set_Input>;
  where: Case_Study_Company_Bool_Exp;
};

/** unique or primary key constraints on table "case_study" */
export enum Case_Study_Constraint {
  /** unique or primary key constraint on columns "id" */
  CaseStudyPkey = 'case_study_pkey',
}

/** columns and relationships of "case_study_industry" */
export type Case_Study_Industry = {
  __typename?: 'case_study_industry';
  caseStudyID: Scalars['uuid'];
  /** An object relationship */
  case_study: Case_Study;
  id: Scalars['uuid'];
  /** An object relationship */
  industry: Industry;
  industryID: Scalars['uuid'];
};

/** aggregated selection of "case_study_industry" */
export type Case_Study_Industry_Aggregate = {
  __typename?: 'case_study_industry_aggregate';
  aggregate?: Maybe<Case_Study_Industry_Aggregate_Fields>;
  nodes: Array<Case_Study_Industry>;
};

/** aggregate fields of "case_study_industry" */
export type Case_Study_Industry_Aggregate_Fields = {
  __typename?: 'case_study_industry_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<Case_Study_Industry_Max_Fields>;
  min?: Maybe<Case_Study_Industry_Min_Fields>;
};

/** aggregate fields of "case_study_industry" */
export type Case_Study_Industry_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Case_Study_Industry_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "case_study_industry" */
export type Case_Study_Industry_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Case_Study_Industry_Max_Order_By>;
  min?: InputMaybe<Case_Study_Industry_Min_Order_By>;
};

/** input type for inserting array relation for remote table "case_study_industry" */
export type Case_Study_Industry_Arr_Rel_Insert_Input = {
  data: Array<Case_Study_Industry_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Case_Study_Industry_On_Conflict>;
};

/** Boolean expression to filter rows from the table "case_study_industry". All fields are combined with a logical 'AND'. */
export type Case_Study_Industry_Bool_Exp = {
  _and?: InputMaybe<Array<Case_Study_Industry_Bool_Exp>>;
  _not?: InputMaybe<Case_Study_Industry_Bool_Exp>;
  _or?: InputMaybe<Array<Case_Study_Industry_Bool_Exp>>;
  caseStudyID?: InputMaybe<Uuid_Comparison_Exp>;
  case_study?: InputMaybe<Case_Study_Bool_Exp>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  industry?: InputMaybe<Industry_Bool_Exp>;
  industryID?: InputMaybe<Uuid_Comparison_Exp>;
};

/** unique or primary key constraints on table "case_study_industry" */
export enum Case_Study_Industry_Constraint {
  /** unique or primary key constraint on columns "caseStudyID", "industryID" */
  CaseStudyIndustryIndustryIdCaseStudyIdKey = 'case_study_industry_industryID_caseStudyID_key',
  /** unique or primary key constraint on columns "id" */
  CaseStudyIndustryPkey = 'case_study_industry_pkey',
}

/** input type for inserting data into table "case_study_industry" */
export type Case_Study_Industry_Insert_Input = {
  caseStudyID?: InputMaybe<Scalars['uuid']>;
  case_study?: InputMaybe<Case_Study_Obj_Rel_Insert_Input>;
  id?: InputMaybe<Scalars['uuid']>;
  industry?: InputMaybe<Industry_Obj_Rel_Insert_Input>;
  industryID?: InputMaybe<Scalars['uuid']>;
};

/** aggregate max on columns */
export type Case_Study_Industry_Max_Fields = {
  __typename?: 'case_study_industry_max_fields';
  caseStudyID?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  industryID?: Maybe<Scalars['uuid']>;
};

/** order by max() on columns of table "case_study_industry" */
export type Case_Study_Industry_Max_Order_By = {
  caseStudyID?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  industryID?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Case_Study_Industry_Min_Fields = {
  __typename?: 'case_study_industry_min_fields';
  caseStudyID?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  industryID?: Maybe<Scalars['uuid']>;
};

/** order by min() on columns of table "case_study_industry" */
export type Case_Study_Industry_Min_Order_By = {
  caseStudyID?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  industryID?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "case_study_industry" */
export type Case_Study_Industry_Mutation_Response = {
  __typename?: 'case_study_industry_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Case_Study_Industry>;
};

/** on_conflict condition type for table "case_study_industry" */
export type Case_Study_Industry_On_Conflict = {
  constraint: Case_Study_Industry_Constraint;
  update_columns?: Array<Case_Study_Industry_Update_Column>;
  where?: InputMaybe<Case_Study_Industry_Bool_Exp>;
};

/** Ordering options when selecting data from "case_study_industry". */
export type Case_Study_Industry_Order_By = {
  caseStudyID?: InputMaybe<Order_By>;
  case_study?: InputMaybe<Case_Study_Order_By>;
  id?: InputMaybe<Order_By>;
  industry?: InputMaybe<Industry_Order_By>;
  industryID?: InputMaybe<Order_By>;
};

/** primary key columns input for table: case_study_industry */
export type Case_Study_Industry_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "case_study_industry" */
export enum Case_Study_Industry_Select_Column {
  /** column name */
  CaseStudyId = 'caseStudyID',
  /** column name */
  Id = 'id',
  /** column name */
  IndustryId = 'industryID',
}

/** input type for updating data in table "case_study_industry" */
export type Case_Study_Industry_Set_Input = {
  caseStudyID?: InputMaybe<Scalars['uuid']>;
  id?: InputMaybe<Scalars['uuid']>;
  industryID?: InputMaybe<Scalars['uuid']>;
};

/** Streaming cursor of the table "case_study_industry" */
export type Case_Study_Industry_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Case_Study_Industry_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Case_Study_Industry_Stream_Cursor_Value_Input = {
  caseStudyID?: InputMaybe<Scalars['uuid']>;
  id?: InputMaybe<Scalars['uuid']>;
  industryID?: InputMaybe<Scalars['uuid']>;
};

/** update columns of table "case_study_industry" */
export enum Case_Study_Industry_Update_Column {
  /** column name */
  CaseStudyId = 'caseStudyID',
  /** column name */
  Id = 'id',
  /** column name */
  IndustryId = 'industryID',
}

export type Case_Study_Industry_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Case_Study_Industry_Set_Input>;
  where: Case_Study_Industry_Bool_Exp;
};

/** input type for inserting data into table "case_study" */
export type Case_Study_Insert_Input = {
  case_study_companies?: InputMaybe<Case_Study_Company_Arr_Rel_Insert_Input>;
  case_study_industries?: InputMaybe<Case_Study_Industry_Arr_Rel_Insert_Input>;
  case_study_markets?: InputMaybe<Case_Study_Market_Arr_Rel_Insert_Input>;
  case_study_skills?: InputMaybe<Case_Study_Skill_Arr_Rel_Insert_Input>;
  case_study_teams?: InputMaybe<Case_Study_Team_Arr_Rel_Insert_Input>;
  case_study_users?: InputMaybe<Case_Study_User_Arr_Rel_Insert_Input>;
  createdByUserCognitoSub?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  googleSlideLink?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['uuid']>;
  link?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  otherLink?: InputMaybe<Scalars['String']>;
  public_user_meta?: InputMaybe<Public_User_Meta_Obj_Rel_Insert_Input>;
  thumbnailKey?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  user_meta?: InputMaybe<User_Meta_Obj_Rel_Insert_Input>;
};

/** columns and relationships of "case_study_market" */
export type Case_Study_Market = {
  __typename?: 'case_study_market';
  caseStudyID: Scalars['uuid'];
  /** An object relationship */
  case_study: Case_Study;
  countryCode: Scalars['String'];
  id: Scalars['uuid'];
};

/** aggregated selection of "case_study_market" */
export type Case_Study_Market_Aggregate = {
  __typename?: 'case_study_market_aggregate';
  aggregate?: Maybe<Case_Study_Market_Aggregate_Fields>;
  nodes: Array<Case_Study_Market>;
};

/** aggregate fields of "case_study_market" */
export type Case_Study_Market_Aggregate_Fields = {
  __typename?: 'case_study_market_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<Case_Study_Market_Max_Fields>;
  min?: Maybe<Case_Study_Market_Min_Fields>;
};

/** aggregate fields of "case_study_market" */
export type Case_Study_Market_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Case_Study_Market_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "case_study_market" */
export type Case_Study_Market_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Case_Study_Market_Max_Order_By>;
  min?: InputMaybe<Case_Study_Market_Min_Order_By>;
};

/** input type for inserting array relation for remote table "case_study_market" */
export type Case_Study_Market_Arr_Rel_Insert_Input = {
  data: Array<Case_Study_Market_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Case_Study_Market_On_Conflict>;
};

/** Boolean expression to filter rows from the table "case_study_market". All fields are combined with a logical 'AND'. */
export type Case_Study_Market_Bool_Exp = {
  _and?: InputMaybe<Array<Case_Study_Market_Bool_Exp>>;
  _not?: InputMaybe<Case_Study_Market_Bool_Exp>;
  _or?: InputMaybe<Array<Case_Study_Market_Bool_Exp>>;
  caseStudyID?: InputMaybe<Uuid_Comparison_Exp>;
  case_study?: InputMaybe<Case_Study_Bool_Exp>;
  countryCode?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
};

/** unique or primary key constraints on table "case_study_market" */
export enum Case_Study_Market_Constraint {
  /** unique or primary key constraint on columns "caseStudyID", "countryCode" */
  CaseStudyMarketCountryCodeCaseStudyIdKey = 'case_study_market_countryCode_caseStudyID_key',
  /** unique or primary key constraint on columns "id" */
  CaseStudyMarketPkey = 'case_study_market_pkey',
}

/** input type for inserting data into table "case_study_market" */
export type Case_Study_Market_Insert_Input = {
  caseStudyID?: InputMaybe<Scalars['uuid']>;
  case_study?: InputMaybe<Case_Study_Obj_Rel_Insert_Input>;
  countryCode?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['uuid']>;
};

/** aggregate max on columns */
export type Case_Study_Market_Max_Fields = {
  __typename?: 'case_study_market_max_fields';
  caseStudyID?: Maybe<Scalars['uuid']>;
  countryCode?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
};

/** order by max() on columns of table "case_study_market" */
export type Case_Study_Market_Max_Order_By = {
  caseStudyID?: InputMaybe<Order_By>;
  countryCode?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Case_Study_Market_Min_Fields = {
  __typename?: 'case_study_market_min_fields';
  caseStudyID?: Maybe<Scalars['uuid']>;
  countryCode?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
};

/** order by min() on columns of table "case_study_market" */
export type Case_Study_Market_Min_Order_By = {
  caseStudyID?: InputMaybe<Order_By>;
  countryCode?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "case_study_market" */
export type Case_Study_Market_Mutation_Response = {
  __typename?: 'case_study_market_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Case_Study_Market>;
};

/** on_conflict condition type for table "case_study_market" */
export type Case_Study_Market_On_Conflict = {
  constraint: Case_Study_Market_Constraint;
  update_columns?: Array<Case_Study_Market_Update_Column>;
  where?: InputMaybe<Case_Study_Market_Bool_Exp>;
};

/** Ordering options when selecting data from "case_study_market". */
export type Case_Study_Market_Order_By = {
  caseStudyID?: InputMaybe<Order_By>;
  case_study?: InputMaybe<Case_Study_Order_By>;
  countryCode?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: case_study_market */
export type Case_Study_Market_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "case_study_market" */
export enum Case_Study_Market_Select_Column {
  /** column name */
  CaseStudyId = 'caseStudyID',
  /** column name */
  CountryCode = 'countryCode',
  /** column name */
  Id = 'id',
}

/** input type for updating data in table "case_study_market" */
export type Case_Study_Market_Set_Input = {
  caseStudyID?: InputMaybe<Scalars['uuid']>;
  countryCode?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['uuid']>;
};

/** Streaming cursor of the table "case_study_market" */
export type Case_Study_Market_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Case_Study_Market_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Case_Study_Market_Stream_Cursor_Value_Input = {
  caseStudyID?: InputMaybe<Scalars['uuid']>;
  countryCode?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['uuid']>;
};

/** update columns of table "case_study_market" */
export enum Case_Study_Market_Update_Column {
  /** column name */
  CaseStudyId = 'caseStudyID',
  /** column name */
  CountryCode = 'countryCode',
  /** column name */
  Id = 'id',
}

export type Case_Study_Market_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Case_Study_Market_Set_Input>;
  where: Case_Study_Market_Bool_Exp;
};

/** aggregate max on columns */
export type Case_Study_Max_Fields = {
  __typename?: 'case_study_max_fields';
  createdByUserCognitoSub?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  googleSlideLink?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  link?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  otherLink?: Maybe<Scalars['String']>;
  thumbnailKey?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "case_study" */
export type Case_Study_Max_Order_By = {
  createdByUserCognitoSub?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  googleSlideLink?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  link?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  otherLink?: InputMaybe<Order_By>;
  thumbnailKey?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Case_Study_Min_Fields = {
  __typename?: 'case_study_min_fields';
  createdByUserCognitoSub?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  googleSlideLink?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  link?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  otherLink?: Maybe<Scalars['String']>;
  thumbnailKey?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "case_study" */
export type Case_Study_Min_Order_By = {
  createdByUserCognitoSub?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  googleSlideLink?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  link?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  otherLink?: InputMaybe<Order_By>;
  thumbnailKey?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "case_study" */
export type Case_Study_Mutation_Response = {
  __typename?: 'case_study_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Case_Study>;
};

/** input type for inserting object relation for remote table "case_study" */
export type Case_Study_Obj_Rel_Insert_Input = {
  data: Case_Study_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Case_Study_On_Conflict>;
};

/** on_conflict condition type for table "case_study" */
export type Case_Study_On_Conflict = {
  constraint: Case_Study_Constraint;
  update_columns?: Array<Case_Study_Update_Column>;
  where?: InputMaybe<Case_Study_Bool_Exp>;
};

/** Ordering options when selecting data from "case_study". */
export type Case_Study_Order_By = {
  case_study_companies_aggregate?: InputMaybe<Case_Study_Company_Aggregate_Order_By>;
  case_study_industries_aggregate?: InputMaybe<Case_Study_Industry_Aggregate_Order_By>;
  case_study_markets_aggregate?: InputMaybe<Case_Study_Market_Aggregate_Order_By>;
  case_study_skills_aggregate?: InputMaybe<Case_Study_Skill_Aggregate_Order_By>;
  case_study_teams_aggregate?: InputMaybe<Case_Study_Team_Aggregate_Order_By>;
  case_study_users_aggregate?: InputMaybe<Case_Study_User_Aggregate_Order_By>;
  createdByUserCognitoSub?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  googleSlideLink?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  link?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  otherLink?: InputMaybe<Order_By>;
  public_user_meta?: InputMaybe<Public_User_Meta_Order_By>;
  thumbnailKey?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  user_meta?: InputMaybe<User_Meta_Order_By>;
};

/** primary key columns input for table: case_study */
export type Case_Study_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "case_study" */
export enum Case_Study_Select_Column {
  /** column name */
  CreatedByUserCognitoSub = 'createdByUserCognitoSub',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  GoogleSlideLink = 'googleSlideLink',
  /** column name */
  Id = 'id',
  /** column name */
  Link = 'link',
  /** column name */
  Name = 'name',
  /** column name */
  OtherLink = 'otherLink',
  /** column name */
  ThumbnailKey = 'thumbnailKey',
  /** column name */
  UpdatedAt = 'updated_at',
}

/** input type for updating data in table "case_study" */
export type Case_Study_Set_Input = {
  createdByUserCognitoSub?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  googleSlideLink?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['uuid']>;
  link?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  otherLink?: InputMaybe<Scalars['String']>;
  thumbnailKey?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** columns and relationships of "case_study_skill" */
export type Case_Study_Skill = {
  __typename?: 'case_study_skill';
  caseStudyID: Scalars['uuid'];
  /** An object relationship */
  case_study: Case_Study;
  id: Scalars['uuid'];
  /** An object relationship */
  skill: Skill;
  skillID: Scalars['uuid'];
};

/** aggregated selection of "case_study_skill" */
export type Case_Study_Skill_Aggregate = {
  __typename?: 'case_study_skill_aggregate';
  aggregate?: Maybe<Case_Study_Skill_Aggregate_Fields>;
  nodes: Array<Case_Study_Skill>;
};

/** aggregate fields of "case_study_skill" */
export type Case_Study_Skill_Aggregate_Fields = {
  __typename?: 'case_study_skill_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<Case_Study_Skill_Max_Fields>;
  min?: Maybe<Case_Study_Skill_Min_Fields>;
};

/** aggregate fields of "case_study_skill" */
export type Case_Study_Skill_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Case_Study_Skill_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "case_study_skill" */
export type Case_Study_Skill_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Case_Study_Skill_Max_Order_By>;
  min?: InputMaybe<Case_Study_Skill_Min_Order_By>;
};

/** input type for inserting array relation for remote table "case_study_skill" */
export type Case_Study_Skill_Arr_Rel_Insert_Input = {
  data: Array<Case_Study_Skill_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Case_Study_Skill_On_Conflict>;
};

/** Boolean expression to filter rows from the table "case_study_skill". All fields are combined with a logical 'AND'. */
export type Case_Study_Skill_Bool_Exp = {
  _and?: InputMaybe<Array<Case_Study_Skill_Bool_Exp>>;
  _not?: InputMaybe<Case_Study_Skill_Bool_Exp>;
  _or?: InputMaybe<Array<Case_Study_Skill_Bool_Exp>>;
  caseStudyID?: InputMaybe<Uuid_Comparison_Exp>;
  case_study?: InputMaybe<Case_Study_Bool_Exp>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  skill?: InputMaybe<Skill_Bool_Exp>;
  skillID?: InputMaybe<Uuid_Comparison_Exp>;
};

/** unique or primary key constraints on table "case_study_skill" */
export enum Case_Study_Skill_Constraint {
  /** unique or primary key constraint on columns "id" */
  CaseStudySkillPkey = 'case_study_skill_pkey',
  /** unique or primary key constraint on columns "caseStudyID", "skillID" */
  CaseStudySkillSkillIdCaseStudyIdKey = 'case_study_skill_skillID_caseStudyID_key',
}

/** input type for inserting data into table "case_study_skill" */
export type Case_Study_Skill_Insert_Input = {
  caseStudyID?: InputMaybe<Scalars['uuid']>;
  case_study?: InputMaybe<Case_Study_Obj_Rel_Insert_Input>;
  id?: InputMaybe<Scalars['uuid']>;
  skill?: InputMaybe<Skill_Obj_Rel_Insert_Input>;
  skillID?: InputMaybe<Scalars['uuid']>;
};

/** aggregate max on columns */
export type Case_Study_Skill_Max_Fields = {
  __typename?: 'case_study_skill_max_fields';
  caseStudyID?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  skillID?: Maybe<Scalars['uuid']>;
};

/** order by max() on columns of table "case_study_skill" */
export type Case_Study_Skill_Max_Order_By = {
  caseStudyID?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  skillID?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Case_Study_Skill_Min_Fields = {
  __typename?: 'case_study_skill_min_fields';
  caseStudyID?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  skillID?: Maybe<Scalars['uuid']>;
};

/** order by min() on columns of table "case_study_skill" */
export type Case_Study_Skill_Min_Order_By = {
  caseStudyID?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  skillID?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "case_study_skill" */
export type Case_Study_Skill_Mutation_Response = {
  __typename?: 'case_study_skill_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Case_Study_Skill>;
};

/** on_conflict condition type for table "case_study_skill" */
export type Case_Study_Skill_On_Conflict = {
  constraint: Case_Study_Skill_Constraint;
  update_columns?: Array<Case_Study_Skill_Update_Column>;
  where?: InputMaybe<Case_Study_Skill_Bool_Exp>;
};

/** Ordering options when selecting data from "case_study_skill". */
export type Case_Study_Skill_Order_By = {
  caseStudyID?: InputMaybe<Order_By>;
  case_study?: InputMaybe<Case_Study_Order_By>;
  id?: InputMaybe<Order_By>;
  skill?: InputMaybe<Skill_Order_By>;
  skillID?: InputMaybe<Order_By>;
};

/** primary key columns input for table: case_study_skill */
export type Case_Study_Skill_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "case_study_skill" */
export enum Case_Study_Skill_Select_Column {
  /** column name */
  CaseStudyId = 'caseStudyID',
  /** column name */
  Id = 'id',
  /** column name */
  SkillId = 'skillID',
}

/** input type for updating data in table "case_study_skill" */
export type Case_Study_Skill_Set_Input = {
  caseStudyID?: InputMaybe<Scalars['uuid']>;
  id?: InputMaybe<Scalars['uuid']>;
  skillID?: InputMaybe<Scalars['uuid']>;
};

/** Streaming cursor of the table "case_study_skill" */
export type Case_Study_Skill_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Case_Study_Skill_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Case_Study_Skill_Stream_Cursor_Value_Input = {
  caseStudyID?: InputMaybe<Scalars['uuid']>;
  id?: InputMaybe<Scalars['uuid']>;
  skillID?: InputMaybe<Scalars['uuid']>;
};

/** update columns of table "case_study_skill" */
export enum Case_Study_Skill_Update_Column {
  /** column name */
  CaseStudyId = 'caseStudyID',
  /** column name */
  Id = 'id',
  /** column name */
  SkillId = 'skillID',
}

export type Case_Study_Skill_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Case_Study_Skill_Set_Input>;
  where: Case_Study_Skill_Bool_Exp;
};

/** Streaming cursor of the table "case_study" */
export type Case_Study_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Case_Study_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Case_Study_Stream_Cursor_Value_Input = {
  createdByUserCognitoSub?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  googleSlideLink?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['uuid']>;
  link?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  otherLink?: InputMaybe<Scalars['String']>;
  thumbnailKey?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** columns and relationships of "case_study_team" */
export type Case_Study_Team = {
  __typename?: 'case_study_team';
  caseStudyID: Scalars['uuid'];
  /** An object relationship */
  case_study: Case_Study;
  id: Scalars['uuid'];
  /** An object relationship */
  team: Team;
  teamID: Scalars['uuid'];
};

/** aggregated selection of "case_study_team" */
export type Case_Study_Team_Aggregate = {
  __typename?: 'case_study_team_aggregate';
  aggregate?: Maybe<Case_Study_Team_Aggregate_Fields>;
  nodes: Array<Case_Study_Team>;
};

/** aggregate fields of "case_study_team" */
export type Case_Study_Team_Aggregate_Fields = {
  __typename?: 'case_study_team_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<Case_Study_Team_Max_Fields>;
  min?: Maybe<Case_Study_Team_Min_Fields>;
};

/** aggregate fields of "case_study_team" */
export type Case_Study_Team_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Case_Study_Team_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "case_study_team" */
export type Case_Study_Team_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Case_Study_Team_Max_Order_By>;
  min?: InputMaybe<Case_Study_Team_Min_Order_By>;
};

/** input type for inserting array relation for remote table "case_study_team" */
export type Case_Study_Team_Arr_Rel_Insert_Input = {
  data: Array<Case_Study_Team_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Case_Study_Team_On_Conflict>;
};

/** Boolean expression to filter rows from the table "case_study_team". All fields are combined with a logical 'AND'. */
export type Case_Study_Team_Bool_Exp = {
  _and?: InputMaybe<Array<Case_Study_Team_Bool_Exp>>;
  _not?: InputMaybe<Case_Study_Team_Bool_Exp>;
  _or?: InputMaybe<Array<Case_Study_Team_Bool_Exp>>;
  caseStudyID?: InputMaybe<Uuid_Comparison_Exp>;
  case_study?: InputMaybe<Case_Study_Bool_Exp>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  team?: InputMaybe<Team_Bool_Exp>;
  teamID?: InputMaybe<Uuid_Comparison_Exp>;
};

/** unique or primary key constraints on table "case_study_team" */
export enum Case_Study_Team_Constraint {
  /** unique or primary key constraint on columns "id" */
  CaseStudyTeamPkey = 'case_study_team_pkey',
  /** unique or primary key constraint on columns "caseStudyID", "teamID" */
  CaseStudyTeamTeamIdCaseStudyIdKey = 'case_study_team_teamID_caseStudyID_key',
}

/** input type for inserting data into table "case_study_team" */
export type Case_Study_Team_Insert_Input = {
  caseStudyID?: InputMaybe<Scalars['uuid']>;
  case_study?: InputMaybe<Case_Study_Obj_Rel_Insert_Input>;
  id?: InputMaybe<Scalars['uuid']>;
  team?: InputMaybe<Team_Obj_Rel_Insert_Input>;
  teamID?: InputMaybe<Scalars['uuid']>;
};

/** aggregate max on columns */
export type Case_Study_Team_Max_Fields = {
  __typename?: 'case_study_team_max_fields';
  caseStudyID?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  teamID?: Maybe<Scalars['uuid']>;
};

/** order by max() on columns of table "case_study_team" */
export type Case_Study_Team_Max_Order_By = {
  caseStudyID?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  teamID?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Case_Study_Team_Min_Fields = {
  __typename?: 'case_study_team_min_fields';
  caseStudyID?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  teamID?: Maybe<Scalars['uuid']>;
};

/** order by min() on columns of table "case_study_team" */
export type Case_Study_Team_Min_Order_By = {
  caseStudyID?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  teamID?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "case_study_team" */
export type Case_Study_Team_Mutation_Response = {
  __typename?: 'case_study_team_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Case_Study_Team>;
};

/** on_conflict condition type for table "case_study_team" */
export type Case_Study_Team_On_Conflict = {
  constraint: Case_Study_Team_Constraint;
  update_columns?: Array<Case_Study_Team_Update_Column>;
  where?: InputMaybe<Case_Study_Team_Bool_Exp>;
};

/** Ordering options when selecting data from "case_study_team". */
export type Case_Study_Team_Order_By = {
  caseStudyID?: InputMaybe<Order_By>;
  case_study?: InputMaybe<Case_Study_Order_By>;
  id?: InputMaybe<Order_By>;
  team?: InputMaybe<Team_Order_By>;
  teamID?: InputMaybe<Order_By>;
};

/** primary key columns input for table: case_study_team */
export type Case_Study_Team_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "case_study_team" */
export enum Case_Study_Team_Select_Column {
  /** column name */
  CaseStudyId = 'caseStudyID',
  /** column name */
  Id = 'id',
  /** column name */
  TeamId = 'teamID',
}

/** input type for updating data in table "case_study_team" */
export type Case_Study_Team_Set_Input = {
  caseStudyID?: InputMaybe<Scalars['uuid']>;
  id?: InputMaybe<Scalars['uuid']>;
  teamID?: InputMaybe<Scalars['uuid']>;
};

/** Streaming cursor of the table "case_study_team" */
export type Case_Study_Team_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Case_Study_Team_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Case_Study_Team_Stream_Cursor_Value_Input = {
  caseStudyID?: InputMaybe<Scalars['uuid']>;
  id?: InputMaybe<Scalars['uuid']>;
  teamID?: InputMaybe<Scalars['uuid']>;
};

/** update columns of table "case_study_team" */
export enum Case_Study_Team_Update_Column {
  /** column name */
  CaseStudyId = 'caseStudyID',
  /** column name */
  Id = 'id',
  /** column name */
  TeamId = 'teamID',
}

export type Case_Study_Team_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Case_Study_Team_Set_Input>;
  where: Case_Study_Team_Bool_Exp;
};

/** update columns of table "case_study" */
export enum Case_Study_Update_Column {
  /** column name */
  CreatedByUserCognitoSub = 'createdByUserCognitoSub',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  GoogleSlideLink = 'googleSlideLink',
  /** column name */
  Id = 'id',
  /** column name */
  Link = 'link',
  /** column name */
  Name = 'name',
  /** column name */
  OtherLink = 'otherLink',
  /** column name */
  ThumbnailKey = 'thumbnailKey',
  /** column name */
  UpdatedAt = 'updated_at',
}

export type Case_Study_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Case_Study_Set_Input>;
  where: Case_Study_Bool_Exp;
};

/** columns and relationships of "case_study_user" */
export type Case_Study_User = {
  __typename?: 'case_study_user';
  caseStudyID: Scalars['uuid'];
  /** An object relationship */
  case_study: Case_Study;
  id: Scalars['uuid'];
  /** An object relationship */
  public_user_meta?: Maybe<Public_User_Meta>;
  userMetaID: Scalars['uuid'];
  /** An object relationship */
  user_meta: User_Meta;
};

/** aggregated selection of "case_study_user" */
export type Case_Study_User_Aggregate = {
  __typename?: 'case_study_user_aggregate';
  aggregate?: Maybe<Case_Study_User_Aggregate_Fields>;
  nodes: Array<Case_Study_User>;
};

/** aggregate fields of "case_study_user" */
export type Case_Study_User_Aggregate_Fields = {
  __typename?: 'case_study_user_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<Case_Study_User_Max_Fields>;
  min?: Maybe<Case_Study_User_Min_Fields>;
};

/** aggregate fields of "case_study_user" */
export type Case_Study_User_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Case_Study_User_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "case_study_user" */
export type Case_Study_User_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Case_Study_User_Max_Order_By>;
  min?: InputMaybe<Case_Study_User_Min_Order_By>;
};

/** input type for inserting array relation for remote table "case_study_user" */
export type Case_Study_User_Arr_Rel_Insert_Input = {
  data: Array<Case_Study_User_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Case_Study_User_On_Conflict>;
};

/** Boolean expression to filter rows from the table "case_study_user". All fields are combined with a logical 'AND'. */
export type Case_Study_User_Bool_Exp = {
  _and?: InputMaybe<Array<Case_Study_User_Bool_Exp>>;
  _not?: InputMaybe<Case_Study_User_Bool_Exp>;
  _or?: InputMaybe<Array<Case_Study_User_Bool_Exp>>;
  caseStudyID?: InputMaybe<Uuid_Comparison_Exp>;
  case_study?: InputMaybe<Case_Study_Bool_Exp>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  public_user_meta?: InputMaybe<Public_User_Meta_Bool_Exp>;
  userMetaID?: InputMaybe<Uuid_Comparison_Exp>;
  user_meta?: InputMaybe<User_Meta_Bool_Exp>;
};

/** unique or primary key constraints on table "case_study_user" */
export enum Case_Study_User_Constraint {
  /** unique or primary key constraint on columns "id" */
  CaseStudyUserPkey = 'case_study_user_pkey',
  /** unique or primary key constraint on columns "userMetaID", "caseStudyID" */
  CaseStudyUserUserMetaIdCaseStudyIdKey = 'case_study_user_userMetaID_caseStudyID_key',
}

/** input type for inserting data into table "case_study_user" */
export type Case_Study_User_Insert_Input = {
  caseStudyID?: InputMaybe<Scalars['uuid']>;
  case_study?: InputMaybe<Case_Study_Obj_Rel_Insert_Input>;
  id?: InputMaybe<Scalars['uuid']>;
  public_user_meta?: InputMaybe<Public_User_Meta_Obj_Rel_Insert_Input>;
  userMetaID?: InputMaybe<Scalars['uuid']>;
  user_meta?: InputMaybe<User_Meta_Obj_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type Case_Study_User_Max_Fields = {
  __typename?: 'case_study_user_max_fields';
  caseStudyID?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  userMetaID?: Maybe<Scalars['uuid']>;
};

/** order by max() on columns of table "case_study_user" */
export type Case_Study_User_Max_Order_By = {
  caseStudyID?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  userMetaID?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Case_Study_User_Min_Fields = {
  __typename?: 'case_study_user_min_fields';
  caseStudyID?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  userMetaID?: Maybe<Scalars['uuid']>;
};

/** order by min() on columns of table "case_study_user" */
export type Case_Study_User_Min_Order_By = {
  caseStudyID?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  userMetaID?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "case_study_user" */
export type Case_Study_User_Mutation_Response = {
  __typename?: 'case_study_user_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Case_Study_User>;
};

/** on_conflict condition type for table "case_study_user" */
export type Case_Study_User_On_Conflict = {
  constraint: Case_Study_User_Constraint;
  update_columns?: Array<Case_Study_User_Update_Column>;
  where?: InputMaybe<Case_Study_User_Bool_Exp>;
};

/** Ordering options when selecting data from "case_study_user". */
export type Case_Study_User_Order_By = {
  caseStudyID?: InputMaybe<Order_By>;
  case_study?: InputMaybe<Case_Study_Order_By>;
  id?: InputMaybe<Order_By>;
  public_user_meta?: InputMaybe<Public_User_Meta_Order_By>;
  userMetaID?: InputMaybe<Order_By>;
  user_meta?: InputMaybe<User_Meta_Order_By>;
};

/** primary key columns input for table: case_study_user */
export type Case_Study_User_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "case_study_user" */
export enum Case_Study_User_Select_Column {
  /** column name */
  CaseStudyId = 'caseStudyID',
  /** column name */
  Id = 'id',
  /** column name */
  UserMetaId = 'userMetaID',
}

/** input type for updating data in table "case_study_user" */
export type Case_Study_User_Set_Input = {
  caseStudyID?: InputMaybe<Scalars['uuid']>;
  id?: InputMaybe<Scalars['uuid']>;
  userMetaID?: InputMaybe<Scalars['uuid']>;
};

/** Streaming cursor of the table "case_study_user" */
export type Case_Study_User_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Case_Study_User_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Case_Study_User_Stream_Cursor_Value_Input = {
  caseStudyID?: InputMaybe<Scalars['uuid']>;
  id?: InputMaybe<Scalars['uuid']>;
  userMetaID?: InputMaybe<Scalars['uuid']>;
};

/** update columns of table "case_study_user" */
export enum Case_Study_User_Update_Column {
  /** column name */
  CaseStudyId = 'caseStudyID',
  /** column name */
  Id = 'id',
  /** column name */
  UserMetaId = 'userMetaID',
}

export type Case_Study_User_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Case_Study_User_Set_Input>;
  where: Case_Study_User_Bool_Exp;
};

/** columns and relationships of "company" */
export type Company = {
  __typename?: 'company';
  /** An array relationship */
  case_study_companies: Array<Case_Study_Company>;
  /** An aggregate relationship */
  case_study_companies_aggregate: Case_Study_Company_Aggregate;
  companyContactID?: Maybe<Scalars['uuid']>;
  companyTeamID?: Maybe<Scalars['uuid']>;
  /** An object relationship */
  company_contact?: Maybe<Company_Contact>;
  /** An object relationship */
  company_team?: Maybe<Company_Team>;
  created_at: Scalars['timestamptz'];
  /** An object relationship */
  customer?: Maybe<Customer>;
  /** An array relationship */
  document_associated_companies: Array<Document_Associated_Company>;
  /** An aggregate relationship */
  document_associated_companies_aggregate: Document_Associated_Company_Aggregate;
  id: Scalars['uuid'];
  /** An object relationship */
  industry?: Maybe<Industry>;
  industryID?: Maybe<Scalars['uuid']>;
  isDeactivated: Scalars['Boolean'];
  /** A computed field, executes function "is_company_solution_partner" */
  isSolutionPartner?: Maybe<Scalars['String']>;
  logoKey?: Maybe<Scalars['String']>;
  name: Scalars['String'];
  noOfEmployeesID?: Maybe<Scalars['uuid']>;
  /** An object relationship */
  no_of_employee?: Maybe<No_Of_Employees>;
  /** A computed field, executes function "get_company_relationship" */
  relationship?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
  /** A computed field, executes function "get_company_uploaded_document_types" */
  uploadedDocuments?: Maybe<Scalars['String']>;
  /** An object relationship */
  user_meta?: Maybe<User_Meta>;
  website?: Maybe<Scalars['String']>;
};

/** columns and relationships of "company" */
export type CompanyCase_Study_CompaniesArgs = {
  distinct_on?: InputMaybe<Array<Case_Study_Company_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Case_Study_Company_Order_By>>;
  where?: InputMaybe<Case_Study_Company_Bool_Exp>;
};

/** columns and relationships of "company" */
export type CompanyCase_Study_Companies_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Case_Study_Company_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Case_Study_Company_Order_By>>;
  where?: InputMaybe<Case_Study_Company_Bool_Exp>;
};

/** columns and relationships of "company" */
export type CompanyDocument_Associated_CompaniesArgs = {
  distinct_on?: InputMaybe<Array<Document_Associated_Company_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Document_Associated_Company_Order_By>>;
  where?: InputMaybe<Document_Associated_Company_Bool_Exp>;
};

/** columns and relationships of "company" */
export type CompanyDocument_Associated_Companies_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Document_Associated_Company_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Document_Associated_Company_Order_By>>;
  where?: InputMaybe<Document_Associated_Company_Bool_Exp>;
};

/** aggregated selection of "company" */
export type Company_Aggregate = {
  __typename?: 'company_aggregate';
  aggregate?: Maybe<Company_Aggregate_Fields>;
  nodes: Array<Company>;
};

/** aggregate fields of "company" */
export type Company_Aggregate_Fields = {
  __typename?: 'company_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<Company_Max_Fields>;
  min?: Maybe<Company_Min_Fields>;
};

/** aggregate fields of "company" */
export type Company_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Company_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "company" */
export type Company_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Company_Max_Order_By>;
  min?: InputMaybe<Company_Min_Order_By>;
};

/** input type for inserting array relation for remote table "company" */
export type Company_Arr_Rel_Insert_Input = {
  data: Array<Company_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Company_On_Conflict>;
};

/** Boolean expression to filter rows from the table "company". All fields are combined with a logical 'AND'. */
export type Company_Bool_Exp = {
  _and?: InputMaybe<Array<Company_Bool_Exp>>;
  _not?: InputMaybe<Company_Bool_Exp>;
  _or?: InputMaybe<Array<Company_Bool_Exp>>;
  case_study_companies?: InputMaybe<Case_Study_Company_Bool_Exp>;
  companyContactID?: InputMaybe<Uuid_Comparison_Exp>;
  companyTeamID?: InputMaybe<Uuid_Comparison_Exp>;
  company_contact?: InputMaybe<Company_Contact_Bool_Exp>;
  company_team?: InputMaybe<Company_Team_Bool_Exp>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  customer?: InputMaybe<Customer_Bool_Exp>;
  document_associated_companies?: InputMaybe<Document_Associated_Company_Bool_Exp>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  industry?: InputMaybe<Industry_Bool_Exp>;
  industryID?: InputMaybe<Uuid_Comparison_Exp>;
  isDeactivated?: InputMaybe<Boolean_Comparison_Exp>;
  isSolutionPartner?: InputMaybe<String_Comparison_Exp>;
  logoKey?: InputMaybe<String_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  noOfEmployeesID?: InputMaybe<Uuid_Comparison_Exp>;
  no_of_employee?: InputMaybe<No_Of_Employees_Bool_Exp>;
  relationship?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  uploadedDocuments?: InputMaybe<String_Comparison_Exp>;
  user_meta?: InputMaybe<User_Meta_Bool_Exp>;
  website?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "company" */
export enum Company_Constraint {
  /** unique or primary key constraint on columns "companyContactID" */
  CompanyCompanyContactIdKey = 'company_companyContactID_key',
  /** unique or primary key constraint on columns "companyTeamID" */
  CompanyCompanyTeamIdKey = 'company_companyTeamID_key',
  /** unique or primary key constraint on columns "id" */
  CompanyPkey = 'company_pkey',
  /** unique or primary key constraint on columns "website" */
  CompanyWebsiteKey = 'company_website_key',
}

/** columns and relationships of "company_contact" */
export type Company_Contact = {
  __typename?: 'company_contact';
  addressLine1: Scalars['String'];
  addressLine2?: Maybe<Scalars['String']>;
  city: Scalars['String'];
  /** An object relationship */
  company?: Maybe<Company>;
  country: Scalars['String'];
  email: Scalars['String'];
  id: Scalars['uuid'];
  phone?: Maybe<Scalars['String']>;
  primaryContact: Scalars['String'];
  secondaryContact?: Maybe<Scalars['String']>;
  secondaryContactEmail?: Maybe<Scalars['String']>;
  stateOrProvince: Scalars['String'];
  zipOrPostalCode: Scalars['String'];
};

/** aggregated selection of "company_contact" */
export type Company_Contact_Aggregate = {
  __typename?: 'company_contact_aggregate';
  aggregate?: Maybe<Company_Contact_Aggregate_Fields>;
  nodes: Array<Company_Contact>;
};

/** aggregate fields of "company_contact" */
export type Company_Contact_Aggregate_Fields = {
  __typename?: 'company_contact_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<Company_Contact_Max_Fields>;
  min?: Maybe<Company_Contact_Min_Fields>;
};

/** aggregate fields of "company_contact" */
export type Company_Contact_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Company_Contact_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** Boolean expression to filter rows from the table "company_contact". All fields are combined with a logical 'AND'. */
export type Company_Contact_Bool_Exp = {
  _and?: InputMaybe<Array<Company_Contact_Bool_Exp>>;
  _not?: InputMaybe<Company_Contact_Bool_Exp>;
  _or?: InputMaybe<Array<Company_Contact_Bool_Exp>>;
  addressLine1?: InputMaybe<String_Comparison_Exp>;
  addressLine2?: InputMaybe<String_Comparison_Exp>;
  city?: InputMaybe<String_Comparison_Exp>;
  company?: InputMaybe<Company_Bool_Exp>;
  country?: InputMaybe<String_Comparison_Exp>;
  email?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  phone?: InputMaybe<String_Comparison_Exp>;
  primaryContact?: InputMaybe<String_Comparison_Exp>;
  secondaryContact?: InputMaybe<String_Comparison_Exp>;
  secondaryContactEmail?: InputMaybe<String_Comparison_Exp>;
  stateOrProvince?: InputMaybe<String_Comparison_Exp>;
  zipOrPostalCode?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "company_contact" */
export enum Company_Contact_Constraint {
  /** unique or primary key constraint on columns "id" */
  CompanyContactPkey = 'company_contact_pkey',
}

/** input type for inserting data into table "company_contact" */
export type Company_Contact_Insert_Input = {
  addressLine1?: InputMaybe<Scalars['String']>;
  addressLine2?: InputMaybe<Scalars['String']>;
  city?: InputMaybe<Scalars['String']>;
  company?: InputMaybe<Company_Obj_Rel_Insert_Input>;
  country?: InputMaybe<Scalars['String']>;
  email?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['uuid']>;
  phone?: InputMaybe<Scalars['String']>;
  primaryContact?: InputMaybe<Scalars['String']>;
  secondaryContact?: InputMaybe<Scalars['String']>;
  secondaryContactEmail?: InputMaybe<Scalars['String']>;
  stateOrProvince?: InputMaybe<Scalars['String']>;
  zipOrPostalCode?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Company_Contact_Max_Fields = {
  __typename?: 'company_contact_max_fields';
  addressLine1?: Maybe<Scalars['String']>;
  addressLine2?: Maybe<Scalars['String']>;
  city?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  email?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  phone?: Maybe<Scalars['String']>;
  primaryContact?: Maybe<Scalars['String']>;
  secondaryContact?: Maybe<Scalars['String']>;
  secondaryContactEmail?: Maybe<Scalars['String']>;
  stateOrProvince?: Maybe<Scalars['String']>;
  zipOrPostalCode?: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type Company_Contact_Min_Fields = {
  __typename?: 'company_contact_min_fields';
  addressLine1?: Maybe<Scalars['String']>;
  addressLine2?: Maybe<Scalars['String']>;
  city?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  email?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  phone?: Maybe<Scalars['String']>;
  primaryContact?: Maybe<Scalars['String']>;
  secondaryContact?: Maybe<Scalars['String']>;
  secondaryContactEmail?: Maybe<Scalars['String']>;
  stateOrProvince?: Maybe<Scalars['String']>;
  zipOrPostalCode?: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "company_contact" */
export type Company_Contact_Mutation_Response = {
  __typename?: 'company_contact_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Company_Contact>;
};

/** input type for inserting object relation for remote table "company_contact" */
export type Company_Contact_Obj_Rel_Insert_Input = {
  data: Company_Contact_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Company_Contact_On_Conflict>;
};

/** on_conflict condition type for table "company_contact" */
export type Company_Contact_On_Conflict = {
  constraint: Company_Contact_Constraint;
  update_columns?: Array<Company_Contact_Update_Column>;
  where?: InputMaybe<Company_Contact_Bool_Exp>;
};

/** Ordering options when selecting data from "company_contact". */
export type Company_Contact_Order_By = {
  addressLine1?: InputMaybe<Order_By>;
  addressLine2?: InputMaybe<Order_By>;
  city?: InputMaybe<Order_By>;
  company?: InputMaybe<Company_Order_By>;
  country?: InputMaybe<Order_By>;
  email?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  phone?: InputMaybe<Order_By>;
  primaryContact?: InputMaybe<Order_By>;
  secondaryContact?: InputMaybe<Order_By>;
  secondaryContactEmail?: InputMaybe<Order_By>;
  stateOrProvince?: InputMaybe<Order_By>;
  zipOrPostalCode?: InputMaybe<Order_By>;
};

/** primary key columns input for table: company_contact */
export type Company_Contact_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "company_contact" */
export enum Company_Contact_Select_Column {
  /** column name */
  AddressLine1 = 'addressLine1',
  /** column name */
  AddressLine2 = 'addressLine2',
  /** column name */
  City = 'city',
  /** column name */
  Country = 'country',
  /** column name */
  Email = 'email',
  /** column name */
  Id = 'id',
  /** column name */
  Phone = 'phone',
  /** column name */
  PrimaryContact = 'primaryContact',
  /** column name */
  SecondaryContact = 'secondaryContact',
  /** column name */
  SecondaryContactEmail = 'secondaryContactEmail',
  /** column name */
  StateOrProvince = 'stateOrProvince',
  /** column name */
  ZipOrPostalCode = 'zipOrPostalCode',
}

/** input type for updating data in table "company_contact" */
export type Company_Contact_Set_Input = {
  addressLine1?: InputMaybe<Scalars['String']>;
  addressLine2?: InputMaybe<Scalars['String']>;
  city?: InputMaybe<Scalars['String']>;
  country?: InputMaybe<Scalars['String']>;
  email?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['uuid']>;
  phone?: InputMaybe<Scalars['String']>;
  primaryContact?: InputMaybe<Scalars['String']>;
  secondaryContact?: InputMaybe<Scalars['String']>;
  secondaryContactEmail?: InputMaybe<Scalars['String']>;
  stateOrProvince?: InputMaybe<Scalars['String']>;
  zipOrPostalCode?: InputMaybe<Scalars['String']>;
};

/** Streaming cursor of the table "company_contact" */
export type Company_Contact_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Company_Contact_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Company_Contact_Stream_Cursor_Value_Input = {
  addressLine1?: InputMaybe<Scalars['String']>;
  addressLine2?: InputMaybe<Scalars['String']>;
  city?: InputMaybe<Scalars['String']>;
  country?: InputMaybe<Scalars['String']>;
  email?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['uuid']>;
  phone?: InputMaybe<Scalars['String']>;
  primaryContact?: InputMaybe<Scalars['String']>;
  secondaryContact?: InputMaybe<Scalars['String']>;
  secondaryContactEmail?: InputMaybe<Scalars['String']>;
  stateOrProvince?: InputMaybe<Scalars['String']>;
  zipOrPostalCode?: InputMaybe<Scalars['String']>;
};

/** update columns of table "company_contact" */
export enum Company_Contact_Update_Column {
  /** column name */
  AddressLine1 = 'addressLine1',
  /** column name */
  AddressLine2 = 'addressLine2',
  /** column name */
  City = 'city',
  /** column name */
  Country = 'country',
  /** column name */
  Email = 'email',
  /** column name */
  Id = 'id',
  /** column name */
  Phone = 'phone',
  /** column name */
  PrimaryContact = 'primaryContact',
  /** column name */
  SecondaryContact = 'secondaryContact',
  /** column name */
  SecondaryContactEmail = 'secondaryContactEmail',
  /** column name */
  StateOrProvince = 'stateOrProvince',
  /** column name */
  ZipOrPostalCode = 'zipOrPostalCode',
}

export type Company_Contact_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Company_Contact_Set_Input>;
  where: Company_Contact_Bool_Exp;
};

/** input type for inserting data into table "company" */
export type Company_Insert_Input = {
  case_study_companies?: InputMaybe<Case_Study_Company_Arr_Rel_Insert_Input>;
  companyContactID?: InputMaybe<Scalars['uuid']>;
  companyTeamID?: InputMaybe<Scalars['uuid']>;
  company_contact?: InputMaybe<Company_Contact_Obj_Rel_Insert_Input>;
  company_team?: InputMaybe<Company_Team_Obj_Rel_Insert_Input>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  customer?: InputMaybe<Customer_Obj_Rel_Insert_Input>;
  document_associated_companies?: InputMaybe<Document_Associated_Company_Arr_Rel_Insert_Input>;
  id?: InputMaybe<Scalars['uuid']>;
  industry?: InputMaybe<Industry_Obj_Rel_Insert_Input>;
  industryID?: InputMaybe<Scalars['uuid']>;
  isDeactivated?: InputMaybe<Scalars['Boolean']>;
  logoKey?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  noOfEmployeesID?: InputMaybe<Scalars['uuid']>;
  no_of_employee?: InputMaybe<No_Of_Employees_Obj_Rel_Insert_Input>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  user_meta?: InputMaybe<User_Meta_Obj_Rel_Insert_Input>;
  website?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Company_Max_Fields = {
  __typename?: 'company_max_fields';
  companyContactID?: Maybe<Scalars['uuid']>;
  companyTeamID?: Maybe<Scalars['uuid']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  industryID?: Maybe<Scalars['uuid']>;
  logoKey?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  noOfEmployeesID?: Maybe<Scalars['uuid']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  website?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "company" */
export type Company_Max_Order_By = {
  companyContactID?: InputMaybe<Order_By>;
  companyTeamID?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  industryID?: InputMaybe<Order_By>;
  logoKey?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  noOfEmployeesID?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  website?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Company_Min_Fields = {
  __typename?: 'company_min_fields';
  companyContactID?: Maybe<Scalars['uuid']>;
  companyTeamID?: Maybe<Scalars['uuid']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  industryID?: Maybe<Scalars['uuid']>;
  logoKey?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  noOfEmployeesID?: Maybe<Scalars['uuid']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  website?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "company" */
export type Company_Min_Order_By = {
  companyContactID?: InputMaybe<Order_By>;
  companyTeamID?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  industryID?: InputMaybe<Order_By>;
  logoKey?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  noOfEmployeesID?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  website?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "company" */
export type Company_Mutation_Response = {
  __typename?: 'company_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Company>;
};

/** input type for inserting object relation for remote table "company" */
export type Company_Obj_Rel_Insert_Input = {
  data: Company_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Company_On_Conflict>;
};

/** on_conflict condition type for table "company" */
export type Company_On_Conflict = {
  constraint: Company_Constraint;
  update_columns?: Array<Company_Update_Column>;
  where?: InputMaybe<Company_Bool_Exp>;
};

/** Ordering options when selecting data from "company". */
export type Company_Order_By = {
  case_study_companies_aggregate?: InputMaybe<Case_Study_Company_Aggregate_Order_By>;
  companyContactID?: InputMaybe<Order_By>;
  companyTeamID?: InputMaybe<Order_By>;
  company_contact?: InputMaybe<Company_Contact_Order_By>;
  company_team?: InputMaybe<Company_Team_Order_By>;
  created_at?: InputMaybe<Order_By>;
  customer?: InputMaybe<Customer_Order_By>;
  document_associated_companies_aggregate?: InputMaybe<Document_Associated_Company_Aggregate_Order_By>;
  id?: InputMaybe<Order_By>;
  industry?: InputMaybe<Industry_Order_By>;
  industryID?: InputMaybe<Order_By>;
  isDeactivated?: InputMaybe<Order_By>;
  isSolutionPartner?: InputMaybe<Order_By>;
  logoKey?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  noOfEmployeesID?: InputMaybe<Order_By>;
  no_of_employee?: InputMaybe<No_Of_Employees_Order_By>;
  relationship?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  uploadedDocuments?: InputMaybe<Order_By>;
  user_meta?: InputMaybe<User_Meta_Order_By>;
  website?: InputMaybe<Order_By>;
};

/** primary key columns input for table: company */
export type Company_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "company" */
export enum Company_Select_Column {
  /** column name */
  CompanyContactId = 'companyContactID',
  /** column name */
  CompanyTeamId = 'companyTeamID',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  IndustryId = 'industryID',
  /** column name */
  IsDeactivated = 'isDeactivated',
  /** column name */
  LogoKey = 'logoKey',
  /** column name */
  Name = 'name',
  /** column name */
  NoOfEmployeesId = 'noOfEmployeesID',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  Website = 'website',
}

/** input type for updating data in table "company" */
export type Company_Set_Input = {
  companyContactID?: InputMaybe<Scalars['uuid']>;
  companyTeamID?: InputMaybe<Scalars['uuid']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['uuid']>;
  industryID?: InputMaybe<Scalars['uuid']>;
  isDeactivated?: InputMaybe<Scalars['Boolean']>;
  logoKey?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  noOfEmployeesID?: InputMaybe<Scalars['uuid']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  website?: InputMaybe<Scalars['String']>;
};

/** Streaming cursor of the table "company" */
export type Company_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Company_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Company_Stream_Cursor_Value_Input = {
  companyContactID?: InputMaybe<Scalars['uuid']>;
  companyTeamID?: InputMaybe<Scalars['uuid']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['uuid']>;
  industryID?: InputMaybe<Scalars['uuid']>;
  isDeactivated?: InputMaybe<Scalars['Boolean']>;
  logoKey?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  noOfEmployeesID?: InputMaybe<Scalars['uuid']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  website?: InputMaybe<Scalars['String']>;
};

/** columns and relationships of "company_team" */
export type Company_Team = {
  __typename?: 'company_team';
  /** An object relationship */
  accountLead?: Maybe<User_Meta>;
  accountLeadID?: Maybe<Scalars['uuid']>;
  /** An object relationship */
  company?: Maybe<Company>;
  /** An array relationship */
  company_team_contributors: Array<Company_Team_Contributor>;
  /** An aggregate relationship */
  company_team_contributors_aggregate: Company_Team_Contributor_Aggregate;
  id: Scalars['uuid'];
  /** An object relationship */
  publicAccountLead?: Maybe<Public_User_Meta>;
};

/** columns and relationships of "company_team" */
export type Company_TeamCompany_Team_ContributorsArgs = {
  distinct_on?: InputMaybe<Array<Company_Team_Contributor_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Company_Team_Contributor_Order_By>>;
  where?: InputMaybe<Company_Team_Contributor_Bool_Exp>;
};

/** columns and relationships of "company_team" */
export type Company_TeamCompany_Team_Contributors_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Company_Team_Contributor_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Company_Team_Contributor_Order_By>>;
  where?: InputMaybe<Company_Team_Contributor_Bool_Exp>;
};

/** aggregated selection of "company_team" */
export type Company_Team_Aggregate = {
  __typename?: 'company_team_aggregate';
  aggregate?: Maybe<Company_Team_Aggregate_Fields>;
  nodes: Array<Company_Team>;
};

/** aggregate fields of "company_team" */
export type Company_Team_Aggregate_Fields = {
  __typename?: 'company_team_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<Company_Team_Max_Fields>;
  min?: Maybe<Company_Team_Min_Fields>;
};

/** aggregate fields of "company_team" */
export type Company_Team_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Company_Team_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** Boolean expression to filter rows from the table "company_team". All fields are combined with a logical 'AND'. */
export type Company_Team_Bool_Exp = {
  _and?: InputMaybe<Array<Company_Team_Bool_Exp>>;
  _not?: InputMaybe<Company_Team_Bool_Exp>;
  _or?: InputMaybe<Array<Company_Team_Bool_Exp>>;
  accountLead?: InputMaybe<User_Meta_Bool_Exp>;
  accountLeadID?: InputMaybe<Uuid_Comparison_Exp>;
  company?: InputMaybe<Company_Bool_Exp>;
  company_team_contributors?: InputMaybe<Company_Team_Contributor_Bool_Exp>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  publicAccountLead?: InputMaybe<Public_User_Meta_Bool_Exp>;
};

/** unique or primary key constraints on table "company_team" */
export enum Company_Team_Constraint {
  /** unique or primary key constraint on columns "id" */
  CompanyTeamPkey = 'company_team_pkey',
}

/** columns and relationships of "company_team_contributor" */
export type Company_Team_Contributor = {
  __typename?: 'company_team_contributor';
  companyTeamID: Scalars['uuid'];
  /** An object relationship */
  company_team: Company_Team;
  id: Scalars['uuid'];
  /** An object relationship */
  public_user_meta?: Maybe<User_Meta>;
  userMetaID: Scalars['uuid'];
  /** An object relationship */
  user_meta: User_Meta;
};

/** aggregated selection of "company_team_contributor" */
export type Company_Team_Contributor_Aggregate = {
  __typename?: 'company_team_contributor_aggregate';
  aggregate?: Maybe<Company_Team_Contributor_Aggregate_Fields>;
  nodes: Array<Company_Team_Contributor>;
};

/** aggregate fields of "company_team_contributor" */
export type Company_Team_Contributor_Aggregate_Fields = {
  __typename?: 'company_team_contributor_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<Company_Team_Contributor_Max_Fields>;
  min?: Maybe<Company_Team_Contributor_Min_Fields>;
};

/** aggregate fields of "company_team_contributor" */
export type Company_Team_Contributor_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Company_Team_Contributor_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "company_team_contributor" */
export type Company_Team_Contributor_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Company_Team_Contributor_Max_Order_By>;
  min?: InputMaybe<Company_Team_Contributor_Min_Order_By>;
};

/** input type for inserting array relation for remote table "company_team_contributor" */
export type Company_Team_Contributor_Arr_Rel_Insert_Input = {
  data: Array<Company_Team_Contributor_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Company_Team_Contributor_On_Conflict>;
};

/** Boolean expression to filter rows from the table "company_team_contributor". All fields are combined with a logical 'AND'. */
export type Company_Team_Contributor_Bool_Exp = {
  _and?: InputMaybe<Array<Company_Team_Contributor_Bool_Exp>>;
  _not?: InputMaybe<Company_Team_Contributor_Bool_Exp>;
  _or?: InputMaybe<Array<Company_Team_Contributor_Bool_Exp>>;
  companyTeamID?: InputMaybe<Uuid_Comparison_Exp>;
  company_team?: InputMaybe<Company_Team_Bool_Exp>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  public_user_meta?: InputMaybe<User_Meta_Bool_Exp>;
  userMetaID?: InputMaybe<Uuid_Comparison_Exp>;
  user_meta?: InputMaybe<User_Meta_Bool_Exp>;
};

/** unique or primary key constraints on table "company_team_contributor" */
export enum Company_Team_Contributor_Constraint {
  /** unique or primary key constraint on columns "id" */
  CompanyTeamContributorPkey = 'company_team_contributor_pkey',
  /** unique or primary key constraint on columns "userMetaID", "companyTeamID" */
  CompanyTeamContributorUserMetaIdCompanyTeamIdKey = 'company_team_contributor_userMetaID_companyTeamID_key',
}

/** input type for inserting data into table "company_team_contributor" */
export type Company_Team_Contributor_Insert_Input = {
  companyTeamID?: InputMaybe<Scalars['uuid']>;
  company_team?: InputMaybe<Company_Team_Obj_Rel_Insert_Input>;
  id?: InputMaybe<Scalars['uuid']>;
  public_user_meta?: InputMaybe<User_Meta_Obj_Rel_Insert_Input>;
  userMetaID?: InputMaybe<Scalars['uuid']>;
  user_meta?: InputMaybe<User_Meta_Obj_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type Company_Team_Contributor_Max_Fields = {
  __typename?: 'company_team_contributor_max_fields';
  companyTeamID?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  userMetaID?: Maybe<Scalars['uuid']>;
};

/** order by max() on columns of table "company_team_contributor" */
export type Company_Team_Contributor_Max_Order_By = {
  companyTeamID?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  userMetaID?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Company_Team_Contributor_Min_Fields = {
  __typename?: 'company_team_contributor_min_fields';
  companyTeamID?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  userMetaID?: Maybe<Scalars['uuid']>;
};

/** order by min() on columns of table "company_team_contributor" */
export type Company_Team_Contributor_Min_Order_By = {
  companyTeamID?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  userMetaID?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "company_team_contributor" */
export type Company_Team_Contributor_Mutation_Response = {
  __typename?: 'company_team_contributor_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Company_Team_Contributor>;
};

/** on_conflict condition type for table "company_team_contributor" */
export type Company_Team_Contributor_On_Conflict = {
  constraint: Company_Team_Contributor_Constraint;
  update_columns?: Array<Company_Team_Contributor_Update_Column>;
  where?: InputMaybe<Company_Team_Contributor_Bool_Exp>;
};

/** Ordering options when selecting data from "company_team_contributor". */
export type Company_Team_Contributor_Order_By = {
  companyTeamID?: InputMaybe<Order_By>;
  company_team?: InputMaybe<Company_Team_Order_By>;
  id?: InputMaybe<Order_By>;
  public_user_meta?: InputMaybe<User_Meta_Order_By>;
  userMetaID?: InputMaybe<Order_By>;
  user_meta?: InputMaybe<User_Meta_Order_By>;
};

/** primary key columns input for table: company_team_contributor */
export type Company_Team_Contributor_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "company_team_contributor" */
export enum Company_Team_Contributor_Select_Column {
  /** column name */
  CompanyTeamId = 'companyTeamID',
  /** column name */
  Id = 'id',
  /** column name */
  UserMetaId = 'userMetaID',
}

/** input type for updating data in table "company_team_contributor" */
export type Company_Team_Contributor_Set_Input = {
  companyTeamID?: InputMaybe<Scalars['uuid']>;
  id?: InputMaybe<Scalars['uuid']>;
  userMetaID?: InputMaybe<Scalars['uuid']>;
};

/** Streaming cursor of the table "company_team_contributor" */
export type Company_Team_Contributor_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Company_Team_Contributor_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Company_Team_Contributor_Stream_Cursor_Value_Input = {
  companyTeamID?: InputMaybe<Scalars['uuid']>;
  id?: InputMaybe<Scalars['uuid']>;
  userMetaID?: InputMaybe<Scalars['uuid']>;
};

/** update columns of table "company_team_contributor" */
export enum Company_Team_Contributor_Update_Column {
  /** column name */
  CompanyTeamId = 'companyTeamID',
  /** column name */
  Id = 'id',
  /** column name */
  UserMetaId = 'userMetaID',
}

export type Company_Team_Contributor_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Company_Team_Contributor_Set_Input>;
  where: Company_Team_Contributor_Bool_Exp;
};

/** input type for inserting data into table "company_team" */
export type Company_Team_Insert_Input = {
  accountLead?: InputMaybe<User_Meta_Obj_Rel_Insert_Input>;
  accountLeadID?: InputMaybe<Scalars['uuid']>;
  company?: InputMaybe<Company_Obj_Rel_Insert_Input>;
  company_team_contributors?: InputMaybe<Company_Team_Contributor_Arr_Rel_Insert_Input>;
  id?: InputMaybe<Scalars['uuid']>;
  publicAccountLead?: InputMaybe<Public_User_Meta_Obj_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type Company_Team_Max_Fields = {
  __typename?: 'company_team_max_fields';
  accountLeadID?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
};

/** aggregate min on columns */
export type Company_Team_Min_Fields = {
  __typename?: 'company_team_min_fields';
  accountLeadID?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
};

/** response of any mutation on the table "company_team" */
export type Company_Team_Mutation_Response = {
  __typename?: 'company_team_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Company_Team>;
};

/** input type for inserting object relation for remote table "company_team" */
export type Company_Team_Obj_Rel_Insert_Input = {
  data: Company_Team_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Company_Team_On_Conflict>;
};

/** on_conflict condition type for table "company_team" */
export type Company_Team_On_Conflict = {
  constraint: Company_Team_Constraint;
  update_columns?: Array<Company_Team_Update_Column>;
  where?: InputMaybe<Company_Team_Bool_Exp>;
};

/** Ordering options when selecting data from "company_team". */
export type Company_Team_Order_By = {
  accountLead?: InputMaybe<User_Meta_Order_By>;
  accountLeadID?: InputMaybe<Order_By>;
  company?: InputMaybe<Company_Order_By>;
  company_team_contributors_aggregate?: InputMaybe<Company_Team_Contributor_Aggregate_Order_By>;
  id?: InputMaybe<Order_By>;
  publicAccountLead?: InputMaybe<Public_User_Meta_Order_By>;
};

/** primary key columns input for table: company_team */
export type Company_Team_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "company_team" */
export enum Company_Team_Select_Column {
  /** column name */
  AccountLeadId = 'accountLeadID',
  /** column name */
  Id = 'id',
}

/** input type for updating data in table "company_team" */
export type Company_Team_Set_Input = {
  accountLeadID?: InputMaybe<Scalars['uuid']>;
  id?: InputMaybe<Scalars['uuid']>;
};

/** Streaming cursor of the table "company_team" */
export type Company_Team_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Company_Team_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Company_Team_Stream_Cursor_Value_Input = {
  accountLeadID?: InputMaybe<Scalars['uuid']>;
  id?: InputMaybe<Scalars['uuid']>;
};

/** update columns of table "company_team" */
export enum Company_Team_Update_Column {
  /** column name */
  AccountLeadId = 'accountLeadID',
  /** column name */
  Id = 'id',
}

export type Company_Team_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Company_Team_Set_Input>;
  where: Company_Team_Bool_Exp;
};

/** update columns of table "company" */
export enum Company_Update_Column {
  /** column name */
  CompanyContactId = 'companyContactID',
  /** column name */
  CompanyTeamId = 'companyTeamID',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  IndustryId = 'industryID',
  /** column name */
  IsDeactivated = 'isDeactivated',
  /** column name */
  LogoKey = 'logoKey',
  /** column name */
  Name = 'name',
  /** column name */
  NoOfEmployeesId = 'noOfEmployeesID',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  Website = 'website',
}

export type Company_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Company_Set_Input>;
  where: Company_Bool_Exp;
};

/** columns and relationships of "contributor_type" */
export type Contributor_Type = {
  __typename?: 'contributor_type';
  /** An array relationship */
  custom_project_payout_distributions: Array<Custom_Project_Payout_Distribution>;
  /** An aggregate relationship */
  custom_project_payout_distributions_aggregate: Custom_Project_Payout_Distribution_Aggregate;
  id: Scalars['uuid'];
  name: Scalars['String'];
  /** An array relationship */
  payout_distributions: Array<Payout_Distribution>;
  /** An aggregate relationship */
  payout_distributions_aggregate: Payout_Distribution_Aggregate;
};

/** columns and relationships of "contributor_type" */
export type Contributor_TypeCustom_Project_Payout_DistributionsArgs = {
  distinct_on?: InputMaybe<Array<Custom_Project_Payout_Distribution_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Custom_Project_Payout_Distribution_Order_By>>;
  where?: InputMaybe<Custom_Project_Payout_Distribution_Bool_Exp>;
};

/** columns and relationships of "contributor_type" */
export type Contributor_TypeCustom_Project_Payout_Distributions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Custom_Project_Payout_Distribution_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Custom_Project_Payout_Distribution_Order_By>>;
  where?: InputMaybe<Custom_Project_Payout_Distribution_Bool_Exp>;
};

/** columns and relationships of "contributor_type" */
export type Contributor_TypePayout_DistributionsArgs = {
  distinct_on?: InputMaybe<Array<Payout_Distribution_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Payout_Distribution_Order_By>>;
  where?: InputMaybe<Payout_Distribution_Bool_Exp>;
};

/** columns and relationships of "contributor_type" */
export type Contributor_TypePayout_Distributions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Payout_Distribution_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Payout_Distribution_Order_By>>;
  where?: InputMaybe<Payout_Distribution_Bool_Exp>;
};

/** aggregated selection of "contributor_type" */
export type Contributor_Type_Aggregate = {
  __typename?: 'contributor_type_aggregate';
  aggregate?: Maybe<Contributor_Type_Aggregate_Fields>;
  nodes: Array<Contributor_Type>;
};

/** aggregate fields of "contributor_type" */
export type Contributor_Type_Aggregate_Fields = {
  __typename?: 'contributor_type_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<Contributor_Type_Max_Fields>;
  min?: Maybe<Contributor_Type_Min_Fields>;
};

/** aggregate fields of "contributor_type" */
export type Contributor_Type_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Contributor_Type_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** Boolean expression to filter rows from the table "contributor_type". All fields are combined with a logical 'AND'. */
export type Contributor_Type_Bool_Exp = {
  _and?: InputMaybe<Array<Contributor_Type_Bool_Exp>>;
  _not?: InputMaybe<Contributor_Type_Bool_Exp>;
  _or?: InputMaybe<Array<Contributor_Type_Bool_Exp>>;
  custom_project_payout_distributions?: InputMaybe<Custom_Project_Payout_Distribution_Bool_Exp>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  payout_distributions?: InputMaybe<Payout_Distribution_Bool_Exp>;
};

/** unique or primary key constraints on table "contributor_type" */
export enum Contributor_Type_Constraint {
  /** unique or primary key constraint on columns "name" */
  ContributorTypeNameKey = 'contributor_type_name_key',
  /** unique or primary key constraint on columns "id" */
  ContributorTypePkey = 'contributor_type_pkey',
}

/** input type for inserting data into table "contributor_type" */
export type Contributor_Type_Insert_Input = {
  custom_project_payout_distributions?: InputMaybe<Custom_Project_Payout_Distribution_Arr_Rel_Insert_Input>;
  id?: InputMaybe<Scalars['uuid']>;
  name?: InputMaybe<Scalars['String']>;
  payout_distributions?: InputMaybe<Payout_Distribution_Arr_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type Contributor_Type_Max_Fields = {
  __typename?: 'contributor_type_max_fields';
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type Contributor_Type_Min_Fields = {
  __typename?: 'contributor_type_min_fields';
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "contributor_type" */
export type Contributor_Type_Mutation_Response = {
  __typename?: 'contributor_type_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Contributor_Type>;
};

/** input type for inserting object relation for remote table "contributor_type" */
export type Contributor_Type_Obj_Rel_Insert_Input = {
  data: Contributor_Type_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Contributor_Type_On_Conflict>;
};

/** on_conflict condition type for table "contributor_type" */
export type Contributor_Type_On_Conflict = {
  constraint: Contributor_Type_Constraint;
  update_columns?: Array<Contributor_Type_Update_Column>;
  where?: InputMaybe<Contributor_Type_Bool_Exp>;
};

/** Ordering options when selecting data from "contributor_type". */
export type Contributor_Type_Order_By = {
  custom_project_payout_distributions_aggregate?: InputMaybe<Custom_Project_Payout_Distribution_Aggregate_Order_By>;
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  payout_distributions_aggregate?: InputMaybe<Payout_Distribution_Aggregate_Order_By>;
};

/** primary key columns input for table: contributor_type */
export type Contributor_Type_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "contributor_type" */
export enum Contributor_Type_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
}

/** input type for updating data in table "contributor_type" */
export type Contributor_Type_Set_Input = {
  id?: InputMaybe<Scalars['uuid']>;
  name?: InputMaybe<Scalars['String']>;
};

/** Streaming cursor of the table "contributor_type" */
export type Contributor_Type_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Contributor_Type_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Contributor_Type_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['uuid']>;
  name?: InputMaybe<Scalars['String']>;
};

/** update columns of table "contributor_type" */
export enum Contributor_Type_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
}

export type Contributor_Type_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Contributor_Type_Set_Input>;
  where: Contributor_Type_Bool_Exp;
};

/** columns and relationships of "current_user_meta" */
export type Current_User_Meta = {
  __typename?: 'current_user_meta';
  about?: Maybe<Scalars['String']>;
  avatarKey?: Maybe<Scalars['String']>;
  cognitoSub?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  email?: Maybe<Scalars['String']>;
  firstName?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  isAccountInitiated?: Maybe<Scalars['Boolean']>;
  lastName?: Maybe<Scalars['String']>;
  /** An array relationship */
  user_meta_user_roles: Array<User_Meta_User_Role>;
  /** An aggregate relationship */
  user_meta_user_roles_aggregate: User_Meta_User_Role_Aggregate;
  username?: Maybe<Scalars['String']>;
};

/** columns and relationships of "current_user_meta" */
export type Current_User_MetaUser_Meta_User_RolesArgs = {
  distinct_on?: InputMaybe<Array<User_Meta_User_Role_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Meta_User_Role_Order_By>>;
  where?: InputMaybe<User_Meta_User_Role_Bool_Exp>;
};

/** columns and relationships of "current_user_meta" */
export type Current_User_MetaUser_Meta_User_Roles_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Meta_User_Role_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Meta_User_Role_Order_By>>;
  where?: InputMaybe<User_Meta_User_Role_Bool_Exp>;
};

/** aggregated selection of "current_user_meta" */
export type Current_User_Meta_Aggregate = {
  __typename?: 'current_user_meta_aggregate';
  aggregate?: Maybe<Current_User_Meta_Aggregate_Fields>;
  nodes: Array<Current_User_Meta>;
};

/** aggregate fields of "current_user_meta" */
export type Current_User_Meta_Aggregate_Fields = {
  __typename?: 'current_user_meta_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<Current_User_Meta_Max_Fields>;
  min?: Maybe<Current_User_Meta_Min_Fields>;
};

/** aggregate fields of "current_user_meta" */
export type Current_User_Meta_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Current_User_Meta_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** Boolean expression to filter rows from the table "current_user_meta". All fields are combined with a logical 'AND'. */
export type Current_User_Meta_Bool_Exp = {
  _and?: InputMaybe<Array<Current_User_Meta_Bool_Exp>>;
  _not?: InputMaybe<Current_User_Meta_Bool_Exp>;
  _or?: InputMaybe<Array<Current_User_Meta_Bool_Exp>>;
  about?: InputMaybe<String_Comparison_Exp>;
  avatarKey?: InputMaybe<String_Comparison_Exp>;
  cognitoSub?: InputMaybe<String_Comparison_Exp>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  email?: InputMaybe<String_Comparison_Exp>;
  firstName?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  isAccountInitiated?: InputMaybe<Boolean_Comparison_Exp>;
  lastName?: InputMaybe<String_Comparison_Exp>;
  user_meta_user_roles?: InputMaybe<User_Meta_User_Role_Bool_Exp>;
  username?: InputMaybe<String_Comparison_Exp>;
};

/** input type for inserting data into table "current_user_meta" */
export type Current_User_Meta_Insert_Input = {
  about?: InputMaybe<Scalars['String']>;
  avatarKey?: InputMaybe<Scalars['String']>;
  cognitoSub?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  email?: InputMaybe<Scalars['String']>;
  firstName?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['uuid']>;
  isAccountInitiated?: InputMaybe<Scalars['Boolean']>;
  lastName?: InputMaybe<Scalars['String']>;
  user_meta_user_roles?: InputMaybe<User_Meta_User_Role_Arr_Rel_Insert_Input>;
  username?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Current_User_Meta_Max_Fields = {
  __typename?: 'current_user_meta_max_fields';
  about?: Maybe<Scalars['String']>;
  avatarKey?: Maybe<Scalars['String']>;
  cognitoSub?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  email?: Maybe<Scalars['String']>;
  firstName?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  lastName?: Maybe<Scalars['String']>;
  username?: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type Current_User_Meta_Min_Fields = {
  __typename?: 'current_user_meta_min_fields';
  about?: Maybe<Scalars['String']>;
  avatarKey?: Maybe<Scalars['String']>;
  cognitoSub?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  email?: Maybe<Scalars['String']>;
  firstName?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  lastName?: Maybe<Scalars['String']>;
  username?: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "current_user_meta" */
export type Current_User_Meta_Mutation_Response = {
  __typename?: 'current_user_meta_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Current_User_Meta>;
};

/** Ordering options when selecting data from "current_user_meta". */
export type Current_User_Meta_Order_By = {
  about?: InputMaybe<Order_By>;
  avatarKey?: InputMaybe<Order_By>;
  cognitoSub?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  email?: InputMaybe<Order_By>;
  firstName?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  isAccountInitiated?: InputMaybe<Order_By>;
  lastName?: InputMaybe<Order_By>;
  user_meta_user_roles_aggregate?: InputMaybe<User_Meta_User_Role_Aggregate_Order_By>;
  username?: InputMaybe<Order_By>;
};

/** select columns of table "current_user_meta" */
export enum Current_User_Meta_Select_Column {
  /** column name */
  About = 'about',
  /** column name */
  AvatarKey = 'avatarKey',
  /** column name */
  CognitoSub = 'cognitoSub',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Email = 'email',
  /** column name */
  FirstName = 'firstName',
  /** column name */
  Id = 'id',
  /** column name */
  IsAccountInitiated = 'isAccountInitiated',
  /** column name */
  LastName = 'lastName',
  /** column name */
  Username = 'username',
}

/** input type for updating data in table "current_user_meta" */
export type Current_User_Meta_Set_Input = {
  about?: InputMaybe<Scalars['String']>;
  avatarKey?: InputMaybe<Scalars['String']>;
  cognitoSub?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  email?: InputMaybe<Scalars['String']>;
  firstName?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['uuid']>;
  isAccountInitiated?: InputMaybe<Scalars['Boolean']>;
  lastName?: InputMaybe<Scalars['String']>;
  username?: InputMaybe<Scalars['String']>;
};

/** Streaming cursor of the table "current_user_meta" */
export type Current_User_Meta_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Current_User_Meta_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Current_User_Meta_Stream_Cursor_Value_Input = {
  about?: InputMaybe<Scalars['String']>;
  avatarKey?: InputMaybe<Scalars['String']>;
  cognitoSub?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  email?: InputMaybe<Scalars['String']>;
  firstName?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['uuid']>;
  isAccountInitiated?: InputMaybe<Scalars['Boolean']>;
  lastName?: InputMaybe<Scalars['String']>;
  username?: InputMaybe<Scalars['String']>;
};

export type Current_User_Meta_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Current_User_Meta_Set_Input>;
  where: Current_User_Meta_Bool_Exp;
};

/** ordering argument of a cursor */
export enum Cursor_Ordering {
  /** ascending ordering of the cursor */
  Asc = 'ASC',
  /** descending ordering of the cursor */
  Desc = 'DESC',
}

/** columns and relationships of "custom_payout" */
export type Custom_Payout = {
  __typename?: 'custom_payout';
  additionalNotes?: Maybe<Scalars['String']>;
  attachments?: Maybe<Scalars['String']>;
  created_at: Scalars['timestamptz'];
  /** An array relationship */
  custom_payout_line_items: Array<Custom_Payout_Line_Item>;
  /** An aggregate relationship */
  custom_payout_line_items_aggregate: Custom_Payout_Line_Item_Aggregate;
  id: Scalars['uuid'];
  /** An object relationship */
  invoice: Invoice;
  invoiceID: Scalars['Int'];
  status: Scalars['String'];
};

/** columns and relationships of "custom_payout" */
export type Custom_PayoutCustom_Payout_Line_ItemsArgs = {
  distinct_on?: InputMaybe<Array<Custom_Payout_Line_Item_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Custom_Payout_Line_Item_Order_By>>;
  where?: InputMaybe<Custom_Payout_Line_Item_Bool_Exp>;
};

/** columns and relationships of "custom_payout" */
export type Custom_PayoutCustom_Payout_Line_Items_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Custom_Payout_Line_Item_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Custom_Payout_Line_Item_Order_By>>;
  where?: InputMaybe<Custom_Payout_Line_Item_Bool_Exp>;
};

/** aggregated selection of "custom_payout" */
export type Custom_Payout_Aggregate = {
  __typename?: 'custom_payout_aggregate';
  aggregate?: Maybe<Custom_Payout_Aggregate_Fields>;
  nodes: Array<Custom_Payout>;
};

/** aggregate fields of "custom_payout" */
export type Custom_Payout_Aggregate_Fields = {
  __typename?: 'custom_payout_aggregate_fields';
  avg?: Maybe<Custom_Payout_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Custom_Payout_Max_Fields>;
  min?: Maybe<Custom_Payout_Min_Fields>;
  stddev?: Maybe<Custom_Payout_Stddev_Fields>;
  stddev_pop?: Maybe<Custom_Payout_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Custom_Payout_Stddev_Samp_Fields>;
  sum?: Maybe<Custom_Payout_Sum_Fields>;
  var_pop?: Maybe<Custom_Payout_Var_Pop_Fields>;
  var_samp?: Maybe<Custom_Payout_Var_Samp_Fields>;
  variance?: Maybe<Custom_Payout_Variance_Fields>;
};

/** aggregate fields of "custom_payout" */
export type Custom_Payout_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Custom_Payout_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "custom_payout" */
export type Custom_Payout_Aggregate_Order_By = {
  avg?: InputMaybe<Custom_Payout_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Custom_Payout_Max_Order_By>;
  min?: InputMaybe<Custom_Payout_Min_Order_By>;
  stddev?: InputMaybe<Custom_Payout_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Custom_Payout_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Custom_Payout_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Custom_Payout_Sum_Order_By>;
  var_pop?: InputMaybe<Custom_Payout_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Custom_Payout_Var_Samp_Order_By>;
  variance?: InputMaybe<Custom_Payout_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "custom_payout" */
export type Custom_Payout_Arr_Rel_Insert_Input = {
  data: Array<Custom_Payout_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Custom_Payout_On_Conflict>;
};

/** aggregate avg on columns */
export type Custom_Payout_Avg_Fields = {
  __typename?: 'custom_payout_avg_fields';
  invoiceID?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "custom_payout" */
export type Custom_Payout_Avg_Order_By = {
  invoiceID?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "custom_payout". All fields are combined with a logical 'AND'. */
export type Custom_Payout_Bool_Exp = {
  _and?: InputMaybe<Array<Custom_Payout_Bool_Exp>>;
  _not?: InputMaybe<Custom_Payout_Bool_Exp>;
  _or?: InputMaybe<Array<Custom_Payout_Bool_Exp>>;
  additionalNotes?: InputMaybe<String_Comparison_Exp>;
  attachments?: InputMaybe<String_Comparison_Exp>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  custom_payout_line_items?: InputMaybe<Custom_Payout_Line_Item_Bool_Exp>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  invoice?: InputMaybe<Invoice_Bool_Exp>;
  invoiceID?: InputMaybe<Int_Comparison_Exp>;
  status?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "custom_payout" */
export enum Custom_Payout_Constraint {
  /** unique or primary key constraint on columns "id" */
  CustomPayoutPkey = 'custom_payout_pkey',
}

/** input type for incrementing numeric columns in table "custom_payout" */
export type Custom_Payout_Inc_Input = {
  invoiceID?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "custom_payout" */
export type Custom_Payout_Insert_Input = {
  additionalNotes?: InputMaybe<Scalars['String']>;
  attachments?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  custom_payout_line_items?: InputMaybe<Custom_Payout_Line_Item_Arr_Rel_Insert_Input>;
  id?: InputMaybe<Scalars['uuid']>;
  invoice?: InputMaybe<Invoice_Obj_Rel_Insert_Input>;
  invoiceID?: InputMaybe<Scalars['Int']>;
  status?: InputMaybe<Scalars['String']>;
};

/** columns and relationships of "custom_payout_line_item" */
export type Custom_Payout_Line_Item = {
  __typename?: 'custom_payout_line_item';
  customPayoutID: Scalars['uuid'];
  /** An object relationship */
  custom_payout: Custom_Payout;
  /** An object relationship */
  custom_project_distribution?: Maybe<Custom_Project_Distribution>;
  id: Scalars['uuid'];
  price: Scalars['numeric'];
  productOrServiceID: Scalars['uuid'];
  /** An object relationship */
  product_or_service_type: Product_Or_Service_Type;
  /** An object relationship */
  public_user_meta?: Maybe<Public_User_Meta>;
  teamMemberID: Scalars['uuid'];
  /** An object relationship */
  user_meta: User_Meta;
};

/** aggregated selection of "custom_payout_line_item" */
export type Custom_Payout_Line_Item_Aggregate = {
  __typename?: 'custom_payout_line_item_aggregate';
  aggregate?: Maybe<Custom_Payout_Line_Item_Aggregate_Fields>;
  nodes: Array<Custom_Payout_Line_Item>;
};

/** aggregate fields of "custom_payout_line_item" */
export type Custom_Payout_Line_Item_Aggregate_Fields = {
  __typename?: 'custom_payout_line_item_aggregate_fields';
  avg?: Maybe<Custom_Payout_Line_Item_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Custom_Payout_Line_Item_Max_Fields>;
  min?: Maybe<Custom_Payout_Line_Item_Min_Fields>;
  stddev?: Maybe<Custom_Payout_Line_Item_Stddev_Fields>;
  stddev_pop?: Maybe<Custom_Payout_Line_Item_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Custom_Payout_Line_Item_Stddev_Samp_Fields>;
  sum?: Maybe<Custom_Payout_Line_Item_Sum_Fields>;
  var_pop?: Maybe<Custom_Payout_Line_Item_Var_Pop_Fields>;
  var_samp?: Maybe<Custom_Payout_Line_Item_Var_Samp_Fields>;
  variance?: Maybe<Custom_Payout_Line_Item_Variance_Fields>;
};

/** aggregate fields of "custom_payout_line_item" */
export type Custom_Payout_Line_Item_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Custom_Payout_Line_Item_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "custom_payout_line_item" */
export type Custom_Payout_Line_Item_Aggregate_Order_By = {
  avg?: InputMaybe<Custom_Payout_Line_Item_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Custom_Payout_Line_Item_Max_Order_By>;
  min?: InputMaybe<Custom_Payout_Line_Item_Min_Order_By>;
  stddev?: InputMaybe<Custom_Payout_Line_Item_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Custom_Payout_Line_Item_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Custom_Payout_Line_Item_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Custom_Payout_Line_Item_Sum_Order_By>;
  var_pop?: InputMaybe<Custom_Payout_Line_Item_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Custom_Payout_Line_Item_Var_Samp_Order_By>;
  variance?: InputMaybe<Custom_Payout_Line_Item_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "custom_payout_line_item" */
export type Custom_Payout_Line_Item_Arr_Rel_Insert_Input = {
  data: Array<Custom_Payout_Line_Item_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Custom_Payout_Line_Item_On_Conflict>;
};

/** aggregate avg on columns */
export type Custom_Payout_Line_Item_Avg_Fields = {
  __typename?: 'custom_payout_line_item_avg_fields';
  price?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "custom_payout_line_item" */
export type Custom_Payout_Line_Item_Avg_Order_By = {
  price?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "custom_payout_line_item". All fields are combined with a logical 'AND'. */
export type Custom_Payout_Line_Item_Bool_Exp = {
  _and?: InputMaybe<Array<Custom_Payout_Line_Item_Bool_Exp>>;
  _not?: InputMaybe<Custom_Payout_Line_Item_Bool_Exp>;
  _or?: InputMaybe<Array<Custom_Payout_Line_Item_Bool_Exp>>;
  customPayoutID?: InputMaybe<Uuid_Comparison_Exp>;
  custom_payout?: InputMaybe<Custom_Payout_Bool_Exp>;
  custom_project_distribution?: InputMaybe<Custom_Project_Distribution_Bool_Exp>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  price?: InputMaybe<Numeric_Comparison_Exp>;
  productOrServiceID?: InputMaybe<Uuid_Comparison_Exp>;
  product_or_service_type?: InputMaybe<Product_Or_Service_Type_Bool_Exp>;
  public_user_meta?: InputMaybe<Public_User_Meta_Bool_Exp>;
  teamMemberID?: InputMaybe<Uuid_Comparison_Exp>;
  user_meta?: InputMaybe<User_Meta_Bool_Exp>;
};

/** unique or primary key constraints on table "custom_payout_line_item" */
export enum Custom_Payout_Line_Item_Constraint {
  /** unique or primary key constraint on columns "id" */
  CustomPayoutLineItemPkey = 'custom_payout_line_item_pkey',
}

/** input type for incrementing numeric columns in table "custom_payout_line_item" */
export type Custom_Payout_Line_Item_Inc_Input = {
  price?: InputMaybe<Scalars['numeric']>;
};

/** input type for inserting data into table "custom_payout_line_item" */
export type Custom_Payout_Line_Item_Insert_Input = {
  customPayoutID?: InputMaybe<Scalars['uuid']>;
  custom_payout?: InputMaybe<Custom_Payout_Obj_Rel_Insert_Input>;
  custom_project_distribution?: InputMaybe<Custom_Project_Distribution_Obj_Rel_Insert_Input>;
  id?: InputMaybe<Scalars['uuid']>;
  price?: InputMaybe<Scalars['numeric']>;
  productOrServiceID?: InputMaybe<Scalars['uuid']>;
  product_or_service_type?: InputMaybe<Product_Or_Service_Type_Obj_Rel_Insert_Input>;
  public_user_meta?: InputMaybe<Public_User_Meta_Obj_Rel_Insert_Input>;
  teamMemberID?: InputMaybe<Scalars['uuid']>;
  user_meta?: InputMaybe<User_Meta_Obj_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type Custom_Payout_Line_Item_Max_Fields = {
  __typename?: 'custom_payout_line_item_max_fields';
  customPayoutID?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  price?: Maybe<Scalars['numeric']>;
  productOrServiceID?: Maybe<Scalars['uuid']>;
  teamMemberID?: Maybe<Scalars['uuid']>;
};

/** order by max() on columns of table "custom_payout_line_item" */
export type Custom_Payout_Line_Item_Max_Order_By = {
  customPayoutID?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  price?: InputMaybe<Order_By>;
  productOrServiceID?: InputMaybe<Order_By>;
  teamMemberID?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Custom_Payout_Line_Item_Min_Fields = {
  __typename?: 'custom_payout_line_item_min_fields';
  customPayoutID?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  price?: Maybe<Scalars['numeric']>;
  productOrServiceID?: Maybe<Scalars['uuid']>;
  teamMemberID?: Maybe<Scalars['uuid']>;
};

/** order by min() on columns of table "custom_payout_line_item" */
export type Custom_Payout_Line_Item_Min_Order_By = {
  customPayoutID?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  price?: InputMaybe<Order_By>;
  productOrServiceID?: InputMaybe<Order_By>;
  teamMemberID?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "custom_payout_line_item" */
export type Custom_Payout_Line_Item_Mutation_Response = {
  __typename?: 'custom_payout_line_item_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Custom_Payout_Line_Item>;
};

/** input type for inserting object relation for remote table "custom_payout_line_item" */
export type Custom_Payout_Line_Item_Obj_Rel_Insert_Input = {
  data: Custom_Payout_Line_Item_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Custom_Payout_Line_Item_On_Conflict>;
};

/** on_conflict condition type for table "custom_payout_line_item" */
export type Custom_Payout_Line_Item_On_Conflict = {
  constraint: Custom_Payout_Line_Item_Constraint;
  update_columns?: Array<Custom_Payout_Line_Item_Update_Column>;
  where?: InputMaybe<Custom_Payout_Line_Item_Bool_Exp>;
};

/** Ordering options when selecting data from "custom_payout_line_item". */
export type Custom_Payout_Line_Item_Order_By = {
  customPayoutID?: InputMaybe<Order_By>;
  custom_payout?: InputMaybe<Custom_Payout_Order_By>;
  custom_project_distribution?: InputMaybe<Custom_Project_Distribution_Order_By>;
  id?: InputMaybe<Order_By>;
  price?: InputMaybe<Order_By>;
  productOrServiceID?: InputMaybe<Order_By>;
  product_or_service_type?: InputMaybe<Product_Or_Service_Type_Order_By>;
  public_user_meta?: InputMaybe<Public_User_Meta_Order_By>;
  teamMemberID?: InputMaybe<Order_By>;
  user_meta?: InputMaybe<User_Meta_Order_By>;
};

/** primary key columns input for table: custom_payout_line_item */
export type Custom_Payout_Line_Item_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "custom_payout_line_item" */
export enum Custom_Payout_Line_Item_Select_Column {
  /** column name */
  CustomPayoutId = 'customPayoutID',
  /** column name */
  Id = 'id',
  /** column name */
  Price = 'price',
  /** column name */
  ProductOrServiceId = 'productOrServiceID',
  /** column name */
  TeamMemberId = 'teamMemberID',
}

/** input type for updating data in table "custom_payout_line_item" */
export type Custom_Payout_Line_Item_Set_Input = {
  customPayoutID?: InputMaybe<Scalars['uuid']>;
  id?: InputMaybe<Scalars['uuid']>;
  price?: InputMaybe<Scalars['numeric']>;
  productOrServiceID?: InputMaybe<Scalars['uuid']>;
  teamMemberID?: InputMaybe<Scalars['uuid']>;
};

/** aggregate stddev on columns */
export type Custom_Payout_Line_Item_Stddev_Fields = {
  __typename?: 'custom_payout_line_item_stddev_fields';
  price?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "custom_payout_line_item" */
export type Custom_Payout_Line_Item_Stddev_Order_By = {
  price?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Custom_Payout_Line_Item_Stddev_Pop_Fields = {
  __typename?: 'custom_payout_line_item_stddev_pop_fields';
  price?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "custom_payout_line_item" */
export type Custom_Payout_Line_Item_Stddev_Pop_Order_By = {
  price?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Custom_Payout_Line_Item_Stddev_Samp_Fields = {
  __typename?: 'custom_payout_line_item_stddev_samp_fields';
  price?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "custom_payout_line_item" */
export type Custom_Payout_Line_Item_Stddev_Samp_Order_By = {
  price?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "custom_payout_line_item" */
export type Custom_Payout_Line_Item_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Custom_Payout_Line_Item_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Custom_Payout_Line_Item_Stream_Cursor_Value_Input = {
  customPayoutID?: InputMaybe<Scalars['uuid']>;
  id?: InputMaybe<Scalars['uuid']>;
  price?: InputMaybe<Scalars['numeric']>;
  productOrServiceID?: InputMaybe<Scalars['uuid']>;
  teamMemberID?: InputMaybe<Scalars['uuid']>;
};

/** aggregate sum on columns */
export type Custom_Payout_Line_Item_Sum_Fields = {
  __typename?: 'custom_payout_line_item_sum_fields';
  price?: Maybe<Scalars['numeric']>;
};

/** order by sum() on columns of table "custom_payout_line_item" */
export type Custom_Payout_Line_Item_Sum_Order_By = {
  price?: InputMaybe<Order_By>;
};

/** update columns of table "custom_payout_line_item" */
export enum Custom_Payout_Line_Item_Update_Column {
  /** column name */
  CustomPayoutId = 'customPayoutID',
  /** column name */
  Id = 'id',
  /** column name */
  Price = 'price',
  /** column name */
  ProductOrServiceId = 'productOrServiceID',
  /** column name */
  TeamMemberId = 'teamMemberID',
}

export type Custom_Payout_Line_Item_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Custom_Payout_Line_Item_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Custom_Payout_Line_Item_Set_Input>;
  where: Custom_Payout_Line_Item_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Custom_Payout_Line_Item_Var_Pop_Fields = {
  __typename?: 'custom_payout_line_item_var_pop_fields';
  price?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "custom_payout_line_item" */
export type Custom_Payout_Line_Item_Var_Pop_Order_By = {
  price?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Custom_Payout_Line_Item_Var_Samp_Fields = {
  __typename?: 'custom_payout_line_item_var_samp_fields';
  price?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "custom_payout_line_item" */
export type Custom_Payout_Line_Item_Var_Samp_Order_By = {
  price?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Custom_Payout_Line_Item_Variance_Fields = {
  __typename?: 'custom_payout_line_item_variance_fields';
  price?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "custom_payout_line_item" */
export type Custom_Payout_Line_Item_Variance_Order_By = {
  price?: InputMaybe<Order_By>;
};

/** aggregate max on columns */
export type Custom_Payout_Max_Fields = {
  __typename?: 'custom_payout_max_fields';
  additionalNotes?: Maybe<Scalars['String']>;
  attachments?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  invoiceID?: Maybe<Scalars['Int']>;
  status?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "custom_payout" */
export type Custom_Payout_Max_Order_By = {
  additionalNotes?: InputMaybe<Order_By>;
  attachments?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  invoiceID?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Custom_Payout_Min_Fields = {
  __typename?: 'custom_payout_min_fields';
  additionalNotes?: Maybe<Scalars['String']>;
  attachments?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  invoiceID?: Maybe<Scalars['Int']>;
  status?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "custom_payout" */
export type Custom_Payout_Min_Order_By = {
  additionalNotes?: InputMaybe<Order_By>;
  attachments?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  invoiceID?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "custom_payout" */
export type Custom_Payout_Mutation_Response = {
  __typename?: 'custom_payout_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Custom_Payout>;
};

/** input type for inserting object relation for remote table "custom_payout" */
export type Custom_Payout_Obj_Rel_Insert_Input = {
  data: Custom_Payout_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Custom_Payout_On_Conflict>;
};

/** on_conflict condition type for table "custom_payout" */
export type Custom_Payout_On_Conflict = {
  constraint: Custom_Payout_Constraint;
  update_columns?: Array<Custom_Payout_Update_Column>;
  where?: InputMaybe<Custom_Payout_Bool_Exp>;
};

/** Ordering options when selecting data from "custom_payout". */
export type Custom_Payout_Order_By = {
  additionalNotes?: InputMaybe<Order_By>;
  attachments?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  custom_payout_line_items_aggregate?: InputMaybe<Custom_Payout_Line_Item_Aggregate_Order_By>;
  id?: InputMaybe<Order_By>;
  invoice?: InputMaybe<Invoice_Order_By>;
  invoiceID?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
};

/** primary key columns input for table: custom_payout */
export type Custom_Payout_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "custom_payout" */
export enum Custom_Payout_Select_Column {
  /** column name */
  AdditionalNotes = 'additionalNotes',
  /** column name */
  Attachments = 'attachments',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  InvoiceId = 'invoiceID',
  /** column name */
  Status = 'status',
}

/** input type for updating data in table "custom_payout" */
export type Custom_Payout_Set_Input = {
  additionalNotes?: InputMaybe<Scalars['String']>;
  attachments?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['uuid']>;
  invoiceID?: InputMaybe<Scalars['Int']>;
  status?: InputMaybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type Custom_Payout_Stddev_Fields = {
  __typename?: 'custom_payout_stddev_fields';
  invoiceID?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "custom_payout" */
export type Custom_Payout_Stddev_Order_By = {
  invoiceID?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Custom_Payout_Stddev_Pop_Fields = {
  __typename?: 'custom_payout_stddev_pop_fields';
  invoiceID?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "custom_payout" */
export type Custom_Payout_Stddev_Pop_Order_By = {
  invoiceID?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Custom_Payout_Stddev_Samp_Fields = {
  __typename?: 'custom_payout_stddev_samp_fields';
  invoiceID?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "custom_payout" */
export type Custom_Payout_Stddev_Samp_Order_By = {
  invoiceID?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "custom_payout" */
export type Custom_Payout_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Custom_Payout_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Custom_Payout_Stream_Cursor_Value_Input = {
  additionalNotes?: InputMaybe<Scalars['String']>;
  attachments?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['uuid']>;
  invoiceID?: InputMaybe<Scalars['Int']>;
  status?: InputMaybe<Scalars['String']>;
};

/** aggregate sum on columns */
export type Custom_Payout_Sum_Fields = {
  __typename?: 'custom_payout_sum_fields';
  invoiceID?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "custom_payout" */
export type Custom_Payout_Sum_Order_By = {
  invoiceID?: InputMaybe<Order_By>;
};

/** update columns of table "custom_payout" */
export enum Custom_Payout_Update_Column {
  /** column name */
  AdditionalNotes = 'additionalNotes',
  /** column name */
  Attachments = 'attachments',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  InvoiceId = 'invoiceID',
  /** column name */
  Status = 'status',
}

export type Custom_Payout_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Custom_Payout_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Custom_Payout_Set_Input>;
  where: Custom_Payout_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Custom_Payout_Var_Pop_Fields = {
  __typename?: 'custom_payout_var_pop_fields';
  invoiceID?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "custom_payout" */
export type Custom_Payout_Var_Pop_Order_By = {
  invoiceID?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Custom_Payout_Var_Samp_Fields = {
  __typename?: 'custom_payout_var_samp_fields';
  invoiceID?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "custom_payout" */
export type Custom_Payout_Var_Samp_Order_By = {
  invoiceID?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Custom_Payout_Variance_Fields = {
  __typename?: 'custom_payout_variance_fields';
  invoiceID?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "custom_payout" */
export type Custom_Payout_Variance_Order_By = {
  invoiceID?: InputMaybe<Order_By>;
};

/** columns and relationships of "custom_project_distribution" */
export type Custom_Project_Distribution = {
  __typename?: 'custom_project_distribution';
  currency: Scalars['String'];
  customProjectLineItemID: Scalars['uuid'];
  /** An object relationship */
  custom_payout_line_item: Custom_Payout_Line_Item;
  /** An array relationship */
  custom_project_payout_distributions: Array<Custom_Project_Payout_Distribution>;
  /** An aggregate relationship */
  custom_project_payout_distributions_aggregate: Custom_Project_Payout_Distribution_Aggregate;
  id: Scalars['uuid'];
  isPaid?: Maybe<Scalars['Boolean']>;
  paidOn?: Maybe<Scalars['timestamptz']>;
};

/** columns and relationships of "custom_project_distribution" */
export type Custom_Project_DistributionCustom_Project_Payout_DistributionsArgs = {
  distinct_on?: InputMaybe<Array<Custom_Project_Payout_Distribution_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Custom_Project_Payout_Distribution_Order_By>>;
  where?: InputMaybe<Custom_Project_Payout_Distribution_Bool_Exp>;
};

/** columns and relationships of "custom_project_distribution" */
export type Custom_Project_DistributionCustom_Project_Payout_Distributions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Custom_Project_Payout_Distribution_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Custom_Project_Payout_Distribution_Order_By>>;
  where?: InputMaybe<Custom_Project_Payout_Distribution_Bool_Exp>;
};

/** aggregated selection of "custom_project_distribution" */
export type Custom_Project_Distribution_Aggregate = {
  __typename?: 'custom_project_distribution_aggregate';
  aggregate?: Maybe<Custom_Project_Distribution_Aggregate_Fields>;
  nodes: Array<Custom_Project_Distribution>;
};

/** aggregate fields of "custom_project_distribution" */
export type Custom_Project_Distribution_Aggregate_Fields = {
  __typename?: 'custom_project_distribution_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<Custom_Project_Distribution_Max_Fields>;
  min?: Maybe<Custom_Project_Distribution_Min_Fields>;
};

/** aggregate fields of "custom_project_distribution" */
export type Custom_Project_Distribution_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Custom_Project_Distribution_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** Boolean expression to filter rows from the table "custom_project_distribution". All fields are combined with a logical 'AND'. */
export type Custom_Project_Distribution_Bool_Exp = {
  _and?: InputMaybe<Array<Custom_Project_Distribution_Bool_Exp>>;
  _not?: InputMaybe<Custom_Project_Distribution_Bool_Exp>;
  _or?: InputMaybe<Array<Custom_Project_Distribution_Bool_Exp>>;
  currency?: InputMaybe<String_Comparison_Exp>;
  customProjectLineItemID?: InputMaybe<Uuid_Comparison_Exp>;
  custom_payout_line_item?: InputMaybe<Custom_Payout_Line_Item_Bool_Exp>;
  custom_project_payout_distributions?: InputMaybe<Custom_Project_Payout_Distribution_Bool_Exp>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  isPaid?: InputMaybe<Boolean_Comparison_Exp>;
  paidOn?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "custom_project_distribution" */
export enum Custom_Project_Distribution_Constraint {
  /** unique or primary key constraint on columns "customProjectLineItemID" */
  CustomProjectDistributionCustomProjectLineItemIdKey = 'custom_project_distribution_customProjectLineItemID_key',
  /** unique or primary key constraint on columns "id" */
  CustomProjectDistributionPkey = 'custom_project_distribution_pkey',
}

/** input type for inserting data into table "custom_project_distribution" */
export type Custom_Project_Distribution_Insert_Input = {
  currency?: InputMaybe<Scalars['String']>;
  customProjectLineItemID?: InputMaybe<Scalars['uuid']>;
  custom_payout_line_item?: InputMaybe<Custom_Payout_Line_Item_Obj_Rel_Insert_Input>;
  custom_project_payout_distributions?: InputMaybe<Custom_Project_Payout_Distribution_Arr_Rel_Insert_Input>;
  id?: InputMaybe<Scalars['uuid']>;
  isPaid?: InputMaybe<Scalars['Boolean']>;
  paidOn?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Custom_Project_Distribution_Max_Fields = {
  __typename?: 'custom_project_distribution_max_fields';
  currency?: Maybe<Scalars['String']>;
  customProjectLineItemID?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  paidOn?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Custom_Project_Distribution_Min_Fields = {
  __typename?: 'custom_project_distribution_min_fields';
  currency?: Maybe<Scalars['String']>;
  customProjectLineItemID?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  paidOn?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "custom_project_distribution" */
export type Custom_Project_Distribution_Mutation_Response = {
  __typename?: 'custom_project_distribution_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Custom_Project_Distribution>;
};

/** input type for inserting object relation for remote table "custom_project_distribution" */
export type Custom_Project_Distribution_Obj_Rel_Insert_Input = {
  data: Custom_Project_Distribution_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Custom_Project_Distribution_On_Conflict>;
};

/** on_conflict condition type for table "custom_project_distribution" */
export type Custom_Project_Distribution_On_Conflict = {
  constraint: Custom_Project_Distribution_Constraint;
  update_columns?: Array<Custom_Project_Distribution_Update_Column>;
  where?: InputMaybe<Custom_Project_Distribution_Bool_Exp>;
};

/** Ordering options when selecting data from "custom_project_distribution". */
export type Custom_Project_Distribution_Order_By = {
  currency?: InputMaybe<Order_By>;
  customProjectLineItemID?: InputMaybe<Order_By>;
  custom_payout_line_item?: InputMaybe<Custom_Payout_Line_Item_Order_By>;
  custom_project_payout_distributions_aggregate?: InputMaybe<Custom_Project_Payout_Distribution_Aggregate_Order_By>;
  id?: InputMaybe<Order_By>;
  isPaid?: InputMaybe<Order_By>;
  paidOn?: InputMaybe<Order_By>;
};

/** primary key columns input for table: custom_project_distribution */
export type Custom_Project_Distribution_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "custom_project_distribution" */
export enum Custom_Project_Distribution_Select_Column {
  /** column name */
  Currency = 'currency',
  /** column name */
  CustomProjectLineItemId = 'customProjectLineItemID',
  /** column name */
  Id = 'id',
  /** column name */
  IsPaid = 'isPaid',
  /** column name */
  PaidOn = 'paidOn',
}

/** input type for updating data in table "custom_project_distribution" */
export type Custom_Project_Distribution_Set_Input = {
  currency?: InputMaybe<Scalars['String']>;
  customProjectLineItemID?: InputMaybe<Scalars['uuid']>;
  id?: InputMaybe<Scalars['uuid']>;
  isPaid?: InputMaybe<Scalars['Boolean']>;
  paidOn?: InputMaybe<Scalars['timestamptz']>;
};

/** Streaming cursor of the table "custom_project_distribution" */
export type Custom_Project_Distribution_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Custom_Project_Distribution_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Custom_Project_Distribution_Stream_Cursor_Value_Input = {
  currency?: InputMaybe<Scalars['String']>;
  customProjectLineItemID?: InputMaybe<Scalars['uuid']>;
  id?: InputMaybe<Scalars['uuid']>;
  isPaid?: InputMaybe<Scalars['Boolean']>;
  paidOn?: InputMaybe<Scalars['timestamptz']>;
};

/** update columns of table "custom_project_distribution" */
export enum Custom_Project_Distribution_Update_Column {
  /** column name */
  Currency = 'currency',
  /** column name */
  CustomProjectLineItemId = 'customProjectLineItemID',
  /** column name */
  Id = 'id',
  /** column name */
  IsPaid = 'isPaid',
  /** column name */
  PaidOn = 'paidOn',
}

export type Custom_Project_Distribution_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Custom_Project_Distribution_Set_Input>;
  where: Custom_Project_Distribution_Bool_Exp;
};

/** columns and relationships of "custom_project_payout_distribution" */
export type Custom_Project_Payout_Distribution = {
  __typename?: 'custom_project_payout_distribution';
  contributorTypeID: Scalars['uuid'];
  /** An object relationship */
  contributor_type: Contributor_Type;
  customProjectDistributionID: Scalars['uuid'];
  /** An object relationship */
  custom_project_distribution: Custom_Project_Distribution;
  id: Scalars['uuid'];
  isPaid?: Maybe<Scalars['Boolean']>;
  paidOn?: Maybe<Scalars['timestamptz']>;
  percentage: Scalars['float8'];
  /** An object relationship */
  public_user_meta?: Maybe<Public_User_Meta>;
  userMetaID?: Maybe<Scalars['uuid']>;
  /** An object relationship */
  user_meta?: Maybe<User_Meta>;
};

/** aggregated selection of "custom_project_payout_distribution" */
export type Custom_Project_Payout_Distribution_Aggregate = {
  __typename?: 'custom_project_payout_distribution_aggregate';
  aggregate?: Maybe<Custom_Project_Payout_Distribution_Aggregate_Fields>;
  nodes: Array<Custom_Project_Payout_Distribution>;
};

/** aggregate fields of "custom_project_payout_distribution" */
export type Custom_Project_Payout_Distribution_Aggregate_Fields = {
  __typename?: 'custom_project_payout_distribution_aggregate_fields';
  avg?: Maybe<Custom_Project_Payout_Distribution_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Custom_Project_Payout_Distribution_Max_Fields>;
  min?: Maybe<Custom_Project_Payout_Distribution_Min_Fields>;
  stddev?: Maybe<Custom_Project_Payout_Distribution_Stddev_Fields>;
  stddev_pop?: Maybe<Custom_Project_Payout_Distribution_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Custom_Project_Payout_Distribution_Stddev_Samp_Fields>;
  sum?: Maybe<Custom_Project_Payout_Distribution_Sum_Fields>;
  var_pop?: Maybe<Custom_Project_Payout_Distribution_Var_Pop_Fields>;
  var_samp?: Maybe<Custom_Project_Payout_Distribution_Var_Samp_Fields>;
  variance?: Maybe<Custom_Project_Payout_Distribution_Variance_Fields>;
};

/** aggregate fields of "custom_project_payout_distribution" */
export type Custom_Project_Payout_Distribution_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Custom_Project_Payout_Distribution_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "custom_project_payout_distribution" */
export type Custom_Project_Payout_Distribution_Aggregate_Order_By = {
  avg?: InputMaybe<Custom_Project_Payout_Distribution_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Custom_Project_Payout_Distribution_Max_Order_By>;
  min?: InputMaybe<Custom_Project_Payout_Distribution_Min_Order_By>;
  stddev?: InputMaybe<Custom_Project_Payout_Distribution_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Custom_Project_Payout_Distribution_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Custom_Project_Payout_Distribution_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Custom_Project_Payout_Distribution_Sum_Order_By>;
  var_pop?: InputMaybe<Custom_Project_Payout_Distribution_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Custom_Project_Payout_Distribution_Var_Samp_Order_By>;
  variance?: InputMaybe<Custom_Project_Payout_Distribution_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "custom_project_payout_distribution" */
export type Custom_Project_Payout_Distribution_Arr_Rel_Insert_Input = {
  data: Array<Custom_Project_Payout_Distribution_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Custom_Project_Payout_Distribution_On_Conflict>;
};

/** aggregate avg on columns */
export type Custom_Project_Payout_Distribution_Avg_Fields = {
  __typename?: 'custom_project_payout_distribution_avg_fields';
  percentage?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "custom_project_payout_distribution" */
export type Custom_Project_Payout_Distribution_Avg_Order_By = {
  percentage?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "custom_project_payout_distribution". All fields are combined with a logical 'AND'. */
export type Custom_Project_Payout_Distribution_Bool_Exp = {
  _and?: InputMaybe<Array<Custom_Project_Payout_Distribution_Bool_Exp>>;
  _not?: InputMaybe<Custom_Project_Payout_Distribution_Bool_Exp>;
  _or?: InputMaybe<Array<Custom_Project_Payout_Distribution_Bool_Exp>>;
  contributorTypeID?: InputMaybe<Uuid_Comparison_Exp>;
  contributor_type?: InputMaybe<Contributor_Type_Bool_Exp>;
  customProjectDistributionID?: InputMaybe<Uuid_Comparison_Exp>;
  custom_project_distribution?: InputMaybe<Custom_Project_Distribution_Bool_Exp>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  isPaid?: InputMaybe<Boolean_Comparison_Exp>;
  paidOn?: InputMaybe<Timestamptz_Comparison_Exp>;
  percentage?: InputMaybe<Float8_Comparison_Exp>;
  public_user_meta?: InputMaybe<Public_User_Meta_Bool_Exp>;
  userMetaID?: InputMaybe<Uuid_Comparison_Exp>;
  user_meta?: InputMaybe<User_Meta_Bool_Exp>;
};

/** unique or primary key constraints on table "custom_project_payout_distribution" */
export enum Custom_Project_Payout_Distribution_Constraint {
  /** unique or primary key constraint on columns "id" */
  CustomProjectPayoutDistributionPkey = 'custom_project_payout_distribution_pkey',
}

/** input type for incrementing numeric columns in table "custom_project_payout_distribution" */
export type Custom_Project_Payout_Distribution_Inc_Input = {
  percentage?: InputMaybe<Scalars['float8']>;
};

/** input type for inserting data into table "custom_project_payout_distribution" */
export type Custom_Project_Payout_Distribution_Insert_Input = {
  contributorTypeID?: InputMaybe<Scalars['uuid']>;
  contributor_type?: InputMaybe<Contributor_Type_Obj_Rel_Insert_Input>;
  customProjectDistributionID?: InputMaybe<Scalars['uuid']>;
  custom_project_distribution?: InputMaybe<Custom_Project_Distribution_Obj_Rel_Insert_Input>;
  id?: InputMaybe<Scalars['uuid']>;
  isPaid?: InputMaybe<Scalars['Boolean']>;
  paidOn?: InputMaybe<Scalars['timestamptz']>;
  percentage?: InputMaybe<Scalars['float8']>;
  public_user_meta?: InputMaybe<Public_User_Meta_Obj_Rel_Insert_Input>;
  userMetaID?: InputMaybe<Scalars['uuid']>;
  user_meta?: InputMaybe<User_Meta_Obj_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type Custom_Project_Payout_Distribution_Max_Fields = {
  __typename?: 'custom_project_payout_distribution_max_fields';
  contributorTypeID?: Maybe<Scalars['uuid']>;
  customProjectDistributionID?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  paidOn?: Maybe<Scalars['timestamptz']>;
  percentage?: Maybe<Scalars['float8']>;
  userMetaID?: Maybe<Scalars['uuid']>;
};

/** order by max() on columns of table "custom_project_payout_distribution" */
export type Custom_Project_Payout_Distribution_Max_Order_By = {
  contributorTypeID?: InputMaybe<Order_By>;
  customProjectDistributionID?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  paidOn?: InputMaybe<Order_By>;
  percentage?: InputMaybe<Order_By>;
  userMetaID?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Custom_Project_Payout_Distribution_Min_Fields = {
  __typename?: 'custom_project_payout_distribution_min_fields';
  contributorTypeID?: Maybe<Scalars['uuid']>;
  customProjectDistributionID?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  paidOn?: Maybe<Scalars['timestamptz']>;
  percentage?: Maybe<Scalars['float8']>;
  userMetaID?: Maybe<Scalars['uuid']>;
};

/** order by min() on columns of table "custom_project_payout_distribution" */
export type Custom_Project_Payout_Distribution_Min_Order_By = {
  contributorTypeID?: InputMaybe<Order_By>;
  customProjectDistributionID?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  paidOn?: InputMaybe<Order_By>;
  percentage?: InputMaybe<Order_By>;
  userMetaID?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "custom_project_payout_distribution" */
export type Custom_Project_Payout_Distribution_Mutation_Response = {
  __typename?: 'custom_project_payout_distribution_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Custom_Project_Payout_Distribution>;
};

/** on_conflict condition type for table "custom_project_payout_distribution" */
export type Custom_Project_Payout_Distribution_On_Conflict = {
  constraint: Custom_Project_Payout_Distribution_Constraint;
  update_columns?: Array<Custom_Project_Payout_Distribution_Update_Column>;
  where?: InputMaybe<Custom_Project_Payout_Distribution_Bool_Exp>;
};

/** Ordering options when selecting data from "custom_project_payout_distribution". */
export type Custom_Project_Payout_Distribution_Order_By = {
  contributorTypeID?: InputMaybe<Order_By>;
  contributor_type?: InputMaybe<Contributor_Type_Order_By>;
  customProjectDistributionID?: InputMaybe<Order_By>;
  custom_project_distribution?: InputMaybe<Custom_Project_Distribution_Order_By>;
  id?: InputMaybe<Order_By>;
  isPaid?: InputMaybe<Order_By>;
  paidOn?: InputMaybe<Order_By>;
  percentage?: InputMaybe<Order_By>;
  public_user_meta?: InputMaybe<Public_User_Meta_Order_By>;
  userMetaID?: InputMaybe<Order_By>;
  user_meta?: InputMaybe<User_Meta_Order_By>;
};

/** primary key columns input for table: custom_project_payout_distribution */
export type Custom_Project_Payout_Distribution_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "custom_project_payout_distribution" */
export enum Custom_Project_Payout_Distribution_Select_Column {
  /** column name */
  ContributorTypeId = 'contributorTypeID',
  /** column name */
  CustomProjectDistributionId = 'customProjectDistributionID',
  /** column name */
  Id = 'id',
  /** column name */
  IsPaid = 'isPaid',
  /** column name */
  PaidOn = 'paidOn',
  /** column name */
  Percentage = 'percentage',
  /** column name */
  UserMetaId = 'userMetaID',
}

/** input type for updating data in table "custom_project_payout_distribution" */
export type Custom_Project_Payout_Distribution_Set_Input = {
  contributorTypeID?: InputMaybe<Scalars['uuid']>;
  customProjectDistributionID?: InputMaybe<Scalars['uuid']>;
  id?: InputMaybe<Scalars['uuid']>;
  isPaid?: InputMaybe<Scalars['Boolean']>;
  paidOn?: InputMaybe<Scalars['timestamptz']>;
  percentage?: InputMaybe<Scalars['float8']>;
  userMetaID?: InputMaybe<Scalars['uuid']>;
};

/** aggregate stddev on columns */
export type Custom_Project_Payout_Distribution_Stddev_Fields = {
  __typename?: 'custom_project_payout_distribution_stddev_fields';
  percentage?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "custom_project_payout_distribution" */
export type Custom_Project_Payout_Distribution_Stddev_Order_By = {
  percentage?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Custom_Project_Payout_Distribution_Stddev_Pop_Fields = {
  __typename?: 'custom_project_payout_distribution_stddev_pop_fields';
  percentage?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "custom_project_payout_distribution" */
export type Custom_Project_Payout_Distribution_Stddev_Pop_Order_By = {
  percentage?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Custom_Project_Payout_Distribution_Stddev_Samp_Fields = {
  __typename?: 'custom_project_payout_distribution_stddev_samp_fields';
  percentage?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "custom_project_payout_distribution" */
export type Custom_Project_Payout_Distribution_Stddev_Samp_Order_By = {
  percentage?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "custom_project_payout_distribution" */
export type Custom_Project_Payout_Distribution_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Custom_Project_Payout_Distribution_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Custom_Project_Payout_Distribution_Stream_Cursor_Value_Input = {
  contributorTypeID?: InputMaybe<Scalars['uuid']>;
  customProjectDistributionID?: InputMaybe<Scalars['uuid']>;
  id?: InputMaybe<Scalars['uuid']>;
  isPaid?: InputMaybe<Scalars['Boolean']>;
  paidOn?: InputMaybe<Scalars['timestamptz']>;
  percentage?: InputMaybe<Scalars['float8']>;
  userMetaID?: InputMaybe<Scalars['uuid']>;
};

/** aggregate sum on columns */
export type Custom_Project_Payout_Distribution_Sum_Fields = {
  __typename?: 'custom_project_payout_distribution_sum_fields';
  percentage?: Maybe<Scalars['float8']>;
};

/** order by sum() on columns of table "custom_project_payout_distribution" */
export type Custom_Project_Payout_Distribution_Sum_Order_By = {
  percentage?: InputMaybe<Order_By>;
};

/** update columns of table "custom_project_payout_distribution" */
export enum Custom_Project_Payout_Distribution_Update_Column {
  /** column name */
  ContributorTypeId = 'contributorTypeID',
  /** column name */
  CustomProjectDistributionId = 'customProjectDistributionID',
  /** column name */
  Id = 'id',
  /** column name */
  IsPaid = 'isPaid',
  /** column name */
  PaidOn = 'paidOn',
  /** column name */
  Percentage = 'percentage',
  /** column name */
  UserMetaId = 'userMetaID',
}

export type Custom_Project_Payout_Distribution_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Custom_Project_Payout_Distribution_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Custom_Project_Payout_Distribution_Set_Input>;
  where: Custom_Project_Payout_Distribution_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Custom_Project_Payout_Distribution_Var_Pop_Fields = {
  __typename?: 'custom_project_payout_distribution_var_pop_fields';
  percentage?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "custom_project_payout_distribution" */
export type Custom_Project_Payout_Distribution_Var_Pop_Order_By = {
  percentage?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Custom_Project_Payout_Distribution_Var_Samp_Fields = {
  __typename?: 'custom_project_payout_distribution_var_samp_fields';
  percentage?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "custom_project_payout_distribution" */
export type Custom_Project_Payout_Distribution_Var_Samp_Order_By = {
  percentage?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Custom_Project_Payout_Distribution_Variance_Fields = {
  __typename?: 'custom_project_payout_distribution_variance_fields';
  percentage?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "custom_project_payout_distribution" */
export type Custom_Project_Payout_Distribution_Variance_Order_By = {
  percentage?: InputMaybe<Order_By>;
};

/** columns and relationships of "customer" */
export type Customer = {
  __typename?: 'customer';
  additionalEmails?: Maybe<Scalars['String']>;
  billingCurrency?: Maybe<Scalars['String']>;
  billingEmail?: Maybe<Scalars['String']>;
  billingFrequencyID?: Maybe<Scalars['uuid']>;
  billingPrimaryContact?: Maybe<Scalars['String']>;
  /** An object relationship */
  billing_frequency?: Maybe<Billing_Frequency>;
  /** An object relationship */
  company: Company;
  companyID: Scalars['uuid'];
  /** An array relationship */
  customer_closing_parties: Array<Customer_Closing_Party>;
  /** An aggregate relationship */
  customer_closing_parties_aggregate: Customer_Closing_Party_Aggregate;
  /** An array relationship */
  customer_originating_parties: Array<Customer_Originating_Party>;
  /** An aggregate relationship */
  customer_originating_parties_aggregate: Customer_Originating_Party_Aggregate;
  /** An array relationship */
  customer_referrers: Array<Customer_Referrer>;
  /** An aggregate relationship */
  customer_referrers_aggregate: Customer_Referrer_Aggregate;
  id: Scalars['uuid'];
  /** An array relationship */
  invoices: Array<Invoice>;
  /** An aggregate relationship */
  invoices_aggregate: Invoice_Aggregate;
  isLatePayments: Scalars['Boolean'];
  latePaymentFees?: Maybe<Scalars['numeric']>;
  latePaymentNotificationThreshold?: Maybe<Scalars['Int']>;
  latePaymentPeriodID?: Maybe<Scalars['uuid']>;
  latePaymentPeriodThreshold?: Maybe<Scalars['Int']>;
  /** An object relationship */
  late_payment_period?: Maybe<Late_Payment_Period>;
  legacyCustomerID?: Maybe<Scalars['String']>;
  qbID?: Maybe<Scalars['String']>;
  /** An array relationship */
  user_completed_customer_sales: Array<User_Completed_Customer_Sale>;
  /** An aggregate relationship */
  user_completed_customer_sales_aggregate: User_Completed_Customer_Sale_Aggregate;
};

/** columns and relationships of "customer" */
export type CustomerCustomer_Closing_PartiesArgs = {
  distinct_on?: InputMaybe<Array<Customer_Closing_Party_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Customer_Closing_Party_Order_By>>;
  where?: InputMaybe<Customer_Closing_Party_Bool_Exp>;
};

/** columns and relationships of "customer" */
export type CustomerCustomer_Closing_Parties_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Customer_Closing_Party_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Customer_Closing_Party_Order_By>>;
  where?: InputMaybe<Customer_Closing_Party_Bool_Exp>;
};

/** columns and relationships of "customer" */
export type CustomerCustomer_Originating_PartiesArgs = {
  distinct_on?: InputMaybe<Array<Customer_Originating_Party_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Customer_Originating_Party_Order_By>>;
  where?: InputMaybe<Customer_Originating_Party_Bool_Exp>;
};

/** columns and relationships of "customer" */
export type CustomerCustomer_Originating_Parties_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Customer_Originating_Party_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Customer_Originating_Party_Order_By>>;
  where?: InputMaybe<Customer_Originating_Party_Bool_Exp>;
};

/** columns and relationships of "customer" */
export type CustomerCustomer_ReferrersArgs = {
  distinct_on?: InputMaybe<Array<Customer_Referrer_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Customer_Referrer_Order_By>>;
  where?: InputMaybe<Customer_Referrer_Bool_Exp>;
};

/** columns and relationships of "customer" */
export type CustomerCustomer_Referrers_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Customer_Referrer_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Customer_Referrer_Order_By>>;
  where?: InputMaybe<Customer_Referrer_Bool_Exp>;
};

/** columns and relationships of "customer" */
export type CustomerInvoicesArgs = {
  distinct_on?: InputMaybe<Array<Invoice_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Invoice_Order_By>>;
  where?: InputMaybe<Invoice_Bool_Exp>;
};

/** columns and relationships of "customer" */
export type CustomerInvoices_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Invoice_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Invoice_Order_By>>;
  where?: InputMaybe<Invoice_Bool_Exp>;
};

/** columns and relationships of "customer" */
export type CustomerUser_Completed_Customer_SalesArgs = {
  distinct_on?: InputMaybe<Array<User_Completed_Customer_Sale_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Completed_Customer_Sale_Order_By>>;
  where?: InputMaybe<User_Completed_Customer_Sale_Bool_Exp>;
};

/** columns and relationships of "customer" */
export type CustomerUser_Completed_Customer_Sales_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Completed_Customer_Sale_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Completed_Customer_Sale_Order_By>>;
  where?: InputMaybe<User_Completed_Customer_Sale_Bool_Exp>;
};

/** aggregated selection of "customer" */
export type Customer_Aggregate = {
  __typename?: 'customer_aggregate';
  aggregate?: Maybe<Customer_Aggregate_Fields>;
  nodes: Array<Customer>;
};

/** aggregate fields of "customer" */
export type Customer_Aggregate_Fields = {
  __typename?: 'customer_aggregate_fields';
  avg?: Maybe<Customer_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Customer_Max_Fields>;
  min?: Maybe<Customer_Min_Fields>;
  stddev?: Maybe<Customer_Stddev_Fields>;
  stddev_pop?: Maybe<Customer_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Customer_Stddev_Samp_Fields>;
  sum?: Maybe<Customer_Sum_Fields>;
  var_pop?: Maybe<Customer_Var_Pop_Fields>;
  var_samp?: Maybe<Customer_Var_Samp_Fields>;
  variance?: Maybe<Customer_Variance_Fields>;
};

/** aggregate fields of "customer" */
export type Customer_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Customer_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "customer" */
export type Customer_Aggregate_Order_By = {
  avg?: InputMaybe<Customer_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Customer_Max_Order_By>;
  min?: InputMaybe<Customer_Min_Order_By>;
  stddev?: InputMaybe<Customer_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Customer_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Customer_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Customer_Sum_Order_By>;
  var_pop?: InputMaybe<Customer_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Customer_Var_Samp_Order_By>;
  variance?: InputMaybe<Customer_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "customer" */
export type Customer_Arr_Rel_Insert_Input = {
  data: Array<Customer_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Customer_On_Conflict>;
};

/** aggregate avg on columns */
export type Customer_Avg_Fields = {
  __typename?: 'customer_avg_fields';
  latePaymentFees?: Maybe<Scalars['Float']>;
  latePaymentNotificationThreshold?: Maybe<Scalars['Float']>;
  latePaymentPeriodThreshold?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "customer" */
export type Customer_Avg_Order_By = {
  latePaymentFees?: InputMaybe<Order_By>;
  latePaymentNotificationThreshold?: InputMaybe<Order_By>;
  latePaymentPeriodThreshold?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "customer". All fields are combined with a logical 'AND'. */
export type Customer_Bool_Exp = {
  _and?: InputMaybe<Array<Customer_Bool_Exp>>;
  _not?: InputMaybe<Customer_Bool_Exp>;
  _or?: InputMaybe<Array<Customer_Bool_Exp>>;
  additionalEmails?: InputMaybe<String_Comparison_Exp>;
  billingCurrency?: InputMaybe<String_Comparison_Exp>;
  billingEmail?: InputMaybe<String_Comparison_Exp>;
  billingFrequencyID?: InputMaybe<Uuid_Comparison_Exp>;
  billingPrimaryContact?: InputMaybe<String_Comparison_Exp>;
  billing_frequency?: InputMaybe<Billing_Frequency_Bool_Exp>;
  company?: InputMaybe<Company_Bool_Exp>;
  companyID?: InputMaybe<Uuid_Comparison_Exp>;
  customer_closing_parties?: InputMaybe<Customer_Closing_Party_Bool_Exp>;
  customer_originating_parties?: InputMaybe<Customer_Originating_Party_Bool_Exp>;
  customer_referrers?: InputMaybe<Customer_Referrer_Bool_Exp>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  invoices?: InputMaybe<Invoice_Bool_Exp>;
  isLatePayments?: InputMaybe<Boolean_Comparison_Exp>;
  latePaymentFees?: InputMaybe<Numeric_Comparison_Exp>;
  latePaymentNotificationThreshold?: InputMaybe<Int_Comparison_Exp>;
  latePaymentPeriodID?: InputMaybe<Uuid_Comparison_Exp>;
  latePaymentPeriodThreshold?: InputMaybe<Int_Comparison_Exp>;
  late_payment_period?: InputMaybe<Late_Payment_Period_Bool_Exp>;
  legacyCustomerID?: InputMaybe<String_Comparison_Exp>;
  qbID?: InputMaybe<String_Comparison_Exp>;
  user_completed_customer_sales?: InputMaybe<User_Completed_Customer_Sale_Bool_Exp>;
};

/** columns and relationships of "customer_closing_party" */
export type Customer_Closing_Party = {
  __typename?: 'customer_closing_party';
  /** An object relationship */
  customer: Customer;
  customerID: Scalars['uuid'];
  percentage: Scalars['float8'];
  userMetaID: Scalars['uuid'];
  /** An object relationship */
  user_metum: User_Meta;
};

/** aggregated selection of "customer_closing_party" */
export type Customer_Closing_Party_Aggregate = {
  __typename?: 'customer_closing_party_aggregate';
  aggregate?: Maybe<Customer_Closing_Party_Aggregate_Fields>;
  nodes: Array<Customer_Closing_Party>;
};

/** aggregate fields of "customer_closing_party" */
export type Customer_Closing_Party_Aggregate_Fields = {
  __typename?: 'customer_closing_party_aggregate_fields';
  avg?: Maybe<Customer_Closing_Party_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Customer_Closing_Party_Max_Fields>;
  min?: Maybe<Customer_Closing_Party_Min_Fields>;
  stddev?: Maybe<Customer_Closing_Party_Stddev_Fields>;
  stddev_pop?: Maybe<Customer_Closing_Party_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Customer_Closing_Party_Stddev_Samp_Fields>;
  sum?: Maybe<Customer_Closing_Party_Sum_Fields>;
  var_pop?: Maybe<Customer_Closing_Party_Var_Pop_Fields>;
  var_samp?: Maybe<Customer_Closing_Party_Var_Samp_Fields>;
  variance?: Maybe<Customer_Closing_Party_Variance_Fields>;
};

/** aggregate fields of "customer_closing_party" */
export type Customer_Closing_Party_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Customer_Closing_Party_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "customer_closing_party" */
export type Customer_Closing_Party_Aggregate_Order_By = {
  avg?: InputMaybe<Customer_Closing_Party_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Customer_Closing_Party_Max_Order_By>;
  min?: InputMaybe<Customer_Closing_Party_Min_Order_By>;
  stddev?: InputMaybe<Customer_Closing_Party_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Customer_Closing_Party_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Customer_Closing_Party_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Customer_Closing_Party_Sum_Order_By>;
  var_pop?: InputMaybe<Customer_Closing_Party_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Customer_Closing_Party_Var_Samp_Order_By>;
  variance?: InputMaybe<Customer_Closing_Party_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "customer_closing_party" */
export type Customer_Closing_Party_Arr_Rel_Insert_Input = {
  data: Array<Customer_Closing_Party_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Customer_Closing_Party_On_Conflict>;
};

/** aggregate avg on columns */
export type Customer_Closing_Party_Avg_Fields = {
  __typename?: 'customer_closing_party_avg_fields';
  percentage?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "customer_closing_party" */
export type Customer_Closing_Party_Avg_Order_By = {
  percentage?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "customer_closing_party". All fields are combined with a logical 'AND'. */
export type Customer_Closing_Party_Bool_Exp = {
  _and?: InputMaybe<Array<Customer_Closing_Party_Bool_Exp>>;
  _not?: InputMaybe<Customer_Closing_Party_Bool_Exp>;
  _or?: InputMaybe<Array<Customer_Closing_Party_Bool_Exp>>;
  customer?: InputMaybe<Customer_Bool_Exp>;
  customerID?: InputMaybe<Uuid_Comparison_Exp>;
  percentage?: InputMaybe<Float8_Comparison_Exp>;
  userMetaID?: InputMaybe<Uuid_Comparison_Exp>;
  user_metum?: InputMaybe<User_Meta_Bool_Exp>;
};

/** unique or primary key constraints on table "customer_closing_party" */
export enum Customer_Closing_Party_Constraint {
  /** unique or primary key constraint on columns "userMetaID", "customerID" */
  CustomerClosingPartyPkey = 'customer_closing_party_pkey',
}

/** input type for incrementing numeric columns in table "customer_closing_party" */
export type Customer_Closing_Party_Inc_Input = {
  percentage?: InputMaybe<Scalars['float8']>;
};

/** input type for inserting data into table "customer_closing_party" */
export type Customer_Closing_Party_Insert_Input = {
  customer?: InputMaybe<Customer_Obj_Rel_Insert_Input>;
  customerID?: InputMaybe<Scalars['uuid']>;
  percentage?: InputMaybe<Scalars['float8']>;
  userMetaID?: InputMaybe<Scalars['uuid']>;
  user_metum?: InputMaybe<User_Meta_Obj_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type Customer_Closing_Party_Max_Fields = {
  __typename?: 'customer_closing_party_max_fields';
  customerID?: Maybe<Scalars['uuid']>;
  percentage?: Maybe<Scalars['float8']>;
  userMetaID?: Maybe<Scalars['uuid']>;
};

/** order by max() on columns of table "customer_closing_party" */
export type Customer_Closing_Party_Max_Order_By = {
  customerID?: InputMaybe<Order_By>;
  percentage?: InputMaybe<Order_By>;
  userMetaID?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Customer_Closing_Party_Min_Fields = {
  __typename?: 'customer_closing_party_min_fields';
  customerID?: Maybe<Scalars['uuid']>;
  percentage?: Maybe<Scalars['float8']>;
  userMetaID?: Maybe<Scalars['uuid']>;
};

/** order by min() on columns of table "customer_closing_party" */
export type Customer_Closing_Party_Min_Order_By = {
  customerID?: InputMaybe<Order_By>;
  percentage?: InputMaybe<Order_By>;
  userMetaID?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "customer_closing_party" */
export type Customer_Closing_Party_Mutation_Response = {
  __typename?: 'customer_closing_party_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Customer_Closing_Party>;
};

/** on_conflict condition type for table "customer_closing_party" */
export type Customer_Closing_Party_On_Conflict = {
  constraint: Customer_Closing_Party_Constraint;
  update_columns?: Array<Customer_Closing_Party_Update_Column>;
  where?: InputMaybe<Customer_Closing_Party_Bool_Exp>;
};

/** Ordering options when selecting data from "customer_closing_party". */
export type Customer_Closing_Party_Order_By = {
  customer?: InputMaybe<Customer_Order_By>;
  customerID?: InputMaybe<Order_By>;
  percentage?: InputMaybe<Order_By>;
  userMetaID?: InputMaybe<Order_By>;
  user_metum?: InputMaybe<User_Meta_Order_By>;
};

/** primary key columns input for table: customer_closing_party */
export type Customer_Closing_Party_Pk_Columns_Input = {
  customerID: Scalars['uuid'];
  userMetaID: Scalars['uuid'];
};

/** select columns of table "customer_closing_party" */
export enum Customer_Closing_Party_Select_Column {
  /** column name */
  CustomerId = 'customerID',
  /** column name */
  Percentage = 'percentage',
  /** column name */
  UserMetaId = 'userMetaID',
}

/** input type for updating data in table "customer_closing_party" */
export type Customer_Closing_Party_Set_Input = {
  customerID?: InputMaybe<Scalars['uuid']>;
  percentage?: InputMaybe<Scalars['float8']>;
  userMetaID?: InputMaybe<Scalars['uuid']>;
};

/** aggregate stddev on columns */
export type Customer_Closing_Party_Stddev_Fields = {
  __typename?: 'customer_closing_party_stddev_fields';
  percentage?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "customer_closing_party" */
export type Customer_Closing_Party_Stddev_Order_By = {
  percentage?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Customer_Closing_Party_Stddev_Pop_Fields = {
  __typename?: 'customer_closing_party_stddev_pop_fields';
  percentage?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "customer_closing_party" */
export type Customer_Closing_Party_Stddev_Pop_Order_By = {
  percentage?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Customer_Closing_Party_Stddev_Samp_Fields = {
  __typename?: 'customer_closing_party_stddev_samp_fields';
  percentage?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "customer_closing_party" */
export type Customer_Closing_Party_Stddev_Samp_Order_By = {
  percentage?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "customer_closing_party" */
export type Customer_Closing_Party_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Customer_Closing_Party_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Customer_Closing_Party_Stream_Cursor_Value_Input = {
  customerID?: InputMaybe<Scalars['uuid']>;
  percentage?: InputMaybe<Scalars['float8']>;
  userMetaID?: InputMaybe<Scalars['uuid']>;
};

/** aggregate sum on columns */
export type Customer_Closing_Party_Sum_Fields = {
  __typename?: 'customer_closing_party_sum_fields';
  percentage?: Maybe<Scalars['float8']>;
};

/** order by sum() on columns of table "customer_closing_party" */
export type Customer_Closing_Party_Sum_Order_By = {
  percentage?: InputMaybe<Order_By>;
};

/** update columns of table "customer_closing_party" */
export enum Customer_Closing_Party_Update_Column {
  /** column name */
  CustomerId = 'customerID',
  /** column name */
  Percentage = 'percentage',
  /** column name */
  UserMetaId = 'userMetaID',
}

export type Customer_Closing_Party_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Customer_Closing_Party_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Customer_Closing_Party_Set_Input>;
  where: Customer_Closing_Party_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Customer_Closing_Party_Var_Pop_Fields = {
  __typename?: 'customer_closing_party_var_pop_fields';
  percentage?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "customer_closing_party" */
export type Customer_Closing_Party_Var_Pop_Order_By = {
  percentage?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Customer_Closing_Party_Var_Samp_Fields = {
  __typename?: 'customer_closing_party_var_samp_fields';
  percentage?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "customer_closing_party" */
export type Customer_Closing_Party_Var_Samp_Order_By = {
  percentage?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Customer_Closing_Party_Variance_Fields = {
  __typename?: 'customer_closing_party_variance_fields';
  percentage?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "customer_closing_party" */
export type Customer_Closing_Party_Variance_Order_By = {
  percentage?: InputMaybe<Order_By>;
};

/** unique or primary key constraints on table "customer" */
export enum Customer_Constraint {
  /** unique or primary key constraint on columns "companyID" */
  CustomerCompanyIdKey = 'customer_companyID_key',
  /** unique or primary key constraint on columns "legacyCustomerID" */
  CustomerLegacyCustomerIdKey = 'customer_legacyCustomerID_key',
  /** unique or primary key constraint on columns "id" */
  CustomerPkey1 = 'customer_pkey1',
  /** unique or primary key constraint on columns "qbID" */
  CustomerQbIdKey = 'customer_qbID_key',
}

/** input type for incrementing numeric columns in table "customer" */
export type Customer_Inc_Input = {
  latePaymentFees?: InputMaybe<Scalars['numeric']>;
  latePaymentNotificationThreshold?: InputMaybe<Scalars['Int']>;
  latePaymentPeriodThreshold?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "customer" */
export type Customer_Insert_Input = {
  additionalEmails?: InputMaybe<Scalars['String']>;
  billingCurrency?: InputMaybe<Scalars['String']>;
  billingEmail?: InputMaybe<Scalars['String']>;
  billingFrequencyID?: InputMaybe<Scalars['uuid']>;
  billingPrimaryContact?: InputMaybe<Scalars['String']>;
  billing_frequency?: InputMaybe<Billing_Frequency_Obj_Rel_Insert_Input>;
  company?: InputMaybe<Company_Obj_Rel_Insert_Input>;
  companyID?: InputMaybe<Scalars['uuid']>;
  customer_closing_parties?: InputMaybe<Customer_Closing_Party_Arr_Rel_Insert_Input>;
  customer_originating_parties?: InputMaybe<Customer_Originating_Party_Arr_Rel_Insert_Input>;
  customer_referrers?: InputMaybe<Customer_Referrer_Arr_Rel_Insert_Input>;
  id?: InputMaybe<Scalars['uuid']>;
  invoices?: InputMaybe<Invoice_Arr_Rel_Insert_Input>;
  isLatePayments?: InputMaybe<Scalars['Boolean']>;
  latePaymentFees?: InputMaybe<Scalars['numeric']>;
  latePaymentNotificationThreshold?: InputMaybe<Scalars['Int']>;
  latePaymentPeriodID?: InputMaybe<Scalars['uuid']>;
  latePaymentPeriodThreshold?: InputMaybe<Scalars['Int']>;
  late_payment_period?: InputMaybe<Late_Payment_Period_Obj_Rel_Insert_Input>;
  legacyCustomerID?: InputMaybe<Scalars['String']>;
  qbID?: InputMaybe<Scalars['String']>;
  user_completed_customer_sales?: InputMaybe<User_Completed_Customer_Sale_Arr_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type Customer_Max_Fields = {
  __typename?: 'customer_max_fields';
  additionalEmails?: Maybe<Scalars['String']>;
  billingCurrency?: Maybe<Scalars['String']>;
  billingEmail?: Maybe<Scalars['String']>;
  billingFrequencyID?: Maybe<Scalars['uuid']>;
  billingPrimaryContact?: Maybe<Scalars['String']>;
  companyID?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  latePaymentFees?: Maybe<Scalars['numeric']>;
  latePaymentNotificationThreshold?: Maybe<Scalars['Int']>;
  latePaymentPeriodID?: Maybe<Scalars['uuid']>;
  latePaymentPeriodThreshold?: Maybe<Scalars['Int']>;
  legacyCustomerID?: Maybe<Scalars['String']>;
  qbID?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "customer" */
export type Customer_Max_Order_By = {
  additionalEmails?: InputMaybe<Order_By>;
  billingCurrency?: InputMaybe<Order_By>;
  billingEmail?: InputMaybe<Order_By>;
  billingFrequencyID?: InputMaybe<Order_By>;
  billingPrimaryContact?: InputMaybe<Order_By>;
  companyID?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  latePaymentFees?: InputMaybe<Order_By>;
  latePaymentNotificationThreshold?: InputMaybe<Order_By>;
  latePaymentPeriodID?: InputMaybe<Order_By>;
  latePaymentPeriodThreshold?: InputMaybe<Order_By>;
  legacyCustomerID?: InputMaybe<Order_By>;
  qbID?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Customer_Min_Fields = {
  __typename?: 'customer_min_fields';
  additionalEmails?: Maybe<Scalars['String']>;
  billingCurrency?: Maybe<Scalars['String']>;
  billingEmail?: Maybe<Scalars['String']>;
  billingFrequencyID?: Maybe<Scalars['uuid']>;
  billingPrimaryContact?: Maybe<Scalars['String']>;
  companyID?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  latePaymentFees?: Maybe<Scalars['numeric']>;
  latePaymentNotificationThreshold?: Maybe<Scalars['Int']>;
  latePaymentPeriodID?: Maybe<Scalars['uuid']>;
  latePaymentPeriodThreshold?: Maybe<Scalars['Int']>;
  legacyCustomerID?: Maybe<Scalars['String']>;
  qbID?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "customer" */
export type Customer_Min_Order_By = {
  additionalEmails?: InputMaybe<Order_By>;
  billingCurrency?: InputMaybe<Order_By>;
  billingEmail?: InputMaybe<Order_By>;
  billingFrequencyID?: InputMaybe<Order_By>;
  billingPrimaryContact?: InputMaybe<Order_By>;
  companyID?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  latePaymentFees?: InputMaybe<Order_By>;
  latePaymentNotificationThreshold?: InputMaybe<Order_By>;
  latePaymentPeriodID?: InputMaybe<Order_By>;
  latePaymentPeriodThreshold?: InputMaybe<Order_By>;
  legacyCustomerID?: InputMaybe<Order_By>;
  qbID?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "customer" */
export type Customer_Mutation_Response = {
  __typename?: 'customer_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Customer>;
};

/** input type for inserting object relation for remote table "customer" */
export type Customer_Obj_Rel_Insert_Input = {
  data: Customer_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Customer_On_Conflict>;
};

/** on_conflict condition type for table "customer" */
export type Customer_On_Conflict = {
  constraint: Customer_Constraint;
  update_columns?: Array<Customer_Update_Column>;
  where?: InputMaybe<Customer_Bool_Exp>;
};

/** Ordering options when selecting data from "customer". */
export type Customer_Order_By = {
  additionalEmails?: InputMaybe<Order_By>;
  billingCurrency?: InputMaybe<Order_By>;
  billingEmail?: InputMaybe<Order_By>;
  billingFrequencyID?: InputMaybe<Order_By>;
  billingPrimaryContact?: InputMaybe<Order_By>;
  billing_frequency?: InputMaybe<Billing_Frequency_Order_By>;
  company?: InputMaybe<Company_Order_By>;
  companyID?: InputMaybe<Order_By>;
  customer_closing_parties_aggregate?: InputMaybe<Customer_Closing_Party_Aggregate_Order_By>;
  customer_originating_parties_aggregate?: InputMaybe<Customer_Originating_Party_Aggregate_Order_By>;
  customer_referrers_aggregate?: InputMaybe<Customer_Referrer_Aggregate_Order_By>;
  id?: InputMaybe<Order_By>;
  invoices_aggregate?: InputMaybe<Invoice_Aggregate_Order_By>;
  isLatePayments?: InputMaybe<Order_By>;
  latePaymentFees?: InputMaybe<Order_By>;
  latePaymentNotificationThreshold?: InputMaybe<Order_By>;
  latePaymentPeriodID?: InputMaybe<Order_By>;
  latePaymentPeriodThreshold?: InputMaybe<Order_By>;
  late_payment_period?: InputMaybe<Late_Payment_Period_Order_By>;
  legacyCustomerID?: InputMaybe<Order_By>;
  qbID?: InputMaybe<Order_By>;
  user_completed_customer_sales_aggregate?: InputMaybe<User_Completed_Customer_Sale_Aggregate_Order_By>;
};

/** columns and relationships of "customer_originating_party" */
export type Customer_Originating_Party = {
  __typename?: 'customer_originating_party';
  /** An object relationship */
  customer: Customer;
  customerID: Scalars['uuid'];
  percentage?: Maybe<Scalars['float8']>;
  userMetaID: Scalars['uuid'];
  /** An object relationship */
  user_metum: User_Meta;
};

/** aggregated selection of "customer_originating_party" */
export type Customer_Originating_Party_Aggregate = {
  __typename?: 'customer_originating_party_aggregate';
  aggregate?: Maybe<Customer_Originating_Party_Aggregate_Fields>;
  nodes: Array<Customer_Originating_Party>;
};

/** aggregate fields of "customer_originating_party" */
export type Customer_Originating_Party_Aggregate_Fields = {
  __typename?: 'customer_originating_party_aggregate_fields';
  avg?: Maybe<Customer_Originating_Party_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Customer_Originating_Party_Max_Fields>;
  min?: Maybe<Customer_Originating_Party_Min_Fields>;
  stddev?: Maybe<Customer_Originating_Party_Stddev_Fields>;
  stddev_pop?: Maybe<Customer_Originating_Party_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Customer_Originating_Party_Stddev_Samp_Fields>;
  sum?: Maybe<Customer_Originating_Party_Sum_Fields>;
  var_pop?: Maybe<Customer_Originating_Party_Var_Pop_Fields>;
  var_samp?: Maybe<Customer_Originating_Party_Var_Samp_Fields>;
  variance?: Maybe<Customer_Originating_Party_Variance_Fields>;
};

/** aggregate fields of "customer_originating_party" */
export type Customer_Originating_Party_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Customer_Originating_Party_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "customer_originating_party" */
export type Customer_Originating_Party_Aggregate_Order_By = {
  avg?: InputMaybe<Customer_Originating_Party_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Customer_Originating_Party_Max_Order_By>;
  min?: InputMaybe<Customer_Originating_Party_Min_Order_By>;
  stddev?: InputMaybe<Customer_Originating_Party_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Customer_Originating_Party_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Customer_Originating_Party_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Customer_Originating_Party_Sum_Order_By>;
  var_pop?: InputMaybe<Customer_Originating_Party_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Customer_Originating_Party_Var_Samp_Order_By>;
  variance?: InputMaybe<Customer_Originating_Party_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "customer_originating_party" */
export type Customer_Originating_Party_Arr_Rel_Insert_Input = {
  data: Array<Customer_Originating_Party_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Customer_Originating_Party_On_Conflict>;
};

/** aggregate avg on columns */
export type Customer_Originating_Party_Avg_Fields = {
  __typename?: 'customer_originating_party_avg_fields';
  percentage?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "customer_originating_party" */
export type Customer_Originating_Party_Avg_Order_By = {
  percentage?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "customer_originating_party". All fields are combined with a logical 'AND'. */
export type Customer_Originating_Party_Bool_Exp = {
  _and?: InputMaybe<Array<Customer_Originating_Party_Bool_Exp>>;
  _not?: InputMaybe<Customer_Originating_Party_Bool_Exp>;
  _or?: InputMaybe<Array<Customer_Originating_Party_Bool_Exp>>;
  customer?: InputMaybe<Customer_Bool_Exp>;
  customerID?: InputMaybe<Uuid_Comparison_Exp>;
  percentage?: InputMaybe<Float8_Comparison_Exp>;
  userMetaID?: InputMaybe<Uuid_Comparison_Exp>;
  user_metum?: InputMaybe<User_Meta_Bool_Exp>;
};

/** unique or primary key constraints on table "customer_originating_party" */
export enum Customer_Originating_Party_Constraint {
  /** unique or primary key constraint on columns "userMetaID", "customerID" */
  CustomerOriginatingPartyPkey = 'customer_originating_party_pkey',
  /** unique or primary key constraint on columns "userMetaID", "customerID" */
  CustomerOriginatingPartyUserMetaIdCustomerIdKey = 'customer_originating_party_userMetaID_customerID_key',
}

/** input type for incrementing numeric columns in table "customer_originating_party" */
export type Customer_Originating_Party_Inc_Input = {
  percentage?: InputMaybe<Scalars['float8']>;
};

/** input type for inserting data into table "customer_originating_party" */
export type Customer_Originating_Party_Insert_Input = {
  customer?: InputMaybe<Customer_Obj_Rel_Insert_Input>;
  customerID?: InputMaybe<Scalars['uuid']>;
  percentage?: InputMaybe<Scalars['float8']>;
  userMetaID?: InputMaybe<Scalars['uuid']>;
  user_metum?: InputMaybe<User_Meta_Obj_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type Customer_Originating_Party_Max_Fields = {
  __typename?: 'customer_originating_party_max_fields';
  customerID?: Maybe<Scalars['uuid']>;
  percentage?: Maybe<Scalars['float8']>;
  userMetaID?: Maybe<Scalars['uuid']>;
};

/** order by max() on columns of table "customer_originating_party" */
export type Customer_Originating_Party_Max_Order_By = {
  customerID?: InputMaybe<Order_By>;
  percentage?: InputMaybe<Order_By>;
  userMetaID?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Customer_Originating_Party_Min_Fields = {
  __typename?: 'customer_originating_party_min_fields';
  customerID?: Maybe<Scalars['uuid']>;
  percentage?: Maybe<Scalars['float8']>;
  userMetaID?: Maybe<Scalars['uuid']>;
};

/** order by min() on columns of table "customer_originating_party" */
export type Customer_Originating_Party_Min_Order_By = {
  customerID?: InputMaybe<Order_By>;
  percentage?: InputMaybe<Order_By>;
  userMetaID?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "customer_originating_party" */
export type Customer_Originating_Party_Mutation_Response = {
  __typename?: 'customer_originating_party_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Customer_Originating_Party>;
};

/** on_conflict condition type for table "customer_originating_party" */
export type Customer_Originating_Party_On_Conflict = {
  constraint: Customer_Originating_Party_Constraint;
  update_columns?: Array<Customer_Originating_Party_Update_Column>;
  where?: InputMaybe<Customer_Originating_Party_Bool_Exp>;
};

/** Ordering options when selecting data from "customer_originating_party". */
export type Customer_Originating_Party_Order_By = {
  customer?: InputMaybe<Customer_Order_By>;
  customerID?: InputMaybe<Order_By>;
  percentage?: InputMaybe<Order_By>;
  userMetaID?: InputMaybe<Order_By>;
  user_metum?: InputMaybe<User_Meta_Order_By>;
};

/** primary key columns input for table: customer_originating_party */
export type Customer_Originating_Party_Pk_Columns_Input = {
  customerID: Scalars['uuid'];
  userMetaID: Scalars['uuid'];
};

/** select columns of table "customer_originating_party" */
export enum Customer_Originating_Party_Select_Column {
  /** column name */
  CustomerId = 'customerID',
  /** column name */
  Percentage = 'percentage',
  /** column name */
  UserMetaId = 'userMetaID',
}

/** input type for updating data in table "customer_originating_party" */
export type Customer_Originating_Party_Set_Input = {
  customerID?: InputMaybe<Scalars['uuid']>;
  percentage?: InputMaybe<Scalars['float8']>;
  userMetaID?: InputMaybe<Scalars['uuid']>;
};

/** aggregate stddev on columns */
export type Customer_Originating_Party_Stddev_Fields = {
  __typename?: 'customer_originating_party_stddev_fields';
  percentage?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "customer_originating_party" */
export type Customer_Originating_Party_Stddev_Order_By = {
  percentage?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Customer_Originating_Party_Stddev_Pop_Fields = {
  __typename?: 'customer_originating_party_stddev_pop_fields';
  percentage?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "customer_originating_party" */
export type Customer_Originating_Party_Stddev_Pop_Order_By = {
  percentage?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Customer_Originating_Party_Stddev_Samp_Fields = {
  __typename?: 'customer_originating_party_stddev_samp_fields';
  percentage?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "customer_originating_party" */
export type Customer_Originating_Party_Stddev_Samp_Order_By = {
  percentage?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "customer_originating_party" */
export type Customer_Originating_Party_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Customer_Originating_Party_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Customer_Originating_Party_Stream_Cursor_Value_Input = {
  customerID?: InputMaybe<Scalars['uuid']>;
  percentage?: InputMaybe<Scalars['float8']>;
  userMetaID?: InputMaybe<Scalars['uuid']>;
};

/** aggregate sum on columns */
export type Customer_Originating_Party_Sum_Fields = {
  __typename?: 'customer_originating_party_sum_fields';
  percentage?: Maybe<Scalars['float8']>;
};

/** order by sum() on columns of table "customer_originating_party" */
export type Customer_Originating_Party_Sum_Order_By = {
  percentage?: InputMaybe<Order_By>;
};

/** update columns of table "customer_originating_party" */
export enum Customer_Originating_Party_Update_Column {
  /** column name */
  CustomerId = 'customerID',
  /** column name */
  Percentage = 'percentage',
  /** column name */
  UserMetaId = 'userMetaID',
}

export type Customer_Originating_Party_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Customer_Originating_Party_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Customer_Originating_Party_Set_Input>;
  where: Customer_Originating_Party_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Customer_Originating_Party_Var_Pop_Fields = {
  __typename?: 'customer_originating_party_var_pop_fields';
  percentage?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "customer_originating_party" */
export type Customer_Originating_Party_Var_Pop_Order_By = {
  percentage?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Customer_Originating_Party_Var_Samp_Fields = {
  __typename?: 'customer_originating_party_var_samp_fields';
  percentage?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "customer_originating_party" */
export type Customer_Originating_Party_Var_Samp_Order_By = {
  percentage?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Customer_Originating_Party_Variance_Fields = {
  __typename?: 'customer_originating_party_variance_fields';
  percentage?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "customer_originating_party" */
export type Customer_Originating_Party_Variance_Order_By = {
  percentage?: InputMaybe<Order_By>;
};

/** primary key columns input for table: customer */
export type Customer_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** columns and relationships of "customer_referrer" */
export type Customer_Referrer = {
  __typename?: 'customer_referrer';
  /** An object relationship */
  customer: Customer;
  customerID: Scalars['uuid'];
  id: Scalars['uuid'];
  percentage: Scalars['Int'];
  /** An object relationship */
  public_user_meta?: Maybe<User_Meta>;
  userMetaID: Scalars['uuid'];
  /** An object relationship */
  user_meta: User_Meta;
};

/** aggregated selection of "customer_referrer" */
export type Customer_Referrer_Aggregate = {
  __typename?: 'customer_referrer_aggregate';
  aggregate?: Maybe<Customer_Referrer_Aggregate_Fields>;
  nodes: Array<Customer_Referrer>;
};

/** aggregate fields of "customer_referrer" */
export type Customer_Referrer_Aggregate_Fields = {
  __typename?: 'customer_referrer_aggregate_fields';
  avg?: Maybe<Customer_Referrer_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Customer_Referrer_Max_Fields>;
  min?: Maybe<Customer_Referrer_Min_Fields>;
  stddev?: Maybe<Customer_Referrer_Stddev_Fields>;
  stddev_pop?: Maybe<Customer_Referrer_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Customer_Referrer_Stddev_Samp_Fields>;
  sum?: Maybe<Customer_Referrer_Sum_Fields>;
  var_pop?: Maybe<Customer_Referrer_Var_Pop_Fields>;
  var_samp?: Maybe<Customer_Referrer_Var_Samp_Fields>;
  variance?: Maybe<Customer_Referrer_Variance_Fields>;
};

/** aggregate fields of "customer_referrer" */
export type Customer_Referrer_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Customer_Referrer_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "customer_referrer" */
export type Customer_Referrer_Aggregate_Order_By = {
  avg?: InputMaybe<Customer_Referrer_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Customer_Referrer_Max_Order_By>;
  min?: InputMaybe<Customer_Referrer_Min_Order_By>;
  stddev?: InputMaybe<Customer_Referrer_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Customer_Referrer_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Customer_Referrer_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Customer_Referrer_Sum_Order_By>;
  var_pop?: InputMaybe<Customer_Referrer_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Customer_Referrer_Var_Samp_Order_By>;
  variance?: InputMaybe<Customer_Referrer_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "customer_referrer" */
export type Customer_Referrer_Arr_Rel_Insert_Input = {
  data: Array<Customer_Referrer_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Customer_Referrer_On_Conflict>;
};

/** aggregate avg on columns */
export type Customer_Referrer_Avg_Fields = {
  __typename?: 'customer_referrer_avg_fields';
  percentage?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "customer_referrer" */
export type Customer_Referrer_Avg_Order_By = {
  percentage?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "customer_referrer". All fields are combined with a logical 'AND'. */
export type Customer_Referrer_Bool_Exp = {
  _and?: InputMaybe<Array<Customer_Referrer_Bool_Exp>>;
  _not?: InputMaybe<Customer_Referrer_Bool_Exp>;
  _or?: InputMaybe<Array<Customer_Referrer_Bool_Exp>>;
  customer?: InputMaybe<Customer_Bool_Exp>;
  customerID?: InputMaybe<Uuid_Comparison_Exp>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  percentage?: InputMaybe<Int_Comparison_Exp>;
  public_user_meta?: InputMaybe<User_Meta_Bool_Exp>;
  userMetaID?: InputMaybe<Uuid_Comparison_Exp>;
  user_meta?: InputMaybe<User_Meta_Bool_Exp>;
};

/** unique or primary key constraints on table "customer_referrer" */
export enum Customer_Referrer_Constraint {
  /** unique or primary key constraint on columns "userMetaID", "customerID" */
  CustomerReferrerCustomerIdUserMetaIdKey = 'customer_referrer_customerID_userMetaID_key',
  /** unique or primary key constraint on columns "id" */
  CustomerReferrerPkey = 'customer_referrer_pkey',
}

/** input type for incrementing numeric columns in table "customer_referrer" */
export type Customer_Referrer_Inc_Input = {
  percentage?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "customer_referrer" */
export type Customer_Referrer_Insert_Input = {
  customer?: InputMaybe<Customer_Obj_Rel_Insert_Input>;
  customerID?: InputMaybe<Scalars['uuid']>;
  id?: InputMaybe<Scalars['uuid']>;
  percentage?: InputMaybe<Scalars['Int']>;
  public_user_meta?: InputMaybe<User_Meta_Obj_Rel_Insert_Input>;
  userMetaID?: InputMaybe<Scalars['uuid']>;
  user_meta?: InputMaybe<User_Meta_Obj_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type Customer_Referrer_Max_Fields = {
  __typename?: 'customer_referrer_max_fields';
  customerID?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  percentage?: Maybe<Scalars['Int']>;
  userMetaID?: Maybe<Scalars['uuid']>;
};

/** order by max() on columns of table "customer_referrer" */
export type Customer_Referrer_Max_Order_By = {
  customerID?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  percentage?: InputMaybe<Order_By>;
  userMetaID?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Customer_Referrer_Min_Fields = {
  __typename?: 'customer_referrer_min_fields';
  customerID?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  percentage?: Maybe<Scalars['Int']>;
  userMetaID?: Maybe<Scalars['uuid']>;
};

/** order by min() on columns of table "customer_referrer" */
export type Customer_Referrer_Min_Order_By = {
  customerID?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  percentage?: InputMaybe<Order_By>;
  userMetaID?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "customer_referrer" */
export type Customer_Referrer_Mutation_Response = {
  __typename?: 'customer_referrer_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Customer_Referrer>;
};

/** on_conflict condition type for table "customer_referrer" */
export type Customer_Referrer_On_Conflict = {
  constraint: Customer_Referrer_Constraint;
  update_columns?: Array<Customer_Referrer_Update_Column>;
  where?: InputMaybe<Customer_Referrer_Bool_Exp>;
};

/** Ordering options when selecting data from "customer_referrer". */
export type Customer_Referrer_Order_By = {
  customer?: InputMaybe<Customer_Order_By>;
  customerID?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  percentage?: InputMaybe<Order_By>;
  public_user_meta?: InputMaybe<User_Meta_Order_By>;
  userMetaID?: InputMaybe<Order_By>;
  user_meta?: InputMaybe<User_Meta_Order_By>;
};

/** primary key columns input for table: customer_referrer */
export type Customer_Referrer_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "customer_referrer" */
export enum Customer_Referrer_Select_Column {
  /** column name */
  CustomerId = 'customerID',
  /** column name */
  Id = 'id',
  /** column name */
  Percentage = 'percentage',
  /** column name */
  UserMetaId = 'userMetaID',
}

/** input type for updating data in table "customer_referrer" */
export type Customer_Referrer_Set_Input = {
  customerID?: InputMaybe<Scalars['uuid']>;
  id?: InputMaybe<Scalars['uuid']>;
  percentage?: InputMaybe<Scalars['Int']>;
  userMetaID?: InputMaybe<Scalars['uuid']>;
};

/** aggregate stddev on columns */
export type Customer_Referrer_Stddev_Fields = {
  __typename?: 'customer_referrer_stddev_fields';
  percentage?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "customer_referrer" */
export type Customer_Referrer_Stddev_Order_By = {
  percentage?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Customer_Referrer_Stddev_Pop_Fields = {
  __typename?: 'customer_referrer_stddev_pop_fields';
  percentage?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "customer_referrer" */
export type Customer_Referrer_Stddev_Pop_Order_By = {
  percentage?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Customer_Referrer_Stddev_Samp_Fields = {
  __typename?: 'customer_referrer_stddev_samp_fields';
  percentage?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "customer_referrer" */
export type Customer_Referrer_Stddev_Samp_Order_By = {
  percentage?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "customer_referrer" */
export type Customer_Referrer_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Customer_Referrer_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Customer_Referrer_Stream_Cursor_Value_Input = {
  customerID?: InputMaybe<Scalars['uuid']>;
  id?: InputMaybe<Scalars['uuid']>;
  percentage?: InputMaybe<Scalars['Int']>;
  userMetaID?: InputMaybe<Scalars['uuid']>;
};

/** aggregate sum on columns */
export type Customer_Referrer_Sum_Fields = {
  __typename?: 'customer_referrer_sum_fields';
  percentage?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "customer_referrer" */
export type Customer_Referrer_Sum_Order_By = {
  percentage?: InputMaybe<Order_By>;
};

/** update columns of table "customer_referrer" */
export enum Customer_Referrer_Update_Column {
  /** column name */
  CustomerId = 'customerID',
  /** column name */
  Id = 'id',
  /** column name */
  Percentage = 'percentage',
  /** column name */
  UserMetaId = 'userMetaID',
}

export type Customer_Referrer_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Customer_Referrer_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Customer_Referrer_Set_Input>;
  where: Customer_Referrer_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Customer_Referrer_Var_Pop_Fields = {
  __typename?: 'customer_referrer_var_pop_fields';
  percentage?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "customer_referrer" */
export type Customer_Referrer_Var_Pop_Order_By = {
  percentage?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Customer_Referrer_Var_Samp_Fields = {
  __typename?: 'customer_referrer_var_samp_fields';
  percentage?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "customer_referrer" */
export type Customer_Referrer_Var_Samp_Order_By = {
  percentage?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Customer_Referrer_Variance_Fields = {
  __typename?: 'customer_referrer_variance_fields';
  percentage?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "customer_referrer" */
export type Customer_Referrer_Variance_Order_By = {
  percentage?: InputMaybe<Order_By>;
};

/** select columns of table "customer" */
export enum Customer_Select_Column {
  /** column name */
  AdditionalEmails = 'additionalEmails',
  /** column name */
  BillingCurrency = 'billingCurrency',
  /** column name */
  BillingEmail = 'billingEmail',
  /** column name */
  BillingFrequencyId = 'billingFrequencyID',
  /** column name */
  BillingPrimaryContact = 'billingPrimaryContact',
  /** column name */
  CompanyId = 'companyID',
  /** column name */
  Id = 'id',
  /** column name */
  IsLatePayments = 'isLatePayments',
  /** column name */
  LatePaymentFees = 'latePaymentFees',
  /** column name */
  LatePaymentNotificationThreshold = 'latePaymentNotificationThreshold',
  /** column name */
  LatePaymentPeriodId = 'latePaymentPeriodID',
  /** column name */
  LatePaymentPeriodThreshold = 'latePaymentPeriodThreshold',
  /** column name */
  LegacyCustomerId = 'legacyCustomerID',
  /** column name */
  QbId = 'qbID',
}

/** input type for updating data in table "customer" */
export type Customer_Set_Input = {
  additionalEmails?: InputMaybe<Scalars['String']>;
  billingCurrency?: InputMaybe<Scalars['String']>;
  billingEmail?: InputMaybe<Scalars['String']>;
  billingFrequencyID?: InputMaybe<Scalars['uuid']>;
  billingPrimaryContact?: InputMaybe<Scalars['String']>;
  companyID?: InputMaybe<Scalars['uuid']>;
  id?: InputMaybe<Scalars['uuid']>;
  isLatePayments?: InputMaybe<Scalars['Boolean']>;
  latePaymentFees?: InputMaybe<Scalars['numeric']>;
  latePaymentNotificationThreshold?: InputMaybe<Scalars['Int']>;
  latePaymentPeriodID?: InputMaybe<Scalars['uuid']>;
  latePaymentPeriodThreshold?: InputMaybe<Scalars['Int']>;
  legacyCustomerID?: InputMaybe<Scalars['String']>;
  qbID?: InputMaybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type Customer_Stddev_Fields = {
  __typename?: 'customer_stddev_fields';
  latePaymentFees?: Maybe<Scalars['Float']>;
  latePaymentNotificationThreshold?: Maybe<Scalars['Float']>;
  latePaymentPeriodThreshold?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "customer" */
export type Customer_Stddev_Order_By = {
  latePaymentFees?: InputMaybe<Order_By>;
  latePaymentNotificationThreshold?: InputMaybe<Order_By>;
  latePaymentPeriodThreshold?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Customer_Stddev_Pop_Fields = {
  __typename?: 'customer_stddev_pop_fields';
  latePaymentFees?: Maybe<Scalars['Float']>;
  latePaymentNotificationThreshold?: Maybe<Scalars['Float']>;
  latePaymentPeriodThreshold?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "customer" */
export type Customer_Stddev_Pop_Order_By = {
  latePaymentFees?: InputMaybe<Order_By>;
  latePaymentNotificationThreshold?: InputMaybe<Order_By>;
  latePaymentPeriodThreshold?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Customer_Stddev_Samp_Fields = {
  __typename?: 'customer_stddev_samp_fields';
  latePaymentFees?: Maybe<Scalars['Float']>;
  latePaymentNotificationThreshold?: Maybe<Scalars['Float']>;
  latePaymentPeriodThreshold?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "customer" */
export type Customer_Stddev_Samp_Order_By = {
  latePaymentFees?: InputMaybe<Order_By>;
  latePaymentNotificationThreshold?: InputMaybe<Order_By>;
  latePaymentPeriodThreshold?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "customer" */
export type Customer_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Customer_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Customer_Stream_Cursor_Value_Input = {
  additionalEmails?: InputMaybe<Scalars['String']>;
  billingCurrency?: InputMaybe<Scalars['String']>;
  billingEmail?: InputMaybe<Scalars['String']>;
  billingFrequencyID?: InputMaybe<Scalars['uuid']>;
  billingPrimaryContact?: InputMaybe<Scalars['String']>;
  companyID?: InputMaybe<Scalars['uuid']>;
  id?: InputMaybe<Scalars['uuid']>;
  isLatePayments?: InputMaybe<Scalars['Boolean']>;
  latePaymentFees?: InputMaybe<Scalars['numeric']>;
  latePaymentNotificationThreshold?: InputMaybe<Scalars['Int']>;
  latePaymentPeriodID?: InputMaybe<Scalars['uuid']>;
  latePaymentPeriodThreshold?: InputMaybe<Scalars['Int']>;
  legacyCustomerID?: InputMaybe<Scalars['String']>;
  qbID?: InputMaybe<Scalars['String']>;
};

/** aggregate sum on columns */
export type Customer_Sum_Fields = {
  __typename?: 'customer_sum_fields';
  latePaymentFees?: Maybe<Scalars['numeric']>;
  latePaymentNotificationThreshold?: Maybe<Scalars['Int']>;
  latePaymentPeriodThreshold?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "customer" */
export type Customer_Sum_Order_By = {
  latePaymentFees?: InputMaybe<Order_By>;
  latePaymentNotificationThreshold?: InputMaybe<Order_By>;
  latePaymentPeriodThreshold?: InputMaybe<Order_By>;
};

/** update columns of table "customer" */
export enum Customer_Update_Column {
  /** column name */
  AdditionalEmails = 'additionalEmails',
  /** column name */
  BillingCurrency = 'billingCurrency',
  /** column name */
  BillingEmail = 'billingEmail',
  /** column name */
  BillingFrequencyId = 'billingFrequencyID',
  /** column name */
  BillingPrimaryContact = 'billingPrimaryContact',
  /** column name */
  CompanyId = 'companyID',
  /** column name */
  Id = 'id',
  /** column name */
  IsLatePayments = 'isLatePayments',
  /** column name */
  LatePaymentFees = 'latePaymentFees',
  /** column name */
  LatePaymentNotificationThreshold = 'latePaymentNotificationThreshold',
  /** column name */
  LatePaymentPeriodId = 'latePaymentPeriodID',
  /** column name */
  LatePaymentPeriodThreshold = 'latePaymentPeriodThreshold',
  /** column name */
  LegacyCustomerId = 'legacyCustomerID',
  /** column name */
  QbId = 'qbID',
}

export type Customer_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Customer_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Customer_Set_Input>;
  where: Customer_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Customer_Var_Pop_Fields = {
  __typename?: 'customer_var_pop_fields';
  latePaymentFees?: Maybe<Scalars['Float']>;
  latePaymentNotificationThreshold?: Maybe<Scalars['Float']>;
  latePaymentPeriodThreshold?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "customer" */
export type Customer_Var_Pop_Order_By = {
  latePaymentFees?: InputMaybe<Order_By>;
  latePaymentNotificationThreshold?: InputMaybe<Order_By>;
  latePaymentPeriodThreshold?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Customer_Var_Samp_Fields = {
  __typename?: 'customer_var_samp_fields';
  latePaymentFees?: Maybe<Scalars['Float']>;
  latePaymentNotificationThreshold?: Maybe<Scalars['Float']>;
  latePaymentPeriodThreshold?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "customer" */
export type Customer_Var_Samp_Order_By = {
  latePaymentFees?: InputMaybe<Order_By>;
  latePaymentNotificationThreshold?: InputMaybe<Order_By>;
  latePaymentPeriodThreshold?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Customer_Variance_Fields = {
  __typename?: 'customer_variance_fields';
  latePaymentFees?: Maybe<Scalars['Float']>;
  latePaymentNotificationThreshold?: Maybe<Scalars['Float']>;
  latePaymentPeriodThreshold?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "customer" */
export type Customer_Variance_Order_By = {
  latePaymentFees?: InputMaybe<Order_By>;
  latePaymentNotificationThreshold?: InputMaybe<Order_By>;
  latePaymentPeriodThreshold?: InputMaybe<Order_By>;
};

/** columns and relationships of "document" */
export type Document = {
  __typename?: 'document';
  documentKey: Scalars['String'];
  documentTypeID: Scalars['uuid'];
  /** An array relationship */
  document_associated_companies: Array<Document_Associated_Company>;
  /** An aggregate relationship */
  document_associated_companies_aggregate: Document_Associated_Company_Aggregate;
  /** An array relationship */
  document_associated_users: Array<Document_Associated_User>;
  /** An aggregate relationship */
  document_associated_users_aggregate: Document_Associated_User_Aggregate;
  /** An array relationship */
  document_extra_field_values: Array<Document_Extra_Field_Value>;
  /** An aggregate relationship */
  document_extra_field_values_aggregate: Document_Extra_Field_Value_Aggregate;
  /** An object relationship */
  document_type: Document_Type;
  effectiveDate?: Maybe<Scalars['timestamp']>;
  expirationDate?: Maybe<Scalars['timestamptz']>;
  id: Scalars['uuid'];
  isPrivate: Scalars['Boolean'];
  name: Scalars['String'];
  noPublicityClauseFrequency?: Maybe<Scalars['String']>;
  noPublicityClauseLength?: Maybe<Scalars['Int']>;
  nonCompeteFrequency?: Maybe<Scalars['String']>;
  nonCompeteLength?: Maybe<Scalars['Int']>;
  nonSolicitFrequency?: Maybe<Scalars['String']>;
  nonSolicitLength?: Maybe<Scalars['Int']>;
  /** An object relationship */
  public_user_meta?: Maybe<Public_User_Meta>;
  uploadedByUserCognitoSub: Scalars['String'];
  uploadedByUserIdentityID: Scalars['String'];
  /** An object relationship */
  user_meta: User_Meta;
};

/** columns and relationships of "document" */
export type DocumentDocument_Associated_CompaniesArgs = {
  distinct_on?: InputMaybe<Array<Document_Associated_Company_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Document_Associated_Company_Order_By>>;
  where?: InputMaybe<Document_Associated_Company_Bool_Exp>;
};

/** columns and relationships of "document" */
export type DocumentDocument_Associated_Companies_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Document_Associated_Company_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Document_Associated_Company_Order_By>>;
  where?: InputMaybe<Document_Associated_Company_Bool_Exp>;
};

/** columns and relationships of "document" */
export type DocumentDocument_Associated_UsersArgs = {
  distinct_on?: InputMaybe<Array<Document_Associated_User_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Document_Associated_User_Order_By>>;
  where?: InputMaybe<Document_Associated_User_Bool_Exp>;
};

/** columns and relationships of "document" */
export type DocumentDocument_Associated_Users_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Document_Associated_User_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Document_Associated_User_Order_By>>;
  where?: InputMaybe<Document_Associated_User_Bool_Exp>;
};

/** columns and relationships of "document" */
export type DocumentDocument_Extra_Field_ValuesArgs = {
  distinct_on?: InputMaybe<Array<Document_Extra_Field_Value_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Document_Extra_Field_Value_Order_By>>;
  where?: InputMaybe<Document_Extra_Field_Value_Bool_Exp>;
};

/** columns and relationships of "document" */
export type DocumentDocument_Extra_Field_Values_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Document_Extra_Field_Value_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Document_Extra_Field_Value_Order_By>>;
  where?: InputMaybe<Document_Extra_Field_Value_Bool_Exp>;
};

/** aggregated selection of "document" */
export type Document_Aggregate = {
  __typename?: 'document_aggregate';
  aggregate?: Maybe<Document_Aggregate_Fields>;
  nodes: Array<Document>;
};

/** aggregate fields of "document" */
export type Document_Aggregate_Fields = {
  __typename?: 'document_aggregate_fields';
  avg?: Maybe<Document_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Document_Max_Fields>;
  min?: Maybe<Document_Min_Fields>;
  stddev?: Maybe<Document_Stddev_Fields>;
  stddev_pop?: Maybe<Document_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Document_Stddev_Samp_Fields>;
  sum?: Maybe<Document_Sum_Fields>;
  var_pop?: Maybe<Document_Var_Pop_Fields>;
  var_samp?: Maybe<Document_Var_Samp_Fields>;
  variance?: Maybe<Document_Variance_Fields>;
};

/** aggregate fields of "document" */
export type Document_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Document_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "document" */
export type Document_Aggregate_Order_By = {
  avg?: InputMaybe<Document_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Document_Max_Order_By>;
  min?: InputMaybe<Document_Min_Order_By>;
  stddev?: InputMaybe<Document_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Document_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Document_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Document_Sum_Order_By>;
  var_pop?: InputMaybe<Document_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Document_Var_Samp_Order_By>;
  variance?: InputMaybe<Document_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "document" */
export type Document_Arr_Rel_Insert_Input = {
  data: Array<Document_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Document_On_Conflict>;
};

/** columns and relationships of "document_associated_company" */
export type Document_Associated_Company = {
  __typename?: 'document_associated_company';
  /** An object relationship */
  company: Company;
  companyID: Scalars['uuid'];
  /** An object relationship */
  document: Document;
  documentID: Scalars['uuid'];
  id: Scalars['uuid'];
};

/** aggregated selection of "document_associated_company" */
export type Document_Associated_Company_Aggregate = {
  __typename?: 'document_associated_company_aggregate';
  aggregate?: Maybe<Document_Associated_Company_Aggregate_Fields>;
  nodes: Array<Document_Associated_Company>;
};

/** aggregate fields of "document_associated_company" */
export type Document_Associated_Company_Aggregate_Fields = {
  __typename?: 'document_associated_company_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<Document_Associated_Company_Max_Fields>;
  min?: Maybe<Document_Associated_Company_Min_Fields>;
};

/** aggregate fields of "document_associated_company" */
export type Document_Associated_Company_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Document_Associated_Company_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "document_associated_company" */
export type Document_Associated_Company_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Document_Associated_Company_Max_Order_By>;
  min?: InputMaybe<Document_Associated_Company_Min_Order_By>;
};

/** input type for inserting array relation for remote table "document_associated_company" */
export type Document_Associated_Company_Arr_Rel_Insert_Input = {
  data: Array<Document_Associated_Company_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Document_Associated_Company_On_Conflict>;
};

/** Boolean expression to filter rows from the table "document_associated_company". All fields are combined with a logical 'AND'. */
export type Document_Associated_Company_Bool_Exp = {
  _and?: InputMaybe<Array<Document_Associated_Company_Bool_Exp>>;
  _not?: InputMaybe<Document_Associated_Company_Bool_Exp>;
  _or?: InputMaybe<Array<Document_Associated_Company_Bool_Exp>>;
  company?: InputMaybe<Company_Bool_Exp>;
  companyID?: InputMaybe<Uuid_Comparison_Exp>;
  document?: InputMaybe<Document_Bool_Exp>;
  documentID?: InputMaybe<Uuid_Comparison_Exp>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
};

/** unique or primary key constraints on table "document_associated_company" */
export enum Document_Associated_Company_Constraint {
  /** unique or primary key constraint on columns "documentID", "companyID" */
  DocumentAssociatedCompanyCompanyIdDocumentIdKey = 'document_associated_company_companyID_documentID_key',
  /** unique or primary key constraint on columns "id" */
  DocumentAssociatedCompanyPkey = 'document_associated_company_pkey',
}

/** input type for inserting data into table "document_associated_company" */
export type Document_Associated_Company_Insert_Input = {
  company?: InputMaybe<Company_Obj_Rel_Insert_Input>;
  companyID?: InputMaybe<Scalars['uuid']>;
  document?: InputMaybe<Document_Obj_Rel_Insert_Input>;
  documentID?: InputMaybe<Scalars['uuid']>;
  id?: InputMaybe<Scalars['uuid']>;
};

/** aggregate max on columns */
export type Document_Associated_Company_Max_Fields = {
  __typename?: 'document_associated_company_max_fields';
  companyID?: Maybe<Scalars['uuid']>;
  documentID?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
};

/** order by max() on columns of table "document_associated_company" */
export type Document_Associated_Company_Max_Order_By = {
  companyID?: InputMaybe<Order_By>;
  documentID?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Document_Associated_Company_Min_Fields = {
  __typename?: 'document_associated_company_min_fields';
  companyID?: Maybe<Scalars['uuid']>;
  documentID?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
};

/** order by min() on columns of table "document_associated_company" */
export type Document_Associated_Company_Min_Order_By = {
  companyID?: InputMaybe<Order_By>;
  documentID?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "document_associated_company" */
export type Document_Associated_Company_Mutation_Response = {
  __typename?: 'document_associated_company_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Document_Associated_Company>;
};

/** on_conflict condition type for table "document_associated_company" */
export type Document_Associated_Company_On_Conflict = {
  constraint: Document_Associated_Company_Constraint;
  update_columns?: Array<Document_Associated_Company_Update_Column>;
  where?: InputMaybe<Document_Associated_Company_Bool_Exp>;
};

/** Ordering options when selecting data from "document_associated_company". */
export type Document_Associated_Company_Order_By = {
  company?: InputMaybe<Company_Order_By>;
  companyID?: InputMaybe<Order_By>;
  document?: InputMaybe<Document_Order_By>;
  documentID?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: document_associated_company */
export type Document_Associated_Company_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "document_associated_company" */
export enum Document_Associated_Company_Select_Column {
  /** column name */
  CompanyId = 'companyID',
  /** column name */
  DocumentId = 'documentID',
  /** column name */
  Id = 'id',
}

/** input type for updating data in table "document_associated_company" */
export type Document_Associated_Company_Set_Input = {
  companyID?: InputMaybe<Scalars['uuid']>;
  documentID?: InputMaybe<Scalars['uuid']>;
  id?: InputMaybe<Scalars['uuid']>;
};

/** Streaming cursor of the table "document_associated_company" */
export type Document_Associated_Company_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Document_Associated_Company_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Document_Associated_Company_Stream_Cursor_Value_Input = {
  companyID?: InputMaybe<Scalars['uuid']>;
  documentID?: InputMaybe<Scalars['uuid']>;
  id?: InputMaybe<Scalars['uuid']>;
};

/** update columns of table "document_associated_company" */
export enum Document_Associated_Company_Update_Column {
  /** column name */
  CompanyId = 'companyID',
  /** column name */
  DocumentId = 'documentID',
  /** column name */
  Id = 'id',
}

export type Document_Associated_Company_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Document_Associated_Company_Set_Input>;
  where: Document_Associated_Company_Bool_Exp;
};

/** columns and relationships of "document_associated_user" */
export type Document_Associated_User = {
  __typename?: 'document_associated_user';
  /** An object relationship */
  document: Document;
  documentID: Scalars['uuid'];
  id: Scalars['uuid'];
  /** An object relationship */
  public_user_meta?: Maybe<Public_User_Meta>;
  userMetaID: Scalars['uuid'];
  /** An object relationship */
  user_meta: User_Meta;
};

/** aggregated selection of "document_associated_user" */
export type Document_Associated_User_Aggregate = {
  __typename?: 'document_associated_user_aggregate';
  aggregate?: Maybe<Document_Associated_User_Aggregate_Fields>;
  nodes: Array<Document_Associated_User>;
};

/** aggregate fields of "document_associated_user" */
export type Document_Associated_User_Aggregate_Fields = {
  __typename?: 'document_associated_user_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<Document_Associated_User_Max_Fields>;
  min?: Maybe<Document_Associated_User_Min_Fields>;
};

/** aggregate fields of "document_associated_user" */
export type Document_Associated_User_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Document_Associated_User_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "document_associated_user" */
export type Document_Associated_User_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Document_Associated_User_Max_Order_By>;
  min?: InputMaybe<Document_Associated_User_Min_Order_By>;
};

/** input type for inserting array relation for remote table "document_associated_user" */
export type Document_Associated_User_Arr_Rel_Insert_Input = {
  data: Array<Document_Associated_User_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Document_Associated_User_On_Conflict>;
};

/** Boolean expression to filter rows from the table "document_associated_user". All fields are combined with a logical 'AND'. */
export type Document_Associated_User_Bool_Exp = {
  _and?: InputMaybe<Array<Document_Associated_User_Bool_Exp>>;
  _not?: InputMaybe<Document_Associated_User_Bool_Exp>;
  _or?: InputMaybe<Array<Document_Associated_User_Bool_Exp>>;
  document?: InputMaybe<Document_Bool_Exp>;
  documentID?: InputMaybe<Uuid_Comparison_Exp>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  public_user_meta?: InputMaybe<Public_User_Meta_Bool_Exp>;
  userMetaID?: InputMaybe<Uuid_Comparison_Exp>;
  user_meta?: InputMaybe<User_Meta_Bool_Exp>;
};

/** unique or primary key constraints on table "document_associated_user" */
export enum Document_Associated_User_Constraint {
  /** unique or primary key constraint on columns "userMetaID", "documentID" */
  DocumentAssociatedUserDocumentIdUserMetaIdKey = 'document_associated_user_documentID_userMetaID_key',
  /** unique or primary key constraint on columns "id" */
  DocumentAssociatedUserPkey = 'document_associated_user_pkey',
}

/** input type for inserting data into table "document_associated_user" */
export type Document_Associated_User_Insert_Input = {
  document?: InputMaybe<Document_Obj_Rel_Insert_Input>;
  documentID?: InputMaybe<Scalars['uuid']>;
  id?: InputMaybe<Scalars['uuid']>;
  public_user_meta?: InputMaybe<Public_User_Meta_Obj_Rel_Insert_Input>;
  userMetaID?: InputMaybe<Scalars['uuid']>;
  user_meta?: InputMaybe<User_Meta_Obj_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type Document_Associated_User_Max_Fields = {
  __typename?: 'document_associated_user_max_fields';
  documentID?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  userMetaID?: Maybe<Scalars['uuid']>;
};

/** order by max() on columns of table "document_associated_user" */
export type Document_Associated_User_Max_Order_By = {
  documentID?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  userMetaID?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Document_Associated_User_Min_Fields = {
  __typename?: 'document_associated_user_min_fields';
  documentID?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  userMetaID?: Maybe<Scalars['uuid']>;
};

/** order by min() on columns of table "document_associated_user" */
export type Document_Associated_User_Min_Order_By = {
  documentID?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  userMetaID?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "document_associated_user" */
export type Document_Associated_User_Mutation_Response = {
  __typename?: 'document_associated_user_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Document_Associated_User>;
};

/** on_conflict condition type for table "document_associated_user" */
export type Document_Associated_User_On_Conflict = {
  constraint: Document_Associated_User_Constraint;
  update_columns?: Array<Document_Associated_User_Update_Column>;
  where?: InputMaybe<Document_Associated_User_Bool_Exp>;
};

/** Ordering options when selecting data from "document_associated_user". */
export type Document_Associated_User_Order_By = {
  document?: InputMaybe<Document_Order_By>;
  documentID?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  public_user_meta?: InputMaybe<Public_User_Meta_Order_By>;
  userMetaID?: InputMaybe<Order_By>;
  user_meta?: InputMaybe<User_Meta_Order_By>;
};

/** primary key columns input for table: document_associated_user */
export type Document_Associated_User_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "document_associated_user" */
export enum Document_Associated_User_Select_Column {
  /** column name */
  DocumentId = 'documentID',
  /** column name */
  Id = 'id',
  /** column name */
  UserMetaId = 'userMetaID',
}

/** input type for updating data in table "document_associated_user" */
export type Document_Associated_User_Set_Input = {
  documentID?: InputMaybe<Scalars['uuid']>;
  id?: InputMaybe<Scalars['uuid']>;
  userMetaID?: InputMaybe<Scalars['uuid']>;
};

/** Streaming cursor of the table "document_associated_user" */
export type Document_Associated_User_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Document_Associated_User_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Document_Associated_User_Stream_Cursor_Value_Input = {
  documentID?: InputMaybe<Scalars['uuid']>;
  id?: InputMaybe<Scalars['uuid']>;
  userMetaID?: InputMaybe<Scalars['uuid']>;
};

/** update columns of table "document_associated_user" */
export enum Document_Associated_User_Update_Column {
  /** column name */
  DocumentId = 'documentID',
  /** column name */
  Id = 'id',
  /** column name */
  UserMetaId = 'userMetaID',
}

export type Document_Associated_User_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Document_Associated_User_Set_Input>;
  where: Document_Associated_User_Bool_Exp;
};

/** aggregate avg on columns */
export type Document_Avg_Fields = {
  __typename?: 'document_avg_fields';
  noPublicityClauseLength?: Maybe<Scalars['Float']>;
  nonCompeteLength?: Maybe<Scalars['Float']>;
  nonSolicitLength?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "document" */
export type Document_Avg_Order_By = {
  noPublicityClauseLength?: InputMaybe<Order_By>;
  nonCompeteLength?: InputMaybe<Order_By>;
  nonSolicitLength?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "document". All fields are combined with a logical 'AND'. */
export type Document_Bool_Exp = {
  _and?: InputMaybe<Array<Document_Bool_Exp>>;
  _not?: InputMaybe<Document_Bool_Exp>;
  _or?: InputMaybe<Array<Document_Bool_Exp>>;
  documentKey?: InputMaybe<String_Comparison_Exp>;
  documentTypeID?: InputMaybe<Uuid_Comparison_Exp>;
  document_associated_companies?: InputMaybe<Document_Associated_Company_Bool_Exp>;
  document_associated_users?: InputMaybe<Document_Associated_User_Bool_Exp>;
  document_extra_field_values?: InputMaybe<Document_Extra_Field_Value_Bool_Exp>;
  document_type?: InputMaybe<Document_Type_Bool_Exp>;
  effectiveDate?: InputMaybe<Timestamp_Comparison_Exp>;
  expirationDate?: InputMaybe<Timestamptz_Comparison_Exp>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  isPrivate?: InputMaybe<Boolean_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  noPublicityClauseFrequency?: InputMaybe<String_Comparison_Exp>;
  noPublicityClauseLength?: InputMaybe<Int_Comparison_Exp>;
  nonCompeteFrequency?: InputMaybe<String_Comparison_Exp>;
  nonCompeteLength?: InputMaybe<Int_Comparison_Exp>;
  nonSolicitFrequency?: InputMaybe<String_Comparison_Exp>;
  nonSolicitLength?: InputMaybe<Int_Comparison_Exp>;
  public_user_meta?: InputMaybe<Public_User_Meta_Bool_Exp>;
  uploadedByUserCognitoSub?: InputMaybe<String_Comparison_Exp>;
  uploadedByUserIdentityID?: InputMaybe<String_Comparison_Exp>;
  user_meta?: InputMaybe<User_Meta_Bool_Exp>;
};

/** unique or primary key constraints on table "document" */
export enum Document_Constraint {
  /** unique or primary key constraint on columns "id" */
  DocumentPkey = 'document_pkey',
}

/** columns and relationships of "document_extra_field" */
export type Document_Extra_Field = {
  __typename?: 'document_extra_field';
  /** An array relationship */
  document_extra_field_values: Array<Document_Extra_Field_Value>;
  /** An aggregate relationship */
  document_extra_field_values_aggregate: Document_Extra_Field_Value_Aggregate;
  dropdownValues?: Maybe<Scalars['String']>;
  id: Scalars['uuid'];
  label: Scalars['String'];
  name: Scalars['String'];
  type: Scalars['String'];
};

/** columns and relationships of "document_extra_field" */
export type Document_Extra_FieldDocument_Extra_Field_ValuesArgs = {
  distinct_on?: InputMaybe<Array<Document_Extra_Field_Value_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Document_Extra_Field_Value_Order_By>>;
  where?: InputMaybe<Document_Extra_Field_Value_Bool_Exp>;
};

/** columns and relationships of "document_extra_field" */
export type Document_Extra_FieldDocument_Extra_Field_Values_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Document_Extra_Field_Value_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Document_Extra_Field_Value_Order_By>>;
  where?: InputMaybe<Document_Extra_Field_Value_Bool_Exp>;
};

/** aggregated selection of "document_extra_field" */
export type Document_Extra_Field_Aggregate = {
  __typename?: 'document_extra_field_aggregate';
  aggregate?: Maybe<Document_Extra_Field_Aggregate_Fields>;
  nodes: Array<Document_Extra_Field>;
};

/** aggregate fields of "document_extra_field" */
export type Document_Extra_Field_Aggregate_Fields = {
  __typename?: 'document_extra_field_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<Document_Extra_Field_Max_Fields>;
  min?: Maybe<Document_Extra_Field_Min_Fields>;
};

/** aggregate fields of "document_extra_field" */
export type Document_Extra_Field_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Document_Extra_Field_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** Boolean expression to filter rows from the table "document_extra_field". All fields are combined with a logical 'AND'. */
export type Document_Extra_Field_Bool_Exp = {
  _and?: InputMaybe<Array<Document_Extra_Field_Bool_Exp>>;
  _not?: InputMaybe<Document_Extra_Field_Bool_Exp>;
  _or?: InputMaybe<Array<Document_Extra_Field_Bool_Exp>>;
  document_extra_field_values?: InputMaybe<Document_Extra_Field_Value_Bool_Exp>;
  dropdownValues?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  label?: InputMaybe<String_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  type?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "document_extra_field" */
export enum Document_Extra_Field_Constraint {
  /** unique or primary key constraint on columns "id" */
  DocumentExtraFieldPkey = 'document_extra_field_pkey',
}

/** input type for inserting data into table "document_extra_field" */
export type Document_Extra_Field_Insert_Input = {
  document_extra_field_values?: InputMaybe<Document_Extra_Field_Value_Arr_Rel_Insert_Input>;
  dropdownValues?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['uuid']>;
  label?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Document_Extra_Field_Max_Fields = {
  __typename?: 'document_extra_field_max_fields';
  dropdownValues?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  label?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type Document_Extra_Field_Min_Fields = {
  __typename?: 'document_extra_field_min_fields';
  dropdownValues?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  label?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "document_extra_field" */
export type Document_Extra_Field_Mutation_Response = {
  __typename?: 'document_extra_field_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Document_Extra_Field>;
};

/** input type for inserting object relation for remote table "document_extra_field" */
export type Document_Extra_Field_Obj_Rel_Insert_Input = {
  data: Document_Extra_Field_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Document_Extra_Field_On_Conflict>;
};

/** on_conflict condition type for table "document_extra_field" */
export type Document_Extra_Field_On_Conflict = {
  constraint: Document_Extra_Field_Constraint;
  update_columns?: Array<Document_Extra_Field_Update_Column>;
  where?: InputMaybe<Document_Extra_Field_Bool_Exp>;
};

/** Ordering options when selecting data from "document_extra_field". */
export type Document_Extra_Field_Order_By = {
  document_extra_field_values_aggregate?: InputMaybe<Document_Extra_Field_Value_Aggregate_Order_By>;
  dropdownValues?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  label?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  type?: InputMaybe<Order_By>;
};

/** primary key columns input for table: document_extra_field */
export type Document_Extra_Field_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "document_extra_field" */
export enum Document_Extra_Field_Select_Column {
  /** column name */
  DropdownValues = 'dropdownValues',
  /** column name */
  Id = 'id',
  /** column name */
  Label = 'label',
  /** column name */
  Name = 'name',
  /** column name */
  Type = 'type',
}

/** input type for updating data in table "document_extra_field" */
export type Document_Extra_Field_Set_Input = {
  dropdownValues?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['uuid']>;
  label?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
};

/** Streaming cursor of the table "document_extra_field" */
export type Document_Extra_Field_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Document_Extra_Field_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Document_Extra_Field_Stream_Cursor_Value_Input = {
  dropdownValues?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['uuid']>;
  label?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
};

/** update columns of table "document_extra_field" */
export enum Document_Extra_Field_Update_Column {
  /** column name */
  DropdownValues = 'dropdownValues',
  /** column name */
  Id = 'id',
  /** column name */
  Label = 'label',
  /** column name */
  Name = 'name',
  /** column name */
  Type = 'type',
}

export type Document_Extra_Field_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Document_Extra_Field_Set_Input>;
  where: Document_Extra_Field_Bool_Exp;
};

/** columns and relationships of "document_extra_field_value" */
export type Document_Extra_Field_Value = {
  __typename?: 'document_extra_field_value';
  /** An object relationship */
  document: Document;
  documentExtraFieldID: Scalars['uuid'];
  documentID: Scalars['uuid'];
  /** An object relationship */
  document_extra_field: Document_Extra_Field;
  dropdownValue?: Maybe<Scalars['String']>;
  value: Scalars['String'];
};

/** aggregated selection of "document_extra_field_value" */
export type Document_Extra_Field_Value_Aggregate = {
  __typename?: 'document_extra_field_value_aggregate';
  aggregate?: Maybe<Document_Extra_Field_Value_Aggregate_Fields>;
  nodes: Array<Document_Extra_Field_Value>;
};

/** aggregate fields of "document_extra_field_value" */
export type Document_Extra_Field_Value_Aggregate_Fields = {
  __typename?: 'document_extra_field_value_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<Document_Extra_Field_Value_Max_Fields>;
  min?: Maybe<Document_Extra_Field_Value_Min_Fields>;
};

/** aggregate fields of "document_extra_field_value" */
export type Document_Extra_Field_Value_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Document_Extra_Field_Value_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "document_extra_field_value" */
export type Document_Extra_Field_Value_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Document_Extra_Field_Value_Max_Order_By>;
  min?: InputMaybe<Document_Extra_Field_Value_Min_Order_By>;
};

/** input type for inserting array relation for remote table "document_extra_field_value" */
export type Document_Extra_Field_Value_Arr_Rel_Insert_Input = {
  data: Array<Document_Extra_Field_Value_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Document_Extra_Field_Value_On_Conflict>;
};

/** Boolean expression to filter rows from the table "document_extra_field_value". All fields are combined with a logical 'AND'. */
export type Document_Extra_Field_Value_Bool_Exp = {
  _and?: InputMaybe<Array<Document_Extra_Field_Value_Bool_Exp>>;
  _not?: InputMaybe<Document_Extra_Field_Value_Bool_Exp>;
  _or?: InputMaybe<Array<Document_Extra_Field_Value_Bool_Exp>>;
  document?: InputMaybe<Document_Bool_Exp>;
  documentExtraFieldID?: InputMaybe<Uuid_Comparison_Exp>;
  documentID?: InputMaybe<Uuid_Comparison_Exp>;
  document_extra_field?: InputMaybe<Document_Extra_Field_Bool_Exp>;
  dropdownValue?: InputMaybe<String_Comparison_Exp>;
  value?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "document_extra_field_value" */
export enum Document_Extra_Field_Value_Constraint {
  /** unique or primary key constraint on columns "documentID", "documentExtraFieldID" */
  DocumentExtraFieldValuePkey = 'document_extra_field_value_pkey',
}

/** input type for inserting data into table "document_extra_field_value" */
export type Document_Extra_Field_Value_Insert_Input = {
  document?: InputMaybe<Document_Obj_Rel_Insert_Input>;
  documentExtraFieldID?: InputMaybe<Scalars['uuid']>;
  documentID?: InputMaybe<Scalars['uuid']>;
  document_extra_field?: InputMaybe<Document_Extra_Field_Obj_Rel_Insert_Input>;
  dropdownValue?: InputMaybe<Scalars['String']>;
  value?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Document_Extra_Field_Value_Max_Fields = {
  __typename?: 'document_extra_field_value_max_fields';
  documentExtraFieldID?: Maybe<Scalars['uuid']>;
  documentID?: Maybe<Scalars['uuid']>;
  dropdownValue?: Maybe<Scalars['String']>;
  value?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "document_extra_field_value" */
export type Document_Extra_Field_Value_Max_Order_By = {
  documentExtraFieldID?: InputMaybe<Order_By>;
  documentID?: InputMaybe<Order_By>;
  dropdownValue?: InputMaybe<Order_By>;
  value?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Document_Extra_Field_Value_Min_Fields = {
  __typename?: 'document_extra_field_value_min_fields';
  documentExtraFieldID?: Maybe<Scalars['uuid']>;
  documentID?: Maybe<Scalars['uuid']>;
  dropdownValue?: Maybe<Scalars['String']>;
  value?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "document_extra_field_value" */
export type Document_Extra_Field_Value_Min_Order_By = {
  documentExtraFieldID?: InputMaybe<Order_By>;
  documentID?: InputMaybe<Order_By>;
  dropdownValue?: InputMaybe<Order_By>;
  value?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "document_extra_field_value" */
export type Document_Extra_Field_Value_Mutation_Response = {
  __typename?: 'document_extra_field_value_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Document_Extra_Field_Value>;
};

/** on_conflict condition type for table "document_extra_field_value" */
export type Document_Extra_Field_Value_On_Conflict = {
  constraint: Document_Extra_Field_Value_Constraint;
  update_columns?: Array<Document_Extra_Field_Value_Update_Column>;
  where?: InputMaybe<Document_Extra_Field_Value_Bool_Exp>;
};

/** Ordering options when selecting data from "document_extra_field_value". */
export type Document_Extra_Field_Value_Order_By = {
  document?: InputMaybe<Document_Order_By>;
  documentExtraFieldID?: InputMaybe<Order_By>;
  documentID?: InputMaybe<Order_By>;
  document_extra_field?: InputMaybe<Document_Extra_Field_Order_By>;
  dropdownValue?: InputMaybe<Order_By>;
  value?: InputMaybe<Order_By>;
};

/** primary key columns input for table: document_extra_field_value */
export type Document_Extra_Field_Value_Pk_Columns_Input = {
  documentExtraFieldID: Scalars['uuid'];
  documentID: Scalars['uuid'];
};

/** select columns of table "document_extra_field_value" */
export enum Document_Extra_Field_Value_Select_Column {
  /** column name */
  DocumentExtraFieldId = 'documentExtraFieldID',
  /** column name */
  DocumentId = 'documentID',
  /** column name */
  DropdownValue = 'dropdownValue',
  /** column name */
  Value = 'value',
}

/** input type for updating data in table "document_extra_field_value" */
export type Document_Extra_Field_Value_Set_Input = {
  documentExtraFieldID?: InputMaybe<Scalars['uuid']>;
  documentID?: InputMaybe<Scalars['uuid']>;
  dropdownValue?: InputMaybe<Scalars['String']>;
  value?: InputMaybe<Scalars['String']>;
};

/** Streaming cursor of the table "document_extra_field_value" */
export type Document_Extra_Field_Value_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Document_Extra_Field_Value_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Document_Extra_Field_Value_Stream_Cursor_Value_Input = {
  documentExtraFieldID?: InputMaybe<Scalars['uuid']>;
  documentID?: InputMaybe<Scalars['uuid']>;
  dropdownValue?: InputMaybe<Scalars['String']>;
  value?: InputMaybe<Scalars['String']>;
};

/** update columns of table "document_extra_field_value" */
export enum Document_Extra_Field_Value_Update_Column {
  /** column name */
  DocumentExtraFieldId = 'documentExtraFieldID',
  /** column name */
  DocumentId = 'documentID',
  /** column name */
  DropdownValue = 'dropdownValue',
  /** column name */
  Value = 'value',
}

export type Document_Extra_Field_Value_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Document_Extra_Field_Value_Set_Input>;
  where: Document_Extra_Field_Value_Bool_Exp;
};

/** input type for incrementing numeric columns in table "document" */
export type Document_Inc_Input = {
  noPublicityClauseLength?: InputMaybe<Scalars['Int']>;
  nonCompeteLength?: InputMaybe<Scalars['Int']>;
  nonSolicitLength?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "document" */
export type Document_Insert_Input = {
  documentKey?: InputMaybe<Scalars['String']>;
  documentTypeID?: InputMaybe<Scalars['uuid']>;
  document_associated_companies?: InputMaybe<Document_Associated_Company_Arr_Rel_Insert_Input>;
  document_associated_users?: InputMaybe<Document_Associated_User_Arr_Rel_Insert_Input>;
  document_extra_field_values?: InputMaybe<Document_Extra_Field_Value_Arr_Rel_Insert_Input>;
  document_type?: InputMaybe<Document_Type_Obj_Rel_Insert_Input>;
  effectiveDate?: InputMaybe<Scalars['timestamp']>;
  expirationDate?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['uuid']>;
  isPrivate?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  noPublicityClauseFrequency?: InputMaybe<Scalars['String']>;
  noPublicityClauseLength?: InputMaybe<Scalars['Int']>;
  nonCompeteFrequency?: InputMaybe<Scalars['String']>;
  nonCompeteLength?: InputMaybe<Scalars['Int']>;
  nonSolicitFrequency?: InputMaybe<Scalars['String']>;
  nonSolicitLength?: InputMaybe<Scalars['Int']>;
  public_user_meta?: InputMaybe<Public_User_Meta_Obj_Rel_Insert_Input>;
  uploadedByUserCognitoSub?: InputMaybe<Scalars['String']>;
  uploadedByUserIdentityID?: InputMaybe<Scalars['String']>;
  user_meta?: InputMaybe<User_Meta_Obj_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type Document_Max_Fields = {
  __typename?: 'document_max_fields';
  documentKey?: Maybe<Scalars['String']>;
  documentTypeID?: Maybe<Scalars['uuid']>;
  effectiveDate?: Maybe<Scalars['timestamp']>;
  expirationDate?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
  noPublicityClauseFrequency?: Maybe<Scalars['String']>;
  noPublicityClauseLength?: Maybe<Scalars['Int']>;
  nonCompeteFrequency?: Maybe<Scalars['String']>;
  nonCompeteLength?: Maybe<Scalars['Int']>;
  nonSolicitFrequency?: Maybe<Scalars['String']>;
  nonSolicitLength?: Maybe<Scalars['Int']>;
  uploadedByUserCognitoSub?: Maybe<Scalars['String']>;
  uploadedByUserIdentityID?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "document" */
export type Document_Max_Order_By = {
  documentKey?: InputMaybe<Order_By>;
  documentTypeID?: InputMaybe<Order_By>;
  effectiveDate?: InputMaybe<Order_By>;
  expirationDate?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  noPublicityClauseFrequency?: InputMaybe<Order_By>;
  noPublicityClauseLength?: InputMaybe<Order_By>;
  nonCompeteFrequency?: InputMaybe<Order_By>;
  nonCompeteLength?: InputMaybe<Order_By>;
  nonSolicitFrequency?: InputMaybe<Order_By>;
  nonSolicitLength?: InputMaybe<Order_By>;
  uploadedByUserCognitoSub?: InputMaybe<Order_By>;
  uploadedByUserIdentityID?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Document_Min_Fields = {
  __typename?: 'document_min_fields';
  documentKey?: Maybe<Scalars['String']>;
  documentTypeID?: Maybe<Scalars['uuid']>;
  effectiveDate?: Maybe<Scalars['timestamp']>;
  expirationDate?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
  noPublicityClauseFrequency?: Maybe<Scalars['String']>;
  noPublicityClauseLength?: Maybe<Scalars['Int']>;
  nonCompeteFrequency?: Maybe<Scalars['String']>;
  nonCompeteLength?: Maybe<Scalars['Int']>;
  nonSolicitFrequency?: Maybe<Scalars['String']>;
  nonSolicitLength?: Maybe<Scalars['Int']>;
  uploadedByUserCognitoSub?: Maybe<Scalars['String']>;
  uploadedByUserIdentityID?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "document" */
export type Document_Min_Order_By = {
  documentKey?: InputMaybe<Order_By>;
  documentTypeID?: InputMaybe<Order_By>;
  effectiveDate?: InputMaybe<Order_By>;
  expirationDate?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  noPublicityClauseFrequency?: InputMaybe<Order_By>;
  noPublicityClauseLength?: InputMaybe<Order_By>;
  nonCompeteFrequency?: InputMaybe<Order_By>;
  nonCompeteLength?: InputMaybe<Order_By>;
  nonSolicitFrequency?: InputMaybe<Order_By>;
  nonSolicitLength?: InputMaybe<Order_By>;
  uploadedByUserCognitoSub?: InputMaybe<Order_By>;
  uploadedByUserIdentityID?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "document" */
export type Document_Mutation_Response = {
  __typename?: 'document_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Document>;
};

/** input type for inserting object relation for remote table "document" */
export type Document_Obj_Rel_Insert_Input = {
  data: Document_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Document_On_Conflict>;
};

/** on_conflict condition type for table "document" */
export type Document_On_Conflict = {
  constraint: Document_Constraint;
  update_columns?: Array<Document_Update_Column>;
  where?: InputMaybe<Document_Bool_Exp>;
};

/** Ordering options when selecting data from "document". */
export type Document_Order_By = {
  documentKey?: InputMaybe<Order_By>;
  documentTypeID?: InputMaybe<Order_By>;
  document_associated_companies_aggregate?: InputMaybe<Document_Associated_Company_Aggregate_Order_By>;
  document_associated_users_aggregate?: InputMaybe<Document_Associated_User_Aggregate_Order_By>;
  document_extra_field_values_aggregate?: InputMaybe<Document_Extra_Field_Value_Aggregate_Order_By>;
  document_type?: InputMaybe<Document_Type_Order_By>;
  effectiveDate?: InputMaybe<Order_By>;
  expirationDate?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  isPrivate?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  noPublicityClauseFrequency?: InputMaybe<Order_By>;
  noPublicityClauseLength?: InputMaybe<Order_By>;
  nonCompeteFrequency?: InputMaybe<Order_By>;
  nonCompeteLength?: InputMaybe<Order_By>;
  nonSolicitFrequency?: InputMaybe<Order_By>;
  nonSolicitLength?: InputMaybe<Order_By>;
  public_user_meta?: InputMaybe<Public_User_Meta_Order_By>;
  uploadedByUserCognitoSub?: InputMaybe<Order_By>;
  uploadedByUserIdentityID?: InputMaybe<Order_By>;
  user_meta?: InputMaybe<User_Meta_Order_By>;
};

/** primary key columns input for table: document */
export type Document_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "document" */
export enum Document_Select_Column {
  /** column name */
  DocumentKey = 'documentKey',
  /** column name */
  DocumentTypeId = 'documentTypeID',
  /** column name */
  EffectiveDate = 'effectiveDate',
  /** column name */
  ExpirationDate = 'expirationDate',
  /** column name */
  Id = 'id',
  /** column name */
  IsPrivate = 'isPrivate',
  /** column name */
  Name = 'name',
  /** column name */
  NoPublicityClauseFrequency = 'noPublicityClauseFrequency',
  /** column name */
  NoPublicityClauseLength = 'noPublicityClauseLength',
  /** column name */
  NonCompeteFrequency = 'nonCompeteFrequency',
  /** column name */
  NonCompeteLength = 'nonCompeteLength',
  /** column name */
  NonSolicitFrequency = 'nonSolicitFrequency',
  /** column name */
  NonSolicitLength = 'nonSolicitLength',
  /** column name */
  UploadedByUserCognitoSub = 'uploadedByUserCognitoSub',
  /** column name */
  UploadedByUserIdentityId = 'uploadedByUserIdentityID',
}

/** input type for updating data in table "document" */
export type Document_Set_Input = {
  documentKey?: InputMaybe<Scalars['String']>;
  documentTypeID?: InputMaybe<Scalars['uuid']>;
  effectiveDate?: InputMaybe<Scalars['timestamp']>;
  expirationDate?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['uuid']>;
  isPrivate?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  noPublicityClauseFrequency?: InputMaybe<Scalars['String']>;
  noPublicityClauseLength?: InputMaybe<Scalars['Int']>;
  nonCompeteFrequency?: InputMaybe<Scalars['String']>;
  nonCompeteLength?: InputMaybe<Scalars['Int']>;
  nonSolicitFrequency?: InputMaybe<Scalars['String']>;
  nonSolicitLength?: InputMaybe<Scalars['Int']>;
  uploadedByUserCognitoSub?: InputMaybe<Scalars['String']>;
  uploadedByUserIdentityID?: InputMaybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type Document_Stddev_Fields = {
  __typename?: 'document_stddev_fields';
  noPublicityClauseLength?: Maybe<Scalars['Float']>;
  nonCompeteLength?: Maybe<Scalars['Float']>;
  nonSolicitLength?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "document" */
export type Document_Stddev_Order_By = {
  noPublicityClauseLength?: InputMaybe<Order_By>;
  nonCompeteLength?: InputMaybe<Order_By>;
  nonSolicitLength?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Document_Stddev_Pop_Fields = {
  __typename?: 'document_stddev_pop_fields';
  noPublicityClauseLength?: Maybe<Scalars['Float']>;
  nonCompeteLength?: Maybe<Scalars['Float']>;
  nonSolicitLength?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "document" */
export type Document_Stddev_Pop_Order_By = {
  noPublicityClauseLength?: InputMaybe<Order_By>;
  nonCompeteLength?: InputMaybe<Order_By>;
  nonSolicitLength?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Document_Stddev_Samp_Fields = {
  __typename?: 'document_stddev_samp_fields';
  noPublicityClauseLength?: Maybe<Scalars['Float']>;
  nonCompeteLength?: Maybe<Scalars['Float']>;
  nonSolicitLength?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "document" */
export type Document_Stddev_Samp_Order_By = {
  noPublicityClauseLength?: InputMaybe<Order_By>;
  nonCompeteLength?: InputMaybe<Order_By>;
  nonSolicitLength?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "document" */
export type Document_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Document_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Document_Stream_Cursor_Value_Input = {
  documentKey?: InputMaybe<Scalars['String']>;
  documentTypeID?: InputMaybe<Scalars['uuid']>;
  effectiveDate?: InputMaybe<Scalars['timestamp']>;
  expirationDate?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['uuid']>;
  isPrivate?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  noPublicityClauseFrequency?: InputMaybe<Scalars['String']>;
  noPublicityClauseLength?: InputMaybe<Scalars['Int']>;
  nonCompeteFrequency?: InputMaybe<Scalars['String']>;
  nonCompeteLength?: InputMaybe<Scalars['Int']>;
  nonSolicitFrequency?: InputMaybe<Scalars['String']>;
  nonSolicitLength?: InputMaybe<Scalars['Int']>;
  uploadedByUserCognitoSub?: InputMaybe<Scalars['String']>;
  uploadedByUserIdentityID?: InputMaybe<Scalars['String']>;
};

/** aggregate sum on columns */
export type Document_Sum_Fields = {
  __typename?: 'document_sum_fields';
  noPublicityClauseLength?: Maybe<Scalars['Int']>;
  nonCompeteLength?: Maybe<Scalars['Int']>;
  nonSolicitLength?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "document" */
export type Document_Sum_Order_By = {
  noPublicityClauseLength?: InputMaybe<Order_By>;
  nonCompeteLength?: InputMaybe<Order_By>;
  nonSolicitLength?: InputMaybe<Order_By>;
};

/** columns and relationships of "document_type" */
export type Document_Type = {
  __typename?: 'document_type';
  /** An array relationship */
  documents: Array<Document>;
  /** An aggregate relationship */
  documents_aggregate: Document_Aggregate;
  id: Scalars['uuid'];
  name: Scalars['String'];
};

/** columns and relationships of "document_type" */
export type Document_TypeDocumentsArgs = {
  distinct_on?: InputMaybe<Array<Document_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Document_Order_By>>;
  where?: InputMaybe<Document_Bool_Exp>;
};

/** columns and relationships of "document_type" */
export type Document_TypeDocuments_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Document_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Document_Order_By>>;
  where?: InputMaybe<Document_Bool_Exp>;
};

/** aggregated selection of "document_type" */
export type Document_Type_Aggregate = {
  __typename?: 'document_type_aggregate';
  aggregate?: Maybe<Document_Type_Aggregate_Fields>;
  nodes: Array<Document_Type>;
};

/** aggregate fields of "document_type" */
export type Document_Type_Aggregate_Fields = {
  __typename?: 'document_type_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<Document_Type_Max_Fields>;
  min?: Maybe<Document_Type_Min_Fields>;
};

/** aggregate fields of "document_type" */
export type Document_Type_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Document_Type_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** Boolean expression to filter rows from the table "document_type". All fields are combined with a logical 'AND'. */
export type Document_Type_Bool_Exp = {
  _and?: InputMaybe<Array<Document_Type_Bool_Exp>>;
  _not?: InputMaybe<Document_Type_Bool_Exp>;
  _or?: InputMaybe<Array<Document_Type_Bool_Exp>>;
  documents?: InputMaybe<Document_Bool_Exp>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "document_type" */
export enum Document_Type_Constraint {
  /** unique or primary key constraint on columns "name" */
  DocumentTypeNameKey = 'document_type_name_key',
  /** unique or primary key constraint on columns "id" */
  DocumentTypePkey = 'document_type_pkey',
}

/** input type for inserting data into table "document_type" */
export type Document_Type_Insert_Input = {
  documents?: InputMaybe<Document_Arr_Rel_Insert_Input>;
  id?: InputMaybe<Scalars['uuid']>;
  name?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Document_Type_Max_Fields = {
  __typename?: 'document_type_max_fields';
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type Document_Type_Min_Fields = {
  __typename?: 'document_type_min_fields';
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "document_type" */
export type Document_Type_Mutation_Response = {
  __typename?: 'document_type_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Document_Type>;
};

/** input type for inserting object relation for remote table "document_type" */
export type Document_Type_Obj_Rel_Insert_Input = {
  data: Document_Type_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Document_Type_On_Conflict>;
};

/** on_conflict condition type for table "document_type" */
export type Document_Type_On_Conflict = {
  constraint: Document_Type_Constraint;
  update_columns?: Array<Document_Type_Update_Column>;
  where?: InputMaybe<Document_Type_Bool_Exp>;
};

/** Ordering options when selecting data from "document_type". */
export type Document_Type_Order_By = {
  documents_aggregate?: InputMaybe<Document_Aggregate_Order_By>;
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: document_type */
export type Document_Type_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "document_type" */
export enum Document_Type_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
}

/** input type for updating data in table "document_type" */
export type Document_Type_Set_Input = {
  id?: InputMaybe<Scalars['uuid']>;
  name?: InputMaybe<Scalars['String']>;
};

/** Streaming cursor of the table "document_type" */
export type Document_Type_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Document_Type_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Document_Type_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['uuid']>;
  name?: InputMaybe<Scalars['String']>;
};

/** update columns of table "document_type" */
export enum Document_Type_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
}

export type Document_Type_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Document_Type_Set_Input>;
  where: Document_Type_Bool_Exp;
};

/** update columns of table "document" */
export enum Document_Update_Column {
  /** column name */
  DocumentKey = 'documentKey',
  /** column name */
  DocumentTypeId = 'documentTypeID',
  /** column name */
  EffectiveDate = 'effectiveDate',
  /** column name */
  ExpirationDate = 'expirationDate',
  /** column name */
  Id = 'id',
  /** column name */
  IsPrivate = 'isPrivate',
  /** column name */
  Name = 'name',
  /** column name */
  NoPublicityClauseFrequency = 'noPublicityClauseFrequency',
  /** column name */
  NoPublicityClauseLength = 'noPublicityClauseLength',
  /** column name */
  NonCompeteFrequency = 'nonCompeteFrequency',
  /** column name */
  NonCompeteLength = 'nonCompeteLength',
  /** column name */
  NonSolicitFrequency = 'nonSolicitFrequency',
  /** column name */
  NonSolicitLength = 'nonSolicitLength',
  /** column name */
  UploadedByUserCognitoSub = 'uploadedByUserCognitoSub',
  /** column name */
  UploadedByUserIdentityId = 'uploadedByUserIdentityID',
}

export type Document_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Document_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Document_Set_Input>;
  where: Document_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Document_Var_Pop_Fields = {
  __typename?: 'document_var_pop_fields';
  noPublicityClauseLength?: Maybe<Scalars['Float']>;
  nonCompeteLength?: Maybe<Scalars['Float']>;
  nonSolicitLength?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "document" */
export type Document_Var_Pop_Order_By = {
  noPublicityClauseLength?: InputMaybe<Order_By>;
  nonCompeteLength?: InputMaybe<Order_By>;
  nonSolicitLength?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Document_Var_Samp_Fields = {
  __typename?: 'document_var_samp_fields';
  noPublicityClauseLength?: Maybe<Scalars['Float']>;
  nonCompeteLength?: Maybe<Scalars['Float']>;
  nonSolicitLength?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "document" */
export type Document_Var_Samp_Order_By = {
  noPublicityClauseLength?: InputMaybe<Order_By>;
  nonCompeteLength?: InputMaybe<Order_By>;
  nonSolicitLength?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Document_Variance_Fields = {
  __typename?: 'document_variance_fields';
  noPublicityClauseLength?: Maybe<Scalars['Float']>;
  nonCompeteLength?: Maybe<Scalars['Float']>;
  nonSolicitLength?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "document" */
export type Document_Variance_Order_By = {
  noPublicityClauseLength?: InputMaybe<Order_By>;
  nonCompeteLength?: InputMaybe<Order_By>;
  nonSolicitLength?: InputMaybe<Order_By>;
};

/** columns and relationships of "endpoint" */
export type Endpoint = {
  __typename?: 'endpoint';
  /** An array relationship */
  capability_endpoints: Array<Capability_Endpoint>;
  /** An aggregate relationship */
  capability_endpoints_aggregate: Capability_Endpoint_Aggregate;
  global: Scalars['Boolean'];
  id: Scalars['uuid'];
  name: Scalars['String'];
  /** An array relationship */
  route_endpoints: Array<Route_Endpoint>;
  /** An aggregate relationship */
  route_endpoints_aggregate: Route_Endpoint_Aggregate;
  /** An array relationship */
  user_profile_tab_endpoints: Array<User_Profile_Tab_Endpoint>;
  /** An aggregate relationship */
  user_profile_tab_endpoints_aggregate: User_Profile_Tab_Endpoint_Aggregate;
};

/** columns and relationships of "endpoint" */
export type EndpointCapability_EndpointsArgs = {
  distinct_on?: InputMaybe<Array<Capability_Endpoint_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Capability_Endpoint_Order_By>>;
  where?: InputMaybe<Capability_Endpoint_Bool_Exp>;
};

/** columns and relationships of "endpoint" */
export type EndpointCapability_Endpoints_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Capability_Endpoint_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Capability_Endpoint_Order_By>>;
  where?: InputMaybe<Capability_Endpoint_Bool_Exp>;
};

/** columns and relationships of "endpoint" */
export type EndpointRoute_EndpointsArgs = {
  distinct_on?: InputMaybe<Array<Route_Endpoint_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Route_Endpoint_Order_By>>;
  where?: InputMaybe<Route_Endpoint_Bool_Exp>;
};

/** columns and relationships of "endpoint" */
export type EndpointRoute_Endpoints_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Route_Endpoint_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Route_Endpoint_Order_By>>;
  where?: InputMaybe<Route_Endpoint_Bool_Exp>;
};

/** columns and relationships of "endpoint" */
export type EndpointUser_Profile_Tab_EndpointsArgs = {
  distinct_on?: InputMaybe<Array<User_Profile_Tab_Endpoint_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Profile_Tab_Endpoint_Order_By>>;
  where?: InputMaybe<User_Profile_Tab_Endpoint_Bool_Exp>;
};

/** columns and relationships of "endpoint" */
export type EndpointUser_Profile_Tab_Endpoints_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Profile_Tab_Endpoint_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Profile_Tab_Endpoint_Order_By>>;
  where?: InputMaybe<User_Profile_Tab_Endpoint_Bool_Exp>;
};

/** aggregated selection of "endpoint" */
export type Endpoint_Aggregate = {
  __typename?: 'endpoint_aggregate';
  aggregate?: Maybe<Endpoint_Aggregate_Fields>;
  nodes: Array<Endpoint>;
};

/** aggregate fields of "endpoint" */
export type Endpoint_Aggregate_Fields = {
  __typename?: 'endpoint_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<Endpoint_Max_Fields>;
  min?: Maybe<Endpoint_Min_Fields>;
};

/** aggregate fields of "endpoint" */
export type Endpoint_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Endpoint_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** Boolean expression to filter rows from the table "endpoint". All fields are combined with a logical 'AND'. */
export type Endpoint_Bool_Exp = {
  _and?: InputMaybe<Array<Endpoint_Bool_Exp>>;
  _not?: InputMaybe<Endpoint_Bool_Exp>;
  _or?: InputMaybe<Array<Endpoint_Bool_Exp>>;
  capability_endpoints?: InputMaybe<Capability_Endpoint_Bool_Exp>;
  global?: InputMaybe<Boolean_Comparison_Exp>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  route_endpoints?: InputMaybe<Route_Endpoint_Bool_Exp>;
  user_profile_tab_endpoints?: InputMaybe<User_Profile_Tab_Endpoint_Bool_Exp>;
};

/** unique or primary key constraints on table "endpoint" */
export enum Endpoint_Constraint {
  /** unique or primary key constraint on columns "name" */
  EndpointNameKey = 'endpoint_name_key',
  /** unique or primary key constraint on columns "id" */
  EndpointPkey = 'endpoint_pkey',
}

/** input type for inserting data into table "endpoint" */
export type Endpoint_Insert_Input = {
  capability_endpoints?: InputMaybe<Capability_Endpoint_Arr_Rel_Insert_Input>;
  global?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['uuid']>;
  name?: InputMaybe<Scalars['String']>;
  route_endpoints?: InputMaybe<Route_Endpoint_Arr_Rel_Insert_Input>;
  user_profile_tab_endpoints?: InputMaybe<User_Profile_Tab_Endpoint_Arr_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type Endpoint_Max_Fields = {
  __typename?: 'endpoint_max_fields';
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type Endpoint_Min_Fields = {
  __typename?: 'endpoint_min_fields';
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "endpoint" */
export type Endpoint_Mutation_Response = {
  __typename?: 'endpoint_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Endpoint>;
};

/** input type for inserting object relation for remote table "endpoint" */
export type Endpoint_Obj_Rel_Insert_Input = {
  data: Endpoint_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Endpoint_On_Conflict>;
};

/** on_conflict condition type for table "endpoint" */
export type Endpoint_On_Conflict = {
  constraint: Endpoint_Constraint;
  update_columns?: Array<Endpoint_Update_Column>;
  where?: InputMaybe<Endpoint_Bool_Exp>;
};

/** Ordering options when selecting data from "endpoint". */
export type Endpoint_Order_By = {
  capability_endpoints_aggregate?: InputMaybe<Capability_Endpoint_Aggregate_Order_By>;
  global?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  route_endpoints_aggregate?: InputMaybe<Route_Endpoint_Aggregate_Order_By>;
  user_profile_tab_endpoints_aggregate?: InputMaybe<User_Profile_Tab_Endpoint_Aggregate_Order_By>;
};

/** primary key columns input for table: endpoint */
export type Endpoint_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "endpoint" */
export enum Endpoint_Select_Column {
  /** column name */
  Global = 'global',
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
}

/** input type for updating data in table "endpoint" */
export type Endpoint_Set_Input = {
  global?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['uuid']>;
  name?: InputMaybe<Scalars['String']>;
};

/** Streaming cursor of the table "endpoint" */
export type Endpoint_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Endpoint_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Endpoint_Stream_Cursor_Value_Input = {
  global?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['uuid']>;
  name?: InputMaybe<Scalars['String']>;
};

/** update columns of table "endpoint" */
export enum Endpoint_Update_Column {
  /** column name */
  Global = 'global',
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
}

export type Endpoint_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Endpoint_Set_Input>;
  where: Endpoint_Bool_Exp;
};

/** columns and relationships of "fixed_price_invoice_line_item" */
export type Fixed_Price_Invoice_Line_Item = {
  __typename?: 'fixed_price_invoice_line_item';
  description: Scalars['String'];
  id: Scalars['uuid'];
  /** An object relationship */
  invoice: Invoice;
  invoiceID: Scalars['Int'];
  /** An object relationship */
  invoice_distribution?: Maybe<Invoice_Distribution>;
  price: Scalars['numeric'];
  productOrServiceID: Scalars['uuid'];
  /** An object relationship */
  product_or_service_type: Product_Or_Service_Type;
  /** An object relationship */
  public_user_meta?: Maybe<Public_User_Meta>;
  teamMemberID?: Maybe<Scalars['uuid']>;
  /** An object relationship */
  user_meta?: Maybe<User_Meta>;
};

/** aggregated selection of "fixed_price_invoice_line_item" */
export type Fixed_Price_Invoice_Line_Item_Aggregate = {
  __typename?: 'fixed_price_invoice_line_item_aggregate';
  aggregate?: Maybe<Fixed_Price_Invoice_Line_Item_Aggregate_Fields>;
  nodes: Array<Fixed_Price_Invoice_Line_Item>;
};

/** aggregate fields of "fixed_price_invoice_line_item" */
export type Fixed_Price_Invoice_Line_Item_Aggregate_Fields = {
  __typename?: 'fixed_price_invoice_line_item_aggregate_fields';
  avg?: Maybe<Fixed_Price_Invoice_Line_Item_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Fixed_Price_Invoice_Line_Item_Max_Fields>;
  min?: Maybe<Fixed_Price_Invoice_Line_Item_Min_Fields>;
  stddev?: Maybe<Fixed_Price_Invoice_Line_Item_Stddev_Fields>;
  stddev_pop?: Maybe<Fixed_Price_Invoice_Line_Item_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Fixed_Price_Invoice_Line_Item_Stddev_Samp_Fields>;
  sum?: Maybe<Fixed_Price_Invoice_Line_Item_Sum_Fields>;
  var_pop?: Maybe<Fixed_Price_Invoice_Line_Item_Var_Pop_Fields>;
  var_samp?: Maybe<Fixed_Price_Invoice_Line_Item_Var_Samp_Fields>;
  variance?: Maybe<Fixed_Price_Invoice_Line_Item_Variance_Fields>;
};

/** aggregate fields of "fixed_price_invoice_line_item" */
export type Fixed_Price_Invoice_Line_Item_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Fixed_Price_Invoice_Line_Item_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "fixed_price_invoice_line_item" */
export type Fixed_Price_Invoice_Line_Item_Aggregate_Order_By = {
  avg?: InputMaybe<Fixed_Price_Invoice_Line_Item_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Fixed_Price_Invoice_Line_Item_Max_Order_By>;
  min?: InputMaybe<Fixed_Price_Invoice_Line_Item_Min_Order_By>;
  stddev?: InputMaybe<Fixed_Price_Invoice_Line_Item_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Fixed_Price_Invoice_Line_Item_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Fixed_Price_Invoice_Line_Item_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Fixed_Price_Invoice_Line_Item_Sum_Order_By>;
  var_pop?: InputMaybe<Fixed_Price_Invoice_Line_Item_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Fixed_Price_Invoice_Line_Item_Var_Samp_Order_By>;
  variance?: InputMaybe<Fixed_Price_Invoice_Line_Item_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "fixed_price_invoice_line_item" */
export type Fixed_Price_Invoice_Line_Item_Arr_Rel_Insert_Input = {
  data: Array<Fixed_Price_Invoice_Line_Item_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Fixed_Price_Invoice_Line_Item_On_Conflict>;
};

/** aggregate avg on columns */
export type Fixed_Price_Invoice_Line_Item_Avg_Fields = {
  __typename?: 'fixed_price_invoice_line_item_avg_fields';
  invoiceID?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "fixed_price_invoice_line_item" */
export type Fixed_Price_Invoice_Line_Item_Avg_Order_By = {
  invoiceID?: InputMaybe<Order_By>;
  price?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "fixed_price_invoice_line_item". All fields are combined with a logical 'AND'. */
export type Fixed_Price_Invoice_Line_Item_Bool_Exp = {
  _and?: InputMaybe<Array<Fixed_Price_Invoice_Line_Item_Bool_Exp>>;
  _not?: InputMaybe<Fixed_Price_Invoice_Line_Item_Bool_Exp>;
  _or?: InputMaybe<Array<Fixed_Price_Invoice_Line_Item_Bool_Exp>>;
  description?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  invoice?: InputMaybe<Invoice_Bool_Exp>;
  invoiceID?: InputMaybe<Int_Comparison_Exp>;
  invoice_distribution?: InputMaybe<Invoice_Distribution_Bool_Exp>;
  price?: InputMaybe<Numeric_Comparison_Exp>;
  productOrServiceID?: InputMaybe<Uuid_Comparison_Exp>;
  product_or_service_type?: InputMaybe<Product_Or_Service_Type_Bool_Exp>;
  public_user_meta?: InputMaybe<Public_User_Meta_Bool_Exp>;
  teamMemberID?: InputMaybe<Uuid_Comparison_Exp>;
  user_meta?: InputMaybe<User_Meta_Bool_Exp>;
};

/** unique or primary key constraints on table "fixed_price_invoice_line_item" */
export enum Fixed_Price_Invoice_Line_Item_Constraint {
  /** unique or primary key constraint on columns "id" */
  FixedPriceInvoiceLineItemPkey = 'fixed_price_invoice_line_item_pkey',
}

/** input type for incrementing numeric columns in table "fixed_price_invoice_line_item" */
export type Fixed_Price_Invoice_Line_Item_Inc_Input = {
  invoiceID?: InputMaybe<Scalars['Int']>;
  price?: InputMaybe<Scalars['numeric']>;
};

/** input type for inserting data into table "fixed_price_invoice_line_item" */
export type Fixed_Price_Invoice_Line_Item_Insert_Input = {
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['uuid']>;
  invoice?: InputMaybe<Invoice_Obj_Rel_Insert_Input>;
  invoiceID?: InputMaybe<Scalars['Int']>;
  invoice_distribution?: InputMaybe<Invoice_Distribution_Obj_Rel_Insert_Input>;
  price?: InputMaybe<Scalars['numeric']>;
  productOrServiceID?: InputMaybe<Scalars['uuid']>;
  product_or_service_type?: InputMaybe<Product_Or_Service_Type_Obj_Rel_Insert_Input>;
  public_user_meta?: InputMaybe<Public_User_Meta_Obj_Rel_Insert_Input>;
  teamMemberID?: InputMaybe<Scalars['uuid']>;
  user_meta?: InputMaybe<User_Meta_Obj_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type Fixed_Price_Invoice_Line_Item_Max_Fields = {
  __typename?: 'fixed_price_invoice_line_item_max_fields';
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  invoiceID?: Maybe<Scalars['Int']>;
  price?: Maybe<Scalars['numeric']>;
  productOrServiceID?: Maybe<Scalars['uuid']>;
  teamMemberID?: Maybe<Scalars['uuid']>;
};

/** order by max() on columns of table "fixed_price_invoice_line_item" */
export type Fixed_Price_Invoice_Line_Item_Max_Order_By = {
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  invoiceID?: InputMaybe<Order_By>;
  price?: InputMaybe<Order_By>;
  productOrServiceID?: InputMaybe<Order_By>;
  teamMemberID?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Fixed_Price_Invoice_Line_Item_Min_Fields = {
  __typename?: 'fixed_price_invoice_line_item_min_fields';
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  invoiceID?: Maybe<Scalars['Int']>;
  price?: Maybe<Scalars['numeric']>;
  productOrServiceID?: Maybe<Scalars['uuid']>;
  teamMemberID?: Maybe<Scalars['uuid']>;
};

/** order by min() on columns of table "fixed_price_invoice_line_item" */
export type Fixed_Price_Invoice_Line_Item_Min_Order_By = {
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  invoiceID?: InputMaybe<Order_By>;
  price?: InputMaybe<Order_By>;
  productOrServiceID?: InputMaybe<Order_By>;
  teamMemberID?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "fixed_price_invoice_line_item" */
export type Fixed_Price_Invoice_Line_Item_Mutation_Response = {
  __typename?: 'fixed_price_invoice_line_item_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Fixed_Price_Invoice_Line_Item>;
};

/** input type for inserting object relation for remote table "fixed_price_invoice_line_item" */
export type Fixed_Price_Invoice_Line_Item_Obj_Rel_Insert_Input = {
  data: Fixed_Price_Invoice_Line_Item_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Fixed_Price_Invoice_Line_Item_On_Conflict>;
};

/** on_conflict condition type for table "fixed_price_invoice_line_item" */
export type Fixed_Price_Invoice_Line_Item_On_Conflict = {
  constraint: Fixed_Price_Invoice_Line_Item_Constraint;
  update_columns?: Array<Fixed_Price_Invoice_Line_Item_Update_Column>;
  where?: InputMaybe<Fixed_Price_Invoice_Line_Item_Bool_Exp>;
};

/** Ordering options when selecting data from "fixed_price_invoice_line_item". */
export type Fixed_Price_Invoice_Line_Item_Order_By = {
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  invoice?: InputMaybe<Invoice_Order_By>;
  invoiceID?: InputMaybe<Order_By>;
  invoice_distribution?: InputMaybe<Invoice_Distribution_Order_By>;
  price?: InputMaybe<Order_By>;
  productOrServiceID?: InputMaybe<Order_By>;
  product_or_service_type?: InputMaybe<Product_Or_Service_Type_Order_By>;
  public_user_meta?: InputMaybe<Public_User_Meta_Order_By>;
  teamMemberID?: InputMaybe<Order_By>;
  user_meta?: InputMaybe<User_Meta_Order_By>;
};

/** primary key columns input for table: fixed_price_invoice_line_item */
export type Fixed_Price_Invoice_Line_Item_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "fixed_price_invoice_line_item" */
export enum Fixed_Price_Invoice_Line_Item_Select_Column {
  /** column name */
  Description = 'description',
  /** column name */
  Id = 'id',
  /** column name */
  InvoiceId = 'invoiceID',
  /** column name */
  Price = 'price',
  /** column name */
  ProductOrServiceId = 'productOrServiceID',
  /** column name */
  TeamMemberId = 'teamMemberID',
}

/** input type for updating data in table "fixed_price_invoice_line_item" */
export type Fixed_Price_Invoice_Line_Item_Set_Input = {
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['uuid']>;
  invoiceID?: InputMaybe<Scalars['Int']>;
  price?: InputMaybe<Scalars['numeric']>;
  productOrServiceID?: InputMaybe<Scalars['uuid']>;
  teamMemberID?: InputMaybe<Scalars['uuid']>;
};

/** aggregate stddev on columns */
export type Fixed_Price_Invoice_Line_Item_Stddev_Fields = {
  __typename?: 'fixed_price_invoice_line_item_stddev_fields';
  invoiceID?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "fixed_price_invoice_line_item" */
export type Fixed_Price_Invoice_Line_Item_Stddev_Order_By = {
  invoiceID?: InputMaybe<Order_By>;
  price?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Fixed_Price_Invoice_Line_Item_Stddev_Pop_Fields = {
  __typename?: 'fixed_price_invoice_line_item_stddev_pop_fields';
  invoiceID?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "fixed_price_invoice_line_item" */
export type Fixed_Price_Invoice_Line_Item_Stddev_Pop_Order_By = {
  invoiceID?: InputMaybe<Order_By>;
  price?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Fixed_Price_Invoice_Line_Item_Stddev_Samp_Fields = {
  __typename?: 'fixed_price_invoice_line_item_stddev_samp_fields';
  invoiceID?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "fixed_price_invoice_line_item" */
export type Fixed_Price_Invoice_Line_Item_Stddev_Samp_Order_By = {
  invoiceID?: InputMaybe<Order_By>;
  price?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "fixed_price_invoice_line_item" */
export type Fixed_Price_Invoice_Line_Item_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Fixed_Price_Invoice_Line_Item_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Fixed_Price_Invoice_Line_Item_Stream_Cursor_Value_Input = {
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['uuid']>;
  invoiceID?: InputMaybe<Scalars['Int']>;
  price?: InputMaybe<Scalars['numeric']>;
  productOrServiceID?: InputMaybe<Scalars['uuid']>;
  teamMemberID?: InputMaybe<Scalars['uuid']>;
};

/** aggregate sum on columns */
export type Fixed_Price_Invoice_Line_Item_Sum_Fields = {
  __typename?: 'fixed_price_invoice_line_item_sum_fields';
  invoiceID?: Maybe<Scalars['Int']>;
  price?: Maybe<Scalars['numeric']>;
};

/** order by sum() on columns of table "fixed_price_invoice_line_item" */
export type Fixed_Price_Invoice_Line_Item_Sum_Order_By = {
  invoiceID?: InputMaybe<Order_By>;
  price?: InputMaybe<Order_By>;
};

/** update columns of table "fixed_price_invoice_line_item" */
export enum Fixed_Price_Invoice_Line_Item_Update_Column {
  /** column name */
  Description = 'description',
  /** column name */
  Id = 'id',
  /** column name */
  InvoiceId = 'invoiceID',
  /** column name */
  Price = 'price',
  /** column name */
  ProductOrServiceId = 'productOrServiceID',
  /** column name */
  TeamMemberId = 'teamMemberID',
}

export type Fixed_Price_Invoice_Line_Item_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Fixed_Price_Invoice_Line_Item_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Fixed_Price_Invoice_Line_Item_Set_Input>;
  where: Fixed_Price_Invoice_Line_Item_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Fixed_Price_Invoice_Line_Item_Var_Pop_Fields = {
  __typename?: 'fixed_price_invoice_line_item_var_pop_fields';
  invoiceID?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "fixed_price_invoice_line_item" */
export type Fixed_Price_Invoice_Line_Item_Var_Pop_Order_By = {
  invoiceID?: InputMaybe<Order_By>;
  price?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Fixed_Price_Invoice_Line_Item_Var_Samp_Fields = {
  __typename?: 'fixed_price_invoice_line_item_var_samp_fields';
  invoiceID?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "fixed_price_invoice_line_item" */
export type Fixed_Price_Invoice_Line_Item_Var_Samp_Order_By = {
  invoiceID?: InputMaybe<Order_By>;
  price?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Fixed_Price_Invoice_Line_Item_Variance_Fields = {
  __typename?: 'fixed_price_invoice_line_item_variance_fields';
  invoiceID?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "fixed_price_invoice_line_item" */
export type Fixed_Price_Invoice_Line_Item_Variance_Order_By = {
  invoiceID?: InputMaybe<Order_By>;
  price?: InputMaybe<Order_By>;
};

/** Boolean expression to compare columns of type "float8". All fields are combined with logical 'AND'. */
export type Float8_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['float8']>;
  _gt?: InputMaybe<Scalars['float8']>;
  _gte?: InputMaybe<Scalars['float8']>;
  _in?: InputMaybe<Array<Scalars['float8']>>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  _lt?: InputMaybe<Scalars['float8']>;
  _lte?: InputMaybe<Scalars['float8']>;
  _neq?: InputMaybe<Scalars['float8']>;
  _nin?: InputMaybe<Array<Scalars['float8']>>;
};

/** columns and relationships of "in_market_experience_level" */
export type In_Market_Experience_Level = {
  __typename?: 'in_market_experience_level';
  id: Scalars['uuid'];
  name: Scalars['String'];
  /** An array relationship */
  user_in_market_experiences: Array<User_In_Market_Experience>;
  /** An aggregate relationship */
  user_in_market_experiences_aggregate: User_In_Market_Experience_Aggregate;
};

/** columns and relationships of "in_market_experience_level" */
export type In_Market_Experience_LevelUser_In_Market_ExperiencesArgs = {
  distinct_on?: InputMaybe<Array<User_In_Market_Experience_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_In_Market_Experience_Order_By>>;
  where?: InputMaybe<User_In_Market_Experience_Bool_Exp>;
};

/** columns and relationships of "in_market_experience_level" */
export type In_Market_Experience_LevelUser_In_Market_Experiences_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_In_Market_Experience_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_In_Market_Experience_Order_By>>;
  where?: InputMaybe<User_In_Market_Experience_Bool_Exp>;
};

/** aggregated selection of "in_market_experience_level" */
export type In_Market_Experience_Level_Aggregate = {
  __typename?: 'in_market_experience_level_aggregate';
  aggregate?: Maybe<In_Market_Experience_Level_Aggregate_Fields>;
  nodes: Array<In_Market_Experience_Level>;
};

/** aggregate fields of "in_market_experience_level" */
export type In_Market_Experience_Level_Aggregate_Fields = {
  __typename?: 'in_market_experience_level_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<In_Market_Experience_Level_Max_Fields>;
  min?: Maybe<In_Market_Experience_Level_Min_Fields>;
};

/** aggregate fields of "in_market_experience_level" */
export type In_Market_Experience_Level_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<In_Market_Experience_Level_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** Boolean expression to filter rows from the table "in_market_experience_level". All fields are combined with a logical 'AND'. */
export type In_Market_Experience_Level_Bool_Exp = {
  _and?: InputMaybe<Array<In_Market_Experience_Level_Bool_Exp>>;
  _not?: InputMaybe<In_Market_Experience_Level_Bool_Exp>;
  _or?: InputMaybe<Array<In_Market_Experience_Level_Bool_Exp>>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  user_in_market_experiences?: InputMaybe<User_In_Market_Experience_Bool_Exp>;
};

/** unique or primary key constraints on table "in_market_experience_level" */
export enum In_Market_Experience_Level_Constraint {
  /** unique or primary key constraint on columns "name" */
  InMarketExperienceLevelNameKey = 'in_market_experience_level_name_key',
  /** unique or primary key constraint on columns "id" */
  InMarketExperienceLevelPkey = 'in_market_experience_level_pkey',
}

/** input type for inserting data into table "in_market_experience_level" */
export type In_Market_Experience_Level_Insert_Input = {
  id?: InputMaybe<Scalars['uuid']>;
  name?: InputMaybe<Scalars['String']>;
  user_in_market_experiences?: InputMaybe<User_In_Market_Experience_Arr_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type In_Market_Experience_Level_Max_Fields = {
  __typename?: 'in_market_experience_level_max_fields';
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type In_Market_Experience_Level_Min_Fields = {
  __typename?: 'in_market_experience_level_min_fields';
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "in_market_experience_level" */
export type In_Market_Experience_Level_Mutation_Response = {
  __typename?: 'in_market_experience_level_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<In_Market_Experience_Level>;
};

/** input type for inserting object relation for remote table "in_market_experience_level" */
export type In_Market_Experience_Level_Obj_Rel_Insert_Input = {
  data: In_Market_Experience_Level_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<In_Market_Experience_Level_On_Conflict>;
};

/** on_conflict condition type for table "in_market_experience_level" */
export type In_Market_Experience_Level_On_Conflict = {
  constraint: In_Market_Experience_Level_Constraint;
  update_columns?: Array<In_Market_Experience_Level_Update_Column>;
  where?: InputMaybe<In_Market_Experience_Level_Bool_Exp>;
};

/** Ordering options when selecting data from "in_market_experience_level". */
export type In_Market_Experience_Level_Order_By = {
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  user_in_market_experiences_aggregate?: InputMaybe<User_In_Market_Experience_Aggregate_Order_By>;
};

/** primary key columns input for table: in_market_experience_level */
export type In_Market_Experience_Level_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "in_market_experience_level" */
export enum In_Market_Experience_Level_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
}

/** input type for updating data in table "in_market_experience_level" */
export type In_Market_Experience_Level_Set_Input = {
  id?: InputMaybe<Scalars['uuid']>;
  name?: InputMaybe<Scalars['String']>;
};

/** Streaming cursor of the table "in_market_experience_level" */
export type In_Market_Experience_Level_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: In_Market_Experience_Level_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type In_Market_Experience_Level_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['uuid']>;
  name?: InputMaybe<Scalars['String']>;
};

/** update columns of table "in_market_experience_level" */
export enum In_Market_Experience_Level_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
}

export type In_Market_Experience_Level_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<In_Market_Experience_Level_Set_Input>;
  where: In_Market_Experience_Level_Bool_Exp;
};

/** columns and relationships of "industry" */
export type Industry = {
  __typename?: 'industry';
  /** An array relationship */
  case_study_industries: Array<Case_Study_Industry>;
  /** An aggregate relationship */
  case_study_industries_aggregate: Case_Study_Industry_Aggregate;
  /** An array relationship */
  companies: Array<Company>;
  /** An aggregate relationship */
  companies_aggregate: Company_Aggregate;
  description?: Maybe<Scalars['String']>;
  id: Scalars['uuid'];
  /** An array relationship */
  industry_google_groups: Array<Industry_Google_Group>;
  /** An aggregate relationship */
  industry_google_groups_aggregate: Industry_Google_Group_Aggregate;
  /** An array relationship */
  industry_slack_channels: Array<Industry_Slack_Channel>;
  /** An aggregate relationship */
  industry_slack_channels_aggregate: Industry_Slack_Channel_Aggregate;
  name: Scalars['String'];
  /** An array relationship */
  team_industries: Array<Team_Industry>;
  /** An aggregate relationship */
  team_industries_aggregate: Team_Industry_Aggregate;
  /** An array relationship */
  user_industry_experiences: Array<User_Industry_Experience>;
  /** An aggregate relationship */
  user_industry_experiences_aggregate: User_Industry_Experience_Aggregate;
  /** An array relationship */
  user_profile_companies: Array<User_Profile_Company>;
  /** An aggregate relationship */
  user_profile_companies_aggregate: User_Profile_Company_Aggregate;
  /** An array relationship */
  user_profile_industries: Array<User_Profile_Industry>;
  /** An aggregate relationship */
  user_profile_industries_aggregate: User_Profile_Industry_Aggregate;
};

/** columns and relationships of "industry" */
export type IndustryCase_Study_IndustriesArgs = {
  distinct_on?: InputMaybe<Array<Case_Study_Industry_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Case_Study_Industry_Order_By>>;
  where?: InputMaybe<Case_Study_Industry_Bool_Exp>;
};

/** columns and relationships of "industry" */
export type IndustryCase_Study_Industries_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Case_Study_Industry_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Case_Study_Industry_Order_By>>;
  where?: InputMaybe<Case_Study_Industry_Bool_Exp>;
};

/** columns and relationships of "industry" */
export type IndustryCompaniesArgs = {
  distinct_on?: InputMaybe<Array<Company_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Company_Order_By>>;
  where?: InputMaybe<Company_Bool_Exp>;
};

/** columns and relationships of "industry" */
export type IndustryCompanies_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Company_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Company_Order_By>>;
  where?: InputMaybe<Company_Bool_Exp>;
};

/** columns and relationships of "industry" */
export type IndustryIndustry_Google_GroupsArgs = {
  distinct_on?: InputMaybe<Array<Industry_Google_Group_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Industry_Google_Group_Order_By>>;
  where?: InputMaybe<Industry_Google_Group_Bool_Exp>;
};

/** columns and relationships of "industry" */
export type IndustryIndustry_Google_Groups_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Industry_Google_Group_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Industry_Google_Group_Order_By>>;
  where?: InputMaybe<Industry_Google_Group_Bool_Exp>;
};

/** columns and relationships of "industry" */
export type IndustryIndustry_Slack_ChannelsArgs = {
  distinct_on?: InputMaybe<Array<Industry_Slack_Channel_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Industry_Slack_Channel_Order_By>>;
  where?: InputMaybe<Industry_Slack_Channel_Bool_Exp>;
};

/** columns and relationships of "industry" */
export type IndustryIndustry_Slack_Channels_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Industry_Slack_Channel_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Industry_Slack_Channel_Order_By>>;
  where?: InputMaybe<Industry_Slack_Channel_Bool_Exp>;
};

/** columns and relationships of "industry" */
export type IndustryTeam_IndustriesArgs = {
  distinct_on?: InputMaybe<Array<Team_Industry_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Team_Industry_Order_By>>;
  where?: InputMaybe<Team_Industry_Bool_Exp>;
};

/** columns and relationships of "industry" */
export type IndustryTeam_Industries_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Team_Industry_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Team_Industry_Order_By>>;
  where?: InputMaybe<Team_Industry_Bool_Exp>;
};

/** columns and relationships of "industry" */
export type IndustryUser_Industry_ExperiencesArgs = {
  distinct_on?: InputMaybe<Array<User_Industry_Experience_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Industry_Experience_Order_By>>;
  where?: InputMaybe<User_Industry_Experience_Bool_Exp>;
};

/** columns and relationships of "industry" */
export type IndustryUser_Industry_Experiences_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Industry_Experience_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Industry_Experience_Order_By>>;
  where?: InputMaybe<User_Industry_Experience_Bool_Exp>;
};

/** columns and relationships of "industry" */
export type IndustryUser_Profile_CompaniesArgs = {
  distinct_on?: InputMaybe<Array<User_Profile_Company_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Profile_Company_Order_By>>;
  where?: InputMaybe<User_Profile_Company_Bool_Exp>;
};

/** columns and relationships of "industry" */
export type IndustryUser_Profile_Companies_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Profile_Company_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Profile_Company_Order_By>>;
  where?: InputMaybe<User_Profile_Company_Bool_Exp>;
};

/** columns and relationships of "industry" */
export type IndustryUser_Profile_IndustriesArgs = {
  distinct_on?: InputMaybe<Array<User_Profile_Industry_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Profile_Industry_Order_By>>;
  where?: InputMaybe<User_Profile_Industry_Bool_Exp>;
};

/** columns and relationships of "industry" */
export type IndustryUser_Profile_Industries_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Profile_Industry_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Profile_Industry_Order_By>>;
  where?: InputMaybe<User_Profile_Industry_Bool_Exp>;
};

/** aggregated selection of "industry" */
export type Industry_Aggregate = {
  __typename?: 'industry_aggregate';
  aggregate?: Maybe<Industry_Aggregate_Fields>;
  nodes: Array<Industry>;
};

/** aggregate fields of "industry" */
export type Industry_Aggregate_Fields = {
  __typename?: 'industry_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<Industry_Max_Fields>;
  min?: Maybe<Industry_Min_Fields>;
};

/** aggregate fields of "industry" */
export type Industry_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Industry_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** Boolean expression to filter rows from the table "industry". All fields are combined with a logical 'AND'. */
export type Industry_Bool_Exp = {
  _and?: InputMaybe<Array<Industry_Bool_Exp>>;
  _not?: InputMaybe<Industry_Bool_Exp>;
  _or?: InputMaybe<Array<Industry_Bool_Exp>>;
  case_study_industries?: InputMaybe<Case_Study_Industry_Bool_Exp>;
  companies?: InputMaybe<Company_Bool_Exp>;
  description?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  industry_google_groups?: InputMaybe<Industry_Google_Group_Bool_Exp>;
  industry_slack_channels?: InputMaybe<Industry_Slack_Channel_Bool_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  team_industries?: InputMaybe<Team_Industry_Bool_Exp>;
  user_industry_experiences?: InputMaybe<User_Industry_Experience_Bool_Exp>;
  user_profile_companies?: InputMaybe<User_Profile_Company_Bool_Exp>;
  user_profile_industries?: InputMaybe<User_Profile_Industry_Bool_Exp>;
};

/** unique or primary key constraints on table "industry" */
export enum Industry_Constraint {
  /** unique or primary key constraint on columns "name" */
  IndustryNameKey = 'industry_name_key',
  /** unique or primary key constraint on columns "id" */
  IndustryPkey = 'industry_pkey',
}

/** columns and relationships of "industry_experience_level" */
export type Industry_Experience_Level = {
  __typename?: 'industry_experience_level';
  id: Scalars['uuid'];
  name: Scalars['String'];
  /** An array relationship */
  user_industry_experiences: Array<User_Industry_Experience>;
  /** An aggregate relationship */
  user_industry_experiences_aggregate: User_Industry_Experience_Aggregate;
};

/** columns and relationships of "industry_experience_level" */
export type Industry_Experience_LevelUser_Industry_ExperiencesArgs = {
  distinct_on?: InputMaybe<Array<User_Industry_Experience_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Industry_Experience_Order_By>>;
  where?: InputMaybe<User_Industry_Experience_Bool_Exp>;
};

/** columns and relationships of "industry_experience_level" */
export type Industry_Experience_LevelUser_Industry_Experiences_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Industry_Experience_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Industry_Experience_Order_By>>;
  where?: InputMaybe<User_Industry_Experience_Bool_Exp>;
};

/** aggregated selection of "industry_experience_level" */
export type Industry_Experience_Level_Aggregate = {
  __typename?: 'industry_experience_level_aggregate';
  aggregate?: Maybe<Industry_Experience_Level_Aggregate_Fields>;
  nodes: Array<Industry_Experience_Level>;
};

/** aggregate fields of "industry_experience_level" */
export type Industry_Experience_Level_Aggregate_Fields = {
  __typename?: 'industry_experience_level_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<Industry_Experience_Level_Max_Fields>;
  min?: Maybe<Industry_Experience_Level_Min_Fields>;
};

/** aggregate fields of "industry_experience_level" */
export type Industry_Experience_Level_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Industry_Experience_Level_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** Boolean expression to filter rows from the table "industry_experience_level". All fields are combined with a logical 'AND'. */
export type Industry_Experience_Level_Bool_Exp = {
  _and?: InputMaybe<Array<Industry_Experience_Level_Bool_Exp>>;
  _not?: InputMaybe<Industry_Experience_Level_Bool_Exp>;
  _or?: InputMaybe<Array<Industry_Experience_Level_Bool_Exp>>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  user_industry_experiences?: InputMaybe<User_Industry_Experience_Bool_Exp>;
};

/** unique or primary key constraints on table "industry_experience_level" */
export enum Industry_Experience_Level_Constraint {
  /** unique or primary key constraint on columns "name" */
  IndustryExperienceLevelNameKey = 'industry_experience_level_name_key',
  /** unique or primary key constraint on columns "id" */
  IndustryExperienceLevelPkey = 'industry_experience_level_pkey',
}

/** input type for inserting data into table "industry_experience_level" */
export type Industry_Experience_Level_Insert_Input = {
  id?: InputMaybe<Scalars['uuid']>;
  name?: InputMaybe<Scalars['String']>;
  user_industry_experiences?: InputMaybe<User_Industry_Experience_Arr_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type Industry_Experience_Level_Max_Fields = {
  __typename?: 'industry_experience_level_max_fields';
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type Industry_Experience_Level_Min_Fields = {
  __typename?: 'industry_experience_level_min_fields';
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "industry_experience_level" */
export type Industry_Experience_Level_Mutation_Response = {
  __typename?: 'industry_experience_level_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Industry_Experience_Level>;
};

/** input type for inserting object relation for remote table "industry_experience_level" */
export type Industry_Experience_Level_Obj_Rel_Insert_Input = {
  data: Industry_Experience_Level_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Industry_Experience_Level_On_Conflict>;
};

/** on_conflict condition type for table "industry_experience_level" */
export type Industry_Experience_Level_On_Conflict = {
  constraint: Industry_Experience_Level_Constraint;
  update_columns?: Array<Industry_Experience_Level_Update_Column>;
  where?: InputMaybe<Industry_Experience_Level_Bool_Exp>;
};

/** Ordering options when selecting data from "industry_experience_level". */
export type Industry_Experience_Level_Order_By = {
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  user_industry_experiences_aggregate?: InputMaybe<User_Industry_Experience_Aggregate_Order_By>;
};

/** primary key columns input for table: industry_experience_level */
export type Industry_Experience_Level_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "industry_experience_level" */
export enum Industry_Experience_Level_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
}

/** input type for updating data in table "industry_experience_level" */
export type Industry_Experience_Level_Set_Input = {
  id?: InputMaybe<Scalars['uuid']>;
  name?: InputMaybe<Scalars['String']>;
};

/** Streaming cursor of the table "industry_experience_level" */
export type Industry_Experience_Level_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Industry_Experience_Level_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Industry_Experience_Level_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['uuid']>;
  name?: InputMaybe<Scalars['String']>;
};

/** update columns of table "industry_experience_level" */
export enum Industry_Experience_Level_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
}

export type Industry_Experience_Level_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Industry_Experience_Level_Set_Input>;
  where: Industry_Experience_Level_Bool_Exp;
};

/** columns and relationships of "industry_google_group" */
export type Industry_Google_Group = {
  __typename?: 'industry_google_group';
  googleGroupID: Scalars['String'];
  /** An object relationship */
  industry: Industry;
  industryID: Scalars['uuid'];
};

/** aggregated selection of "industry_google_group" */
export type Industry_Google_Group_Aggregate = {
  __typename?: 'industry_google_group_aggregate';
  aggregate?: Maybe<Industry_Google_Group_Aggregate_Fields>;
  nodes: Array<Industry_Google_Group>;
};

/** aggregate fields of "industry_google_group" */
export type Industry_Google_Group_Aggregate_Fields = {
  __typename?: 'industry_google_group_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<Industry_Google_Group_Max_Fields>;
  min?: Maybe<Industry_Google_Group_Min_Fields>;
};

/** aggregate fields of "industry_google_group" */
export type Industry_Google_Group_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Industry_Google_Group_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "industry_google_group" */
export type Industry_Google_Group_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Industry_Google_Group_Max_Order_By>;
  min?: InputMaybe<Industry_Google_Group_Min_Order_By>;
};

/** input type for inserting array relation for remote table "industry_google_group" */
export type Industry_Google_Group_Arr_Rel_Insert_Input = {
  data: Array<Industry_Google_Group_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Industry_Google_Group_On_Conflict>;
};

/** Boolean expression to filter rows from the table "industry_google_group". All fields are combined with a logical 'AND'. */
export type Industry_Google_Group_Bool_Exp = {
  _and?: InputMaybe<Array<Industry_Google_Group_Bool_Exp>>;
  _not?: InputMaybe<Industry_Google_Group_Bool_Exp>;
  _or?: InputMaybe<Array<Industry_Google_Group_Bool_Exp>>;
  googleGroupID?: InputMaybe<String_Comparison_Exp>;
  industry?: InputMaybe<Industry_Bool_Exp>;
  industryID?: InputMaybe<Uuid_Comparison_Exp>;
};

/** unique or primary key constraints on table "industry_google_group" */
export enum Industry_Google_Group_Constraint {
  /** unique or primary key constraint on columns "googleGroupID", "industryID" */
  IndustryGoogleGroupPkey = 'industry_google_group_pkey',
}

/** input type for inserting data into table "industry_google_group" */
export type Industry_Google_Group_Insert_Input = {
  googleGroupID?: InputMaybe<Scalars['String']>;
  industry?: InputMaybe<Industry_Obj_Rel_Insert_Input>;
  industryID?: InputMaybe<Scalars['uuid']>;
};

/** aggregate max on columns */
export type Industry_Google_Group_Max_Fields = {
  __typename?: 'industry_google_group_max_fields';
  googleGroupID?: Maybe<Scalars['String']>;
  industryID?: Maybe<Scalars['uuid']>;
};

/** order by max() on columns of table "industry_google_group" */
export type Industry_Google_Group_Max_Order_By = {
  googleGroupID?: InputMaybe<Order_By>;
  industryID?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Industry_Google_Group_Min_Fields = {
  __typename?: 'industry_google_group_min_fields';
  googleGroupID?: Maybe<Scalars['String']>;
  industryID?: Maybe<Scalars['uuid']>;
};

/** order by min() on columns of table "industry_google_group" */
export type Industry_Google_Group_Min_Order_By = {
  googleGroupID?: InputMaybe<Order_By>;
  industryID?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "industry_google_group" */
export type Industry_Google_Group_Mutation_Response = {
  __typename?: 'industry_google_group_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Industry_Google_Group>;
};

/** on_conflict condition type for table "industry_google_group" */
export type Industry_Google_Group_On_Conflict = {
  constraint: Industry_Google_Group_Constraint;
  update_columns?: Array<Industry_Google_Group_Update_Column>;
  where?: InputMaybe<Industry_Google_Group_Bool_Exp>;
};

/** Ordering options when selecting data from "industry_google_group". */
export type Industry_Google_Group_Order_By = {
  googleGroupID?: InputMaybe<Order_By>;
  industry?: InputMaybe<Industry_Order_By>;
  industryID?: InputMaybe<Order_By>;
};

/** primary key columns input for table: industry_google_group */
export type Industry_Google_Group_Pk_Columns_Input = {
  googleGroupID: Scalars['String'];
  industryID: Scalars['uuid'];
};

/** select columns of table "industry_google_group" */
export enum Industry_Google_Group_Select_Column {
  /** column name */
  GoogleGroupId = 'googleGroupID',
  /** column name */
  IndustryId = 'industryID',
}

/** input type for updating data in table "industry_google_group" */
export type Industry_Google_Group_Set_Input = {
  googleGroupID?: InputMaybe<Scalars['String']>;
  industryID?: InputMaybe<Scalars['uuid']>;
};

/** Streaming cursor of the table "industry_google_group" */
export type Industry_Google_Group_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Industry_Google_Group_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Industry_Google_Group_Stream_Cursor_Value_Input = {
  googleGroupID?: InputMaybe<Scalars['String']>;
  industryID?: InputMaybe<Scalars['uuid']>;
};

/** update columns of table "industry_google_group" */
export enum Industry_Google_Group_Update_Column {
  /** column name */
  GoogleGroupId = 'googleGroupID',
  /** column name */
  IndustryId = 'industryID',
}

export type Industry_Google_Group_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Industry_Google_Group_Set_Input>;
  where: Industry_Google_Group_Bool_Exp;
};

/** input type for inserting data into table "industry" */
export type Industry_Insert_Input = {
  case_study_industries?: InputMaybe<Case_Study_Industry_Arr_Rel_Insert_Input>;
  companies?: InputMaybe<Company_Arr_Rel_Insert_Input>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['uuid']>;
  industry_google_groups?: InputMaybe<Industry_Google_Group_Arr_Rel_Insert_Input>;
  industry_slack_channels?: InputMaybe<Industry_Slack_Channel_Arr_Rel_Insert_Input>;
  name?: InputMaybe<Scalars['String']>;
  team_industries?: InputMaybe<Team_Industry_Arr_Rel_Insert_Input>;
  user_industry_experiences?: InputMaybe<User_Industry_Experience_Arr_Rel_Insert_Input>;
  user_profile_companies?: InputMaybe<User_Profile_Company_Arr_Rel_Insert_Input>;
  user_profile_industries?: InputMaybe<User_Profile_Industry_Arr_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type Industry_Max_Fields = {
  __typename?: 'industry_max_fields';
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type Industry_Min_Fields = {
  __typename?: 'industry_min_fields';
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "industry" */
export type Industry_Mutation_Response = {
  __typename?: 'industry_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Industry>;
};

/** input type for inserting object relation for remote table "industry" */
export type Industry_Obj_Rel_Insert_Input = {
  data: Industry_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Industry_On_Conflict>;
};

/** on_conflict condition type for table "industry" */
export type Industry_On_Conflict = {
  constraint: Industry_Constraint;
  update_columns?: Array<Industry_Update_Column>;
  where?: InputMaybe<Industry_Bool_Exp>;
};

/** Ordering options when selecting data from "industry". */
export type Industry_Order_By = {
  case_study_industries_aggregate?: InputMaybe<Case_Study_Industry_Aggregate_Order_By>;
  companies_aggregate?: InputMaybe<Company_Aggregate_Order_By>;
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  industry_google_groups_aggregate?: InputMaybe<Industry_Google_Group_Aggregate_Order_By>;
  industry_slack_channels_aggregate?: InputMaybe<Industry_Slack_Channel_Aggregate_Order_By>;
  name?: InputMaybe<Order_By>;
  team_industries_aggregate?: InputMaybe<Team_Industry_Aggregate_Order_By>;
  user_industry_experiences_aggregate?: InputMaybe<User_Industry_Experience_Aggregate_Order_By>;
  user_profile_companies_aggregate?: InputMaybe<User_Profile_Company_Aggregate_Order_By>;
  user_profile_industries_aggregate?: InputMaybe<User_Profile_Industry_Aggregate_Order_By>;
};

/** primary key columns input for table: industry */
export type Industry_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "industry" */
export enum Industry_Select_Column {
  /** column name */
  Description = 'description',
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
}

/** input type for updating data in table "industry" */
export type Industry_Set_Input = {
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['uuid']>;
  name?: InputMaybe<Scalars['String']>;
};

/** columns and relationships of "industry_slack_channel" */
export type Industry_Slack_Channel = {
  __typename?: 'industry_slack_channel';
  /** An object relationship */
  industry: Industry;
  industryID: Scalars['uuid'];
  slackChannelID: Scalars['String'];
};

/** aggregated selection of "industry_slack_channel" */
export type Industry_Slack_Channel_Aggregate = {
  __typename?: 'industry_slack_channel_aggregate';
  aggregate?: Maybe<Industry_Slack_Channel_Aggregate_Fields>;
  nodes: Array<Industry_Slack_Channel>;
};

/** aggregate fields of "industry_slack_channel" */
export type Industry_Slack_Channel_Aggregate_Fields = {
  __typename?: 'industry_slack_channel_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<Industry_Slack_Channel_Max_Fields>;
  min?: Maybe<Industry_Slack_Channel_Min_Fields>;
};

/** aggregate fields of "industry_slack_channel" */
export type Industry_Slack_Channel_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Industry_Slack_Channel_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "industry_slack_channel" */
export type Industry_Slack_Channel_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Industry_Slack_Channel_Max_Order_By>;
  min?: InputMaybe<Industry_Slack_Channel_Min_Order_By>;
};

/** input type for inserting array relation for remote table "industry_slack_channel" */
export type Industry_Slack_Channel_Arr_Rel_Insert_Input = {
  data: Array<Industry_Slack_Channel_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Industry_Slack_Channel_On_Conflict>;
};

/** Boolean expression to filter rows from the table "industry_slack_channel". All fields are combined with a logical 'AND'. */
export type Industry_Slack_Channel_Bool_Exp = {
  _and?: InputMaybe<Array<Industry_Slack_Channel_Bool_Exp>>;
  _not?: InputMaybe<Industry_Slack_Channel_Bool_Exp>;
  _or?: InputMaybe<Array<Industry_Slack_Channel_Bool_Exp>>;
  industry?: InputMaybe<Industry_Bool_Exp>;
  industryID?: InputMaybe<Uuid_Comparison_Exp>;
  slackChannelID?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "industry_slack_channel" */
export enum Industry_Slack_Channel_Constraint {
  /** unique or primary key constraint on columns "slackChannelID", "industryID" */
  IndustrySlackChannelPkey = 'industry_slack_channel_pkey',
}

/** input type for inserting data into table "industry_slack_channel" */
export type Industry_Slack_Channel_Insert_Input = {
  industry?: InputMaybe<Industry_Obj_Rel_Insert_Input>;
  industryID?: InputMaybe<Scalars['uuid']>;
  slackChannelID?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Industry_Slack_Channel_Max_Fields = {
  __typename?: 'industry_slack_channel_max_fields';
  industryID?: Maybe<Scalars['uuid']>;
  slackChannelID?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "industry_slack_channel" */
export type Industry_Slack_Channel_Max_Order_By = {
  industryID?: InputMaybe<Order_By>;
  slackChannelID?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Industry_Slack_Channel_Min_Fields = {
  __typename?: 'industry_slack_channel_min_fields';
  industryID?: Maybe<Scalars['uuid']>;
  slackChannelID?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "industry_slack_channel" */
export type Industry_Slack_Channel_Min_Order_By = {
  industryID?: InputMaybe<Order_By>;
  slackChannelID?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "industry_slack_channel" */
export type Industry_Slack_Channel_Mutation_Response = {
  __typename?: 'industry_slack_channel_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Industry_Slack_Channel>;
};

/** on_conflict condition type for table "industry_slack_channel" */
export type Industry_Slack_Channel_On_Conflict = {
  constraint: Industry_Slack_Channel_Constraint;
  update_columns?: Array<Industry_Slack_Channel_Update_Column>;
  where?: InputMaybe<Industry_Slack_Channel_Bool_Exp>;
};

/** Ordering options when selecting data from "industry_slack_channel". */
export type Industry_Slack_Channel_Order_By = {
  industry?: InputMaybe<Industry_Order_By>;
  industryID?: InputMaybe<Order_By>;
  slackChannelID?: InputMaybe<Order_By>;
};

/** primary key columns input for table: industry_slack_channel */
export type Industry_Slack_Channel_Pk_Columns_Input = {
  industryID: Scalars['uuid'];
  slackChannelID: Scalars['String'];
};

/** select columns of table "industry_slack_channel" */
export enum Industry_Slack_Channel_Select_Column {
  /** column name */
  IndustryId = 'industryID',
  /** column name */
  SlackChannelId = 'slackChannelID',
}

/** input type for updating data in table "industry_slack_channel" */
export type Industry_Slack_Channel_Set_Input = {
  industryID?: InputMaybe<Scalars['uuid']>;
  slackChannelID?: InputMaybe<Scalars['String']>;
};

/** Streaming cursor of the table "industry_slack_channel" */
export type Industry_Slack_Channel_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Industry_Slack_Channel_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Industry_Slack_Channel_Stream_Cursor_Value_Input = {
  industryID?: InputMaybe<Scalars['uuid']>;
  slackChannelID?: InputMaybe<Scalars['String']>;
};

/** update columns of table "industry_slack_channel" */
export enum Industry_Slack_Channel_Update_Column {
  /** column name */
  IndustryId = 'industryID',
  /** column name */
  SlackChannelId = 'slackChannelID',
}

export type Industry_Slack_Channel_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Industry_Slack_Channel_Set_Input>;
  where: Industry_Slack_Channel_Bool_Exp;
};

/** Streaming cursor of the table "industry" */
export type Industry_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Industry_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Industry_Stream_Cursor_Value_Input = {
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['uuid']>;
  name?: InputMaybe<Scalars['String']>;
};

/** update columns of table "industry" */
export enum Industry_Update_Column {
  /** column name */
  Description = 'description',
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
}

export type Industry_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Industry_Set_Input>;
  where: Industry_Bool_Exp;
};

/** columns and relationships of "invoice" */
export type Invoice = {
  __typename?: 'invoice';
  additionalEmails?: Maybe<Scalars['String']>;
  additionalNotes?: Maybe<Scalars['String']>;
  attachments?: Maybe<Scalars['String']>;
  createdByUserCognitoSub?: Maybe<Scalars['String']>;
  /** An array relationship */
  custom_payouts: Array<Custom_Payout>;
  /** An aggregate relationship */
  custom_payouts_aggregate: Custom_Payout_Aggregate;
  /** An object relationship */
  customer: Customer;
  customerID: Scalars['uuid'];
  dueDate: Scalars['timestamptz'];
  email: Scalars['String'];
  /** An array relationship */
  fixed_price_invoice_line_items: Array<Fixed_Price_Invoice_Line_Item>;
  /** An aggregate relationship */
  fixed_price_invoice_line_items_aggregate: Fixed_Price_Invoice_Line_Item_Aggregate;
  id: Scalars['Int'];
  invoiceDate: Scalars['timestamptz'];
  invoiceServiceTypeID: Scalars['uuid'];
  invoiceStatusID: Scalars['Int'];
  invoiceTermID: Scalars['uuid'];
  /** An object relationship */
  invoice_service_type: Invoice_Service_Type;
  /** An object relationship */
  invoice_status: Invoice_Status;
  /** An object relationship */
  invoice_term: Invoice_Term;
  isRecurring: Scalars['Boolean'];
  isTest: Scalars['Boolean'];
  legacyInvoiceID?: Maybe<Scalars['String']>;
  notes?: Maybe<Scalars['String']>;
  recurringEndDate?: Maybe<Scalars['timestamptz']>;
  recurringFrequency?: Maybe<Scalars['Int']>;
  recurringIntervalID?: Maybe<Scalars['uuid']>;
  /** An object relationship */
  recurring_interval?: Maybe<Recurring_Interval>;
  /** An array relationship */
  time_and_material_invoice_line_items: Array<Time_And_Material_Invoice_Line_Item>;
  /** An aggregate relationship */
  time_and_material_invoice_line_items_aggregate: Time_And_Material_Invoice_Line_Item_Aggregate;
};

/** columns and relationships of "invoice" */
export type InvoiceCustom_PayoutsArgs = {
  distinct_on?: InputMaybe<Array<Custom_Payout_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Custom_Payout_Order_By>>;
  where?: InputMaybe<Custom_Payout_Bool_Exp>;
};

/** columns and relationships of "invoice" */
export type InvoiceCustom_Payouts_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Custom_Payout_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Custom_Payout_Order_By>>;
  where?: InputMaybe<Custom_Payout_Bool_Exp>;
};

/** columns and relationships of "invoice" */
export type InvoiceFixed_Price_Invoice_Line_ItemsArgs = {
  distinct_on?: InputMaybe<Array<Fixed_Price_Invoice_Line_Item_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Fixed_Price_Invoice_Line_Item_Order_By>>;
  where?: InputMaybe<Fixed_Price_Invoice_Line_Item_Bool_Exp>;
};

/** columns and relationships of "invoice" */
export type InvoiceFixed_Price_Invoice_Line_Items_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Fixed_Price_Invoice_Line_Item_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Fixed_Price_Invoice_Line_Item_Order_By>>;
  where?: InputMaybe<Fixed_Price_Invoice_Line_Item_Bool_Exp>;
};

/** columns and relationships of "invoice" */
export type InvoiceTime_And_Material_Invoice_Line_ItemsArgs = {
  distinct_on?: InputMaybe<Array<Time_And_Material_Invoice_Line_Item_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Time_And_Material_Invoice_Line_Item_Order_By>>;
  where?: InputMaybe<Time_And_Material_Invoice_Line_Item_Bool_Exp>;
};

/** columns and relationships of "invoice" */
export type InvoiceTime_And_Material_Invoice_Line_Items_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Time_And_Material_Invoice_Line_Item_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Time_And_Material_Invoice_Line_Item_Order_By>>;
  where?: InputMaybe<Time_And_Material_Invoice_Line_Item_Bool_Exp>;
};

/** aggregated selection of "invoice" */
export type Invoice_Aggregate = {
  __typename?: 'invoice_aggregate';
  aggregate?: Maybe<Invoice_Aggregate_Fields>;
  nodes: Array<Invoice>;
};

/** aggregate fields of "invoice" */
export type Invoice_Aggregate_Fields = {
  __typename?: 'invoice_aggregate_fields';
  avg?: Maybe<Invoice_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Invoice_Max_Fields>;
  min?: Maybe<Invoice_Min_Fields>;
  stddev?: Maybe<Invoice_Stddev_Fields>;
  stddev_pop?: Maybe<Invoice_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Invoice_Stddev_Samp_Fields>;
  sum?: Maybe<Invoice_Sum_Fields>;
  var_pop?: Maybe<Invoice_Var_Pop_Fields>;
  var_samp?: Maybe<Invoice_Var_Samp_Fields>;
  variance?: Maybe<Invoice_Variance_Fields>;
};

/** aggregate fields of "invoice" */
export type Invoice_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Invoice_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "invoice" */
export type Invoice_Aggregate_Order_By = {
  avg?: InputMaybe<Invoice_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Invoice_Max_Order_By>;
  min?: InputMaybe<Invoice_Min_Order_By>;
  stddev?: InputMaybe<Invoice_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Invoice_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Invoice_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Invoice_Sum_Order_By>;
  var_pop?: InputMaybe<Invoice_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Invoice_Var_Samp_Order_By>;
  variance?: InputMaybe<Invoice_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "invoice" */
export type Invoice_Arr_Rel_Insert_Input = {
  data: Array<Invoice_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Invoice_On_Conflict>;
};

/** aggregate avg on columns */
export type Invoice_Avg_Fields = {
  __typename?: 'invoice_avg_fields';
  id?: Maybe<Scalars['Float']>;
  invoiceStatusID?: Maybe<Scalars['Float']>;
  recurringFrequency?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "invoice" */
export type Invoice_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  invoiceStatusID?: InputMaybe<Order_By>;
  recurringFrequency?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "invoice". All fields are combined with a logical 'AND'. */
export type Invoice_Bool_Exp = {
  _and?: InputMaybe<Array<Invoice_Bool_Exp>>;
  _not?: InputMaybe<Invoice_Bool_Exp>;
  _or?: InputMaybe<Array<Invoice_Bool_Exp>>;
  additionalEmails?: InputMaybe<String_Comparison_Exp>;
  additionalNotes?: InputMaybe<String_Comparison_Exp>;
  attachments?: InputMaybe<String_Comparison_Exp>;
  createdByUserCognitoSub?: InputMaybe<String_Comparison_Exp>;
  custom_payouts?: InputMaybe<Custom_Payout_Bool_Exp>;
  customer?: InputMaybe<Customer_Bool_Exp>;
  customerID?: InputMaybe<Uuid_Comparison_Exp>;
  dueDate?: InputMaybe<Timestamptz_Comparison_Exp>;
  email?: InputMaybe<String_Comparison_Exp>;
  fixed_price_invoice_line_items?: InputMaybe<Fixed_Price_Invoice_Line_Item_Bool_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  invoiceDate?: InputMaybe<Timestamptz_Comparison_Exp>;
  invoiceServiceTypeID?: InputMaybe<Uuid_Comparison_Exp>;
  invoiceStatusID?: InputMaybe<Int_Comparison_Exp>;
  invoiceTermID?: InputMaybe<Uuid_Comparison_Exp>;
  invoice_service_type?: InputMaybe<Invoice_Service_Type_Bool_Exp>;
  invoice_status?: InputMaybe<Invoice_Status_Bool_Exp>;
  invoice_term?: InputMaybe<Invoice_Term_Bool_Exp>;
  isRecurring?: InputMaybe<Boolean_Comparison_Exp>;
  isTest?: InputMaybe<Boolean_Comparison_Exp>;
  legacyInvoiceID?: InputMaybe<String_Comparison_Exp>;
  notes?: InputMaybe<String_Comparison_Exp>;
  recurringEndDate?: InputMaybe<Timestamptz_Comparison_Exp>;
  recurringFrequency?: InputMaybe<Int_Comparison_Exp>;
  recurringIntervalID?: InputMaybe<Uuid_Comparison_Exp>;
  recurring_interval?: InputMaybe<Recurring_Interval_Bool_Exp>;
  time_and_material_invoice_line_items?: InputMaybe<Time_And_Material_Invoice_Line_Item_Bool_Exp>;
};

/** unique or primary key constraints on table "invoice" */
export enum Invoice_Constraint {
  /** unique or primary key constraint on columns "legacyInvoiceID" */
  InvoiceLegacyInvoiceIdKey = 'invoice_legacyInvoiceID_key',
  /** unique or primary key constraint on columns "id" */
  InvoicePkey = 'invoice_pkey',
}

/** columns and relationships of "invoice_distribution" */
export type Invoice_Distribution = {
  __typename?: 'invoice_distribution';
  currency: Scalars['String'];
  fixedPriceInvoiceLineItemID?: Maybe<Scalars['uuid']>;
  /** An object relationship */
  fixed_price_invoice_line_item?: Maybe<Fixed_Price_Invoice_Line_Item>;
  id: Scalars['uuid'];
  isPaid: Scalars['Boolean'];
  paidOn?: Maybe<Scalars['timestamptz']>;
  /** An array relationship */
  payout_distributions: Array<Payout_Distribution>;
  /** An aggregate relationship */
  payout_distributions_aggregate: Payout_Distribution_Aggregate;
  timeAndMaterialInvoiceLineItemID?: Maybe<Scalars['uuid']>;
  /** An object relationship */
  time_and_material_invoice_line_item?: Maybe<Time_And_Material_Invoice_Line_Item>;
};

/** columns and relationships of "invoice_distribution" */
export type Invoice_DistributionPayout_DistributionsArgs = {
  distinct_on?: InputMaybe<Array<Payout_Distribution_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Payout_Distribution_Order_By>>;
  where?: InputMaybe<Payout_Distribution_Bool_Exp>;
};

/** columns and relationships of "invoice_distribution" */
export type Invoice_DistributionPayout_Distributions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Payout_Distribution_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Payout_Distribution_Order_By>>;
  where?: InputMaybe<Payout_Distribution_Bool_Exp>;
};

/** aggregated selection of "invoice_distribution" */
export type Invoice_Distribution_Aggregate = {
  __typename?: 'invoice_distribution_aggregate';
  aggregate?: Maybe<Invoice_Distribution_Aggregate_Fields>;
  nodes: Array<Invoice_Distribution>;
};

/** aggregate fields of "invoice_distribution" */
export type Invoice_Distribution_Aggregate_Fields = {
  __typename?: 'invoice_distribution_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<Invoice_Distribution_Max_Fields>;
  min?: Maybe<Invoice_Distribution_Min_Fields>;
};

/** aggregate fields of "invoice_distribution" */
export type Invoice_Distribution_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Invoice_Distribution_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** Boolean expression to filter rows from the table "invoice_distribution". All fields are combined with a logical 'AND'. */
export type Invoice_Distribution_Bool_Exp = {
  _and?: InputMaybe<Array<Invoice_Distribution_Bool_Exp>>;
  _not?: InputMaybe<Invoice_Distribution_Bool_Exp>;
  _or?: InputMaybe<Array<Invoice_Distribution_Bool_Exp>>;
  currency?: InputMaybe<String_Comparison_Exp>;
  fixedPriceInvoiceLineItemID?: InputMaybe<Uuid_Comparison_Exp>;
  fixed_price_invoice_line_item?: InputMaybe<Fixed_Price_Invoice_Line_Item_Bool_Exp>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  isPaid?: InputMaybe<Boolean_Comparison_Exp>;
  paidOn?: InputMaybe<Timestamptz_Comparison_Exp>;
  payout_distributions?: InputMaybe<Payout_Distribution_Bool_Exp>;
  timeAndMaterialInvoiceLineItemID?: InputMaybe<Uuid_Comparison_Exp>;
  time_and_material_invoice_line_item?: InputMaybe<Time_And_Material_Invoice_Line_Item_Bool_Exp>;
};

/** unique or primary key constraints on table "invoice_distribution" */
export enum Invoice_Distribution_Constraint {
  /** unique or primary key constraint on columns "fixedPriceInvoiceLineItemID" */
  InvoiceDistributionFixedPriceInvoiceLineItemIdKey = 'invoice_distribution_fixedPriceInvoiceLineItemID_key',
  /** unique or primary key constraint on columns "id" */
  InvoiceDistributionPkey = 'invoice_distribution_pkey',
  /** unique or primary key constraint on columns "timeAndMaterialInvoiceLineItemID" */
  InvoiceDistributionTimeAndMaterialInvoiceLineItemIdKey = 'invoice_distribution_timeAndMaterialInvoiceLineItemID_key',
}

/** input type for inserting data into table "invoice_distribution" */
export type Invoice_Distribution_Insert_Input = {
  currency?: InputMaybe<Scalars['String']>;
  fixedPriceInvoiceLineItemID?: InputMaybe<Scalars['uuid']>;
  fixed_price_invoice_line_item?: InputMaybe<Fixed_Price_Invoice_Line_Item_Obj_Rel_Insert_Input>;
  id?: InputMaybe<Scalars['uuid']>;
  isPaid?: InputMaybe<Scalars['Boolean']>;
  paidOn?: InputMaybe<Scalars['timestamptz']>;
  payout_distributions?: InputMaybe<Payout_Distribution_Arr_Rel_Insert_Input>;
  timeAndMaterialInvoiceLineItemID?: InputMaybe<Scalars['uuid']>;
  time_and_material_invoice_line_item?: InputMaybe<Time_And_Material_Invoice_Line_Item_Obj_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type Invoice_Distribution_Max_Fields = {
  __typename?: 'invoice_distribution_max_fields';
  currency?: Maybe<Scalars['String']>;
  fixedPriceInvoiceLineItemID?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  paidOn?: Maybe<Scalars['timestamptz']>;
  timeAndMaterialInvoiceLineItemID?: Maybe<Scalars['uuid']>;
};

/** aggregate min on columns */
export type Invoice_Distribution_Min_Fields = {
  __typename?: 'invoice_distribution_min_fields';
  currency?: Maybe<Scalars['String']>;
  fixedPriceInvoiceLineItemID?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  paidOn?: Maybe<Scalars['timestamptz']>;
  timeAndMaterialInvoiceLineItemID?: Maybe<Scalars['uuid']>;
};

/** response of any mutation on the table "invoice_distribution" */
export type Invoice_Distribution_Mutation_Response = {
  __typename?: 'invoice_distribution_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Invoice_Distribution>;
};

/** input type for inserting object relation for remote table "invoice_distribution" */
export type Invoice_Distribution_Obj_Rel_Insert_Input = {
  data: Invoice_Distribution_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Invoice_Distribution_On_Conflict>;
};

/** on_conflict condition type for table "invoice_distribution" */
export type Invoice_Distribution_On_Conflict = {
  constraint: Invoice_Distribution_Constraint;
  update_columns?: Array<Invoice_Distribution_Update_Column>;
  where?: InputMaybe<Invoice_Distribution_Bool_Exp>;
};

/** Ordering options when selecting data from "invoice_distribution". */
export type Invoice_Distribution_Order_By = {
  currency?: InputMaybe<Order_By>;
  fixedPriceInvoiceLineItemID?: InputMaybe<Order_By>;
  fixed_price_invoice_line_item?: InputMaybe<Fixed_Price_Invoice_Line_Item_Order_By>;
  id?: InputMaybe<Order_By>;
  isPaid?: InputMaybe<Order_By>;
  paidOn?: InputMaybe<Order_By>;
  payout_distributions_aggregate?: InputMaybe<Payout_Distribution_Aggregate_Order_By>;
  timeAndMaterialInvoiceLineItemID?: InputMaybe<Order_By>;
  time_and_material_invoice_line_item?: InputMaybe<Time_And_Material_Invoice_Line_Item_Order_By>;
};

/** primary key columns input for table: invoice_distribution */
export type Invoice_Distribution_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "invoice_distribution" */
export enum Invoice_Distribution_Select_Column {
  /** column name */
  Currency = 'currency',
  /** column name */
  FixedPriceInvoiceLineItemId = 'fixedPriceInvoiceLineItemID',
  /** column name */
  Id = 'id',
  /** column name */
  IsPaid = 'isPaid',
  /** column name */
  PaidOn = 'paidOn',
  /** column name */
  TimeAndMaterialInvoiceLineItemId = 'timeAndMaterialInvoiceLineItemID',
}

/** input type for updating data in table "invoice_distribution" */
export type Invoice_Distribution_Set_Input = {
  currency?: InputMaybe<Scalars['String']>;
  fixedPriceInvoiceLineItemID?: InputMaybe<Scalars['uuid']>;
  id?: InputMaybe<Scalars['uuid']>;
  isPaid?: InputMaybe<Scalars['Boolean']>;
  paidOn?: InputMaybe<Scalars['timestamptz']>;
  timeAndMaterialInvoiceLineItemID?: InputMaybe<Scalars['uuid']>;
};

/** Streaming cursor of the table "invoice_distribution" */
export type Invoice_Distribution_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Invoice_Distribution_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Invoice_Distribution_Stream_Cursor_Value_Input = {
  currency?: InputMaybe<Scalars['String']>;
  fixedPriceInvoiceLineItemID?: InputMaybe<Scalars['uuid']>;
  id?: InputMaybe<Scalars['uuid']>;
  isPaid?: InputMaybe<Scalars['Boolean']>;
  paidOn?: InputMaybe<Scalars['timestamptz']>;
  timeAndMaterialInvoiceLineItemID?: InputMaybe<Scalars['uuid']>;
};

/** update columns of table "invoice_distribution" */
export enum Invoice_Distribution_Update_Column {
  /** column name */
  Currency = 'currency',
  /** column name */
  FixedPriceInvoiceLineItemId = 'fixedPriceInvoiceLineItemID',
  /** column name */
  Id = 'id',
  /** column name */
  IsPaid = 'isPaid',
  /** column name */
  PaidOn = 'paidOn',
  /** column name */
  TimeAndMaterialInvoiceLineItemId = 'timeAndMaterialInvoiceLineItemID',
}

export type Invoice_Distribution_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Invoice_Distribution_Set_Input>;
  where: Invoice_Distribution_Bool_Exp;
};

/** input type for incrementing numeric columns in table "invoice" */
export type Invoice_Inc_Input = {
  id?: InputMaybe<Scalars['Int']>;
  invoiceStatusID?: InputMaybe<Scalars['Int']>;
  recurringFrequency?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "invoice" */
export type Invoice_Insert_Input = {
  additionalEmails?: InputMaybe<Scalars['String']>;
  additionalNotes?: InputMaybe<Scalars['String']>;
  attachments?: InputMaybe<Scalars['String']>;
  createdByUserCognitoSub?: InputMaybe<Scalars['String']>;
  custom_payouts?: InputMaybe<Custom_Payout_Arr_Rel_Insert_Input>;
  customer?: InputMaybe<Customer_Obj_Rel_Insert_Input>;
  customerID?: InputMaybe<Scalars['uuid']>;
  dueDate?: InputMaybe<Scalars['timestamptz']>;
  email?: InputMaybe<Scalars['String']>;
  fixed_price_invoice_line_items?: InputMaybe<Fixed_Price_Invoice_Line_Item_Arr_Rel_Insert_Input>;
  id?: InputMaybe<Scalars['Int']>;
  invoiceDate?: InputMaybe<Scalars['timestamptz']>;
  invoiceServiceTypeID?: InputMaybe<Scalars['uuid']>;
  invoiceStatusID?: InputMaybe<Scalars['Int']>;
  invoiceTermID?: InputMaybe<Scalars['uuid']>;
  invoice_service_type?: InputMaybe<Invoice_Service_Type_Obj_Rel_Insert_Input>;
  invoice_status?: InputMaybe<Invoice_Status_Obj_Rel_Insert_Input>;
  invoice_term?: InputMaybe<Invoice_Term_Obj_Rel_Insert_Input>;
  isRecurring?: InputMaybe<Scalars['Boolean']>;
  isTest?: InputMaybe<Scalars['Boolean']>;
  legacyInvoiceID?: InputMaybe<Scalars['String']>;
  notes?: InputMaybe<Scalars['String']>;
  recurringEndDate?: InputMaybe<Scalars['timestamptz']>;
  recurringFrequency?: InputMaybe<Scalars['Int']>;
  recurringIntervalID?: InputMaybe<Scalars['uuid']>;
  recurring_interval?: InputMaybe<Recurring_Interval_Obj_Rel_Insert_Input>;
  time_and_material_invoice_line_items?: InputMaybe<Time_And_Material_Invoice_Line_Item_Arr_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type Invoice_Max_Fields = {
  __typename?: 'invoice_max_fields';
  additionalEmails?: Maybe<Scalars['String']>;
  additionalNotes?: Maybe<Scalars['String']>;
  attachments?: Maybe<Scalars['String']>;
  createdByUserCognitoSub?: Maybe<Scalars['String']>;
  customerID?: Maybe<Scalars['uuid']>;
  dueDate?: Maybe<Scalars['timestamptz']>;
  email?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  invoiceDate?: Maybe<Scalars['timestamptz']>;
  invoiceServiceTypeID?: Maybe<Scalars['uuid']>;
  invoiceStatusID?: Maybe<Scalars['Int']>;
  invoiceTermID?: Maybe<Scalars['uuid']>;
  legacyInvoiceID?: Maybe<Scalars['String']>;
  notes?: Maybe<Scalars['String']>;
  recurringEndDate?: Maybe<Scalars['timestamptz']>;
  recurringFrequency?: Maybe<Scalars['Int']>;
  recurringIntervalID?: Maybe<Scalars['uuid']>;
};

/** order by max() on columns of table "invoice" */
export type Invoice_Max_Order_By = {
  additionalEmails?: InputMaybe<Order_By>;
  additionalNotes?: InputMaybe<Order_By>;
  attachments?: InputMaybe<Order_By>;
  createdByUserCognitoSub?: InputMaybe<Order_By>;
  customerID?: InputMaybe<Order_By>;
  dueDate?: InputMaybe<Order_By>;
  email?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  invoiceDate?: InputMaybe<Order_By>;
  invoiceServiceTypeID?: InputMaybe<Order_By>;
  invoiceStatusID?: InputMaybe<Order_By>;
  invoiceTermID?: InputMaybe<Order_By>;
  legacyInvoiceID?: InputMaybe<Order_By>;
  notes?: InputMaybe<Order_By>;
  recurringEndDate?: InputMaybe<Order_By>;
  recurringFrequency?: InputMaybe<Order_By>;
  recurringIntervalID?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Invoice_Min_Fields = {
  __typename?: 'invoice_min_fields';
  additionalEmails?: Maybe<Scalars['String']>;
  additionalNotes?: Maybe<Scalars['String']>;
  attachments?: Maybe<Scalars['String']>;
  createdByUserCognitoSub?: Maybe<Scalars['String']>;
  customerID?: Maybe<Scalars['uuid']>;
  dueDate?: Maybe<Scalars['timestamptz']>;
  email?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  invoiceDate?: Maybe<Scalars['timestamptz']>;
  invoiceServiceTypeID?: Maybe<Scalars['uuid']>;
  invoiceStatusID?: Maybe<Scalars['Int']>;
  invoiceTermID?: Maybe<Scalars['uuid']>;
  legacyInvoiceID?: Maybe<Scalars['String']>;
  notes?: Maybe<Scalars['String']>;
  recurringEndDate?: Maybe<Scalars['timestamptz']>;
  recurringFrequency?: Maybe<Scalars['Int']>;
  recurringIntervalID?: Maybe<Scalars['uuid']>;
};

/** order by min() on columns of table "invoice" */
export type Invoice_Min_Order_By = {
  additionalEmails?: InputMaybe<Order_By>;
  additionalNotes?: InputMaybe<Order_By>;
  attachments?: InputMaybe<Order_By>;
  createdByUserCognitoSub?: InputMaybe<Order_By>;
  customerID?: InputMaybe<Order_By>;
  dueDate?: InputMaybe<Order_By>;
  email?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  invoiceDate?: InputMaybe<Order_By>;
  invoiceServiceTypeID?: InputMaybe<Order_By>;
  invoiceStatusID?: InputMaybe<Order_By>;
  invoiceTermID?: InputMaybe<Order_By>;
  legacyInvoiceID?: InputMaybe<Order_By>;
  notes?: InputMaybe<Order_By>;
  recurringEndDate?: InputMaybe<Order_By>;
  recurringFrequency?: InputMaybe<Order_By>;
  recurringIntervalID?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "invoice" */
export type Invoice_Mutation_Response = {
  __typename?: 'invoice_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Invoice>;
};

/** input type for inserting object relation for remote table "invoice" */
export type Invoice_Obj_Rel_Insert_Input = {
  data: Invoice_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Invoice_On_Conflict>;
};

/** on_conflict condition type for table "invoice" */
export type Invoice_On_Conflict = {
  constraint: Invoice_Constraint;
  update_columns?: Array<Invoice_Update_Column>;
  where?: InputMaybe<Invoice_Bool_Exp>;
};

/** Ordering options when selecting data from "invoice". */
export type Invoice_Order_By = {
  additionalEmails?: InputMaybe<Order_By>;
  additionalNotes?: InputMaybe<Order_By>;
  attachments?: InputMaybe<Order_By>;
  createdByUserCognitoSub?: InputMaybe<Order_By>;
  custom_payouts_aggregate?: InputMaybe<Custom_Payout_Aggregate_Order_By>;
  customer?: InputMaybe<Customer_Order_By>;
  customerID?: InputMaybe<Order_By>;
  dueDate?: InputMaybe<Order_By>;
  email?: InputMaybe<Order_By>;
  fixed_price_invoice_line_items_aggregate?: InputMaybe<Fixed_Price_Invoice_Line_Item_Aggregate_Order_By>;
  id?: InputMaybe<Order_By>;
  invoiceDate?: InputMaybe<Order_By>;
  invoiceServiceTypeID?: InputMaybe<Order_By>;
  invoiceStatusID?: InputMaybe<Order_By>;
  invoiceTermID?: InputMaybe<Order_By>;
  invoice_service_type?: InputMaybe<Invoice_Service_Type_Order_By>;
  invoice_status?: InputMaybe<Invoice_Status_Order_By>;
  invoice_term?: InputMaybe<Invoice_Term_Order_By>;
  isRecurring?: InputMaybe<Order_By>;
  isTest?: InputMaybe<Order_By>;
  legacyInvoiceID?: InputMaybe<Order_By>;
  notes?: InputMaybe<Order_By>;
  recurringEndDate?: InputMaybe<Order_By>;
  recurringFrequency?: InputMaybe<Order_By>;
  recurringIntervalID?: InputMaybe<Order_By>;
  recurring_interval?: InputMaybe<Recurring_Interval_Order_By>;
  time_and_material_invoice_line_items_aggregate?: InputMaybe<Time_And_Material_Invoice_Line_Item_Aggregate_Order_By>;
};

/** primary key columns input for table: invoice */
export type Invoice_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "invoice" */
export enum Invoice_Select_Column {
  /** column name */
  AdditionalEmails = 'additionalEmails',
  /** column name */
  AdditionalNotes = 'additionalNotes',
  /** column name */
  Attachments = 'attachments',
  /** column name */
  CreatedByUserCognitoSub = 'createdByUserCognitoSub',
  /** column name */
  CustomerId = 'customerID',
  /** column name */
  DueDate = 'dueDate',
  /** column name */
  Email = 'email',
  /** column name */
  Id = 'id',
  /** column name */
  InvoiceDate = 'invoiceDate',
  /** column name */
  InvoiceServiceTypeId = 'invoiceServiceTypeID',
  /** column name */
  InvoiceStatusId = 'invoiceStatusID',
  /** column name */
  InvoiceTermId = 'invoiceTermID',
  /** column name */
  IsRecurring = 'isRecurring',
  /** column name */
  IsTest = 'isTest',
  /** column name */
  LegacyInvoiceId = 'legacyInvoiceID',
  /** column name */
  Notes = 'notes',
  /** column name */
  RecurringEndDate = 'recurringEndDate',
  /** column name */
  RecurringFrequency = 'recurringFrequency',
  /** column name */
  RecurringIntervalId = 'recurringIntervalID',
}

/** columns and relationships of "invoice_service_type" */
export type Invoice_Service_Type = {
  __typename?: 'invoice_service_type';
  id: Scalars['uuid'];
  /** An array relationship */
  invoices: Array<Invoice>;
  /** An aggregate relationship */
  invoices_aggregate: Invoice_Aggregate;
  name: Scalars['String'];
};

/** columns and relationships of "invoice_service_type" */
export type Invoice_Service_TypeInvoicesArgs = {
  distinct_on?: InputMaybe<Array<Invoice_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Invoice_Order_By>>;
  where?: InputMaybe<Invoice_Bool_Exp>;
};

/** columns and relationships of "invoice_service_type" */
export type Invoice_Service_TypeInvoices_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Invoice_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Invoice_Order_By>>;
  where?: InputMaybe<Invoice_Bool_Exp>;
};

/** aggregated selection of "invoice_service_type" */
export type Invoice_Service_Type_Aggregate = {
  __typename?: 'invoice_service_type_aggregate';
  aggregate?: Maybe<Invoice_Service_Type_Aggregate_Fields>;
  nodes: Array<Invoice_Service_Type>;
};

/** aggregate fields of "invoice_service_type" */
export type Invoice_Service_Type_Aggregate_Fields = {
  __typename?: 'invoice_service_type_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<Invoice_Service_Type_Max_Fields>;
  min?: Maybe<Invoice_Service_Type_Min_Fields>;
};

/** aggregate fields of "invoice_service_type" */
export type Invoice_Service_Type_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Invoice_Service_Type_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** Boolean expression to filter rows from the table "invoice_service_type". All fields are combined with a logical 'AND'. */
export type Invoice_Service_Type_Bool_Exp = {
  _and?: InputMaybe<Array<Invoice_Service_Type_Bool_Exp>>;
  _not?: InputMaybe<Invoice_Service_Type_Bool_Exp>;
  _or?: InputMaybe<Array<Invoice_Service_Type_Bool_Exp>>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  invoices?: InputMaybe<Invoice_Bool_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "invoice_service_type" */
export enum Invoice_Service_Type_Constraint {
  /** unique or primary key constraint on columns "name" */
  InvoiceServiceTypeNameKey = 'invoice_service_type_name_key',
  /** unique or primary key constraint on columns "id" */
  InvoiceServiceTypePkey = 'invoice_service_type_pkey',
}

/** input type for inserting data into table "invoice_service_type" */
export type Invoice_Service_Type_Insert_Input = {
  id?: InputMaybe<Scalars['uuid']>;
  invoices?: InputMaybe<Invoice_Arr_Rel_Insert_Input>;
  name?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Invoice_Service_Type_Max_Fields = {
  __typename?: 'invoice_service_type_max_fields';
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type Invoice_Service_Type_Min_Fields = {
  __typename?: 'invoice_service_type_min_fields';
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "invoice_service_type" */
export type Invoice_Service_Type_Mutation_Response = {
  __typename?: 'invoice_service_type_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Invoice_Service_Type>;
};

/** input type for inserting object relation for remote table "invoice_service_type" */
export type Invoice_Service_Type_Obj_Rel_Insert_Input = {
  data: Invoice_Service_Type_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Invoice_Service_Type_On_Conflict>;
};

/** on_conflict condition type for table "invoice_service_type" */
export type Invoice_Service_Type_On_Conflict = {
  constraint: Invoice_Service_Type_Constraint;
  update_columns?: Array<Invoice_Service_Type_Update_Column>;
  where?: InputMaybe<Invoice_Service_Type_Bool_Exp>;
};

/** Ordering options when selecting data from "invoice_service_type". */
export type Invoice_Service_Type_Order_By = {
  id?: InputMaybe<Order_By>;
  invoices_aggregate?: InputMaybe<Invoice_Aggregate_Order_By>;
  name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: invoice_service_type */
export type Invoice_Service_Type_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "invoice_service_type" */
export enum Invoice_Service_Type_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
}

/** input type for updating data in table "invoice_service_type" */
export type Invoice_Service_Type_Set_Input = {
  id?: InputMaybe<Scalars['uuid']>;
  name?: InputMaybe<Scalars['String']>;
};

/** Streaming cursor of the table "invoice_service_type" */
export type Invoice_Service_Type_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Invoice_Service_Type_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Invoice_Service_Type_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['uuid']>;
  name?: InputMaybe<Scalars['String']>;
};

/** update columns of table "invoice_service_type" */
export enum Invoice_Service_Type_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
}

export type Invoice_Service_Type_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Invoice_Service_Type_Set_Input>;
  where: Invoice_Service_Type_Bool_Exp;
};

/** input type for updating data in table "invoice" */
export type Invoice_Set_Input = {
  additionalEmails?: InputMaybe<Scalars['String']>;
  additionalNotes?: InputMaybe<Scalars['String']>;
  attachments?: InputMaybe<Scalars['String']>;
  createdByUserCognitoSub?: InputMaybe<Scalars['String']>;
  customerID?: InputMaybe<Scalars['uuid']>;
  dueDate?: InputMaybe<Scalars['timestamptz']>;
  email?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['Int']>;
  invoiceDate?: InputMaybe<Scalars['timestamptz']>;
  invoiceServiceTypeID?: InputMaybe<Scalars['uuid']>;
  invoiceStatusID?: InputMaybe<Scalars['Int']>;
  invoiceTermID?: InputMaybe<Scalars['uuid']>;
  isRecurring?: InputMaybe<Scalars['Boolean']>;
  isTest?: InputMaybe<Scalars['Boolean']>;
  legacyInvoiceID?: InputMaybe<Scalars['String']>;
  notes?: InputMaybe<Scalars['String']>;
  recurringEndDate?: InputMaybe<Scalars['timestamptz']>;
  recurringFrequency?: InputMaybe<Scalars['Int']>;
  recurringIntervalID?: InputMaybe<Scalars['uuid']>;
};

/** columns and relationships of "invoice_status" */
export type Invoice_Status = {
  __typename?: 'invoice_status';
  id: Scalars['Int'];
  /** An array relationship */
  invoices: Array<Invoice>;
  /** An aggregate relationship */
  invoices_aggregate: Invoice_Aggregate;
  name: Scalars['String'];
};

/** columns and relationships of "invoice_status" */
export type Invoice_StatusInvoicesArgs = {
  distinct_on?: InputMaybe<Array<Invoice_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Invoice_Order_By>>;
  where?: InputMaybe<Invoice_Bool_Exp>;
};

/** columns and relationships of "invoice_status" */
export type Invoice_StatusInvoices_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Invoice_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Invoice_Order_By>>;
  where?: InputMaybe<Invoice_Bool_Exp>;
};

/** aggregated selection of "invoice_status" */
export type Invoice_Status_Aggregate = {
  __typename?: 'invoice_status_aggregate';
  aggregate?: Maybe<Invoice_Status_Aggregate_Fields>;
  nodes: Array<Invoice_Status>;
};

/** aggregate fields of "invoice_status" */
export type Invoice_Status_Aggregate_Fields = {
  __typename?: 'invoice_status_aggregate_fields';
  avg?: Maybe<Invoice_Status_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Invoice_Status_Max_Fields>;
  min?: Maybe<Invoice_Status_Min_Fields>;
  stddev?: Maybe<Invoice_Status_Stddev_Fields>;
  stddev_pop?: Maybe<Invoice_Status_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Invoice_Status_Stddev_Samp_Fields>;
  sum?: Maybe<Invoice_Status_Sum_Fields>;
  var_pop?: Maybe<Invoice_Status_Var_Pop_Fields>;
  var_samp?: Maybe<Invoice_Status_Var_Samp_Fields>;
  variance?: Maybe<Invoice_Status_Variance_Fields>;
};

/** aggregate fields of "invoice_status" */
export type Invoice_Status_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Invoice_Status_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Invoice_Status_Avg_Fields = {
  __typename?: 'invoice_status_avg_fields';
  id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "invoice_status". All fields are combined with a logical 'AND'. */
export type Invoice_Status_Bool_Exp = {
  _and?: InputMaybe<Array<Invoice_Status_Bool_Exp>>;
  _not?: InputMaybe<Invoice_Status_Bool_Exp>;
  _or?: InputMaybe<Array<Invoice_Status_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  invoices?: InputMaybe<Invoice_Bool_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "invoice_status" */
export enum Invoice_Status_Constraint {
  /** unique or primary key constraint on columns "name" */
  InvoiceStatusNameKey = 'invoice_status_name_key',
  /** unique or primary key constraint on columns "id" */
  InvoiceStatusPkey = 'invoice_status_pkey',
}

/** input type for incrementing numeric columns in table "invoice_status" */
export type Invoice_Status_Inc_Input = {
  id?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "invoice_status" */
export type Invoice_Status_Insert_Input = {
  id?: InputMaybe<Scalars['Int']>;
  invoices?: InputMaybe<Invoice_Arr_Rel_Insert_Input>;
  name?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Invoice_Status_Max_Fields = {
  __typename?: 'invoice_status_max_fields';
  id?: Maybe<Scalars['Int']>;
  name?: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type Invoice_Status_Min_Fields = {
  __typename?: 'invoice_status_min_fields';
  id?: Maybe<Scalars['Int']>;
  name?: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "invoice_status" */
export type Invoice_Status_Mutation_Response = {
  __typename?: 'invoice_status_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Invoice_Status>;
};

/** input type for inserting object relation for remote table "invoice_status" */
export type Invoice_Status_Obj_Rel_Insert_Input = {
  data: Invoice_Status_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Invoice_Status_On_Conflict>;
};

/** on_conflict condition type for table "invoice_status" */
export type Invoice_Status_On_Conflict = {
  constraint: Invoice_Status_Constraint;
  update_columns?: Array<Invoice_Status_Update_Column>;
  where?: InputMaybe<Invoice_Status_Bool_Exp>;
};

/** Ordering options when selecting data from "invoice_status". */
export type Invoice_Status_Order_By = {
  id?: InputMaybe<Order_By>;
  invoices_aggregate?: InputMaybe<Invoice_Aggregate_Order_By>;
  name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: invoice_status */
export type Invoice_Status_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "invoice_status" */
export enum Invoice_Status_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
}

/** input type for updating data in table "invoice_status" */
export type Invoice_Status_Set_Input = {
  id?: InputMaybe<Scalars['Int']>;
  name?: InputMaybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type Invoice_Status_Stddev_Fields = {
  __typename?: 'invoice_status_stddev_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Invoice_Status_Stddev_Pop_Fields = {
  __typename?: 'invoice_status_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Invoice_Status_Stddev_Samp_Fields = {
  __typename?: 'invoice_status_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** Streaming cursor of the table "invoice_status" */
export type Invoice_Status_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Invoice_Status_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Invoice_Status_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['Int']>;
  name?: InputMaybe<Scalars['String']>;
};

/** aggregate sum on columns */
export type Invoice_Status_Sum_Fields = {
  __typename?: 'invoice_status_sum_fields';
  id?: Maybe<Scalars['Int']>;
};

/** update columns of table "invoice_status" */
export enum Invoice_Status_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
}

export type Invoice_Status_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Invoice_Status_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Invoice_Status_Set_Input>;
  where: Invoice_Status_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Invoice_Status_Var_Pop_Fields = {
  __typename?: 'invoice_status_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Invoice_Status_Var_Samp_Fields = {
  __typename?: 'invoice_status_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Invoice_Status_Variance_Fields = {
  __typename?: 'invoice_status_variance_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev on columns */
export type Invoice_Stddev_Fields = {
  __typename?: 'invoice_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  invoiceStatusID?: Maybe<Scalars['Float']>;
  recurringFrequency?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "invoice" */
export type Invoice_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  invoiceStatusID?: InputMaybe<Order_By>;
  recurringFrequency?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Invoice_Stddev_Pop_Fields = {
  __typename?: 'invoice_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  invoiceStatusID?: Maybe<Scalars['Float']>;
  recurringFrequency?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "invoice" */
export type Invoice_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  invoiceStatusID?: InputMaybe<Order_By>;
  recurringFrequency?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Invoice_Stddev_Samp_Fields = {
  __typename?: 'invoice_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  invoiceStatusID?: Maybe<Scalars['Float']>;
  recurringFrequency?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "invoice" */
export type Invoice_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  invoiceStatusID?: InputMaybe<Order_By>;
  recurringFrequency?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "invoice" */
export type Invoice_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Invoice_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Invoice_Stream_Cursor_Value_Input = {
  additionalEmails?: InputMaybe<Scalars['String']>;
  additionalNotes?: InputMaybe<Scalars['String']>;
  attachments?: InputMaybe<Scalars['String']>;
  createdByUserCognitoSub?: InputMaybe<Scalars['String']>;
  customerID?: InputMaybe<Scalars['uuid']>;
  dueDate?: InputMaybe<Scalars['timestamptz']>;
  email?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['Int']>;
  invoiceDate?: InputMaybe<Scalars['timestamptz']>;
  invoiceServiceTypeID?: InputMaybe<Scalars['uuid']>;
  invoiceStatusID?: InputMaybe<Scalars['Int']>;
  invoiceTermID?: InputMaybe<Scalars['uuid']>;
  isRecurring?: InputMaybe<Scalars['Boolean']>;
  isTest?: InputMaybe<Scalars['Boolean']>;
  legacyInvoiceID?: InputMaybe<Scalars['String']>;
  notes?: InputMaybe<Scalars['String']>;
  recurringEndDate?: InputMaybe<Scalars['timestamptz']>;
  recurringFrequency?: InputMaybe<Scalars['Int']>;
  recurringIntervalID?: InputMaybe<Scalars['uuid']>;
};

/** aggregate sum on columns */
export type Invoice_Sum_Fields = {
  __typename?: 'invoice_sum_fields';
  id?: Maybe<Scalars['Int']>;
  invoiceStatusID?: Maybe<Scalars['Int']>;
  recurringFrequency?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "invoice" */
export type Invoice_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  invoiceStatusID?: InputMaybe<Order_By>;
  recurringFrequency?: InputMaybe<Order_By>;
};

/** columns and relationships of "invoice_term" */
export type Invoice_Term = {
  __typename?: 'invoice_term';
  id: Scalars['uuid'];
  /** An array relationship */
  invoices: Array<Invoice>;
  /** An aggregate relationship */
  invoices_aggregate: Invoice_Aggregate;
  name: Scalars['String'];
};

/** columns and relationships of "invoice_term" */
export type Invoice_TermInvoicesArgs = {
  distinct_on?: InputMaybe<Array<Invoice_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Invoice_Order_By>>;
  where?: InputMaybe<Invoice_Bool_Exp>;
};

/** columns and relationships of "invoice_term" */
export type Invoice_TermInvoices_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Invoice_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Invoice_Order_By>>;
  where?: InputMaybe<Invoice_Bool_Exp>;
};

/** aggregated selection of "invoice_term" */
export type Invoice_Term_Aggregate = {
  __typename?: 'invoice_term_aggregate';
  aggregate?: Maybe<Invoice_Term_Aggregate_Fields>;
  nodes: Array<Invoice_Term>;
};

/** aggregate fields of "invoice_term" */
export type Invoice_Term_Aggregate_Fields = {
  __typename?: 'invoice_term_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<Invoice_Term_Max_Fields>;
  min?: Maybe<Invoice_Term_Min_Fields>;
};

/** aggregate fields of "invoice_term" */
export type Invoice_Term_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Invoice_Term_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** Boolean expression to filter rows from the table "invoice_term". All fields are combined with a logical 'AND'. */
export type Invoice_Term_Bool_Exp = {
  _and?: InputMaybe<Array<Invoice_Term_Bool_Exp>>;
  _not?: InputMaybe<Invoice_Term_Bool_Exp>;
  _or?: InputMaybe<Array<Invoice_Term_Bool_Exp>>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  invoices?: InputMaybe<Invoice_Bool_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "invoice_term" */
export enum Invoice_Term_Constraint {
  /** unique or primary key constraint on columns "name" */
  InvoiceTermNameKey = 'invoice_term_name_key',
  /** unique or primary key constraint on columns "id" */
  InvoiceTermPkey = 'invoice_term_pkey',
}

/** input type for inserting data into table "invoice_term" */
export type Invoice_Term_Insert_Input = {
  id?: InputMaybe<Scalars['uuid']>;
  invoices?: InputMaybe<Invoice_Arr_Rel_Insert_Input>;
  name?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Invoice_Term_Max_Fields = {
  __typename?: 'invoice_term_max_fields';
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type Invoice_Term_Min_Fields = {
  __typename?: 'invoice_term_min_fields';
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "invoice_term" */
export type Invoice_Term_Mutation_Response = {
  __typename?: 'invoice_term_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Invoice_Term>;
};

/** input type for inserting object relation for remote table "invoice_term" */
export type Invoice_Term_Obj_Rel_Insert_Input = {
  data: Invoice_Term_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Invoice_Term_On_Conflict>;
};

/** on_conflict condition type for table "invoice_term" */
export type Invoice_Term_On_Conflict = {
  constraint: Invoice_Term_Constraint;
  update_columns?: Array<Invoice_Term_Update_Column>;
  where?: InputMaybe<Invoice_Term_Bool_Exp>;
};

/** Ordering options when selecting data from "invoice_term". */
export type Invoice_Term_Order_By = {
  id?: InputMaybe<Order_By>;
  invoices_aggregate?: InputMaybe<Invoice_Aggregate_Order_By>;
  name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: invoice_term */
export type Invoice_Term_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "invoice_term" */
export enum Invoice_Term_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
}

/** input type for updating data in table "invoice_term" */
export type Invoice_Term_Set_Input = {
  id?: InputMaybe<Scalars['uuid']>;
  name?: InputMaybe<Scalars['String']>;
};

/** Streaming cursor of the table "invoice_term" */
export type Invoice_Term_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Invoice_Term_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Invoice_Term_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['uuid']>;
  name?: InputMaybe<Scalars['String']>;
};

/** update columns of table "invoice_term" */
export enum Invoice_Term_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
}

export type Invoice_Term_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Invoice_Term_Set_Input>;
  where: Invoice_Term_Bool_Exp;
};

/** update columns of table "invoice" */
export enum Invoice_Update_Column {
  /** column name */
  AdditionalEmails = 'additionalEmails',
  /** column name */
  AdditionalNotes = 'additionalNotes',
  /** column name */
  Attachments = 'attachments',
  /** column name */
  CreatedByUserCognitoSub = 'createdByUserCognitoSub',
  /** column name */
  CustomerId = 'customerID',
  /** column name */
  DueDate = 'dueDate',
  /** column name */
  Email = 'email',
  /** column name */
  Id = 'id',
  /** column name */
  InvoiceDate = 'invoiceDate',
  /** column name */
  InvoiceServiceTypeId = 'invoiceServiceTypeID',
  /** column name */
  InvoiceStatusId = 'invoiceStatusID',
  /** column name */
  InvoiceTermId = 'invoiceTermID',
  /** column name */
  IsRecurring = 'isRecurring',
  /** column name */
  IsTest = 'isTest',
  /** column name */
  LegacyInvoiceId = 'legacyInvoiceID',
  /** column name */
  Notes = 'notes',
  /** column name */
  RecurringEndDate = 'recurringEndDate',
  /** column name */
  RecurringFrequency = 'recurringFrequency',
  /** column name */
  RecurringIntervalId = 'recurringIntervalID',
}

export type Invoice_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Invoice_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Invoice_Set_Input>;
  where: Invoice_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Invoice_Var_Pop_Fields = {
  __typename?: 'invoice_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  invoiceStatusID?: Maybe<Scalars['Float']>;
  recurringFrequency?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "invoice" */
export type Invoice_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  invoiceStatusID?: InputMaybe<Order_By>;
  recurringFrequency?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Invoice_Var_Samp_Fields = {
  __typename?: 'invoice_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  invoiceStatusID?: Maybe<Scalars['Float']>;
  recurringFrequency?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "invoice" */
export type Invoice_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  invoiceStatusID?: InputMaybe<Order_By>;
  recurringFrequency?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Invoice_Variance_Fields = {
  __typename?: 'invoice_variance_fields';
  id?: Maybe<Scalars['Float']>;
  invoiceStatusID?: Maybe<Scalars['Float']>;
  recurringFrequency?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "invoice" */
export type Invoice_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  invoiceStatusID?: InputMaybe<Order_By>;
  recurringFrequency?: InputMaybe<Order_By>;
};

/** columns and relationships of "language_level" */
export type Language_Level = {
  __typename?: 'language_level';
  id: Scalars['uuid'];
  name: Scalars['String'];
  /** An array relationship */
  user_languages: Array<User_Language>;
  /** An aggregate relationship */
  user_languages_aggregate: User_Language_Aggregate;
};

/** columns and relationships of "language_level" */
export type Language_LevelUser_LanguagesArgs = {
  distinct_on?: InputMaybe<Array<User_Language_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Language_Order_By>>;
  where?: InputMaybe<User_Language_Bool_Exp>;
};

/** columns and relationships of "language_level" */
export type Language_LevelUser_Languages_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Language_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Language_Order_By>>;
  where?: InputMaybe<User_Language_Bool_Exp>;
};

/** aggregated selection of "language_level" */
export type Language_Level_Aggregate = {
  __typename?: 'language_level_aggregate';
  aggregate?: Maybe<Language_Level_Aggregate_Fields>;
  nodes: Array<Language_Level>;
};

/** aggregate fields of "language_level" */
export type Language_Level_Aggregate_Fields = {
  __typename?: 'language_level_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<Language_Level_Max_Fields>;
  min?: Maybe<Language_Level_Min_Fields>;
};

/** aggregate fields of "language_level" */
export type Language_Level_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Language_Level_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** Boolean expression to filter rows from the table "language_level". All fields are combined with a logical 'AND'. */
export type Language_Level_Bool_Exp = {
  _and?: InputMaybe<Array<Language_Level_Bool_Exp>>;
  _not?: InputMaybe<Language_Level_Bool_Exp>;
  _or?: InputMaybe<Array<Language_Level_Bool_Exp>>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  user_languages?: InputMaybe<User_Language_Bool_Exp>;
};

/** unique or primary key constraints on table "language_level" */
export enum Language_Level_Constraint {
  /** unique or primary key constraint on columns "name" */
  LanguageLevelNameKey = 'language_level_name_key',
  /** unique or primary key constraint on columns "id" */
  LanguageLevelPkey = 'language_level_pkey',
}

/** input type for inserting data into table "language_level" */
export type Language_Level_Insert_Input = {
  id?: InputMaybe<Scalars['uuid']>;
  name?: InputMaybe<Scalars['String']>;
  user_languages?: InputMaybe<User_Language_Arr_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type Language_Level_Max_Fields = {
  __typename?: 'language_level_max_fields';
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type Language_Level_Min_Fields = {
  __typename?: 'language_level_min_fields';
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "language_level" */
export type Language_Level_Mutation_Response = {
  __typename?: 'language_level_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Language_Level>;
};

/** input type for inserting object relation for remote table "language_level" */
export type Language_Level_Obj_Rel_Insert_Input = {
  data: Language_Level_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Language_Level_On_Conflict>;
};

/** on_conflict condition type for table "language_level" */
export type Language_Level_On_Conflict = {
  constraint: Language_Level_Constraint;
  update_columns?: Array<Language_Level_Update_Column>;
  where?: InputMaybe<Language_Level_Bool_Exp>;
};

/** Ordering options when selecting data from "language_level". */
export type Language_Level_Order_By = {
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  user_languages_aggregate?: InputMaybe<User_Language_Aggregate_Order_By>;
};

/** primary key columns input for table: language_level */
export type Language_Level_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "language_level" */
export enum Language_Level_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
}

/** input type for updating data in table "language_level" */
export type Language_Level_Set_Input = {
  id?: InputMaybe<Scalars['uuid']>;
  name?: InputMaybe<Scalars['String']>;
};

/** Streaming cursor of the table "language_level" */
export type Language_Level_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Language_Level_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Language_Level_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['uuid']>;
  name?: InputMaybe<Scalars['String']>;
};

/** update columns of table "language_level" */
export enum Language_Level_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
}

export type Language_Level_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Language_Level_Set_Input>;
  where: Language_Level_Bool_Exp;
};

/** columns and relationships of "late_payment_period" */
export type Late_Payment_Period = {
  __typename?: 'late_payment_period';
  /** An array relationship */
  customers: Array<Customer>;
  /** An aggregate relationship */
  customers_aggregate: Customer_Aggregate;
  id: Scalars['uuid'];
  name: Scalars['String'];
};

/** columns and relationships of "late_payment_period" */
export type Late_Payment_PeriodCustomersArgs = {
  distinct_on?: InputMaybe<Array<Customer_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Customer_Order_By>>;
  where?: InputMaybe<Customer_Bool_Exp>;
};

/** columns and relationships of "late_payment_period" */
export type Late_Payment_PeriodCustomers_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Customer_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Customer_Order_By>>;
  where?: InputMaybe<Customer_Bool_Exp>;
};

/** aggregated selection of "late_payment_period" */
export type Late_Payment_Period_Aggregate = {
  __typename?: 'late_payment_period_aggregate';
  aggregate?: Maybe<Late_Payment_Period_Aggregate_Fields>;
  nodes: Array<Late_Payment_Period>;
};

/** aggregate fields of "late_payment_period" */
export type Late_Payment_Period_Aggregate_Fields = {
  __typename?: 'late_payment_period_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<Late_Payment_Period_Max_Fields>;
  min?: Maybe<Late_Payment_Period_Min_Fields>;
};

/** aggregate fields of "late_payment_period" */
export type Late_Payment_Period_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Late_Payment_Period_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** Boolean expression to filter rows from the table "late_payment_period". All fields are combined with a logical 'AND'. */
export type Late_Payment_Period_Bool_Exp = {
  _and?: InputMaybe<Array<Late_Payment_Period_Bool_Exp>>;
  _not?: InputMaybe<Late_Payment_Period_Bool_Exp>;
  _or?: InputMaybe<Array<Late_Payment_Period_Bool_Exp>>;
  customers?: InputMaybe<Customer_Bool_Exp>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "late_payment_period" */
export enum Late_Payment_Period_Constraint {
  /** unique or primary key constraint on columns "name" */
  LatePaymentFrequencyTypeNameKey = 'late_payment_frequency_type_name_key',
  /** unique or primary key constraint on columns "id" */
  LatePaymentFrequencyTypePkey = 'late_payment_frequency_type_pkey',
}

/** input type for inserting data into table "late_payment_period" */
export type Late_Payment_Period_Insert_Input = {
  customers?: InputMaybe<Customer_Arr_Rel_Insert_Input>;
  id?: InputMaybe<Scalars['uuid']>;
  name?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Late_Payment_Period_Max_Fields = {
  __typename?: 'late_payment_period_max_fields';
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type Late_Payment_Period_Min_Fields = {
  __typename?: 'late_payment_period_min_fields';
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "late_payment_period" */
export type Late_Payment_Period_Mutation_Response = {
  __typename?: 'late_payment_period_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Late_Payment_Period>;
};

/** input type for inserting object relation for remote table "late_payment_period" */
export type Late_Payment_Period_Obj_Rel_Insert_Input = {
  data: Late_Payment_Period_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Late_Payment_Period_On_Conflict>;
};

/** on_conflict condition type for table "late_payment_period" */
export type Late_Payment_Period_On_Conflict = {
  constraint: Late_Payment_Period_Constraint;
  update_columns?: Array<Late_Payment_Period_Update_Column>;
  where?: InputMaybe<Late_Payment_Period_Bool_Exp>;
};

/** Ordering options when selecting data from "late_payment_period". */
export type Late_Payment_Period_Order_By = {
  customers_aggregate?: InputMaybe<Customer_Aggregate_Order_By>;
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: late_payment_period */
export type Late_Payment_Period_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "late_payment_period" */
export enum Late_Payment_Period_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
}

/** input type for updating data in table "late_payment_period" */
export type Late_Payment_Period_Set_Input = {
  id?: InputMaybe<Scalars['uuid']>;
  name?: InputMaybe<Scalars['String']>;
};

/** Streaming cursor of the table "late_payment_period" */
export type Late_Payment_Period_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Late_Payment_Period_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Late_Payment_Period_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['uuid']>;
  name?: InputMaybe<Scalars['String']>;
};

/** update columns of table "late_payment_period" */
export enum Late_Payment_Period_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
}

export type Late_Payment_Period_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Late_Payment_Period_Set_Input>;
  where: Late_Payment_Period_Bool_Exp;
};

/** mutation root */
export type Mutation_Root = {
  __typename?: 'mutation_root';
  createCustomer: Scalars['String'];
  createGoogleUser: NewGoogleUser;
  createUser: Scalars['String'];
  createUserProfileMaterial: Scalars['String'];
  /** delete data from the table: "api_user_token" */
  delete_api_user_token?: Maybe<Api_User_Token_Mutation_Response>;
  /** delete single row from the table: "api_user_token" */
  delete_api_user_token_by_pk?: Maybe<Api_User_Token>;
  /** delete data from the table: "billing_frequency" */
  delete_billing_frequency?: Maybe<Billing_Frequency_Mutation_Response>;
  /** delete single row from the table: "billing_frequency" */
  delete_billing_frequency_by_pk?: Maybe<Billing_Frequency>;
  /** delete data from the table: "bookmark_folder" */
  delete_bookmark_folder?: Maybe<Bookmark_Folder_Mutation_Response>;
  /** delete single row from the table: "bookmark_folder" */
  delete_bookmark_folder_by_pk?: Maybe<Bookmark_Folder>;
  /** delete data from the table: "bookmark_link" */
  delete_bookmark_link?: Maybe<Bookmark_Link_Mutation_Response>;
  /** delete single row from the table: "bookmark_link" */
  delete_bookmark_link_by_pk?: Maybe<Bookmark_Link>;
  /** delete data from the table: "capability" */
  delete_capability?: Maybe<Capability_Mutation_Response>;
  /** delete single row from the table: "capability" */
  delete_capability_by_pk?: Maybe<Capability>;
  /** delete data from the table: "capability_endpoint" */
  delete_capability_endpoint?: Maybe<Capability_Endpoint_Mutation_Response>;
  /** delete single row from the table: "capability_endpoint" */
  delete_capability_endpoint_by_pk?: Maybe<Capability_Endpoint>;
  /** delete data from the table: "case_study" */
  delete_case_study?: Maybe<Case_Study_Mutation_Response>;
  /** delete single row from the table: "case_study" */
  delete_case_study_by_pk?: Maybe<Case_Study>;
  /** delete data from the table: "case_study_company" */
  delete_case_study_company?: Maybe<Case_Study_Company_Mutation_Response>;
  /** delete single row from the table: "case_study_company" */
  delete_case_study_company_by_pk?: Maybe<Case_Study_Company>;
  /** delete data from the table: "case_study_industry" */
  delete_case_study_industry?: Maybe<Case_Study_Industry_Mutation_Response>;
  /** delete single row from the table: "case_study_industry" */
  delete_case_study_industry_by_pk?: Maybe<Case_Study_Industry>;
  /** delete data from the table: "case_study_market" */
  delete_case_study_market?: Maybe<Case_Study_Market_Mutation_Response>;
  /** delete single row from the table: "case_study_market" */
  delete_case_study_market_by_pk?: Maybe<Case_Study_Market>;
  /** delete data from the table: "case_study_skill" */
  delete_case_study_skill?: Maybe<Case_Study_Skill_Mutation_Response>;
  /** delete single row from the table: "case_study_skill" */
  delete_case_study_skill_by_pk?: Maybe<Case_Study_Skill>;
  /** delete data from the table: "case_study_team" */
  delete_case_study_team?: Maybe<Case_Study_Team_Mutation_Response>;
  /** delete single row from the table: "case_study_team" */
  delete_case_study_team_by_pk?: Maybe<Case_Study_Team>;
  /** delete data from the table: "case_study_user" */
  delete_case_study_user?: Maybe<Case_Study_User_Mutation_Response>;
  /** delete single row from the table: "case_study_user" */
  delete_case_study_user_by_pk?: Maybe<Case_Study_User>;
  /** delete data from the table: "company" */
  delete_company?: Maybe<Company_Mutation_Response>;
  /** delete single row from the table: "company" */
  delete_company_by_pk?: Maybe<Company>;
  /** delete data from the table: "company_contact" */
  delete_company_contact?: Maybe<Company_Contact_Mutation_Response>;
  /** delete single row from the table: "company_contact" */
  delete_company_contact_by_pk?: Maybe<Company_Contact>;
  /** delete data from the table: "company_team" */
  delete_company_team?: Maybe<Company_Team_Mutation_Response>;
  /** delete single row from the table: "company_team" */
  delete_company_team_by_pk?: Maybe<Company_Team>;
  /** delete data from the table: "company_team_contributor" */
  delete_company_team_contributor?: Maybe<Company_Team_Contributor_Mutation_Response>;
  /** delete single row from the table: "company_team_contributor" */
  delete_company_team_contributor_by_pk?: Maybe<Company_Team_Contributor>;
  /** delete data from the table: "contributor_type" */
  delete_contributor_type?: Maybe<Contributor_Type_Mutation_Response>;
  /** delete single row from the table: "contributor_type" */
  delete_contributor_type_by_pk?: Maybe<Contributor_Type>;
  /** delete data from the table: "current_user_meta" */
  delete_current_user_meta?: Maybe<Current_User_Meta_Mutation_Response>;
  /** delete data from the table: "custom_payout" */
  delete_custom_payout?: Maybe<Custom_Payout_Mutation_Response>;
  /** delete single row from the table: "custom_payout" */
  delete_custom_payout_by_pk?: Maybe<Custom_Payout>;
  /** delete data from the table: "custom_payout_line_item" */
  delete_custom_payout_line_item?: Maybe<Custom_Payout_Line_Item_Mutation_Response>;
  /** delete single row from the table: "custom_payout_line_item" */
  delete_custom_payout_line_item_by_pk?: Maybe<Custom_Payout_Line_Item>;
  /** delete data from the table: "custom_project_distribution" */
  delete_custom_project_distribution?: Maybe<Custom_Project_Distribution_Mutation_Response>;
  /** delete single row from the table: "custom_project_distribution" */
  delete_custom_project_distribution_by_pk?: Maybe<Custom_Project_Distribution>;
  /** delete data from the table: "custom_project_payout_distribution" */
  delete_custom_project_payout_distribution?: Maybe<Custom_Project_Payout_Distribution_Mutation_Response>;
  /** delete single row from the table: "custom_project_payout_distribution" */
  delete_custom_project_payout_distribution_by_pk?: Maybe<Custom_Project_Payout_Distribution>;
  /** delete data from the table: "customer" */
  delete_customer?: Maybe<Customer_Mutation_Response>;
  /** delete single row from the table: "customer" */
  delete_customer_by_pk?: Maybe<Customer>;
  /** delete data from the table: "customer_closing_party" */
  delete_customer_closing_party?: Maybe<Customer_Closing_Party_Mutation_Response>;
  /** delete single row from the table: "customer_closing_party" */
  delete_customer_closing_party_by_pk?: Maybe<Customer_Closing_Party>;
  /** delete data from the table: "customer_originating_party" */
  delete_customer_originating_party?: Maybe<Customer_Originating_Party_Mutation_Response>;
  /** delete single row from the table: "customer_originating_party" */
  delete_customer_originating_party_by_pk?: Maybe<Customer_Originating_Party>;
  /** delete data from the table: "customer_referrer" */
  delete_customer_referrer?: Maybe<Customer_Referrer_Mutation_Response>;
  /** delete single row from the table: "customer_referrer" */
  delete_customer_referrer_by_pk?: Maybe<Customer_Referrer>;
  /** delete data from the table: "document" */
  delete_document?: Maybe<Document_Mutation_Response>;
  /** delete data from the table: "document_associated_company" */
  delete_document_associated_company?: Maybe<Document_Associated_Company_Mutation_Response>;
  /** delete single row from the table: "document_associated_company" */
  delete_document_associated_company_by_pk?: Maybe<Document_Associated_Company>;
  /** delete data from the table: "document_associated_user" */
  delete_document_associated_user?: Maybe<Document_Associated_User_Mutation_Response>;
  /** delete single row from the table: "document_associated_user" */
  delete_document_associated_user_by_pk?: Maybe<Document_Associated_User>;
  /** delete single row from the table: "document" */
  delete_document_by_pk?: Maybe<Document>;
  /** delete data from the table: "document_extra_field" */
  delete_document_extra_field?: Maybe<Document_Extra_Field_Mutation_Response>;
  /** delete single row from the table: "document_extra_field" */
  delete_document_extra_field_by_pk?: Maybe<Document_Extra_Field>;
  /** delete data from the table: "document_extra_field_value" */
  delete_document_extra_field_value?: Maybe<Document_Extra_Field_Value_Mutation_Response>;
  /** delete single row from the table: "document_extra_field_value" */
  delete_document_extra_field_value_by_pk?: Maybe<Document_Extra_Field_Value>;
  /** delete data from the table: "document_type" */
  delete_document_type?: Maybe<Document_Type_Mutation_Response>;
  /** delete single row from the table: "document_type" */
  delete_document_type_by_pk?: Maybe<Document_Type>;
  /** delete data from the table: "endpoint" */
  delete_endpoint?: Maybe<Endpoint_Mutation_Response>;
  /** delete single row from the table: "endpoint" */
  delete_endpoint_by_pk?: Maybe<Endpoint>;
  /** delete data from the table: "fixed_price_invoice_line_item" */
  delete_fixed_price_invoice_line_item?: Maybe<Fixed_Price_Invoice_Line_Item_Mutation_Response>;
  /** delete single row from the table: "fixed_price_invoice_line_item" */
  delete_fixed_price_invoice_line_item_by_pk?: Maybe<Fixed_Price_Invoice_Line_Item>;
  /** delete data from the table: "in_market_experience_level" */
  delete_in_market_experience_level?: Maybe<In_Market_Experience_Level_Mutation_Response>;
  /** delete single row from the table: "in_market_experience_level" */
  delete_in_market_experience_level_by_pk?: Maybe<In_Market_Experience_Level>;
  /** delete data from the table: "industry" */
  delete_industry?: Maybe<Industry_Mutation_Response>;
  /** delete single row from the table: "industry" */
  delete_industry_by_pk?: Maybe<Industry>;
  /** delete data from the table: "industry_experience_level" */
  delete_industry_experience_level?: Maybe<Industry_Experience_Level_Mutation_Response>;
  /** delete single row from the table: "industry_experience_level" */
  delete_industry_experience_level_by_pk?: Maybe<Industry_Experience_Level>;
  /** delete data from the table: "industry_google_group" */
  delete_industry_google_group?: Maybe<Industry_Google_Group_Mutation_Response>;
  /** delete single row from the table: "industry_google_group" */
  delete_industry_google_group_by_pk?: Maybe<Industry_Google_Group>;
  /** delete data from the table: "industry_slack_channel" */
  delete_industry_slack_channel?: Maybe<Industry_Slack_Channel_Mutation_Response>;
  /** delete single row from the table: "industry_slack_channel" */
  delete_industry_slack_channel_by_pk?: Maybe<Industry_Slack_Channel>;
  /** delete data from the table: "invoice" */
  delete_invoice?: Maybe<Invoice_Mutation_Response>;
  /** delete single row from the table: "invoice" */
  delete_invoice_by_pk?: Maybe<Invoice>;
  /** delete data from the table: "invoice_distribution" */
  delete_invoice_distribution?: Maybe<Invoice_Distribution_Mutation_Response>;
  /** delete single row from the table: "invoice_distribution" */
  delete_invoice_distribution_by_pk?: Maybe<Invoice_Distribution>;
  /** delete data from the table: "invoice_service_type" */
  delete_invoice_service_type?: Maybe<Invoice_Service_Type_Mutation_Response>;
  /** delete single row from the table: "invoice_service_type" */
  delete_invoice_service_type_by_pk?: Maybe<Invoice_Service_Type>;
  /** delete data from the table: "invoice_status" */
  delete_invoice_status?: Maybe<Invoice_Status_Mutation_Response>;
  /** delete single row from the table: "invoice_status" */
  delete_invoice_status_by_pk?: Maybe<Invoice_Status>;
  /** delete data from the table: "invoice_term" */
  delete_invoice_term?: Maybe<Invoice_Term_Mutation_Response>;
  /** delete single row from the table: "invoice_term" */
  delete_invoice_term_by_pk?: Maybe<Invoice_Term>;
  /** delete data from the table: "language_level" */
  delete_language_level?: Maybe<Language_Level_Mutation_Response>;
  /** delete single row from the table: "language_level" */
  delete_language_level_by_pk?: Maybe<Language_Level>;
  /** delete data from the table: "late_payment_period" */
  delete_late_payment_period?: Maybe<Late_Payment_Period_Mutation_Response>;
  /** delete single row from the table: "late_payment_period" */
  delete_late_payment_period_by_pk?: Maybe<Late_Payment_Period>;
  /** delete data from the table: "no_of_employees" */
  delete_no_of_employees?: Maybe<No_Of_Employees_Mutation_Response>;
  /** delete single row from the table: "no_of_employees" */
  delete_no_of_employees_by_pk?: Maybe<No_Of_Employees>;
  /** delete data from the table: "partner" */
  delete_partner?: Maybe<Partner_Mutation_Response>;
  /** delete single row from the table: "partner" */
  delete_partner_by_pk?: Maybe<Partner>;
  /** delete data from the table: "partner_category" */
  delete_partner_category?: Maybe<Partner_Category_Mutation_Response>;
  /** delete single row from the table: "partner_category" */
  delete_partner_category_by_pk?: Maybe<Partner_Category>;
  /** delete data from the table: "partner_custom_field" */
  delete_partner_custom_field?: Maybe<Partner_Custom_Field_Mutation_Response>;
  /** delete single row from the table: "partner_custom_field" */
  delete_partner_custom_field_by_pk?: Maybe<Partner_Custom_Field>;
  /** delete data from the table: "partner_gallery_image" */
  delete_partner_gallery_image?: Maybe<Partner_Gallery_Image_Mutation_Response>;
  /** delete single row from the table: "partner_gallery_image" */
  delete_partner_gallery_image_by_pk?: Maybe<Partner_Gallery_Image>;
  /** delete data from the table: "payout_distribution" */
  delete_payout_distribution?: Maybe<Payout_Distribution_Mutation_Response>;
  /** delete single row from the table: "payout_distribution" */
  delete_payout_distribution_by_pk?: Maybe<Payout_Distribution>;
  /** delete data from the table: "product_or_service_type" */
  delete_product_or_service_type?: Maybe<Product_Or_Service_Type_Mutation_Response>;
  /** delete single row from the table: "product_or_service_type" */
  delete_product_or_service_type_by_pk?: Maybe<Product_Or_Service_Type>;
  /** delete data from the table: "public_user_meta" */
  delete_public_user_meta?: Maybe<Public_User_Meta_Mutation_Response>;
  /** delete data from the table: "recurring_interval" */
  delete_recurring_interval?: Maybe<Recurring_Interval_Mutation_Response>;
  /** delete single row from the table: "recurring_interval" */
  delete_recurring_interval_by_pk?: Maybe<Recurring_Interval>;
  /** delete data from the table: "route" */
  delete_route?: Maybe<Route_Mutation_Response>;
  /** delete single row from the table: "route" */
  delete_route_by_pk?: Maybe<Route>;
  /** delete data from the table: "route_endpoint" */
  delete_route_endpoint?: Maybe<Route_Endpoint_Mutation_Response>;
  /** delete single row from the table: "route_endpoint" */
  delete_route_endpoint_by_pk?: Maybe<Route_Endpoint>;
  /** delete data from the table: "route_group" */
  delete_route_group?: Maybe<Route_Group_Mutation_Response>;
  /** delete single row from the table: "route_group" */
  delete_route_group_by_pk?: Maybe<Route_Group>;
  /** delete data from the table: "skill" */
  delete_skill?: Maybe<Skill_Mutation_Response>;
  /** delete single row from the table: "skill" */
  delete_skill_by_pk?: Maybe<Skill>;
  /** delete data from the table: "skill_category" */
  delete_skill_category?: Maybe<Skill_Category_Mutation_Response>;
  /** delete single row from the table: "skill_category" */
  delete_skill_category_by_pk?: Maybe<Skill_Category>;
  /** delete data from the table: "skill_google_group" */
  delete_skill_google_group?: Maybe<Skill_Google_Group_Mutation_Response>;
  /** delete single row from the table: "skill_google_group" */
  delete_skill_google_group_by_pk?: Maybe<Skill_Google_Group>;
  /** delete data from the table: "skill_level" */
  delete_skill_level?: Maybe<Skill_Level_Mutation_Response>;
  /** delete single row from the table: "skill_level" */
  delete_skill_level_by_pk?: Maybe<Skill_Level>;
  /** delete data from the table: "skill_skill_categories" */
  delete_skill_skill_categories?: Maybe<Skill_Skill_Categories_Mutation_Response>;
  /** delete single row from the table: "skill_skill_categories" */
  delete_skill_skill_categories_by_pk?: Maybe<Skill_Skill_Categories>;
  /** delete data from the table: "skill_slack_channel" */
  delete_skill_slack_channel?: Maybe<Skill_Slack_Channel_Mutation_Response>;
  /** delete single row from the table: "skill_slack_channel" */
  delete_skill_slack_channel_by_pk?: Maybe<Skill_Slack_Channel>;
  /** delete data from the table: "slack_answer" */
  delete_slack_answer?: Maybe<Slack_Answer_Mutation_Response>;
  /** delete single row from the table: "slack_answer" */
  delete_slack_answer_by_pk?: Maybe<Slack_Answer>;
  /** delete data from the table: "slack_birthday_and_anniversary_message" */
  delete_slack_birthday_and_anniversary_message?: Maybe<Slack_Birthday_And_Anniversary_Message_Mutation_Response>;
  /** delete single row from the table: "slack_birthday_and_anniversary_message" */
  delete_slack_birthday_and_anniversary_message_by_pk?: Maybe<Slack_Birthday_And_Anniversary_Message>;
  /** delete data from the table: "slack_message" */
  delete_slack_message?: Maybe<Slack_Message_Mutation_Response>;
  /** delete single row from the table: "slack_message" */
  delete_slack_message_by_pk?: Maybe<Slack_Message>;
  /** delete data from the table: "slack_message_trigger_log" */
  delete_slack_message_trigger_log?: Maybe<Slack_Message_Trigger_Log_Mutation_Response>;
  /** delete single row from the table: "slack_message_trigger_log" */
  delete_slack_message_trigger_log_by_pk?: Maybe<Slack_Message_Trigger_Log>;
  /** delete data from the table: "slack_outreach" */
  delete_slack_outreach?: Maybe<Slack_Outreach_Mutation_Response>;
  /** delete single row from the table: "slack_outreach" */
  delete_slack_outreach_by_pk?: Maybe<Slack_Outreach>;
  /** delete data from the table: "team" */
  delete_team?: Maybe<Team_Mutation_Response>;
  /** delete single row from the table: "team" */
  delete_team_by_pk?: Maybe<Team>;
  /** delete data from the table: "team_google_group" */
  delete_team_google_group?: Maybe<Team_Google_Group_Mutation_Response>;
  /** delete single row from the table: "team_google_group" */
  delete_team_google_group_by_pk?: Maybe<Team_Google_Group>;
  /** delete data from the table: "team_industry" */
  delete_team_industry?: Maybe<Team_Industry_Mutation_Response>;
  /** delete single row from the table: "team_industry" */
  delete_team_industry_by_pk?: Maybe<Team_Industry>;
  /** delete data from the table: "team_skill" */
  delete_team_skill?: Maybe<Team_Skill_Mutation_Response>;
  /** delete single row from the table: "team_skill" */
  delete_team_skill_by_pk?: Maybe<Team_Skill>;
  /** delete data from the table: "team_slack_channel" */
  delete_team_slack_channel?: Maybe<Team_Slack_Channel_Mutation_Response>;
  /** delete single row from the table: "team_slack_channel" */
  delete_team_slack_channel_by_pk?: Maybe<Team_Slack_Channel>;
  /** delete data from the table: "time_and_material_invoice_line_item" */
  delete_time_and_material_invoice_line_item?: Maybe<Time_And_Material_Invoice_Line_Item_Mutation_Response>;
  /** delete single row from the table: "time_and_material_invoice_line_item" */
  delete_time_and_material_invoice_line_item_by_pk?: Maybe<Time_And_Material_Invoice_Line_Item>;
  /** delete data from the table: "tool" */
  delete_tool?: Maybe<Tool_Mutation_Response>;
  /** delete single row from the table: "tool" */
  delete_tool_by_pk?: Maybe<Tool>;
  /** delete data from the table: "trigger" */
  delete_trigger?: Maybe<Trigger_Mutation_Response>;
  /** delete single row from the table: "trigger" */
  delete_trigger_by_pk?: Maybe<Trigger>;
  /** delete data from the table: "user_basic_information" */
  delete_user_basic_information?: Maybe<User_Basic_Information_Mutation_Response>;
  /** delete single row from the table: "user_basic_information" */
  delete_user_basic_information_by_pk?: Maybe<User_Basic_Information>;
  /** delete data from the table: "user_company" */
  delete_user_company?: Maybe<User_Company_Mutation_Response>;
  /** delete single row from the table: "user_company" */
  delete_user_company_by_pk?: Maybe<User_Company>;
  /** delete data from the table: "user_completed_customer_sale" */
  delete_user_completed_customer_sale?: Maybe<User_Completed_Customer_Sale_Mutation_Response>;
  /** delete single row from the table: "user_completed_customer_sale" */
  delete_user_completed_customer_sale_by_pk?: Maybe<User_Completed_Customer_Sale>;
  /** delete data from the table: "user_in_market_experience" */
  delete_user_in_market_experience?: Maybe<User_In_Market_Experience_Mutation_Response>;
  /** delete single row from the table: "user_in_market_experience" */
  delete_user_in_market_experience_by_pk?: Maybe<User_In_Market_Experience>;
  /** delete data from the table: "user_industry_experience" */
  delete_user_industry_experience?: Maybe<User_Industry_Experience_Mutation_Response>;
  /** delete single row from the table: "user_industry_experience" */
  delete_user_industry_experience_by_pk?: Maybe<User_Industry_Experience>;
  /** delete data from the table: "user_language" */
  delete_user_language?: Maybe<User_Language_Mutation_Response>;
  /** delete single row from the table: "user_language" */
  delete_user_language_by_pk?: Maybe<User_Language>;
  /** delete data from the table: "user_meta" */
  delete_user_meta?: Maybe<User_Meta_Mutation_Response>;
  /** delete single row from the table: "user_meta" */
  delete_user_meta_by_pk?: Maybe<User_Meta>;
  /** delete data from the table: "user_meta_user_role" */
  delete_user_meta_user_role?: Maybe<User_Meta_User_Role_Mutation_Response>;
  /** delete single row from the table: "user_meta_user_role" */
  delete_user_meta_user_role_by_pk?: Maybe<User_Meta_User_Role>;
  /** delete data from the table: "user_professional_information" */
  delete_user_professional_information?: Maybe<User_Professional_Information_Mutation_Response>;
  /** delete single row from the table: "user_professional_information" */
  delete_user_professional_information_by_pk?: Maybe<User_Professional_Information>;
  /** delete data from the table: "user_profile" */
  delete_user_profile?: Maybe<User_Profile_Mutation_Response>;
  /** delete single row from the table: "user_profile" */
  delete_user_profile_by_pk?: Maybe<User_Profile>;
  /** delete data from the table: "user_profile_company" */
  delete_user_profile_company?: Maybe<User_Profile_Company_Mutation_Response>;
  /** delete single row from the table: "user_profile_company" */
  delete_user_profile_company_by_pk?: Maybe<User_Profile_Company>;
  /** delete data from the table: "user_profile_industry" */
  delete_user_profile_industry?: Maybe<User_Profile_Industry_Mutation_Response>;
  /** delete single row from the table: "user_profile_industry" */
  delete_user_profile_industry_by_pk?: Maybe<User_Profile_Industry>;
  /** delete data from the table: "user_profile_skill" */
  delete_user_profile_skill?: Maybe<User_Profile_Skill_Mutation_Response>;
  /** delete single row from the table: "user_profile_skill" */
  delete_user_profile_skill_by_pk?: Maybe<User_Profile_Skill>;
  /** delete data from the table: "user_profile_tab" */
  delete_user_profile_tab?: Maybe<User_Profile_Tab_Mutation_Response>;
  /** delete single row from the table: "user_profile_tab" */
  delete_user_profile_tab_by_pk?: Maybe<User_Profile_Tab>;
  /** delete data from the table: "user_profile_tab_endpoint" */
  delete_user_profile_tab_endpoint?: Maybe<User_Profile_Tab_Endpoint_Mutation_Response>;
  /** delete single row from the table: "user_profile_tab_endpoint" */
  delete_user_profile_tab_endpoint_by_pk?: Maybe<User_Profile_Tab_Endpoint>;
  /** delete data from the table: "user_profile_team" */
  delete_user_profile_team?: Maybe<User_Profile_Team_Mutation_Response>;
  /** delete single row from the table: "user_profile_team" */
  delete_user_profile_team_by_pk?: Maybe<User_Profile_Team>;
  /** delete data from the table: "user_profile_visibility" */
  delete_user_profile_visibility?: Maybe<User_Profile_Visibility_Mutation_Response>;
  /** delete single row from the table: "user_profile_visibility" */
  delete_user_profile_visibility_by_pk?: Maybe<User_Profile_Visibility>;
  /** delete data from the table: "user_role" */
  delete_user_role?: Maybe<User_Role_Mutation_Response>;
  /** delete single row from the table: "user_role" */
  delete_user_role_by_pk?: Maybe<User_Role>;
  /** delete data from the table: "user_role_capability" */
  delete_user_role_capability?: Maybe<User_Role_Capability_Mutation_Response>;
  /** delete single row from the table: "user_role_capability" */
  delete_user_role_capability_by_pk?: Maybe<User_Role_Capability>;
  /** delete data from the table: "user_role_route" */
  delete_user_role_route?: Maybe<User_Role_Route_Mutation_Response>;
  /** delete single row from the table: "user_role_route" */
  delete_user_role_route_by_pk?: Maybe<User_Role_Route>;
  /** delete data from the table: "user_role_user_profile_tab" */
  delete_user_role_user_profile_tab?: Maybe<User_Role_User_Profile_Tab_Mutation_Response>;
  /** delete single row from the table: "user_role_user_profile_tab" */
  delete_user_role_user_profile_tab_by_pk?: Maybe<User_Role_User_Profile_Tab>;
  /** delete data from the table: "user_skill" */
  delete_user_skill?: Maybe<User_Skill_Mutation_Response>;
  /** delete single row from the table: "user_skill" */
  delete_user_skill_by_pk?: Maybe<User_Skill>;
  /** delete data from the table: "user_work_experience" */
  delete_user_work_experience?: Maybe<User_Work_Experience_Mutation_Response>;
  /** delete single row from the table: "user_work_experience" */
  delete_user_work_experience_by_pk?: Maybe<User_Work_Experience>;
  /** delete data from the table: "webhook" */
  delete_webhook?: Maybe<Webhook_Mutation_Response>;
  /** delete single row from the table: "webhook" */
  delete_webhook_by_pk?: Maybe<Webhook>;
  /** delete data from the table: "webhook_trigger" */
  delete_webhook_trigger?: Maybe<Webhook_Trigger_Mutation_Response>;
  /** delete single row from the table: "webhook_trigger" */
  delete_webhook_trigger_by_pk?: Maybe<Webhook_Trigger>;
  /** insert data into the table: "api_user_token" */
  insert_api_user_token?: Maybe<Api_User_Token_Mutation_Response>;
  /** insert a single row into the table: "api_user_token" */
  insert_api_user_token_one?: Maybe<Api_User_Token>;
  /** insert data into the table: "billing_frequency" */
  insert_billing_frequency?: Maybe<Billing_Frequency_Mutation_Response>;
  /** insert a single row into the table: "billing_frequency" */
  insert_billing_frequency_one?: Maybe<Billing_Frequency>;
  /** insert data into the table: "bookmark_folder" */
  insert_bookmark_folder?: Maybe<Bookmark_Folder_Mutation_Response>;
  /** insert a single row into the table: "bookmark_folder" */
  insert_bookmark_folder_one?: Maybe<Bookmark_Folder>;
  /** insert data into the table: "bookmark_link" */
  insert_bookmark_link?: Maybe<Bookmark_Link_Mutation_Response>;
  /** insert a single row into the table: "bookmark_link" */
  insert_bookmark_link_one?: Maybe<Bookmark_Link>;
  /** insert data into the table: "capability" */
  insert_capability?: Maybe<Capability_Mutation_Response>;
  /** insert data into the table: "capability_endpoint" */
  insert_capability_endpoint?: Maybe<Capability_Endpoint_Mutation_Response>;
  /** insert a single row into the table: "capability_endpoint" */
  insert_capability_endpoint_one?: Maybe<Capability_Endpoint>;
  /** insert a single row into the table: "capability" */
  insert_capability_one?: Maybe<Capability>;
  /** insert data into the table: "case_study" */
  insert_case_study?: Maybe<Case_Study_Mutation_Response>;
  /** insert data into the table: "case_study_company" */
  insert_case_study_company?: Maybe<Case_Study_Company_Mutation_Response>;
  /** insert a single row into the table: "case_study_company" */
  insert_case_study_company_one?: Maybe<Case_Study_Company>;
  /** insert data into the table: "case_study_industry" */
  insert_case_study_industry?: Maybe<Case_Study_Industry_Mutation_Response>;
  /** insert a single row into the table: "case_study_industry" */
  insert_case_study_industry_one?: Maybe<Case_Study_Industry>;
  /** insert data into the table: "case_study_market" */
  insert_case_study_market?: Maybe<Case_Study_Market_Mutation_Response>;
  /** insert a single row into the table: "case_study_market" */
  insert_case_study_market_one?: Maybe<Case_Study_Market>;
  /** insert a single row into the table: "case_study" */
  insert_case_study_one?: Maybe<Case_Study>;
  /** insert data into the table: "case_study_skill" */
  insert_case_study_skill?: Maybe<Case_Study_Skill_Mutation_Response>;
  /** insert a single row into the table: "case_study_skill" */
  insert_case_study_skill_one?: Maybe<Case_Study_Skill>;
  /** insert data into the table: "case_study_team" */
  insert_case_study_team?: Maybe<Case_Study_Team_Mutation_Response>;
  /** insert a single row into the table: "case_study_team" */
  insert_case_study_team_one?: Maybe<Case_Study_Team>;
  /** insert data into the table: "case_study_user" */
  insert_case_study_user?: Maybe<Case_Study_User_Mutation_Response>;
  /** insert a single row into the table: "case_study_user" */
  insert_case_study_user_one?: Maybe<Case_Study_User>;
  /** insert data into the table: "company" */
  insert_company?: Maybe<Company_Mutation_Response>;
  /** insert data into the table: "company_contact" */
  insert_company_contact?: Maybe<Company_Contact_Mutation_Response>;
  /** insert a single row into the table: "company_contact" */
  insert_company_contact_one?: Maybe<Company_Contact>;
  /** insert a single row into the table: "company" */
  insert_company_one?: Maybe<Company>;
  /** insert data into the table: "company_team" */
  insert_company_team?: Maybe<Company_Team_Mutation_Response>;
  /** insert data into the table: "company_team_contributor" */
  insert_company_team_contributor?: Maybe<Company_Team_Contributor_Mutation_Response>;
  /** insert a single row into the table: "company_team_contributor" */
  insert_company_team_contributor_one?: Maybe<Company_Team_Contributor>;
  /** insert a single row into the table: "company_team" */
  insert_company_team_one?: Maybe<Company_Team>;
  /** insert data into the table: "contributor_type" */
  insert_contributor_type?: Maybe<Contributor_Type_Mutation_Response>;
  /** insert a single row into the table: "contributor_type" */
  insert_contributor_type_one?: Maybe<Contributor_Type>;
  /** insert data into the table: "current_user_meta" */
  insert_current_user_meta?: Maybe<Current_User_Meta_Mutation_Response>;
  /** insert a single row into the table: "current_user_meta" */
  insert_current_user_meta_one?: Maybe<Current_User_Meta>;
  /** insert data into the table: "custom_payout" */
  insert_custom_payout?: Maybe<Custom_Payout_Mutation_Response>;
  /** insert data into the table: "custom_payout_line_item" */
  insert_custom_payout_line_item?: Maybe<Custom_Payout_Line_Item_Mutation_Response>;
  /** insert a single row into the table: "custom_payout_line_item" */
  insert_custom_payout_line_item_one?: Maybe<Custom_Payout_Line_Item>;
  /** insert a single row into the table: "custom_payout" */
  insert_custom_payout_one?: Maybe<Custom_Payout>;
  /** insert data into the table: "custom_project_distribution" */
  insert_custom_project_distribution?: Maybe<Custom_Project_Distribution_Mutation_Response>;
  /** insert a single row into the table: "custom_project_distribution" */
  insert_custom_project_distribution_one?: Maybe<Custom_Project_Distribution>;
  /** insert data into the table: "custom_project_payout_distribution" */
  insert_custom_project_payout_distribution?: Maybe<Custom_Project_Payout_Distribution_Mutation_Response>;
  /** insert a single row into the table: "custom_project_payout_distribution" */
  insert_custom_project_payout_distribution_one?: Maybe<Custom_Project_Payout_Distribution>;
  /** insert data into the table: "customer" */
  insert_customer?: Maybe<Customer_Mutation_Response>;
  /** insert data into the table: "customer_closing_party" */
  insert_customer_closing_party?: Maybe<Customer_Closing_Party_Mutation_Response>;
  /** insert a single row into the table: "customer_closing_party" */
  insert_customer_closing_party_one?: Maybe<Customer_Closing_Party>;
  /** insert a single row into the table: "customer" */
  insert_customer_one?: Maybe<Customer>;
  /** insert data into the table: "customer_originating_party" */
  insert_customer_originating_party?: Maybe<Customer_Originating_Party_Mutation_Response>;
  /** insert a single row into the table: "customer_originating_party" */
  insert_customer_originating_party_one?: Maybe<Customer_Originating_Party>;
  /** insert data into the table: "customer_referrer" */
  insert_customer_referrer?: Maybe<Customer_Referrer_Mutation_Response>;
  /** insert a single row into the table: "customer_referrer" */
  insert_customer_referrer_one?: Maybe<Customer_Referrer>;
  /** insert data into the table: "document" */
  insert_document?: Maybe<Document_Mutation_Response>;
  /** insert data into the table: "document_associated_company" */
  insert_document_associated_company?: Maybe<Document_Associated_Company_Mutation_Response>;
  /** insert a single row into the table: "document_associated_company" */
  insert_document_associated_company_one?: Maybe<Document_Associated_Company>;
  /** insert data into the table: "document_associated_user" */
  insert_document_associated_user?: Maybe<Document_Associated_User_Mutation_Response>;
  /** insert a single row into the table: "document_associated_user" */
  insert_document_associated_user_one?: Maybe<Document_Associated_User>;
  /** insert data into the table: "document_extra_field" */
  insert_document_extra_field?: Maybe<Document_Extra_Field_Mutation_Response>;
  /** insert a single row into the table: "document_extra_field" */
  insert_document_extra_field_one?: Maybe<Document_Extra_Field>;
  /** insert data into the table: "document_extra_field_value" */
  insert_document_extra_field_value?: Maybe<Document_Extra_Field_Value_Mutation_Response>;
  /** insert a single row into the table: "document_extra_field_value" */
  insert_document_extra_field_value_one?: Maybe<Document_Extra_Field_Value>;
  /** insert a single row into the table: "document" */
  insert_document_one?: Maybe<Document>;
  /** insert data into the table: "document_type" */
  insert_document_type?: Maybe<Document_Type_Mutation_Response>;
  /** insert a single row into the table: "document_type" */
  insert_document_type_one?: Maybe<Document_Type>;
  /** insert data into the table: "endpoint" */
  insert_endpoint?: Maybe<Endpoint_Mutation_Response>;
  /** insert a single row into the table: "endpoint" */
  insert_endpoint_one?: Maybe<Endpoint>;
  /** insert data into the table: "fixed_price_invoice_line_item" */
  insert_fixed_price_invoice_line_item?: Maybe<Fixed_Price_Invoice_Line_Item_Mutation_Response>;
  /** insert a single row into the table: "fixed_price_invoice_line_item" */
  insert_fixed_price_invoice_line_item_one?: Maybe<Fixed_Price_Invoice_Line_Item>;
  /** insert data into the table: "in_market_experience_level" */
  insert_in_market_experience_level?: Maybe<In_Market_Experience_Level_Mutation_Response>;
  /** insert a single row into the table: "in_market_experience_level" */
  insert_in_market_experience_level_one?: Maybe<In_Market_Experience_Level>;
  /** insert data into the table: "industry" */
  insert_industry?: Maybe<Industry_Mutation_Response>;
  /** insert data into the table: "industry_experience_level" */
  insert_industry_experience_level?: Maybe<Industry_Experience_Level_Mutation_Response>;
  /** insert a single row into the table: "industry_experience_level" */
  insert_industry_experience_level_one?: Maybe<Industry_Experience_Level>;
  /** insert data into the table: "industry_google_group" */
  insert_industry_google_group?: Maybe<Industry_Google_Group_Mutation_Response>;
  /** insert a single row into the table: "industry_google_group" */
  insert_industry_google_group_one?: Maybe<Industry_Google_Group>;
  /** insert a single row into the table: "industry" */
  insert_industry_one?: Maybe<Industry>;
  /** insert data into the table: "industry_slack_channel" */
  insert_industry_slack_channel?: Maybe<Industry_Slack_Channel_Mutation_Response>;
  /** insert a single row into the table: "industry_slack_channel" */
  insert_industry_slack_channel_one?: Maybe<Industry_Slack_Channel>;
  /** insert data into the table: "invoice" */
  insert_invoice?: Maybe<Invoice_Mutation_Response>;
  /** insert data into the table: "invoice_distribution" */
  insert_invoice_distribution?: Maybe<Invoice_Distribution_Mutation_Response>;
  /** insert a single row into the table: "invoice_distribution" */
  insert_invoice_distribution_one?: Maybe<Invoice_Distribution>;
  /** insert a single row into the table: "invoice" */
  insert_invoice_one?: Maybe<Invoice>;
  /** insert data into the table: "invoice_service_type" */
  insert_invoice_service_type?: Maybe<Invoice_Service_Type_Mutation_Response>;
  /** insert a single row into the table: "invoice_service_type" */
  insert_invoice_service_type_one?: Maybe<Invoice_Service_Type>;
  /** insert data into the table: "invoice_status" */
  insert_invoice_status?: Maybe<Invoice_Status_Mutation_Response>;
  /** insert a single row into the table: "invoice_status" */
  insert_invoice_status_one?: Maybe<Invoice_Status>;
  /** insert data into the table: "invoice_term" */
  insert_invoice_term?: Maybe<Invoice_Term_Mutation_Response>;
  /** insert a single row into the table: "invoice_term" */
  insert_invoice_term_one?: Maybe<Invoice_Term>;
  /** insert data into the table: "language_level" */
  insert_language_level?: Maybe<Language_Level_Mutation_Response>;
  /** insert a single row into the table: "language_level" */
  insert_language_level_one?: Maybe<Language_Level>;
  /** insert data into the table: "late_payment_period" */
  insert_late_payment_period?: Maybe<Late_Payment_Period_Mutation_Response>;
  /** insert a single row into the table: "late_payment_period" */
  insert_late_payment_period_one?: Maybe<Late_Payment_Period>;
  /** insert data into the table: "no_of_employees" */
  insert_no_of_employees?: Maybe<No_Of_Employees_Mutation_Response>;
  /** insert a single row into the table: "no_of_employees" */
  insert_no_of_employees_one?: Maybe<No_Of_Employees>;
  /** insert data into the table: "partner" */
  insert_partner?: Maybe<Partner_Mutation_Response>;
  /** insert data into the table: "partner_category" */
  insert_partner_category?: Maybe<Partner_Category_Mutation_Response>;
  /** insert a single row into the table: "partner_category" */
  insert_partner_category_one?: Maybe<Partner_Category>;
  /** insert data into the table: "partner_custom_field" */
  insert_partner_custom_field?: Maybe<Partner_Custom_Field_Mutation_Response>;
  /** insert a single row into the table: "partner_custom_field" */
  insert_partner_custom_field_one?: Maybe<Partner_Custom_Field>;
  /** insert data into the table: "partner_gallery_image" */
  insert_partner_gallery_image?: Maybe<Partner_Gallery_Image_Mutation_Response>;
  /** insert a single row into the table: "partner_gallery_image" */
  insert_partner_gallery_image_one?: Maybe<Partner_Gallery_Image>;
  /** insert a single row into the table: "partner" */
  insert_partner_one?: Maybe<Partner>;
  /** insert data into the table: "payout_distribution" */
  insert_payout_distribution?: Maybe<Payout_Distribution_Mutation_Response>;
  /** insert a single row into the table: "payout_distribution" */
  insert_payout_distribution_one?: Maybe<Payout_Distribution>;
  /** insert data into the table: "product_or_service_type" */
  insert_product_or_service_type?: Maybe<Product_Or_Service_Type_Mutation_Response>;
  /** insert a single row into the table: "product_or_service_type" */
  insert_product_or_service_type_one?: Maybe<Product_Or_Service_Type>;
  /** insert data into the table: "public_user_meta" */
  insert_public_user_meta?: Maybe<Public_User_Meta_Mutation_Response>;
  /** insert a single row into the table: "public_user_meta" */
  insert_public_user_meta_one?: Maybe<Public_User_Meta>;
  /** insert data into the table: "recurring_interval" */
  insert_recurring_interval?: Maybe<Recurring_Interval_Mutation_Response>;
  /** insert a single row into the table: "recurring_interval" */
  insert_recurring_interval_one?: Maybe<Recurring_Interval>;
  /** insert data into the table: "route" */
  insert_route?: Maybe<Route_Mutation_Response>;
  /** insert data into the table: "route_endpoint" */
  insert_route_endpoint?: Maybe<Route_Endpoint_Mutation_Response>;
  /** insert a single row into the table: "route_endpoint" */
  insert_route_endpoint_one?: Maybe<Route_Endpoint>;
  /** insert data into the table: "route_group" */
  insert_route_group?: Maybe<Route_Group_Mutation_Response>;
  /** insert a single row into the table: "route_group" */
  insert_route_group_one?: Maybe<Route_Group>;
  /** insert a single row into the table: "route" */
  insert_route_one?: Maybe<Route>;
  /** insert data into the table: "skill" */
  insert_skill?: Maybe<Skill_Mutation_Response>;
  /** insert data into the table: "skill_category" */
  insert_skill_category?: Maybe<Skill_Category_Mutation_Response>;
  /** insert a single row into the table: "skill_category" */
  insert_skill_category_one?: Maybe<Skill_Category>;
  /** insert data into the table: "skill_google_group" */
  insert_skill_google_group?: Maybe<Skill_Google_Group_Mutation_Response>;
  /** insert a single row into the table: "skill_google_group" */
  insert_skill_google_group_one?: Maybe<Skill_Google_Group>;
  /** insert data into the table: "skill_level" */
  insert_skill_level?: Maybe<Skill_Level_Mutation_Response>;
  /** insert a single row into the table: "skill_level" */
  insert_skill_level_one?: Maybe<Skill_Level>;
  /** insert a single row into the table: "skill" */
  insert_skill_one?: Maybe<Skill>;
  /** insert data into the table: "skill_skill_categories" */
  insert_skill_skill_categories?: Maybe<Skill_Skill_Categories_Mutation_Response>;
  /** insert a single row into the table: "skill_skill_categories" */
  insert_skill_skill_categories_one?: Maybe<Skill_Skill_Categories>;
  /** insert data into the table: "skill_slack_channel" */
  insert_skill_slack_channel?: Maybe<Skill_Slack_Channel_Mutation_Response>;
  /** insert a single row into the table: "skill_slack_channel" */
  insert_skill_slack_channel_one?: Maybe<Skill_Slack_Channel>;
  /** insert data into the table: "slack_answer" */
  insert_slack_answer?: Maybe<Slack_Answer_Mutation_Response>;
  /** insert a single row into the table: "slack_answer" */
  insert_slack_answer_one?: Maybe<Slack_Answer>;
  /** insert data into the table: "slack_birthday_and_anniversary_message" */
  insert_slack_birthday_and_anniversary_message?: Maybe<Slack_Birthday_And_Anniversary_Message_Mutation_Response>;
  /** insert a single row into the table: "slack_birthday_and_anniversary_message" */
  insert_slack_birthday_and_anniversary_message_one?: Maybe<Slack_Birthday_And_Anniversary_Message>;
  /** insert data into the table: "slack_message" */
  insert_slack_message?: Maybe<Slack_Message_Mutation_Response>;
  /** insert a single row into the table: "slack_message" */
  insert_slack_message_one?: Maybe<Slack_Message>;
  /** insert data into the table: "slack_message_trigger_log" */
  insert_slack_message_trigger_log?: Maybe<Slack_Message_Trigger_Log_Mutation_Response>;
  /** insert a single row into the table: "slack_message_trigger_log" */
  insert_slack_message_trigger_log_one?: Maybe<Slack_Message_Trigger_Log>;
  /** insert data into the table: "slack_outreach" */
  insert_slack_outreach?: Maybe<Slack_Outreach_Mutation_Response>;
  /** insert a single row into the table: "slack_outreach" */
  insert_slack_outreach_one?: Maybe<Slack_Outreach>;
  /** insert data into the table: "team" */
  insert_team?: Maybe<Team_Mutation_Response>;
  /** insert data into the table: "team_google_group" */
  insert_team_google_group?: Maybe<Team_Google_Group_Mutation_Response>;
  /** insert a single row into the table: "team_google_group" */
  insert_team_google_group_one?: Maybe<Team_Google_Group>;
  /** insert data into the table: "team_industry" */
  insert_team_industry?: Maybe<Team_Industry_Mutation_Response>;
  /** insert a single row into the table: "team_industry" */
  insert_team_industry_one?: Maybe<Team_Industry>;
  /** insert a single row into the table: "team" */
  insert_team_one?: Maybe<Team>;
  /** insert data into the table: "team_skill" */
  insert_team_skill?: Maybe<Team_Skill_Mutation_Response>;
  /** insert a single row into the table: "team_skill" */
  insert_team_skill_one?: Maybe<Team_Skill>;
  /** insert data into the table: "team_slack_channel" */
  insert_team_slack_channel?: Maybe<Team_Slack_Channel_Mutation_Response>;
  /** insert a single row into the table: "team_slack_channel" */
  insert_team_slack_channel_one?: Maybe<Team_Slack_Channel>;
  /** insert data into the table: "time_and_material_invoice_line_item" */
  insert_time_and_material_invoice_line_item?: Maybe<Time_And_Material_Invoice_Line_Item_Mutation_Response>;
  /** insert a single row into the table: "time_and_material_invoice_line_item" */
  insert_time_and_material_invoice_line_item_one?: Maybe<Time_And_Material_Invoice_Line_Item>;
  /** insert data into the table: "tool" */
  insert_tool?: Maybe<Tool_Mutation_Response>;
  /** insert a single row into the table: "tool" */
  insert_tool_one?: Maybe<Tool>;
  /** insert data into the table: "trigger" */
  insert_trigger?: Maybe<Trigger_Mutation_Response>;
  /** insert a single row into the table: "trigger" */
  insert_trigger_one?: Maybe<Trigger>;
  /** insert data into the table: "user_basic_information" */
  insert_user_basic_information?: Maybe<User_Basic_Information_Mutation_Response>;
  /** insert a single row into the table: "user_basic_information" */
  insert_user_basic_information_one?: Maybe<User_Basic_Information>;
  /** insert data into the table: "user_company" */
  insert_user_company?: Maybe<User_Company_Mutation_Response>;
  /** insert a single row into the table: "user_company" */
  insert_user_company_one?: Maybe<User_Company>;
  /** insert data into the table: "user_completed_customer_sale" */
  insert_user_completed_customer_sale?: Maybe<User_Completed_Customer_Sale_Mutation_Response>;
  /** insert a single row into the table: "user_completed_customer_sale" */
  insert_user_completed_customer_sale_one?: Maybe<User_Completed_Customer_Sale>;
  /** insert data into the table: "user_in_market_experience" */
  insert_user_in_market_experience?: Maybe<User_In_Market_Experience_Mutation_Response>;
  /** insert a single row into the table: "user_in_market_experience" */
  insert_user_in_market_experience_one?: Maybe<User_In_Market_Experience>;
  /** insert data into the table: "user_industry_experience" */
  insert_user_industry_experience?: Maybe<User_Industry_Experience_Mutation_Response>;
  /** insert a single row into the table: "user_industry_experience" */
  insert_user_industry_experience_one?: Maybe<User_Industry_Experience>;
  /** insert data into the table: "user_language" */
  insert_user_language?: Maybe<User_Language_Mutation_Response>;
  /** insert a single row into the table: "user_language" */
  insert_user_language_one?: Maybe<User_Language>;
  /** insert data into the table: "user_meta" */
  insert_user_meta?: Maybe<User_Meta_Mutation_Response>;
  /** insert a single row into the table: "user_meta" */
  insert_user_meta_one?: Maybe<User_Meta>;
  /** insert data into the table: "user_meta_user_role" */
  insert_user_meta_user_role?: Maybe<User_Meta_User_Role_Mutation_Response>;
  /** insert a single row into the table: "user_meta_user_role" */
  insert_user_meta_user_role_one?: Maybe<User_Meta_User_Role>;
  /** insert data into the table: "user_professional_information" */
  insert_user_professional_information?: Maybe<User_Professional_Information_Mutation_Response>;
  /** insert a single row into the table: "user_professional_information" */
  insert_user_professional_information_one?: Maybe<User_Professional_Information>;
  /** insert data into the table: "user_profile" */
  insert_user_profile?: Maybe<User_Profile_Mutation_Response>;
  /** insert data into the table: "user_profile_company" */
  insert_user_profile_company?: Maybe<User_Profile_Company_Mutation_Response>;
  /** insert a single row into the table: "user_profile_company" */
  insert_user_profile_company_one?: Maybe<User_Profile_Company>;
  /** insert data into the table: "user_profile_industry" */
  insert_user_profile_industry?: Maybe<User_Profile_Industry_Mutation_Response>;
  /** insert a single row into the table: "user_profile_industry" */
  insert_user_profile_industry_one?: Maybe<User_Profile_Industry>;
  /** insert a single row into the table: "user_profile" */
  insert_user_profile_one?: Maybe<User_Profile>;
  /** insert data into the table: "user_profile_skill" */
  insert_user_profile_skill?: Maybe<User_Profile_Skill_Mutation_Response>;
  /** insert a single row into the table: "user_profile_skill" */
  insert_user_profile_skill_one?: Maybe<User_Profile_Skill>;
  /** insert data into the table: "user_profile_tab" */
  insert_user_profile_tab?: Maybe<User_Profile_Tab_Mutation_Response>;
  /** insert data into the table: "user_profile_tab_endpoint" */
  insert_user_profile_tab_endpoint?: Maybe<User_Profile_Tab_Endpoint_Mutation_Response>;
  /** insert a single row into the table: "user_profile_tab_endpoint" */
  insert_user_profile_tab_endpoint_one?: Maybe<User_Profile_Tab_Endpoint>;
  /** insert a single row into the table: "user_profile_tab" */
  insert_user_profile_tab_one?: Maybe<User_Profile_Tab>;
  /** insert data into the table: "user_profile_team" */
  insert_user_profile_team?: Maybe<User_Profile_Team_Mutation_Response>;
  /** insert a single row into the table: "user_profile_team" */
  insert_user_profile_team_one?: Maybe<User_Profile_Team>;
  /** insert data into the table: "user_profile_visibility" */
  insert_user_profile_visibility?: Maybe<User_Profile_Visibility_Mutation_Response>;
  /** insert a single row into the table: "user_profile_visibility" */
  insert_user_profile_visibility_one?: Maybe<User_Profile_Visibility>;
  /** insert data into the table: "user_role" */
  insert_user_role?: Maybe<User_Role_Mutation_Response>;
  /** insert data into the table: "user_role_capability" */
  insert_user_role_capability?: Maybe<User_Role_Capability_Mutation_Response>;
  /** insert a single row into the table: "user_role_capability" */
  insert_user_role_capability_one?: Maybe<User_Role_Capability>;
  /** insert a single row into the table: "user_role" */
  insert_user_role_one?: Maybe<User_Role>;
  /** insert data into the table: "user_role_route" */
  insert_user_role_route?: Maybe<User_Role_Route_Mutation_Response>;
  /** insert a single row into the table: "user_role_route" */
  insert_user_role_route_one?: Maybe<User_Role_Route>;
  /** insert data into the table: "user_role_user_profile_tab" */
  insert_user_role_user_profile_tab?: Maybe<User_Role_User_Profile_Tab_Mutation_Response>;
  /** insert a single row into the table: "user_role_user_profile_tab" */
  insert_user_role_user_profile_tab_one?: Maybe<User_Role_User_Profile_Tab>;
  /** insert data into the table: "user_skill" */
  insert_user_skill?: Maybe<User_Skill_Mutation_Response>;
  /** insert a single row into the table: "user_skill" */
  insert_user_skill_one?: Maybe<User_Skill>;
  /** insert data into the table: "user_work_experience" */
  insert_user_work_experience?: Maybe<User_Work_Experience_Mutation_Response>;
  /** insert a single row into the table: "user_work_experience" */
  insert_user_work_experience_one?: Maybe<User_Work_Experience>;
  /** insert data into the table: "webhook" */
  insert_webhook?: Maybe<Webhook_Mutation_Response>;
  /** insert a single row into the table: "webhook" */
  insert_webhook_one?: Maybe<Webhook>;
  /** insert data into the table: "webhook_trigger" */
  insert_webhook_trigger?: Maybe<Webhook_Trigger_Mutation_Response>;
  /** insert a single row into the table: "webhook_trigger" */
  insert_webhook_trigger_one?: Maybe<Webhook_Trigger>;
  notifyUserProfileDeletionToGoogleSlides: Scalars['String'];
  resendUserWelcomeEmail: Scalars['String'];
  sendForgotPasswordConfirmationCode: SendForgotPasswordConfirmationCodeReturn;
  setUserPrivateInformation: UserPrivateInformationData;
  triggerWebhook: Scalars['String'];
  updateGoogleUser: Array<Scalars['String']>;
  updateOwnCognitoInformation: Scalars['String'];
  updateUser: Scalars['String'];
  updateUserCognitoInformation: Scalars['String'];
  updateUserPassword: Scalars['String'];
  updateUserSlackChannels: Scalars['String'];
  /** update data of the table: "api_user_token" */
  update_api_user_token?: Maybe<Api_User_Token_Mutation_Response>;
  /** update single row of the table: "api_user_token" */
  update_api_user_token_by_pk?: Maybe<Api_User_Token>;
  /** update multiples rows of table: "api_user_token" */
  update_api_user_token_many?: Maybe<Array<Maybe<Api_User_Token_Mutation_Response>>>;
  /** update data of the table: "billing_frequency" */
  update_billing_frequency?: Maybe<Billing_Frequency_Mutation_Response>;
  /** update single row of the table: "billing_frequency" */
  update_billing_frequency_by_pk?: Maybe<Billing_Frequency>;
  /** update multiples rows of table: "billing_frequency" */
  update_billing_frequency_many?: Maybe<Array<Maybe<Billing_Frequency_Mutation_Response>>>;
  /** update data of the table: "bookmark_folder" */
  update_bookmark_folder?: Maybe<Bookmark_Folder_Mutation_Response>;
  /** update single row of the table: "bookmark_folder" */
  update_bookmark_folder_by_pk?: Maybe<Bookmark_Folder>;
  /** update multiples rows of table: "bookmark_folder" */
  update_bookmark_folder_many?: Maybe<Array<Maybe<Bookmark_Folder_Mutation_Response>>>;
  /** update data of the table: "bookmark_link" */
  update_bookmark_link?: Maybe<Bookmark_Link_Mutation_Response>;
  /** update single row of the table: "bookmark_link" */
  update_bookmark_link_by_pk?: Maybe<Bookmark_Link>;
  /** update multiples rows of table: "bookmark_link" */
  update_bookmark_link_many?: Maybe<Array<Maybe<Bookmark_Link_Mutation_Response>>>;
  /** update data of the table: "capability" */
  update_capability?: Maybe<Capability_Mutation_Response>;
  /** update single row of the table: "capability" */
  update_capability_by_pk?: Maybe<Capability>;
  /** update data of the table: "capability_endpoint" */
  update_capability_endpoint?: Maybe<Capability_Endpoint_Mutation_Response>;
  /** update single row of the table: "capability_endpoint" */
  update_capability_endpoint_by_pk?: Maybe<Capability_Endpoint>;
  /** update multiples rows of table: "capability_endpoint" */
  update_capability_endpoint_many?: Maybe<Array<Maybe<Capability_Endpoint_Mutation_Response>>>;
  /** update multiples rows of table: "capability" */
  update_capability_many?: Maybe<Array<Maybe<Capability_Mutation_Response>>>;
  /** update data of the table: "case_study" */
  update_case_study?: Maybe<Case_Study_Mutation_Response>;
  /** update single row of the table: "case_study" */
  update_case_study_by_pk?: Maybe<Case_Study>;
  /** update data of the table: "case_study_company" */
  update_case_study_company?: Maybe<Case_Study_Company_Mutation_Response>;
  /** update single row of the table: "case_study_company" */
  update_case_study_company_by_pk?: Maybe<Case_Study_Company>;
  /** update multiples rows of table: "case_study_company" */
  update_case_study_company_many?: Maybe<Array<Maybe<Case_Study_Company_Mutation_Response>>>;
  /** update data of the table: "case_study_industry" */
  update_case_study_industry?: Maybe<Case_Study_Industry_Mutation_Response>;
  /** update single row of the table: "case_study_industry" */
  update_case_study_industry_by_pk?: Maybe<Case_Study_Industry>;
  /** update multiples rows of table: "case_study_industry" */
  update_case_study_industry_many?: Maybe<Array<Maybe<Case_Study_Industry_Mutation_Response>>>;
  /** update multiples rows of table: "case_study" */
  update_case_study_many?: Maybe<Array<Maybe<Case_Study_Mutation_Response>>>;
  /** update data of the table: "case_study_market" */
  update_case_study_market?: Maybe<Case_Study_Market_Mutation_Response>;
  /** update single row of the table: "case_study_market" */
  update_case_study_market_by_pk?: Maybe<Case_Study_Market>;
  /** update multiples rows of table: "case_study_market" */
  update_case_study_market_many?: Maybe<Array<Maybe<Case_Study_Market_Mutation_Response>>>;
  /** update data of the table: "case_study_skill" */
  update_case_study_skill?: Maybe<Case_Study_Skill_Mutation_Response>;
  /** update single row of the table: "case_study_skill" */
  update_case_study_skill_by_pk?: Maybe<Case_Study_Skill>;
  /** update multiples rows of table: "case_study_skill" */
  update_case_study_skill_many?: Maybe<Array<Maybe<Case_Study_Skill_Mutation_Response>>>;
  /** update data of the table: "case_study_team" */
  update_case_study_team?: Maybe<Case_Study_Team_Mutation_Response>;
  /** update single row of the table: "case_study_team" */
  update_case_study_team_by_pk?: Maybe<Case_Study_Team>;
  /** update multiples rows of table: "case_study_team" */
  update_case_study_team_many?: Maybe<Array<Maybe<Case_Study_Team_Mutation_Response>>>;
  /** update data of the table: "case_study_user" */
  update_case_study_user?: Maybe<Case_Study_User_Mutation_Response>;
  /** update single row of the table: "case_study_user" */
  update_case_study_user_by_pk?: Maybe<Case_Study_User>;
  /** update multiples rows of table: "case_study_user" */
  update_case_study_user_many?: Maybe<Array<Maybe<Case_Study_User_Mutation_Response>>>;
  /** update data of the table: "company" */
  update_company?: Maybe<Company_Mutation_Response>;
  /** update single row of the table: "company" */
  update_company_by_pk?: Maybe<Company>;
  /** update data of the table: "company_contact" */
  update_company_contact?: Maybe<Company_Contact_Mutation_Response>;
  /** update single row of the table: "company_contact" */
  update_company_contact_by_pk?: Maybe<Company_Contact>;
  /** update multiples rows of table: "company_contact" */
  update_company_contact_many?: Maybe<Array<Maybe<Company_Contact_Mutation_Response>>>;
  /** update multiples rows of table: "company" */
  update_company_many?: Maybe<Array<Maybe<Company_Mutation_Response>>>;
  /** update data of the table: "company_team" */
  update_company_team?: Maybe<Company_Team_Mutation_Response>;
  /** update single row of the table: "company_team" */
  update_company_team_by_pk?: Maybe<Company_Team>;
  /** update data of the table: "company_team_contributor" */
  update_company_team_contributor?: Maybe<Company_Team_Contributor_Mutation_Response>;
  /** update single row of the table: "company_team_contributor" */
  update_company_team_contributor_by_pk?: Maybe<Company_Team_Contributor>;
  /** update multiples rows of table: "company_team_contributor" */
  update_company_team_contributor_many?: Maybe<Array<Maybe<Company_Team_Contributor_Mutation_Response>>>;
  /** update multiples rows of table: "company_team" */
  update_company_team_many?: Maybe<Array<Maybe<Company_Team_Mutation_Response>>>;
  /** update data of the table: "contributor_type" */
  update_contributor_type?: Maybe<Contributor_Type_Mutation_Response>;
  /** update single row of the table: "contributor_type" */
  update_contributor_type_by_pk?: Maybe<Contributor_Type>;
  /** update multiples rows of table: "contributor_type" */
  update_contributor_type_many?: Maybe<Array<Maybe<Contributor_Type_Mutation_Response>>>;
  /** update data of the table: "current_user_meta" */
  update_current_user_meta?: Maybe<Current_User_Meta_Mutation_Response>;
  /** update multiples rows of table: "current_user_meta" */
  update_current_user_meta_many?: Maybe<Array<Maybe<Current_User_Meta_Mutation_Response>>>;
  /** update data of the table: "custom_payout" */
  update_custom_payout?: Maybe<Custom_Payout_Mutation_Response>;
  /** update single row of the table: "custom_payout" */
  update_custom_payout_by_pk?: Maybe<Custom_Payout>;
  /** update data of the table: "custom_payout_line_item" */
  update_custom_payout_line_item?: Maybe<Custom_Payout_Line_Item_Mutation_Response>;
  /** update single row of the table: "custom_payout_line_item" */
  update_custom_payout_line_item_by_pk?: Maybe<Custom_Payout_Line_Item>;
  /** update multiples rows of table: "custom_payout_line_item" */
  update_custom_payout_line_item_many?: Maybe<Array<Maybe<Custom_Payout_Line_Item_Mutation_Response>>>;
  /** update multiples rows of table: "custom_payout" */
  update_custom_payout_many?: Maybe<Array<Maybe<Custom_Payout_Mutation_Response>>>;
  /** update data of the table: "custom_project_distribution" */
  update_custom_project_distribution?: Maybe<Custom_Project_Distribution_Mutation_Response>;
  /** update single row of the table: "custom_project_distribution" */
  update_custom_project_distribution_by_pk?: Maybe<Custom_Project_Distribution>;
  /** update multiples rows of table: "custom_project_distribution" */
  update_custom_project_distribution_many?: Maybe<Array<Maybe<Custom_Project_Distribution_Mutation_Response>>>;
  /** update data of the table: "custom_project_payout_distribution" */
  update_custom_project_payout_distribution?: Maybe<Custom_Project_Payout_Distribution_Mutation_Response>;
  /** update single row of the table: "custom_project_payout_distribution" */
  update_custom_project_payout_distribution_by_pk?: Maybe<Custom_Project_Payout_Distribution>;
  /** update multiples rows of table: "custom_project_payout_distribution" */
  update_custom_project_payout_distribution_many?: Maybe<
    Array<Maybe<Custom_Project_Payout_Distribution_Mutation_Response>>
  >;
  /** update data of the table: "customer" */
  update_customer?: Maybe<Customer_Mutation_Response>;
  /** update single row of the table: "customer" */
  update_customer_by_pk?: Maybe<Customer>;
  /** update data of the table: "customer_closing_party" */
  update_customer_closing_party?: Maybe<Customer_Closing_Party_Mutation_Response>;
  /** update single row of the table: "customer_closing_party" */
  update_customer_closing_party_by_pk?: Maybe<Customer_Closing_Party>;
  /** update multiples rows of table: "customer_closing_party" */
  update_customer_closing_party_many?: Maybe<Array<Maybe<Customer_Closing_Party_Mutation_Response>>>;
  /** update multiples rows of table: "customer" */
  update_customer_many?: Maybe<Array<Maybe<Customer_Mutation_Response>>>;
  /** update data of the table: "customer_originating_party" */
  update_customer_originating_party?: Maybe<Customer_Originating_Party_Mutation_Response>;
  /** update single row of the table: "customer_originating_party" */
  update_customer_originating_party_by_pk?: Maybe<Customer_Originating_Party>;
  /** update multiples rows of table: "customer_originating_party" */
  update_customer_originating_party_many?: Maybe<Array<Maybe<Customer_Originating_Party_Mutation_Response>>>;
  /** update data of the table: "customer_referrer" */
  update_customer_referrer?: Maybe<Customer_Referrer_Mutation_Response>;
  /** update single row of the table: "customer_referrer" */
  update_customer_referrer_by_pk?: Maybe<Customer_Referrer>;
  /** update multiples rows of table: "customer_referrer" */
  update_customer_referrer_many?: Maybe<Array<Maybe<Customer_Referrer_Mutation_Response>>>;
  /** update data of the table: "document" */
  update_document?: Maybe<Document_Mutation_Response>;
  /** update data of the table: "document_associated_company" */
  update_document_associated_company?: Maybe<Document_Associated_Company_Mutation_Response>;
  /** update single row of the table: "document_associated_company" */
  update_document_associated_company_by_pk?: Maybe<Document_Associated_Company>;
  /** update multiples rows of table: "document_associated_company" */
  update_document_associated_company_many?: Maybe<Array<Maybe<Document_Associated_Company_Mutation_Response>>>;
  /** update data of the table: "document_associated_user" */
  update_document_associated_user?: Maybe<Document_Associated_User_Mutation_Response>;
  /** update single row of the table: "document_associated_user" */
  update_document_associated_user_by_pk?: Maybe<Document_Associated_User>;
  /** update multiples rows of table: "document_associated_user" */
  update_document_associated_user_many?: Maybe<Array<Maybe<Document_Associated_User_Mutation_Response>>>;
  /** update single row of the table: "document" */
  update_document_by_pk?: Maybe<Document>;
  /** update data of the table: "document_extra_field" */
  update_document_extra_field?: Maybe<Document_Extra_Field_Mutation_Response>;
  /** update single row of the table: "document_extra_field" */
  update_document_extra_field_by_pk?: Maybe<Document_Extra_Field>;
  /** update multiples rows of table: "document_extra_field" */
  update_document_extra_field_many?: Maybe<Array<Maybe<Document_Extra_Field_Mutation_Response>>>;
  /** update data of the table: "document_extra_field_value" */
  update_document_extra_field_value?: Maybe<Document_Extra_Field_Value_Mutation_Response>;
  /** update single row of the table: "document_extra_field_value" */
  update_document_extra_field_value_by_pk?: Maybe<Document_Extra_Field_Value>;
  /** update multiples rows of table: "document_extra_field_value" */
  update_document_extra_field_value_many?: Maybe<Array<Maybe<Document_Extra_Field_Value_Mutation_Response>>>;
  /** update multiples rows of table: "document" */
  update_document_many?: Maybe<Array<Maybe<Document_Mutation_Response>>>;
  /** update data of the table: "document_type" */
  update_document_type?: Maybe<Document_Type_Mutation_Response>;
  /** update single row of the table: "document_type" */
  update_document_type_by_pk?: Maybe<Document_Type>;
  /** update multiples rows of table: "document_type" */
  update_document_type_many?: Maybe<Array<Maybe<Document_Type_Mutation_Response>>>;
  /** update data of the table: "endpoint" */
  update_endpoint?: Maybe<Endpoint_Mutation_Response>;
  /** update single row of the table: "endpoint" */
  update_endpoint_by_pk?: Maybe<Endpoint>;
  /** update multiples rows of table: "endpoint" */
  update_endpoint_many?: Maybe<Array<Maybe<Endpoint_Mutation_Response>>>;
  /** update data of the table: "fixed_price_invoice_line_item" */
  update_fixed_price_invoice_line_item?: Maybe<Fixed_Price_Invoice_Line_Item_Mutation_Response>;
  /** update single row of the table: "fixed_price_invoice_line_item" */
  update_fixed_price_invoice_line_item_by_pk?: Maybe<Fixed_Price_Invoice_Line_Item>;
  /** update multiples rows of table: "fixed_price_invoice_line_item" */
  update_fixed_price_invoice_line_item_many?: Maybe<Array<Maybe<Fixed_Price_Invoice_Line_Item_Mutation_Response>>>;
  /** update data of the table: "in_market_experience_level" */
  update_in_market_experience_level?: Maybe<In_Market_Experience_Level_Mutation_Response>;
  /** update single row of the table: "in_market_experience_level" */
  update_in_market_experience_level_by_pk?: Maybe<In_Market_Experience_Level>;
  /** update multiples rows of table: "in_market_experience_level" */
  update_in_market_experience_level_many?: Maybe<Array<Maybe<In_Market_Experience_Level_Mutation_Response>>>;
  /** update data of the table: "industry" */
  update_industry?: Maybe<Industry_Mutation_Response>;
  /** update single row of the table: "industry" */
  update_industry_by_pk?: Maybe<Industry>;
  /** update data of the table: "industry_experience_level" */
  update_industry_experience_level?: Maybe<Industry_Experience_Level_Mutation_Response>;
  /** update single row of the table: "industry_experience_level" */
  update_industry_experience_level_by_pk?: Maybe<Industry_Experience_Level>;
  /** update multiples rows of table: "industry_experience_level" */
  update_industry_experience_level_many?: Maybe<Array<Maybe<Industry_Experience_Level_Mutation_Response>>>;
  /** update data of the table: "industry_google_group" */
  update_industry_google_group?: Maybe<Industry_Google_Group_Mutation_Response>;
  /** update single row of the table: "industry_google_group" */
  update_industry_google_group_by_pk?: Maybe<Industry_Google_Group>;
  /** update multiples rows of table: "industry_google_group" */
  update_industry_google_group_many?: Maybe<Array<Maybe<Industry_Google_Group_Mutation_Response>>>;
  /** update multiples rows of table: "industry" */
  update_industry_many?: Maybe<Array<Maybe<Industry_Mutation_Response>>>;
  /** update data of the table: "industry_slack_channel" */
  update_industry_slack_channel?: Maybe<Industry_Slack_Channel_Mutation_Response>;
  /** update single row of the table: "industry_slack_channel" */
  update_industry_slack_channel_by_pk?: Maybe<Industry_Slack_Channel>;
  /** update multiples rows of table: "industry_slack_channel" */
  update_industry_slack_channel_many?: Maybe<Array<Maybe<Industry_Slack_Channel_Mutation_Response>>>;
  /** update data of the table: "invoice" */
  update_invoice?: Maybe<Invoice_Mutation_Response>;
  /** update single row of the table: "invoice" */
  update_invoice_by_pk?: Maybe<Invoice>;
  /** update data of the table: "invoice_distribution" */
  update_invoice_distribution?: Maybe<Invoice_Distribution_Mutation_Response>;
  /** update single row of the table: "invoice_distribution" */
  update_invoice_distribution_by_pk?: Maybe<Invoice_Distribution>;
  /** update multiples rows of table: "invoice_distribution" */
  update_invoice_distribution_many?: Maybe<Array<Maybe<Invoice_Distribution_Mutation_Response>>>;
  /** update multiples rows of table: "invoice" */
  update_invoice_many?: Maybe<Array<Maybe<Invoice_Mutation_Response>>>;
  /** update data of the table: "invoice_service_type" */
  update_invoice_service_type?: Maybe<Invoice_Service_Type_Mutation_Response>;
  /** update single row of the table: "invoice_service_type" */
  update_invoice_service_type_by_pk?: Maybe<Invoice_Service_Type>;
  /** update multiples rows of table: "invoice_service_type" */
  update_invoice_service_type_many?: Maybe<Array<Maybe<Invoice_Service_Type_Mutation_Response>>>;
  /** update data of the table: "invoice_status" */
  update_invoice_status?: Maybe<Invoice_Status_Mutation_Response>;
  /** update single row of the table: "invoice_status" */
  update_invoice_status_by_pk?: Maybe<Invoice_Status>;
  /** update multiples rows of table: "invoice_status" */
  update_invoice_status_many?: Maybe<Array<Maybe<Invoice_Status_Mutation_Response>>>;
  /** update data of the table: "invoice_term" */
  update_invoice_term?: Maybe<Invoice_Term_Mutation_Response>;
  /** update single row of the table: "invoice_term" */
  update_invoice_term_by_pk?: Maybe<Invoice_Term>;
  /** update multiples rows of table: "invoice_term" */
  update_invoice_term_many?: Maybe<Array<Maybe<Invoice_Term_Mutation_Response>>>;
  /** update data of the table: "language_level" */
  update_language_level?: Maybe<Language_Level_Mutation_Response>;
  /** update single row of the table: "language_level" */
  update_language_level_by_pk?: Maybe<Language_Level>;
  /** update multiples rows of table: "language_level" */
  update_language_level_many?: Maybe<Array<Maybe<Language_Level_Mutation_Response>>>;
  /** update data of the table: "late_payment_period" */
  update_late_payment_period?: Maybe<Late_Payment_Period_Mutation_Response>;
  /** update single row of the table: "late_payment_period" */
  update_late_payment_period_by_pk?: Maybe<Late_Payment_Period>;
  /** update multiples rows of table: "late_payment_period" */
  update_late_payment_period_many?: Maybe<Array<Maybe<Late_Payment_Period_Mutation_Response>>>;
  /** update data of the table: "no_of_employees" */
  update_no_of_employees?: Maybe<No_Of_Employees_Mutation_Response>;
  /** update single row of the table: "no_of_employees" */
  update_no_of_employees_by_pk?: Maybe<No_Of_Employees>;
  /** update multiples rows of table: "no_of_employees" */
  update_no_of_employees_many?: Maybe<Array<Maybe<No_Of_Employees_Mutation_Response>>>;
  /** update data of the table: "partner" */
  update_partner?: Maybe<Partner_Mutation_Response>;
  /** update single row of the table: "partner" */
  update_partner_by_pk?: Maybe<Partner>;
  /** update data of the table: "partner_category" */
  update_partner_category?: Maybe<Partner_Category_Mutation_Response>;
  /** update single row of the table: "partner_category" */
  update_partner_category_by_pk?: Maybe<Partner_Category>;
  /** update multiples rows of table: "partner_category" */
  update_partner_category_many?: Maybe<Array<Maybe<Partner_Category_Mutation_Response>>>;
  /** update data of the table: "partner_custom_field" */
  update_partner_custom_field?: Maybe<Partner_Custom_Field_Mutation_Response>;
  /** update single row of the table: "partner_custom_field" */
  update_partner_custom_field_by_pk?: Maybe<Partner_Custom_Field>;
  /** update multiples rows of table: "partner_custom_field" */
  update_partner_custom_field_many?: Maybe<Array<Maybe<Partner_Custom_Field_Mutation_Response>>>;
  /** update data of the table: "partner_gallery_image" */
  update_partner_gallery_image?: Maybe<Partner_Gallery_Image_Mutation_Response>;
  /** update single row of the table: "partner_gallery_image" */
  update_partner_gallery_image_by_pk?: Maybe<Partner_Gallery_Image>;
  /** update multiples rows of table: "partner_gallery_image" */
  update_partner_gallery_image_many?: Maybe<Array<Maybe<Partner_Gallery_Image_Mutation_Response>>>;
  /** update multiples rows of table: "partner" */
  update_partner_many?: Maybe<Array<Maybe<Partner_Mutation_Response>>>;
  /** update data of the table: "payout_distribution" */
  update_payout_distribution?: Maybe<Payout_Distribution_Mutation_Response>;
  /** update single row of the table: "payout_distribution" */
  update_payout_distribution_by_pk?: Maybe<Payout_Distribution>;
  /** update multiples rows of table: "payout_distribution" */
  update_payout_distribution_many?: Maybe<Array<Maybe<Payout_Distribution_Mutation_Response>>>;
  /** update data of the table: "product_or_service_type" */
  update_product_or_service_type?: Maybe<Product_Or_Service_Type_Mutation_Response>;
  /** update single row of the table: "product_or_service_type" */
  update_product_or_service_type_by_pk?: Maybe<Product_Or_Service_Type>;
  /** update multiples rows of table: "product_or_service_type" */
  update_product_or_service_type_many?: Maybe<Array<Maybe<Product_Or_Service_Type_Mutation_Response>>>;
  /** update data of the table: "public_user_meta" */
  update_public_user_meta?: Maybe<Public_User_Meta_Mutation_Response>;
  /** update multiples rows of table: "public_user_meta" */
  update_public_user_meta_many?: Maybe<Array<Maybe<Public_User_Meta_Mutation_Response>>>;
  /** update data of the table: "recurring_interval" */
  update_recurring_interval?: Maybe<Recurring_Interval_Mutation_Response>;
  /** update single row of the table: "recurring_interval" */
  update_recurring_interval_by_pk?: Maybe<Recurring_Interval>;
  /** update multiples rows of table: "recurring_interval" */
  update_recurring_interval_many?: Maybe<Array<Maybe<Recurring_Interval_Mutation_Response>>>;
  /** update data of the table: "route" */
  update_route?: Maybe<Route_Mutation_Response>;
  /** update single row of the table: "route" */
  update_route_by_pk?: Maybe<Route>;
  /** update data of the table: "route_endpoint" */
  update_route_endpoint?: Maybe<Route_Endpoint_Mutation_Response>;
  /** update single row of the table: "route_endpoint" */
  update_route_endpoint_by_pk?: Maybe<Route_Endpoint>;
  /** update multiples rows of table: "route_endpoint" */
  update_route_endpoint_many?: Maybe<Array<Maybe<Route_Endpoint_Mutation_Response>>>;
  /** update data of the table: "route_group" */
  update_route_group?: Maybe<Route_Group_Mutation_Response>;
  /** update single row of the table: "route_group" */
  update_route_group_by_pk?: Maybe<Route_Group>;
  /** update multiples rows of table: "route_group" */
  update_route_group_many?: Maybe<Array<Maybe<Route_Group_Mutation_Response>>>;
  /** update multiples rows of table: "route" */
  update_route_many?: Maybe<Array<Maybe<Route_Mutation_Response>>>;
  /** update data of the table: "skill" */
  update_skill?: Maybe<Skill_Mutation_Response>;
  /** update single row of the table: "skill" */
  update_skill_by_pk?: Maybe<Skill>;
  /** update data of the table: "skill_category" */
  update_skill_category?: Maybe<Skill_Category_Mutation_Response>;
  /** update single row of the table: "skill_category" */
  update_skill_category_by_pk?: Maybe<Skill_Category>;
  /** update multiples rows of table: "skill_category" */
  update_skill_category_many?: Maybe<Array<Maybe<Skill_Category_Mutation_Response>>>;
  /** update data of the table: "skill_google_group" */
  update_skill_google_group?: Maybe<Skill_Google_Group_Mutation_Response>;
  /** update single row of the table: "skill_google_group" */
  update_skill_google_group_by_pk?: Maybe<Skill_Google_Group>;
  /** update multiples rows of table: "skill_google_group" */
  update_skill_google_group_many?: Maybe<Array<Maybe<Skill_Google_Group_Mutation_Response>>>;
  /** update data of the table: "skill_level" */
  update_skill_level?: Maybe<Skill_Level_Mutation_Response>;
  /** update single row of the table: "skill_level" */
  update_skill_level_by_pk?: Maybe<Skill_Level>;
  /** update multiples rows of table: "skill_level" */
  update_skill_level_many?: Maybe<Array<Maybe<Skill_Level_Mutation_Response>>>;
  /** update multiples rows of table: "skill" */
  update_skill_many?: Maybe<Array<Maybe<Skill_Mutation_Response>>>;
  /** update data of the table: "skill_skill_categories" */
  update_skill_skill_categories?: Maybe<Skill_Skill_Categories_Mutation_Response>;
  /** update single row of the table: "skill_skill_categories" */
  update_skill_skill_categories_by_pk?: Maybe<Skill_Skill_Categories>;
  /** update multiples rows of table: "skill_skill_categories" */
  update_skill_skill_categories_many?: Maybe<Array<Maybe<Skill_Skill_Categories_Mutation_Response>>>;
  /** update data of the table: "skill_slack_channel" */
  update_skill_slack_channel?: Maybe<Skill_Slack_Channel_Mutation_Response>;
  /** update single row of the table: "skill_slack_channel" */
  update_skill_slack_channel_by_pk?: Maybe<Skill_Slack_Channel>;
  /** update multiples rows of table: "skill_slack_channel" */
  update_skill_slack_channel_many?: Maybe<Array<Maybe<Skill_Slack_Channel_Mutation_Response>>>;
  /** update data of the table: "slack_answer" */
  update_slack_answer?: Maybe<Slack_Answer_Mutation_Response>;
  /** update single row of the table: "slack_answer" */
  update_slack_answer_by_pk?: Maybe<Slack_Answer>;
  /** update multiples rows of table: "slack_answer" */
  update_slack_answer_many?: Maybe<Array<Maybe<Slack_Answer_Mutation_Response>>>;
  /** update data of the table: "slack_birthday_and_anniversary_message" */
  update_slack_birthday_and_anniversary_message?: Maybe<Slack_Birthday_And_Anniversary_Message_Mutation_Response>;
  /** update single row of the table: "slack_birthday_and_anniversary_message" */
  update_slack_birthday_and_anniversary_message_by_pk?: Maybe<Slack_Birthday_And_Anniversary_Message>;
  /** update multiples rows of table: "slack_birthday_and_anniversary_message" */
  update_slack_birthday_and_anniversary_message_many?: Maybe<
    Array<Maybe<Slack_Birthday_And_Anniversary_Message_Mutation_Response>>
  >;
  /** update data of the table: "slack_message" */
  update_slack_message?: Maybe<Slack_Message_Mutation_Response>;
  /** update single row of the table: "slack_message" */
  update_slack_message_by_pk?: Maybe<Slack_Message>;
  /** update multiples rows of table: "slack_message" */
  update_slack_message_many?: Maybe<Array<Maybe<Slack_Message_Mutation_Response>>>;
  /** update data of the table: "slack_message_trigger_log" */
  update_slack_message_trigger_log?: Maybe<Slack_Message_Trigger_Log_Mutation_Response>;
  /** update single row of the table: "slack_message_trigger_log" */
  update_slack_message_trigger_log_by_pk?: Maybe<Slack_Message_Trigger_Log>;
  /** update multiples rows of table: "slack_message_trigger_log" */
  update_slack_message_trigger_log_many?: Maybe<Array<Maybe<Slack_Message_Trigger_Log_Mutation_Response>>>;
  /** update data of the table: "slack_outreach" */
  update_slack_outreach?: Maybe<Slack_Outreach_Mutation_Response>;
  /** update single row of the table: "slack_outreach" */
  update_slack_outreach_by_pk?: Maybe<Slack_Outreach>;
  /** update multiples rows of table: "slack_outreach" */
  update_slack_outreach_many?: Maybe<Array<Maybe<Slack_Outreach_Mutation_Response>>>;
  /** update data of the table: "team" */
  update_team?: Maybe<Team_Mutation_Response>;
  /** update single row of the table: "team" */
  update_team_by_pk?: Maybe<Team>;
  /** update data of the table: "team_google_group" */
  update_team_google_group?: Maybe<Team_Google_Group_Mutation_Response>;
  /** update single row of the table: "team_google_group" */
  update_team_google_group_by_pk?: Maybe<Team_Google_Group>;
  /** update multiples rows of table: "team_google_group" */
  update_team_google_group_many?: Maybe<Array<Maybe<Team_Google_Group_Mutation_Response>>>;
  /** update data of the table: "team_industry" */
  update_team_industry?: Maybe<Team_Industry_Mutation_Response>;
  /** update single row of the table: "team_industry" */
  update_team_industry_by_pk?: Maybe<Team_Industry>;
  /** update multiples rows of table: "team_industry" */
  update_team_industry_many?: Maybe<Array<Maybe<Team_Industry_Mutation_Response>>>;
  /** update multiples rows of table: "team" */
  update_team_many?: Maybe<Array<Maybe<Team_Mutation_Response>>>;
  /** update data of the table: "team_skill" */
  update_team_skill?: Maybe<Team_Skill_Mutation_Response>;
  /** update single row of the table: "team_skill" */
  update_team_skill_by_pk?: Maybe<Team_Skill>;
  /** update multiples rows of table: "team_skill" */
  update_team_skill_many?: Maybe<Array<Maybe<Team_Skill_Mutation_Response>>>;
  /** update data of the table: "team_slack_channel" */
  update_team_slack_channel?: Maybe<Team_Slack_Channel_Mutation_Response>;
  /** update single row of the table: "team_slack_channel" */
  update_team_slack_channel_by_pk?: Maybe<Team_Slack_Channel>;
  /** update multiples rows of table: "team_slack_channel" */
  update_team_slack_channel_many?: Maybe<Array<Maybe<Team_Slack_Channel_Mutation_Response>>>;
  /** update data of the table: "time_and_material_invoice_line_item" */
  update_time_and_material_invoice_line_item?: Maybe<Time_And_Material_Invoice_Line_Item_Mutation_Response>;
  /** update single row of the table: "time_and_material_invoice_line_item" */
  update_time_and_material_invoice_line_item_by_pk?: Maybe<Time_And_Material_Invoice_Line_Item>;
  /** update multiples rows of table: "time_and_material_invoice_line_item" */
  update_time_and_material_invoice_line_item_many?: Maybe<
    Array<Maybe<Time_And_Material_Invoice_Line_Item_Mutation_Response>>
  >;
  /** update data of the table: "tool" */
  update_tool?: Maybe<Tool_Mutation_Response>;
  /** update single row of the table: "tool" */
  update_tool_by_pk?: Maybe<Tool>;
  /** update multiples rows of table: "tool" */
  update_tool_many?: Maybe<Array<Maybe<Tool_Mutation_Response>>>;
  /** update data of the table: "trigger" */
  update_trigger?: Maybe<Trigger_Mutation_Response>;
  /** update single row of the table: "trigger" */
  update_trigger_by_pk?: Maybe<Trigger>;
  /** update multiples rows of table: "trigger" */
  update_trigger_many?: Maybe<Array<Maybe<Trigger_Mutation_Response>>>;
  /** update data of the table: "user_basic_information" */
  update_user_basic_information?: Maybe<User_Basic_Information_Mutation_Response>;
  /** update single row of the table: "user_basic_information" */
  update_user_basic_information_by_pk?: Maybe<User_Basic_Information>;
  /** update multiples rows of table: "user_basic_information" */
  update_user_basic_information_many?: Maybe<Array<Maybe<User_Basic_Information_Mutation_Response>>>;
  /** update data of the table: "user_company" */
  update_user_company?: Maybe<User_Company_Mutation_Response>;
  /** update single row of the table: "user_company" */
  update_user_company_by_pk?: Maybe<User_Company>;
  /** update multiples rows of table: "user_company" */
  update_user_company_many?: Maybe<Array<Maybe<User_Company_Mutation_Response>>>;
  /** update data of the table: "user_completed_customer_sale" */
  update_user_completed_customer_sale?: Maybe<User_Completed_Customer_Sale_Mutation_Response>;
  /** update single row of the table: "user_completed_customer_sale" */
  update_user_completed_customer_sale_by_pk?: Maybe<User_Completed_Customer_Sale>;
  /** update multiples rows of table: "user_completed_customer_sale" */
  update_user_completed_customer_sale_many?: Maybe<Array<Maybe<User_Completed_Customer_Sale_Mutation_Response>>>;
  /** update data of the table: "user_in_market_experience" */
  update_user_in_market_experience?: Maybe<User_In_Market_Experience_Mutation_Response>;
  /** update single row of the table: "user_in_market_experience" */
  update_user_in_market_experience_by_pk?: Maybe<User_In_Market_Experience>;
  /** update multiples rows of table: "user_in_market_experience" */
  update_user_in_market_experience_many?: Maybe<Array<Maybe<User_In_Market_Experience_Mutation_Response>>>;
  /** update data of the table: "user_industry_experience" */
  update_user_industry_experience?: Maybe<User_Industry_Experience_Mutation_Response>;
  /** update single row of the table: "user_industry_experience" */
  update_user_industry_experience_by_pk?: Maybe<User_Industry_Experience>;
  /** update multiples rows of table: "user_industry_experience" */
  update_user_industry_experience_many?: Maybe<Array<Maybe<User_Industry_Experience_Mutation_Response>>>;
  /** update data of the table: "user_language" */
  update_user_language?: Maybe<User_Language_Mutation_Response>;
  /** update single row of the table: "user_language" */
  update_user_language_by_pk?: Maybe<User_Language>;
  /** update multiples rows of table: "user_language" */
  update_user_language_many?: Maybe<Array<Maybe<User_Language_Mutation_Response>>>;
  /** update data of the table: "user_meta" */
  update_user_meta?: Maybe<User_Meta_Mutation_Response>;
  /** update single row of the table: "user_meta" */
  update_user_meta_by_pk?: Maybe<User_Meta>;
  /** update multiples rows of table: "user_meta" */
  update_user_meta_many?: Maybe<Array<Maybe<User_Meta_Mutation_Response>>>;
  /** update data of the table: "user_meta_user_role" */
  update_user_meta_user_role?: Maybe<User_Meta_User_Role_Mutation_Response>;
  /** update single row of the table: "user_meta_user_role" */
  update_user_meta_user_role_by_pk?: Maybe<User_Meta_User_Role>;
  /** update multiples rows of table: "user_meta_user_role" */
  update_user_meta_user_role_many?: Maybe<Array<Maybe<User_Meta_User_Role_Mutation_Response>>>;
  /** update data of the table: "user_professional_information" */
  update_user_professional_information?: Maybe<User_Professional_Information_Mutation_Response>;
  /** update single row of the table: "user_professional_information" */
  update_user_professional_information_by_pk?: Maybe<User_Professional_Information>;
  /** update multiples rows of table: "user_professional_information" */
  update_user_professional_information_many?: Maybe<Array<Maybe<User_Professional_Information_Mutation_Response>>>;
  /** update data of the table: "user_profile" */
  update_user_profile?: Maybe<User_Profile_Mutation_Response>;
  /** update single row of the table: "user_profile" */
  update_user_profile_by_pk?: Maybe<User_Profile>;
  /** update data of the table: "user_profile_company" */
  update_user_profile_company?: Maybe<User_Profile_Company_Mutation_Response>;
  /** update single row of the table: "user_profile_company" */
  update_user_profile_company_by_pk?: Maybe<User_Profile_Company>;
  /** update multiples rows of table: "user_profile_company" */
  update_user_profile_company_many?: Maybe<Array<Maybe<User_Profile_Company_Mutation_Response>>>;
  /** update data of the table: "user_profile_industry" */
  update_user_profile_industry?: Maybe<User_Profile_Industry_Mutation_Response>;
  /** update single row of the table: "user_profile_industry" */
  update_user_profile_industry_by_pk?: Maybe<User_Profile_Industry>;
  /** update multiples rows of table: "user_profile_industry" */
  update_user_profile_industry_many?: Maybe<Array<Maybe<User_Profile_Industry_Mutation_Response>>>;
  /** update multiples rows of table: "user_profile" */
  update_user_profile_many?: Maybe<Array<Maybe<User_Profile_Mutation_Response>>>;
  /** update data of the table: "user_profile_skill" */
  update_user_profile_skill?: Maybe<User_Profile_Skill_Mutation_Response>;
  /** update single row of the table: "user_profile_skill" */
  update_user_profile_skill_by_pk?: Maybe<User_Profile_Skill>;
  /** update multiples rows of table: "user_profile_skill" */
  update_user_profile_skill_many?: Maybe<Array<Maybe<User_Profile_Skill_Mutation_Response>>>;
  /** update data of the table: "user_profile_tab" */
  update_user_profile_tab?: Maybe<User_Profile_Tab_Mutation_Response>;
  /** update single row of the table: "user_profile_tab" */
  update_user_profile_tab_by_pk?: Maybe<User_Profile_Tab>;
  /** update data of the table: "user_profile_tab_endpoint" */
  update_user_profile_tab_endpoint?: Maybe<User_Profile_Tab_Endpoint_Mutation_Response>;
  /** update single row of the table: "user_profile_tab_endpoint" */
  update_user_profile_tab_endpoint_by_pk?: Maybe<User_Profile_Tab_Endpoint>;
  /** update multiples rows of table: "user_profile_tab_endpoint" */
  update_user_profile_tab_endpoint_many?: Maybe<Array<Maybe<User_Profile_Tab_Endpoint_Mutation_Response>>>;
  /** update multiples rows of table: "user_profile_tab" */
  update_user_profile_tab_many?: Maybe<Array<Maybe<User_Profile_Tab_Mutation_Response>>>;
  /** update data of the table: "user_profile_team" */
  update_user_profile_team?: Maybe<User_Profile_Team_Mutation_Response>;
  /** update single row of the table: "user_profile_team" */
  update_user_profile_team_by_pk?: Maybe<User_Profile_Team>;
  /** update multiples rows of table: "user_profile_team" */
  update_user_profile_team_many?: Maybe<Array<Maybe<User_Profile_Team_Mutation_Response>>>;
  /** update data of the table: "user_profile_visibility" */
  update_user_profile_visibility?: Maybe<User_Profile_Visibility_Mutation_Response>;
  /** update single row of the table: "user_profile_visibility" */
  update_user_profile_visibility_by_pk?: Maybe<User_Profile_Visibility>;
  /** update multiples rows of table: "user_profile_visibility" */
  update_user_profile_visibility_many?: Maybe<Array<Maybe<User_Profile_Visibility_Mutation_Response>>>;
  /** update data of the table: "user_role" */
  update_user_role?: Maybe<User_Role_Mutation_Response>;
  /** update single row of the table: "user_role" */
  update_user_role_by_pk?: Maybe<User_Role>;
  /** update data of the table: "user_role_capability" */
  update_user_role_capability?: Maybe<User_Role_Capability_Mutation_Response>;
  /** update single row of the table: "user_role_capability" */
  update_user_role_capability_by_pk?: Maybe<User_Role_Capability>;
  /** update multiples rows of table: "user_role_capability" */
  update_user_role_capability_many?: Maybe<Array<Maybe<User_Role_Capability_Mutation_Response>>>;
  /** update multiples rows of table: "user_role" */
  update_user_role_many?: Maybe<Array<Maybe<User_Role_Mutation_Response>>>;
  /** update data of the table: "user_role_route" */
  update_user_role_route?: Maybe<User_Role_Route_Mutation_Response>;
  /** update single row of the table: "user_role_route" */
  update_user_role_route_by_pk?: Maybe<User_Role_Route>;
  /** update multiples rows of table: "user_role_route" */
  update_user_role_route_many?: Maybe<Array<Maybe<User_Role_Route_Mutation_Response>>>;
  /** update data of the table: "user_role_user_profile_tab" */
  update_user_role_user_profile_tab?: Maybe<User_Role_User_Profile_Tab_Mutation_Response>;
  /** update single row of the table: "user_role_user_profile_tab" */
  update_user_role_user_profile_tab_by_pk?: Maybe<User_Role_User_Profile_Tab>;
  /** update multiples rows of table: "user_role_user_profile_tab" */
  update_user_role_user_profile_tab_many?: Maybe<Array<Maybe<User_Role_User_Profile_Tab_Mutation_Response>>>;
  /** update data of the table: "user_skill" */
  update_user_skill?: Maybe<User_Skill_Mutation_Response>;
  /** update single row of the table: "user_skill" */
  update_user_skill_by_pk?: Maybe<User_Skill>;
  /** update multiples rows of table: "user_skill" */
  update_user_skill_many?: Maybe<Array<Maybe<User_Skill_Mutation_Response>>>;
  /** update data of the table: "user_work_experience" */
  update_user_work_experience?: Maybe<User_Work_Experience_Mutation_Response>;
  /** update single row of the table: "user_work_experience" */
  update_user_work_experience_by_pk?: Maybe<User_Work_Experience>;
  /** update multiples rows of table: "user_work_experience" */
  update_user_work_experience_many?: Maybe<Array<Maybe<User_Work_Experience_Mutation_Response>>>;
  /** update data of the table: "webhook" */
  update_webhook?: Maybe<Webhook_Mutation_Response>;
  /** update single row of the table: "webhook" */
  update_webhook_by_pk?: Maybe<Webhook>;
  /** update multiples rows of table: "webhook" */
  update_webhook_many?: Maybe<Array<Maybe<Webhook_Mutation_Response>>>;
  /** update data of the table: "webhook_trigger" */
  update_webhook_trigger?: Maybe<Webhook_Trigger_Mutation_Response>;
  /** update single row of the table: "webhook_trigger" */
  update_webhook_trigger_by_pk?: Maybe<Webhook_Trigger>;
  /** update multiples rows of table: "webhook_trigger" */
  update_webhook_trigger_many?: Maybe<Array<Maybe<Webhook_Trigger_Mutation_Response>>>;
};

/** mutation root */
export type Mutation_RootCreateCustomerArgs = {
  accountLeadID?: InputMaybe<Scalars['String']>;
  additionalEmails?: InputMaybe<Scalars['String']>;
  addressLine1: Scalars['String'];
  addressLine2?: InputMaybe<Scalars['String']>;
  billingEmail: Scalars['String'];
  city: Scalars['String'];
  country: Scalars['String'];
  logoURL?: InputMaybe<Scalars['String']>;
  name: Scalars['String'];
  primaryContact: Scalars['String'];
  qbID?: InputMaybe<Scalars['String']>;
  stateOrProvince: Scalars['String'];
  zipOrPostalCode: Scalars['String'];
};

/** mutation root */
export type Mutation_RootCreateGoogleUserArgs = {
  aliases: Array<Scalars['String']>;
  firstName: Scalars['String'];
  googleAccessToken: Scalars['String'];
  googleGroupIDs: Array<Scalars['String']>;
  lastName: Scalars['String'];
  password: Scalars['String'];
  primaryEmail: Scalars['String'];
};

/** mutation root */
export type Mutation_RootCreateUserArgs = {
  email?: InputMaybe<Scalars['String']>;
  firstName?: InputMaybe<Scalars['String']>;
  skipWelcomeEmail?: InputMaybe<Scalars['Boolean']>;
  username?: InputMaybe<Scalars['String']>;
};

/** mutation root */
export type Mutation_RootCreateUserProfileMaterialArgs = {
  userProfileID: Scalars['String'];
};

/** mutation root */
export type Mutation_RootDelete_Api_User_TokenArgs = {
  where: Api_User_Token_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Api_User_Token_By_PkArgs = {
  id: Scalars['uuid'];
};

/** mutation root */
export type Mutation_RootDelete_Billing_FrequencyArgs = {
  where: Billing_Frequency_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Billing_Frequency_By_PkArgs = {
  id: Scalars['uuid'];
};

/** mutation root */
export type Mutation_RootDelete_Bookmark_FolderArgs = {
  where: Bookmark_Folder_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Bookmark_Folder_By_PkArgs = {
  id: Scalars['uuid'];
};

/** mutation root */
export type Mutation_RootDelete_Bookmark_LinkArgs = {
  where: Bookmark_Link_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Bookmark_Link_By_PkArgs = {
  id: Scalars['uuid'];
};

/** mutation root */
export type Mutation_RootDelete_CapabilityArgs = {
  where: Capability_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Capability_By_PkArgs = {
  id: Scalars['uuid'];
};

/** mutation root */
export type Mutation_RootDelete_Capability_EndpointArgs = {
  where: Capability_Endpoint_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Capability_Endpoint_By_PkArgs = {
  id: Scalars['uuid'];
};

/** mutation root */
export type Mutation_RootDelete_Case_StudyArgs = {
  where: Case_Study_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Case_Study_By_PkArgs = {
  id: Scalars['uuid'];
};

/** mutation root */
export type Mutation_RootDelete_Case_Study_CompanyArgs = {
  where: Case_Study_Company_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Case_Study_Company_By_PkArgs = {
  id: Scalars['uuid'];
};

/** mutation root */
export type Mutation_RootDelete_Case_Study_IndustryArgs = {
  where: Case_Study_Industry_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Case_Study_Industry_By_PkArgs = {
  id: Scalars['uuid'];
};

/** mutation root */
export type Mutation_RootDelete_Case_Study_MarketArgs = {
  where: Case_Study_Market_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Case_Study_Market_By_PkArgs = {
  id: Scalars['uuid'];
};

/** mutation root */
export type Mutation_RootDelete_Case_Study_SkillArgs = {
  where: Case_Study_Skill_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Case_Study_Skill_By_PkArgs = {
  id: Scalars['uuid'];
};

/** mutation root */
export type Mutation_RootDelete_Case_Study_TeamArgs = {
  where: Case_Study_Team_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Case_Study_Team_By_PkArgs = {
  id: Scalars['uuid'];
};

/** mutation root */
export type Mutation_RootDelete_Case_Study_UserArgs = {
  where: Case_Study_User_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Case_Study_User_By_PkArgs = {
  id: Scalars['uuid'];
};

/** mutation root */
export type Mutation_RootDelete_CompanyArgs = {
  where: Company_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Company_By_PkArgs = {
  id: Scalars['uuid'];
};

/** mutation root */
export type Mutation_RootDelete_Company_ContactArgs = {
  where: Company_Contact_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Company_Contact_By_PkArgs = {
  id: Scalars['uuid'];
};

/** mutation root */
export type Mutation_RootDelete_Company_TeamArgs = {
  where: Company_Team_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Company_Team_By_PkArgs = {
  id: Scalars['uuid'];
};

/** mutation root */
export type Mutation_RootDelete_Company_Team_ContributorArgs = {
  where: Company_Team_Contributor_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Company_Team_Contributor_By_PkArgs = {
  id: Scalars['uuid'];
};

/** mutation root */
export type Mutation_RootDelete_Contributor_TypeArgs = {
  where: Contributor_Type_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Contributor_Type_By_PkArgs = {
  id: Scalars['uuid'];
};

/** mutation root */
export type Mutation_RootDelete_Current_User_MetaArgs = {
  where: Current_User_Meta_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Custom_PayoutArgs = {
  where: Custom_Payout_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Custom_Payout_By_PkArgs = {
  id: Scalars['uuid'];
};

/** mutation root */
export type Mutation_RootDelete_Custom_Payout_Line_ItemArgs = {
  where: Custom_Payout_Line_Item_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Custom_Payout_Line_Item_By_PkArgs = {
  id: Scalars['uuid'];
};

/** mutation root */
export type Mutation_RootDelete_Custom_Project_DistributionArgs = {
  where: Custom_Project_Distribution_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Custom_Project_Distribution_By_PkArgs = {
  id: Scalars['uuid'];
};

/** mutation root */
export type Mutation_RootDelete_Custom_Project_Payout_DistributionArgs = {
  where: Custom_Project_Payout_Distribution_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Custom_Project_Payout_Distribution_By_PkArgs = {
  id: Scalars['uuid'];
};

/** mutation root */
export type Mutation_RootDelete_CustomerArgs = {
  where: Customer_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Customer_By_PkArgs = {
  id: Scalars['uuid'];
};

/** mutation root */
export type Mutation_RootDelete_Customer_Closing_PartyArgs = {
  where: Customer_Closing_Party_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Customer_Closing_Party_By_PkArgs = {
  customerID: Scalars['uuid'];
  userMetaID: Scalars['uuid'];
};

/** mutation root */
export type Mutation_RootDelete_Customer_Originating_PartyArgs = {
  where: Customer_Originating_Party_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Customer_Originating_Party_By_PkArgs = {
  customerID: Scalars['uuid'];
  userMetaID: Scalars['uuid'];
};

/** mutation root */
export type Mutation_RootDelete_Customer_ReferrerArgs = {
  where: Customer_Referrer_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Customer_Referrer_By_PkArgs = {
  id: Scalars['uuid'];
};

/** mutation root */
export type Mutation_RootDelete_DocumentArgs = {
  where: Document_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Document_Associated_CompanyArgs = {
  where: Document_Associated_Company_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Document_Associated_Company_By_PkArgs = {
  id: Scalars['uuid'];
};

/** mutation root */
export type Mutation_RootDelete_Document_Associated_UserArgs = {
  where: Document_Associated_User_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Document_Associated_User_By_PkArgs = {
  id: Scalars['uuid'];
};

/** mutation root */
export type Mutation_RootDelete_Document_By_PkArgs = {
  id: Scalars['uuid'];
};

/** mutation root */
export type Mutation_RootDelete_Document_Extra_FieldArgs = {
  where: Document_Extra_Field_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Document_Extra_Field_By_PkArgs = {
  id: Scalars['uuid'];
};

/** mutation root */
export type Mutation_RootDelete_Document_Extra_Field_ValueArgs = {
  where: Document_Extra_Field_Value_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Document_Extra_Field_Value_By_PkArgs = {
  documentExtraFieldID: Scalars['uuid'];
  documentID: Scalars['uuid'];
};

/** mutation root */
export type Mutation_RootDelete_Document_TypeArgs = {
  where: Document_Type_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Document_Type_By_PkArgs = {
  id: Scalars['uuid'];
};

/** mutation root */
export type Mutation_RootDelete_EndpointArgs = {
  where: Endpoint_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Endpoint_By_PkArgs = {
  id: Scalars['uuid'];
};

/** mutation root */
export type Mutation_RootDelete_Fixed_Price_Invoice_Line_ItemArgs = {
  where: Fixed_Price_Invoice_Line_Item_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Fixed_Price_Invoice_Line_Item_By_PkArgs = {
  id: Scalars['uuid'];
};

/** mutation root */
export type Mutation_RootDelete_In_Market_Experience_LevelArgs = {
  where: In_Market_Experience_Level_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_In_Market_Experience_Level_By_PkArgs = {
  id: Scalars['uuid'];
};

/** mutation root */
export type Mutation_RootDelete_IndustryArgs = {
  where: Industry_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Industry_By_PkArgs = {
  id: Scalars['uuid'];
};

/** mutation root */
export type Mutation_RootDelete_Industry_Experience_LevelArgs = {
  where: Industry_Experience_Level_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Industry_Experience_Level_By_PkArgs = {
  id: Scalars['uuid'];
};

/** mutation root */
export type Mutation_RootDelete_Industry_Google_GroupArgs = {
  where: Industry_Google_Group_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Industry_Google_Group_By_PkArgs = {
  googleGroupID: Scalars['String'];
  industryID: Scalars['uuid'];
};

/** mutation root */
export type Mutation_RootDelete_Industry_Slack_ChannelArgs = {
  where: Industry_Slack_Channel_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Industry_Slack_Channel_By_PkArgs = {
  industryID: Scalars['uuid'];
  slackChannelID: Scalars['String'];
};

/** mutation root */
export type Mutation_RootDelete_InvoiceArgs = {
  where: Invoice_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Invoice_By_PkArgs = {
  id: Scalars['Int'];
};

/** mutation root */
export type Mutation_RootDelete_Invoice_DistributionArgs = {
  where: Invoice_Distribution_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Invoice_Distribution_By_PkArgs = {
  id: Scalars['uuid'];
};

/** mutation root */
export type Mutation_RootDelete_Invoice_Service_TypeArgs = {
  where: Invoice_Service_Type_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Invoice_Service_Type_By_PkArgs = {
  id: Scalars['uuid'];
};

/** mutation root */
export type Mutation_RootDelete_Invoice_StatusArgs = {
  where: Invoice_Status_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Invoice_Status_By_PkArgs = {
  id: Scalars['Int'];
};

/** mutation root */
export type Mutation_RootDelete_Invoice_TermArgs = {
  where: Invoice_Term_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Invoice_Term_By_PkArgs = {
  id: Scalars['uuid'];
};

/** mutation root */
export type Mutation_RootDelete_Language_LevelArgs = {
  where: Language_Level_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Language_Level_By_PkArgs = {
  id: Scalars['uuid'];
};

/** mutation root */
export type Mutation_RootDelete_Late_Payment_PeriodArgs = {
  where: Late_Payment_Period_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Late_Payment_Period_By_PkArgs = {
  id: Scalars['uuid'];
};

/** mutation root */
export type Mutation_RootDelete_No_Of_EmployeesArgs = {
  where: No_Of_Employees_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_No_Of_Employees_By_PkArgs = {
  id: Scalars['uuid'];
};

/** mutation root */
export type Mutation_RootDelete_PartnerArgs = {
  where: Partner_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Partner_By_PkArgs = {
  id: Scalars['uuid'];
};

/** mutation root */
export type Mutation_RootDelete_Partner_CategoryArgs = {
  where: Partner_Category_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Partner_Category_By_PkArgs = {
  id: Scalars['uuid'];
};

/** mutation root */
export type Mutation_RootDelete_Partner_Custom_FieldArgs = {
  where: Partner_Custom_Field_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Partner_Custom_Field_By_PkArgs = {
  id: Scalars['uuid'];
};

/** mutation root */
export type Mutation_RootDelete_Partner_Gallery_ImageArgs = {
  where: Partner_Gallery_Image_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Partner_Gallery_Image_By_PkArgs = {
  id: Scalars['uuid'];
};

/** mutation root */
export type Mutation_RootDelete_Payout_DistributionArgs = {
  where: Payout_Distribution_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Payout_Distribution_By_PkArgs = {
  id: Scalars['uuid'];
};

/** mutation root */
export type Mutation_RootDelete_Product_Or_Service_TypeArgs = {
  where: Product_Or_Service_Type_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Product_Or_Service_Type_By_PkArgs = {
  id: Scalars['uuid'];
};

/** mutation root */
export type Mutation_RootDelete_Public_User_MetaArgs = {
  where: Public_User_Meta_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Recurring_IntervalArgs = {
  where: Recurring_Interval_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Recurring_Interval_By_PkArgs = {
  id: Scalars['uuid'];
};

/** mutation root */
export type Mutation_RootDelete_RouteArgs = {
  where: Route_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Route_By_PkArgs = {
  id: Scalars['uuid'];
};

/** mutation root */
export type Mutation_RootDelete_Route_EndpointArgs = {
  where: Route_Endpoint_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Route_Endpoint_By_PkArgs = {
  id: Scalars['uuid'];
};

/** mutation root */
export type Mutation_RootDelete_Route_GroupArgs = {
  where: Route_Group_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Route_Group_By_PkArgs = {
  id: Scalars['uuid'];
};

/** mutation root */
export type Mutation_RootDelete_SkillArgs = {
  where: Skill_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Skill_By_PkArgs = {
  id: Scalars['uuid'];
};

/** mutation root */
export type Mutation_RootDelete_Skill_CategoryArgs = {
  where: Skill_Category_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Skill_Category_By_PkArgs = {
  id: Scalars['uuid'];
};

/** mutation root */
export type Mutation_RootDelete_Skill_Google_GroupArgs = {
  where: Skill_Google_Group_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Skill_Google_Group_By_PkArgs = {
  googleGroupID: Scalars['String'];
  skillID: Scalars['uuid'];
};

/** mutation root */
export type Mutation_RootDelete_Skill_LevelArgs = {
  where: Skill_Level_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Skill_Level_By_PkArgs = {
  id: Scalars['uuid'];
};

/** mutation root */
export type Mutation_RootDelete_Skill_Skill_CategoriesArgs = {
  where: Skill_Skill_Categories_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Skill_Skill_Categories_By_PkArgs = {
  id: Scalars['uuid'];
};

/** mutation root */
export type Mutation_RootDelete_Skill_Slack_ChannelArgs = {
  where: Skill_Slack_Channel_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Skill_Slack_Channel_By_PkArgs = {
  skillID: Scalars['uuid'];
  slackChannelID: Scalars['String'];
};

/** mutation root */
export type Mutation_RootDelete_Slack_AnswerArgs = {
  where: Slack_Answer_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Slack_Answer_By_PkArgs = {
  id: Scalars['uuid'];
};

/** mutation root */
export type Mutation_RootDelete_Slack_Birthday_And_Anniversary_MessageArgs = {
  where: Slack_Birthday_And_Anniversary_Message_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Slack_Birthday_And_Anniversary_Message_By_PkArgs = {
  id: Scalars['uuid'];
};

/** mutation root */
export type Mutation_RootDelete_Slack_MessageArgs = {
  where: Slack_Message_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Slack_Message_By_PkArgs = {
  id: Scalars['uuid'];
};

/** mutation root */
export type Mutation_RootDelete_Slack_Message_Trigger_LogArgs = {
  where: Slack_Message_Trigger_Log_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Slack_Message_Trigger_Log_By_PkArgs = {
  id: Scalars['uuid'];
};

/** mutation root */
export type Mutation_RootDelete_Slack_OutreachArgs = {
  where: Slack_Outreach_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Slack_Outreach_By_PkArgs = {
  id: Scalars['uuid'];
};

/** mutation root */
export type Mutation_RootDelete_TeamArgs = {
  where: Team_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Team_By_PkArgs = {
  id: Scalars['uuid'];
};

/** mutation root */
export type Mutation_RootDelete_Team_Google_GroupArgs = {
  where: Team_Google_Group_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Team_Google_Group_By_PkArgs = {
  googleGroupID: Scalars['String'];
  teamID: Scalars['uuid'];
};

/** mutation root */
export type Mutation_RootDelete_Team_IndustryArgs = {
  where: Team_Industry_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Team_Industry_By_PkArgs = {
  industryID: Scalars['uuid'];
  teamID: Scalars['uuid'];
};

/** mutation root */
export type Mutation_RootDelete_Team_SkillArgs = {
  where: Team_Skill_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Team_Skill_By_PkArgs = {
  skillID: Scalars['uuid'];
  teamID: Scalars['uuid'];
};

/** mutation root */
export type Mutation_RootDelete_Team_Slack_ChannelArgs = {
  where: Team_Slack_Channel_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Team_Slack_Channel_By_PkArgs = {
  slackChannelID: Scalars['String'];
  teamID: Scalars['uuid'];
};

/** mutation root */
export type Mutation_RootDelete_Time_And_Material_Invoice_Line_ItemArgs = {
  where: Time_And_Material_Invoice_Line_Item_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Time_And_Material_Invoice_Line_Item_By_PkArgs = {
  id: Scalars['uuid'];
};

/** mutation root */
export type Mutation_RootDelete_ToolArgs = {
  where: Tool_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Tool_By_PkArgs = {
  id: Scalars['uuid'];
};

/** mutation root */
export type Mutation_RootDelete_TriggerArgs = {
  where: Trigger_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Trigger_By_PkArgs = {
  id: Scalars['uuid'];
};

/** mutation root */
export type Mutation_RootDelete_User_Basic_InformationArgs = {
  where: User_Basic_Information_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_User_Basic_Information_By_PkArgs = {
  id: Scalars['uuid'];
};

/** mutation root */
export type Mutation_RootDelete_User_CompanyArgs = {
  where: User_Company_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_User_Company_By_PkArgs = {
  id: Scalars['uuid'];
};

/** mutation root */
export type Mutation_RootDelete_User_Completed_Customer_SaleArgs = {
  where: User_Completed_Customer_Sale_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_User_Completed_Customer_Sale_By_PkArgs = {
  id: Scalars['uuid'];
};

/** mutation root */
export type Mutation_RootDelete_User_In_Market_ExperienceArgs = {
  where: User_In_Market_Experience_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_User_In_Market_Experience_By_PkArgs = {
  id: Scalars['uuid'];
};

/** mutation root */
export type Mutation_RootDelete_User_Industry_ExperienceArgs = {
  where: User_Industry_Experience_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_User_Industry_Experience_By_PkArgs = {
  id: Scalars['uuid'];
};

/** mutation root */
export type Mutation_RootDelete_User_LanguageArgs = {
  where: User_Language_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_User_Language_By_PkArgs = {
  id: Scalars['uuid'];
};

/** mutation root */
export type Mutation_RootDelete_User_MetaArgs = {
  where: User_Meta_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_User_Meta_By_PkArgs = {
  id: Scalars['uuid'];
};

/** mutation root */
export type Mutation_RootDelete_User_Meta_User_RoleArgs = {
  where: User_Meta_User_Role_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_User_Meta_User_Role_By_PkArgs = {
  id: Scalars['uuid'];
};

/** mutation root */
export type Mutation_RootDelete_User_Professional_InformationArgs = {
  where: User_Professional_Information_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_User_Professional_Information_By_PkArgs = {
  id: Scalars['uuid'];
};

/** mutation root */
export type Mutation_RootDelete_User_ProfileArgs = {
  where: User_Profile_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_User_Profile_By_PkArgs = {
  id: Scalars['uuid'];
};

/** mutation root */
export type Mutation_RootDelete_User_Profile_CompanyArgs = {
  where: User_Profile_Company_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_User_Profile_Company_By_PkArgs = {
  id: Scalars['uuid'];
};

/** mutation root */
export type Mutation_RootDelete_User_Profile_IndustryArgs = {
  where: User_Profile_Industry_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_User_Profile_Industry_By_PkArgs = {
  industryID: Scalars['uuid'];
  userProfileID: Scalars['uuid'];
};

/** mutation root */
export type Mutation_RootDelete_User_Profile_SkillArgs = {
  where: User_Profile_Skill_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_User_Profile_Skill_By_PkArgs = {
  skillID: Scalars['uuid'];
  userProfileID: Scalars['uuid'];
};

/** mutation root */
export type Mutation_RootDelete_User_Profile_TabArgs = {
  where: User_Profile_Tab_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_User_Profile_Tab_By_PkArgs = {
  id: Scalars['uuid'];
};

/** mutation root */
export type Mutation_RootDelete_User_Profile_Tab_EndpointArgs = {
  where: User_Profile_Tab_Endpoint_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_User_Profile_Tab_Endpoint_By_PkArgs = {
  id: Scalars['uuid'];
};

/** mutation root */
export type Mutation_RootDelete_User_Profile_TeamArgs = {
  where: User_Profile_Team_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_User_Profile_Team_By_PkArgs = {
  id: Scalars['uuid'];
};

/** mutation root */
export type Mutation_RootDelete_User_Profile_VisibilityArgs = {
  where: User_Profile_Visibility_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_User_Profile_Visibility_By_PkArgs = {
  id: Scalars['uuid'];
};

/** mutation root */
export type Mutation_RootDelete_User_RoleArgs = {
  where: User_Role_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_User_Role_By_PkArgs = {
  id: Scalars['uuid'];
};

/** mutation root */
export type Mutation_RootDelete_User_Role_CapabilityArgs = {
  where: User_Role_Capability_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_User_Role_Capability_By_PkArgs = {
  id: Scalars['uuid'];
};

/** mutation root */
export type Mutation_RootDelete_User_Role_RouteArgs = {
  where: User_Role_Route_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_User_Role_Route_By_PkArgs = {
  id: Scalars['uuid'];
};

/** mutation root */
export type Mutation_RootDelete_User_Role_User_Profile_TabArgs = {
  where: User_Role_User_Profile_Tab_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_User_Role_User_Profile_Tab_By_PkArgs = {
  id: Scalars['uuid'];
};

/** mutation root */
export type Mutation_RootDelete_User_SkillArgs = {
  where: User_Skill_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_User_Skill_By_PkArgs = {
  id: Scalars['uuid'];
};

/** mutation root */
export type Mutation_RootDelete_User_Work_ExperienceArgs = {
  where: User_Work_Experience_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_User_Work_Experience_By_PkArgs = {
  id: Scalars['uuid'];
};

/** mutation root */
export type Mutation_RootDelete_WebhookArgs = {
  where: Webhook_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Webhook_By_PkArgs = {
  id: Scalars['uuid'];
};

/** mutation root */
export type Mutation_RootDelete_Webhook_TriggerArgs = {
  where: Webhook_Trigger_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Webhook_Trigger_By_PkArgs = {
  id: Scalars['uuid'];
};

/** mutation root */
export type Mutation_RootInsert_Api_User_TokenArgs = {
  objects: Array<Api_User_Token_Insert_Input>;
  on_conflict?: InputMaybe<Api_User_Token_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Api_User_Token_OneArgs = {
  object: Api_User_Token_Insert_Input;
  on_conflict?: InputMaybe<Api_User_Token_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Billing_FrequencyArgs = {
  objects: Array<Billing_Frequency_Insert_Input>;
  on_conflict?: InputMaybe<Billing_Frequency_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Billing_Frequency_OneArgs = {
  object: Billing_Frequency_Insert_Input;
  on_conflict?: InputMaybe<Billing_Frequency_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Bookmark_FolderArgs = {
  objects: Array<Bookmark_Folder_Insert_Input>;
  on_conflict?: InputMaybe<Bookmark_Folder_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Bookmark_Folder_OneArgs = {
  object: Bookmark_Folder_Insert_Input;
  on_conflict?: InputMaybe<Bookmark_Folder_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Bookmark_LinkArgs = {
  objects: Array<Bookmark_Link_Insert_Input>;
  on_conflict?: InputMaybe<Bookmark_Link_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Bookmark_Link_OneArgs = {
  object: Bookmark_Link_Insert_Input;
  on_conflict?: InputMaybe<Bookmark_Link_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_CapabilityArgs = {
  objects: Array<Capability_Insert_Input>;
  on_conflict?: InputMaybe<Capability_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Capability_EndpointArgs = {
  objects: Array<Capability_Endpoint_Insert_Input>;
  on_conflict?: InputMaybe<Capability_Endpoint_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Capability_Endpoint_OneArgs = {
  object: Capability_Endpoint_Insert_Input;
  on_conflict?: InputMaybe<Capability_Endpoint_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Capability_OneArgs = {
  object: Capability_Insert_Input;
  on_conflict?: InputMaybe<Capability_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Case_StudyArgs = {
  objects: Array<Case_Study_Insert_Input>;
  on_conflict?: InputMaybe<Case_Study_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Case_Study_CompanyArgs = {
  objects: Array<Case_Study_Company_Insert_Input>;
  on_conflict?: InputMaybe<Case_Study_Company_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Case_Study_Company_OneArgs = {
  object: Case_Study_Company_Insert_Input;
  on_conflict?: InputMaybe<Case_Study_Company_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Case_Study_IndustryArgs = {
  objects: Array<Case_Study_Industry_Insert_Input>;
  on_conflict?: InputMaybe<Case_Study_Industry_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Case_Study_Industry_OneArgs = {
  object: Case_Study_Industry_Insert_Input;
  on_conflict?: InputMaybe<Case_Study_Industry_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Case_Study_MarketArgs = {
  objects: Array<Case_Study_Market_Insert_Input>;
  on_conflict?: InputMaybe<Case_Study_Market_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Case_Study_Market_OneArgs = {
  object: Case_Study_Market_Insert_Input;
  on_conflict?: InputMaybe<Case_Study_Market_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Case_Study_OneArgs = {
  object: Case_Study_Insert_Input;
  on_conflict?: InputMaybe<Case_Study_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Case_Study_SkillArgs = {
  objects: Array<Case_Study_Skill_Insert_Input>;
  on_conflict?: InputMaybe<Case_Study_Skill_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Case_Study_Skill_OneArgs = {
  object: Case_Study_Skill_Insert_Input;
  on_conflict?: InputMaybe<Case_Study_Skill_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Case_Study_TeamArgs = {
  objects: Array<Case_Study_Team_Insert_Input>;
  on_conflict?: InputMaybe<Case_Study_Team_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Case_Study_Team_OneArgs = {
  object: Case_Study_Team_Insert_Input;
  on_conflict?: InputMaybe<Case_Study_Team_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Case_Study_UserArgs = {
  objects: Array<Case_Study_User_Insert_Input>;
  on_conflict?: InputMaybe<Case_Study_User_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Case_Study_User_OneArgs = {
  object: Case_Study_User_Insert_Input;
  on_conflict?: InputMaybe<Case_Study_User_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_CompanyArgs = {
  objects: Array<Company_Insert_Input>;
  on_conflict?: InputMaybe<Company_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Company_ContactArgs = {
  objects: Array<Company_Contact_Insert_Input>;
  on_conflict?: InputMaybe<Company_Contact_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Company_Contact_OneArgs = {
  object: Company_Contact_Insert_Input;
  on_conflict?: InputMaybe<Company_Contact_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Company_OneArgs = {
  object: Company_Insert_Input;
  on_conflict?: InputMaybe<Company_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Company_TeamArgs = {
  objects: Array<Company_Team_Insert_Input>;
  on_conflict?: InputMaybe<Company_Team_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Company_Team_ContributorArgs = {
  objects: Array<Company_Team_Contributor_Insert_Input>;
  on_conflict?: InputMaybe<Company_Team_Contributor_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Company_Team_Contributor_OneArgs = {
  object: Company_Team_Contributor_Insert_Input;
  on_conflict?: InputMaybe<Company_Team_Contributor_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Company_Team_OneArgs = {
  object: Company_Team_Insert_Input;
  on_conflict?: InputMaybe<Company_Team_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Contributor_TypeArgs = {
  objects: Array<Contributor_Type_Insert_Input>;
  on_conflict?: InputMaybe<Contributor_Type_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Contributor_Type_OneArgs = {
  object: Contributor_Type_Insert_Input;
  on_conflict?: InputMaybe<Contributor_Type_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Current_User_MetaArgs = {
  objects: Array<Current_User_Meta_Insert_Input>;
};

/** mutation root */
export type Mutation_RootInsert_Current_User_Meta_OneArgs = {
  object: Current_User_Meta_Insert_Input;
};

/** mutation root */
export type Mutation_RootInsert_Custom_PayoutArgs = {
  objects: Array<Custom_Payout_Insert_Input>;
  on_conflict?: InputMaybe<Custom_Payout_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Custom_Payout_Line_ItemArgs = {
  objects: Array<Custom_Payout_Line_Item_Insert_Input>;
  on_conflict?: InputMaybe<Custom_Payout_Line_Item_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Custom_Payout_Line_Item_OneArgs = {
  object: Custom_Payout_Line_Item_Insert_Input;
  on_conflict?: InputMaybe<Custom_Payout_Line_Item_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Custom_Payout_OneArgs = {
  object: Custom_Payout_Insert_Input;
  on_conflict?: InputMaybe<Custom_Payout_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Custom_Project_DistributionArgs = {
  objects: Array<Custom_Project_Distribution_Insert_Input>;
  on_conflict?: InputMaybe<Custom_Project_Distribution_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Custom_Project_Distribution_OneArgs = {
  object: Custom_Project_Distribution_Insert_Input;
  on_conflict?: InputMaybe<Custom_Project_Distribution_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Custom_Project_Payout_DistributionArgs = {
  objects: Array<Custom_Project_Payout_Distribution_Insert_Input>;
  on_conflict?: InputMaybe<Custom_Project_Payout_Distribution_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Custom_Project_Payout_Distribution_OneArgs = {
  object: Custom_Project_Payout_Distribution_Insert_Input;
  on_conflict?: InputMaybe<Custom_Project_Payout_Distribution_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_CustomerArgs = {
  objects: Array<Customer_Insert_Input>;
  on_conflict?: InputMaybe<Customer_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Customer_Closing_PartyArgs = {
  objects: Array<Customer_Closing_Party_Insert_Input>;
  on_conflict?: InputMaybe<Customer_Closing_Party_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Customer_Closing_Party_OneArgs = {
  object: Customer_Closing_Party_Insert_Input;
  on_conflict?: InputMaybe<Customer_Closing_Party_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Customer_OneArgs = {
  object: Customer_Insert_Input;
  on_conflict?: InputMaybe<Customer_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Customer_Originating_PartyArgs = {
  objects: Array<Customer_Originating_Party_Insert_Input>;
  on_conflict?: InputMaybe<Customer_Originating_Party_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Customer_Originating_Party_OneArgs = {
  object: Customer_Originating_Party_Insert_Input;
  on_conflict?: InputMaybe<Customer_Originating_Party_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Customer_ReferrerArgs = {
  objects: Array<Customer_Referrer_Insert_Input>;
  on_conflict?: InputMaybe<Customer_Referrer_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Customer_Referrer_OneArgs = {
  object: Customer_Referrer_Insert_Input;
  on_conflict?: InputMaybe<Customer_Referrer_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_DocumentArgs = {
  objects: Array<Document_Insert_Input>;
  on_conflict?: InputMaybe<Document_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Document_Associated_CompanyArgs = {
  objects: Array<Document_Associated_Company_Insert_Input>;
  on_conflict?: InputMaybe<Document_Associated_Company_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Document_Associated_Company_OneArgs = {
  object: Document_Associated_Company_Insert_Input;
  on_conflict?: InputMaybe<Document_Associated_Company_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Document_Associated_UserArgs = {
  objects: Array<Document_Associated_User_Insert_Input>;
  on_conflict?: InputMaybe<Document_Associated_User_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Document_Associated_User_OneArgs = {
  object: Document_Associated_User_Insert_Input;
  on_conflict?: InputMaybe<Document_Associated_User_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Document_Extra_FieldArgs = {
  objects: Array<Document_Extra_Field_Insert_Input>;
  on_conflict?: InputMaybe<Document_Extra_Field_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Document_Extra_Field_OneArgs = {
  object: Document_Extra_Field_Insert_Input;
  on_conflict?: InputMaybe<Document_Extra_Field_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Document_Extra_Field_ValueArgs = {
  objects: Array<Document_Extra_Field_Value_Insert_Input>;
  on_conflict?: InputMaybe<Document_Extra_Field_Value_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Document_Extra_Field_Value_OneArgs = {
  object: Document_Extra_Field_Value_Insert_Input;
  on_conflict?: InputMaybe<Document_Extra_Field_Value_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Document_OneArgs = {
  object: Document_Insert_Input;
  on_conflict?: InputMaybe<Document_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Document_TypeArgs = {
  objects: Array<Document_Type_Insert_Input>;
  on_conflict?: InputMaybe<Document_Type_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Document_Type_OneArgs = {
  object: Document_Type_Insert_Input;
  on_conflict?: InputMaybe<Document_Type_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_EndpointArgs = {
  objects: Array<Endpoint_Insert_Input>;
  on_conflict?: InputMaybe<Endpoint_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Endpoint_OneArgs = {
  object: Endpoint_Insert_Input;
  on_conflict?: InputMaybe<Endpoint_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Fixed_Price_Invoice_Line_ItemArgs = {
  objects: Array<Fixed_Price_Invoice_Line_Item_Insert_Input>;
  on_conflict?: InputMaybe<Fixed_Price_Invoice_Line_Item_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Fixed_Price_Invoice_Line_Item_OneArgs = {
  object: Fixed_Price_Invoice_Line_Item_Insert_Input;
  on_conflict?: InputMaybe<Fixed_Price_Invoice_Line_Item_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_In_Market_Experience_LevelArgs = {
  objects: Array<In_Market_Experience_Level_Insert_Input>;
  on_conflict?: InputMaybe<In_Market_Experience_Level_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_In_Market_Experience_Level_OneArgs = {
  object: In_Market_Experience_Level_Insert_Input;
  on_conflict?: InputMaybe<In_Market_Experience_Level_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_IndustryArgs = {
  objects: Array<Industry_Insert_Input>;
  on_conflict?: InputMaybe<Industry_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Industry_Experience_LevelArgs = {
  objects: Array<Industry_Experience_Level_Insert_Input>;
  on_conflict?: InputMaybe<Industry_Experience_Level_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Industry_Experience_Level_OneArgs = {
  object: Industry_Experience_Level_Insert_Input;
  on_conflict?: InputMaybe<Industry_Experience_Level_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Industry_Google_GroupArgs = {
  objects: Array<Industry_Google_Group_Insert_Input>;
  on_conflict?: InputMaybe<Industry_Google_Group_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Industry_Google_Group_OneArgs = {
  object: Industry_Google_Group_Insert_Input;
  on_conflict?: InputMaybe<Industry_Google_Group_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Industry_OneArgs = {
  object: Industry_Insert_Input;
  on_conflict?: InputMaybe<Industry_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Industry_Slack_ChannelArgs = {
  objects: Array<Industry_Slack_Channel_Insert_Input>;
  on_conflict?: InputMaybe<Industry_Slack_Channel_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Industry_Slack_Channel_OneArgs = {
  object: Industry_Slack_Channel_Insert_Input;
  on_conflict?: InputMaybe<Industry_Slack_Channel_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_InvoiceArgs = {
  objects: Array<Invoice_Insert_Input>;
  on_conflict?: InputMaybe<Invoice_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Invoice_DistributionArgs = {
  objects: Array<Invoice_Distribution_Insert_Input>;
  on_conflict?: InputMaybe<Invoice_Distribution_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Invoice_Distribution_OneArgs = {
  object: Invoice_Distribution_Insert_Input;
  on_conflict?: InputMaybe<Invoice_Distribution_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Invoice_OneArgs = {
  object: Invoice_Insert_Input;
  on_conflict?: InputMaybe<Invoice_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Invoice_Service_TypeArgs = {
  objects: Array<Invoice_Service_Type_Insert_Input>;
  on_conflict?: InputMaybe<Invoice_Service_Type_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Invoice_Service_Type_OneArgs = {
  object: Invoice_Service_Type_Insert_Input;
  on_conflict?: InputMaybe<Invoice_Service_Type_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Invoice_StatusArgs = {
  objects: Array<Invoice_Status_Insert_Input>;
  on_conflict?: InputMaybe<Invoice_Status_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Invoice_Status_OneArgs = {
  object: Invoice_Status_Insert_Input;
  on_conflict?: InputMaybe<Invoice_Status_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Invoice_TermArgs = {
  objects: Array<Invoice_Term_Insert_Input>;
  on_conflict?: InputMaybe<Invoice_Term_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Invoice_Term_OneArgs = {
  object: Invoice_Term_Insert_Input;
  on_conflict?: InputMaybe<Invoice_Term_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Language_LevelArgs = {
  objects: Array<Language_Level_Insert_Input>;
  on_conflict?: InputMaybe<Language_Level_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Language_Level_OneArgs = {
  object: Language_Level_Insert_Input;
  on_conflict?: InputMaybe<Language_Level_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Late_Payment_PeriodArgs = {
  objects: Array<Late_Payment_Period_Insert_Input>;
  on_conflict?: InputMaybe<Late_Payment_Period_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Late_Payment_Period_OneArgs = {
  object: Late_Payment_Period_Insert_Input;
  on_conflict?: InputMaybe<Late_Payment_Period_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_No_Of_EmployeesArgs = {
  objects: Array<No_Of_Employees_Insert_Input>;
  on_conflict?: InputMaybe<No_Of_Employees_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_No_Of_Employees_OneArgs = {
  object: No_Of_Employees_Insert_Input;
  on_conflict?: InputMaybe<No_Of_Employees_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_PartnerArgs = {
  objects: Array<Partner_Insert_Input>;
  on_conflict?: InputMaybe<Partner_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Partner_CategoryArgs = {
  objects: Array<Partner_Category_Insert_Input>;
  on_conflict?: InputMaybe<Partner_Category_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Partner_Category_OneArgs = {
  object: Partner_Category_Insert_Input;
  on_conflict?: InputMaybe<Partner_Category_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Partner_Custom_FieldArgs = {
  objects: Array<Partner_Custom_Field_Insert_Input>;
  on_conflict?: InputMaybe<Partner_Custom_Field_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Partner_Custom_Field_OneArgs = {
  object: Partner_Custom_Field_Insert_Input;
  on_conflict?: InputMaybe<Partner_Custom_Field_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Partner_Gallery_ImageArgs = {
  objects: Array<Partner_Gallery_Image_Insert_Input>;
  on_conflict?: InputMaybe<Partner_Gallery_Image_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Partner_Gallery_Image_OneArgs = {
  object: Partner_Gallery_Image_Insert_Input;
  on_conflict?: InputMaybe<Partner_Gallery_Image_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Partner_OneArgs = {
  object: Partner_Insert_Input;
  on_conflict?: InputMaybe<Partner_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Payout_DistributionArgs = {
  objects: Array<Payout_Distribution_Insert_Input>;
  on_conflict?: InputMaybe<Payout_Distribution_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Payout_Distribution_OneArgs = {
  object: Payout_Distribution_Insert_Input;
  on_conflict?: InputMaybe<Payout_Distribution_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Product_Or_Service_TypeArgs = {
  objects: Array<Product_Or_Service_Type_Insert_Input>;
  on_conflict?: InputMaybe<Product_Or_Service_Type_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Product_Or_Service_Type_OneArgs = {
  object: Product_Or_Service_Type_Insert_Input;
  on_conflict?: InputMaybe<Product_Or_Service_Type_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Public_User_MetaArgs = {
  objects: Array<Public_User_Meta_Insert_Input>;
};

/** mutation root */
export type Mutation_RootInsert_Public_User_Meta_OneArgs = {
  object: Public_User_Meta_Insert_Input;
};

/** mutation root */
export type Mutation_RootInsert_Recurring_IntervalArgs = {
  objects: Array<Recurring_Interval_Insert_Input>;
  on_conflict?: InputMaybe<Recurring_Interval_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Recurring_Interval_OneArgs = {
  object: Recurring_Interval_Insert_Input;
  on_conflict?: InputMaybe<Recurring_Interval_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_RouteArgs = {
  objects: Array<Route_Insert_Input>;
  on_conflict?: InputMaybe<Route_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Route_EndpointArgs = {
  objects: Array<Route_Endpoint_Insert_Input>;
  on_conflict?: InputMaybe<Route_Endpoint_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Route_Endpoint_OneArgs = {
  object: Route_Endpoint_Insert_Input;
  on_conflict?: InputMaybe<Route_Endpoint_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Route_GroupArgs = {
  objects: Array<Route_Group_Insert_Input>;
  on_conflict?: InputMaybe<Route_Group_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Route_Group_OneArgs = {
  object: Route_Group_Insert_Input;
  on_conflict?: InputMaybe<Route_Group_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Route_OneArgs = {
  object: Route_Insert_Input;
  on_conflict?: InputMaybe<Route_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_SkillArgs = {
  objects: Array<Skill_Insert_Input>;
  on_conflict?: InputMaybe<Skill_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Skill_CategoryArgs = {
  objects: Array<Skill_Category_Insert_Input>;
  on_conflict?: InputMaybe<Skill_Category_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Skill_Category_OneArgs = {
  object: Skill_Category_Insert_Input;
  on_conflict?: InputMaybe<Skill_Category_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Skill_Google_GroupArgs = {
  objects: Array<Skill_Google_Group_Insert_Input>;
  on_conflict?: InputMaybe<Skill_Google_Group_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Skill_Google_Group_OneArgs = {
  object: Skill_Google_Group_Insert_Input;
  on_conflict?: InputMaybe<Skill_Google_Group_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Skill_LevelArgs = {
  objects: Array<Skill_Level_Insert_Input>;
  on_conflict?: InputMaybe<Skill_Level_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Skill_Level_OneArgs = {
  object: Skill_Level_Insert_Input;
  on_conflict?: InputMaybe<Skill_Level_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Skill_OneArgs = {
  object: Skill_Insert_Input;
  on_conflict?: InputMaybe<Skill_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Skill_Skill_CategoriesArgs = {
  objects: Array<Skill_Skill_Categories_Insert_Input>;
  on_conflict?: InputMaybe<Skill_Skill_Categories_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Skill_Skill_Categories_OneArgs = {
  object: Skill_Skill_Categories_Insert_Input;
  on_conflict?: InputMaybe<Skill_Skill_Categories_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Skill_Slack_ChannelArgs = {
  objects: Array<Skill_Slack_Channel_Insert_Input>;
  on_conflict?: InputMaybe<Skill_Slack_Channel_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Skill_Slack_Channel_OneArgs = {
  object: Skill_Slack_Channel_Insert_Input;
  on_conflict?: InputMaybe<Skill_Slack_Channel_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Slack_AnswerArgs = {
  objects: Array<Slack_Answer_Insert_Input>;
  on_conflict?: InputMaybe<Slack_Answer_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Slack_Answer_OneArgs = {
  object: Slack_Answer_Insert_Input;
  on_conflict?: InputMaybe<Slack_Answer_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Slack_Birthday_And_Anniversary_MessageArgs = {
  objects: Array<Slack_Birthday_And_Anniversary_Message_Insert_Input>;
  on_conflict?: InputMaybe<Slack_Birthday_And_Anniversary_Message_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Slack_Birthday_And_Anniversary_Message_OneArgs = {
  object: Slack_Birthday_And_Anniversary_Message_Insert_Input;
  on_conflict?: InputMaybe<Slack_Birthday_And_Anniversary_Message_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Slack_MessageArgs = {
  objects: Array<Slack_Message_Insert_Input>;
  on_conflict?: InputMaybe<Slack_Message_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Slack_Message_OneArgs = {
  object: Slack_Message_Insert_Input;
  on_conflict?: InputMaybe<Slack_Message_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Slack_Message_Trigger_LogArgs = {
  objects: Array<Slack_Message_Trigger_Log_Insert_Input>;
  on_conflict?: InputMaybe<Slack_Message_Trigger_Log_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Slack_Message_Trigger_Log_OneArgs = {
  object: Slack_Message_Trigger_Log_Insert_Input;
  on_conflict?: InputMaybe<Slack_Message_Trigger_Log_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Slack_OutreachArgs = {
  objects: Array<Slack_Outreach_Insert_Input>;
  on_conflict?: InputMaybe<Slack_Outreach_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Slack_Outreach_OneArgs = {
  object: Slack_Outreach_Insert_Input;
  on_conflict?: InputMaybe<Slack_Outreach_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_TeamArgs = {
  objects: Array<Team_Insert_Input>;
  on_conflict?: InputMaybe<Team_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Team_Google_GroupArgs = {
  objects: Array<Team_Google_Group_Insert_Input>;
  on_conflict?: InputMaybe<Team_Google_Group_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Team_Google_Group_OneArgs = {
  object: Team_Google_Group_Insert_Input;
  on_conflict?: InputMaybe<Team_Google_Group_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Team_IndustryArgs = {
  objects: Array<Team_Industry_Insert_Input>;
  on_conflict?: InputMaybe<Team_Industry_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Team_Industry_OneArgs = {
  object: Team_Industry_Insert_Input;
  on_conflict?: InputMaybe<Team_Industry_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Team_OneArgs = {
  object: Team_Insert_Input;
  on_conflict?: InputMaybe<Team_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Team_SkillArgs = {
  objects: Array<Team_Skill_Insert_Input>;
  on_conflict?: InputMaybe<Team_Skill_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Team_Skill_OneArgs = {
  object: Team_Skill_Insert_Input;
  on_conflict?: InputMaybe<Team_Skill_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Team_Slack_ChannelArgs = {
  objects: Array<Team_Slack_Channel_Insert_Input>;
  on_conflict?: InputMaybe<Team_Slack_Channel_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Team_Slack_Channel_OneArgs = {
  object: Team_Slack_Channel_Insert_Input;
  on_conflict?: InputMaybe<Team_Slack_Channel_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Time_And_Material_Invoice_Line_ItemArgs = {
  objects: Array<Time_And_Material_Invoice_Line_Item_Insert_Input>;
  on_conflict?: InputMaybe<Time_And_Material_Invoice_Line_Item_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Time_And_Material_Invoice_Line_Item_OneArgs = {
  object: Time_And_Material_Invoice_Line_Item_Insert_Input;
  on_conflict?: InputMaybe<Time_And_Material_Invoice_Line_Item_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_ToolArgs = {
  objects: Array<Tool_Insert_Input>;
  on_conflict?: InputMaybe<Tool_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Tool_OneArgs = {
  object: Tool_Insert_Input;
  on_conflict?: InputMaybe<Tool_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_TriggerArgs = {
  objects: Array<Trigger_Insert_Input>;
  on_conflict?: InputMaybe<Trigger_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Trigger_OneArgs = {
  object: Trigger_Insert_Input;
  on_conflict?: InputMaybe<Trigger_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_User_Basic_InformationArgs = {
  objects: Array<User_Basic_Information_Insert_Input>;
  on_conflict?: InputMaybe<User_Basic_Information_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_User_Basic_Information_OneArgs = {
  object: User_Basic_Information_Insert_Input;
  on_conflict?: InputMaybe<User_Basic_Information_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_User_CompanyArgs = {
  objects: Array<User_Company_Insert_Input>;
  on_conflict?: InputMaybe<User_Company_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_User_Company_OneArgs = {
  object: User_Company_Insert_Input;
  on_conflict?: InputMaybe<User_Company_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_User_Completed_Customer_SaleArgs = {
  objects: Array<User_Completed_Customer_Sale_Insert_Input>;
  on_conflict?: InputMaybe<User_Completed_Customer_Sale_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_User_Completed_Customer_Sale_OneArgs = {
  object: User_Completed_Customer_Sale_Insert_Input;
  on_conflict?: InputMaybe<User_Completed_Customer_Sale_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_User_In_Market_ExperienceArgs = {
  objects: Array<User_In_Market_Experience_Insert_Input>;
  on_conflict?: InputMaybe<User_In_Market_Experience_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_User_In_Market_Experience_OneArgs = {
  object: User_In_Market_Experience_Insert_Input;
  on_conflict?: InputMaybe<User_In_Market_Experience_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_User_Industry_ExperienceArgs = {
  objects: Array<User_Industry_Experience_Insert_Input>;
  on_conflict?: InputMaybe<User_Industry_Experience_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_User_Industry_Experience_OneArgs = {
  object: User_Industry_Experience_Insert_Input;
  on_conflict?: InputMaybe<User_Industry_Experience_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_User_LanguageArgs = {
  objects: Array<User_Language_Insert_Input>;
  on_conflict?: InputMaybe<User_Language_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_User_Language_OneArgs = {
  object: User_Language_Insert_Input;
  on_conflict?: InputMaybe<User_Language_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_User_MetaArgs = {
  objects: Array<User_Meta_Insert_Input>;
  on_conflict?: InputMaybe<User_Meta_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_User_Meta_OneArgs = {
  object: User_Meta_Insert_Input;
  on_conflict?: InputMaybe<User_Meta_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_User_Meta_User_RoleArgs = {
  objects: Array<User_Meta_User_Role_Insert_Input>;
  on_conflict?: InputMaybe<User_Meta_User_Role_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_User_Meta_User_Role_OneArgs = {
  object: User_Meta_User_Role_Insert_Input;
  on_conflict?: InputMaybe<User_Meta_User_Role_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_User_Professional_InformationArgs = {
  objects: Array<User_Professional_Information_Insert_Input>;
  on_conflict?: InputMaybe<User_Professional_Information_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_User_Professional_Information_OneArgs = {
  object: User_Professional_Information_Insert_Input;
  on_conflict?: InputMaybe<User_Professional_Information_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_User_ProfileArgs = {
  objects: Array<User_Profile_Insert_Input>;
  on_conflict?: InputMaybe<User_Profile_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_User_Profile_CompanyArgs = {
  objects: Array<User_Profile_Company_Insert_Input>;
  on_conflict?: InputMaybe<User_Profile_Company_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_User_Profile_Company_OneArgs = {
  object: User_Profile_Company_Insert_Input;
  on_conflict?: InputMaybe<User_Profile_Company_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_User_Profile_IndustryArgs = {
  objects: Array<User_Profile_Industry_Insert_Input>;
  on_conflict?: InputMaybe<User_Profile_Industry_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_User_Profile_Industry_OneArgs = {
  object: User_Profile_Industry_Insert_Input;
  on_conflict?: InputMaybe<User_Profile_Industry_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_User_Profile_OneArgs = {
  object: User_Profile_Insert_Input;
  on_conflict?: InputMaybe<User_Profile_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_User_Profile_SkillArgs = {
  objects: Array<User_Profile_Skill_Insert_Input>;
  on_conflict?: InputMaybe<User_Profile_Skill_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_User_Profile_Skill_OneArgs = {
  object: User_Profile_Skill_Insert_Input;
  on_conflict?: InputMaybe<User_Profile_Skill_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_User_Profile_TabArgs = {
  objects: Array<User_Profile_Tab_Insert_Input>;
  on_conflict?: InputMaybe<User_Profile_Tab_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_User_Profile_Tab_EndpointArgs = {
  objects: Array<User_Profile_Tab_Endpoint_Insert_Input>;
  on_conflict?: InputMaybe<User_Profile_Tab_Endpoint_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_User_Profile_Tab_Endpoint_OneArgs = {
  object: User_Profile_Tab_Endpoint_Insert_Input;
  on_conflict?: InputMaybe<User_Profile_Tab_Endpoint_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_User_Profile_Tab_OneArgs = {
  object: User_Profile_Tab_Insert_Input;
  on_conflict?: InputMaybe<User_Profile_Tab_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_User_Profile_TeamArgs = {
  objects: Array<User_Profile_Team_Insert_Input>;
  on_conflict?: InputMaybe<User_Profile_Team_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_User_Profile_Team_OneArgs = {
  object: User_Profile_Team_Insert_Input;
  on_conflict?: InputMaybe<User_Profile_Team_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_User_Profile_VisibilityArgs = {
  objects: Array<User_Profile_Visibility_Insert_Input>;
  on_conflict?: InputMaybe<User_Profile_Visibility_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_User_Profile_Visibility_OneArgs = {
  object: User_Profile_Visibility_Insert_Input;
  on_conflict?: InputMaybe<User_Profile_Visibility_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_User_RoleArgs = {
  objects: Array<User_Role_Insert_Input>;
  on_conflict?: InputMaybe<User_Role_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_User_Role_CapabilityArgs = {
  objects: Array<User_Role_Capability_Insert_Input>;
  on_conflict?: InputMaybe<User_Role_Capability_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_User_Role_Capability_OneArgs = {
  object: User_Role_Capability_Insert_Input;
  on_conflict?: InputMaybe<User_Role_Capability_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_User_Role_OneArgs = {
  object: User_Role_Insert_Input;
  on_conflict?: InputMaybe<User_Role_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_User_Role_RouteArgs = {
  objects: Array<User_Role_Route_Insert_Input>;
  on_conflict?: InputMaybe<User_Role_Route_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_User_Role_Route_OneArgs = {
  object: User_Role_Route_Insert_Input;
  on_conflict?: InputMaybe<User_Role_Route_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_User_Role_User_Profile_TabArgs = {
  objects: Array<User_Role_User_Profile_Tab_Insert_Input>;
  on_conflict?: InputMaybe<User_Role_User_Profile_Tab_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_User_Role_User_Profile_Tab_OneArgs = {
  object: User_Role_User_Profile_Tab_Insert_Input;
  on_conflict?: InputMaybe<User_Role_User_Profile_Tab_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_User_SkillArgs = {
  objects: Array<User_Skill_Insert_Input>;
  on_conflict?: InputMaybe<User_Skill_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_User_Skill_OneArgs = {
  object: User_Skill_Insert_Input;
  on_conflict?: InputMaybe<User_Skill_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_User_Work_ExperienceArgs = {
  objects: Array<User_Work_Experience_Insert_Input>;
  on_conflict?: InputMaybe<User_Work_Experience_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_User_Work_Experience_OneArgs = {
  object: User_Work_Experience_Insert_Input;
  on_conflict?: InputMaybe<User_Work_Experience_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_WebhookArgs = {
  objects: Array<Webhook_Insert_Input>;
  on_conflict?: InputMaybe<Webhook_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Webhook_OneArgs = {
  object: Webhook_Insert_Input;
  on_conflict?: InputMaybe<Webhook_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Webhook_TriggerArgs = {
  objects: Array<Webhook_Trigger_Insert_Input>;
  on_conflict?: InputMaybe<Webhook_Trigger_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Webhook_Trigger_OneArgs = {
  object: Webhook_Trigger_Insert_Input;
  on_conflict?: InputMaybe<Webhook_Trigger_On_Conflict>;
};

/** mutation root */
export type Mutation_RootNotifyUserProfileDeletionToGoogleSlidesArgs = {
  profileId: Scalars['String'];
};

/** mutation root */
export type Mutation_RootResendUserWelcomeEmailArgs = {
  email: Scalars['String'];
  firstName: Scalars['String'];
  username: Scalars['String'];
};

/** mutation root */
export type Mutation_RootSendForgotPasswordConfirmationCodeArgs = {
  email?: InputMaybe<Scalars['String']>;
};

/** mutation root */
export type Mutation_RootSetUserPrivateInformationArgs = {
  input: UserPrivateInformationInput;
};

/** mutation root */
export type Mutation_RootTriggerWebhookArgs = {
  payload: Scalars['String'];
  triggerName: Scalars['String'];
};

/** mutation root */
export type Mutation_RootUpdateGoogleUserArgs = {
  aliases: Array<Scalars['String']>;
  googleAccessToken: Scalars['String'];
  newGroupIDs: Array<Scalars['String']>;
  password?: InputMaybe<Scalars['String']>;
  primaryEmail: Scalars['String'];
  removedGroupIDs: Array<Scalars['String']>;
};

/** mutation root */
export type Mutation_RootUpdateOwnCognitoInformationArgs = {
  email: Scalars['String'];
};

/** mutation root */
export type Mutation_RootUpdateUserArgs = {
  accountStatus?: InputMaybe<Scalars['String']>;
  email?: InputMaybe<Scalars['String']>;
  password?: InputMaybe<Scalars['String']>;
  username: Scalars['String'];
};

/** mutation root */
export type Mutation_RootUpdateUserCognitoInformationArgs = {
  email: Scalars['String'];
  username: Scalars['String'];
};

/** mutation root */
export type Mutation_RootUpdateUserPasswordArgs = {
  newPassword: Scalars['String'];
};

/** mutation root */
export type Mutation_RootUpdateUserSlackChannelsArgs = {
  channels?: InputMaybe<Scalars['String']>;
  userSlackID: Scalars['String'];
};

/** mutation root */
export type Mutation_RootUpdate_Api_User_TokenArgs = {
  _set?: InputMaybe<Api_User_Token_Set_Input>;
  where: Api_User_Token_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Api_User_Token_By_PkArgs = {
  _set?: InputMaybe<Api_User_Token_Set_Input>;
  pk_columns: Api_User_Token_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Api_User_Token_ManyArgs = {
  updates: Array<Api_User_Token_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_Billing_FrequencyArgs = {
  _set?: InputMaybe<Billing_Frequency_Set_Input>;
  where: Billing_Frequency_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Billing_Frequency_By_PkArgs = {
  _set?: InputMaybe<Billing_Frequency_Set_Input>;
  pk_columns: Billing_Frequency_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Billing_Frequency_ManyArgs = {
  updates: Array<Billing_Frequency_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_Bookmark_FolderArgs = {
  _inc?: InputMaybe<Bookmark_Folder_Inc_Input>;
  _set?: InputMaybe<Bookmark_Folder_Set_Input>;
  where: Bookmark_Folder_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Bookmark_Folder_By_PkArgs = {
  _inc?: InputMaybe<Bookmark_Folder_Inc_Input>;
  _set?: InputMaybe<Bookmark_Folder_Set_Input>;
  pk_columns: Bookmark_Folder_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Bookmark_Folder_ManyArgs = {
  updates: Array<Bookmark_Folder_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_Bookmark_LinkArgs = {
  _inc?: InputMaybe<Bookmark_Link_Inc_Input>;
  _set?: InputMaybe<Bookmark_Link_Set_Input>;
  where: Bookmark_Link_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Bookmark_Link_By_PkArgs = {
  _inc?: InputMaybe<Bookmark_Link_Inc_Input>;
  _set?: InputMaybe<Bookmark_Link_Set_Input>;
  pk_columns: Bookmark_Link_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Bookmark_Link_ManyArgs = {
  updates: Array<Bookmark_Link_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_CapabilityArgs = {
  _set?: InputMaybe<Capability_Set_Input>;
  where: Capability_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Capability_By_PkArgs = {
  _set?: InputMaybe<Capability_Set_Input>;
  pk_columns: Capability_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Capability_EndpointArgs = {
  _set?: InputMaybe<Capability_Endpoint_Set_Input>;
  where: Capability_Endpoint_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Capability_Endpoint_By_PkArgs = {
  _set?: InputMaybe<Capability_Endpoint_Set_Input>;
  pk_columns: Capability_Endpoint_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Capability_Endpoint_ManyArgs = {
  updates: Array<Capability_Endpoint_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_Capability_ManyArgs = {
  updates: Array<Capability_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_Case_StudyArgs = {
  _set?: InputMaybe<Case_Study_Set_Input>;
  where: Case_Study_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Case_Study_By_PkArgs = {
  _set?: InputMaybe<Case_Study_Set_Input>;
  pk_columns: Case_Study_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Case_Study_CompanyArgs = {
  _set?: InputMaybe<Case_Study_Company_Set_Input>;
  where: Case_Study_Company_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Case_Study_Company_By_PkArgs = {
  _set?: InputMaybe<Case_Study_Company_Set_Input>;
  pk_columns: Case_Study_Company_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Case_Study_Company_ManyArgs = {
  updates: Array<Case_Study_Company_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_Case_Study_IndustryArgs = {
  _set?: InputMaybe<Case_Study_Industry_Set_Input>;
  where: Case_Study_Industry_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Case_Study_Industry_By_PkArgs = {
  _set?: InputMaybe<Case_Study_Industry_Set_Input>;
  pk_columns: Case_Study_Industry_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Case_Study_Industry_ManyArgs = {
  updates: Array<Case_Study_Industry_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_Case_Study_ManyArgs = {
  updates: Array<Case_Study_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_Case_Study_MarketArgs = {
  _set?: InputMaybe<Case_Study_Market_Set_Input>;
  where: Case_Study_Market_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Case_Study_Market_By_PkArgs = {
  _set?: InputMaybe<Case_Study_Market_Set_Input>;
  pk_columns: Case_Study_Market_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Case_Study_Market_ManyArgs = {
  updates: Array<Case_Study_Market_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_Case_Study_SkillArgs = {
  _set?: InputMaybe<Case_Study_Skill_Set_Input>;
  where: Case_Study_Skill_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Case_Study_Skill_By_PkArgs = {
  _set?: InputMaybe<Case_Study_Skill_Set_Input>;
  pk_columns: Case_Study_Skill_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Case_Study_Skill_ManyArgs = {
  updates: Array<Case_Study_Skill_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_Case_Study_TeamArgs = {
  _set?: InputMaybe<Case_Study_Team_Set_Input>;
  where: Case_Study_Team_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Case_Study_Team_By_PkArgs = {
  _set?: InputMaybe<Case_Study_Team_Set_Input>;
  pk_columns: Case_Study_Team_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Case_Study_Team_ManyArgs = {
  updates: Array<Case_Study_Team_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_Case_Study_UserArgs = {
  _set?: InputMaybe<Case_Study_User_Set_Input>;
  where: Case_Study_User_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Case_Study_User_By_PkArgs = {
  _set?: InputMaybe<Case_Study_User_Set_Input>;
  pk_columns: Case_Study_User_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Case_Study_User_ManyArgs = {
  updates: Array<Case_Study_User_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_CompanyArgs = {
  _set?: InputMaybe<Company_Set_Input>;
  where: Company_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Company_By_PkArgs = {
  _set?: InputMaybe<Company_Set_Input>;
  pk_columns: Company_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Company_ContactArgs = {
  _set?: InputMaybe<Company_Contact_Set_Input>;
  where: Company_Contact_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Company_Contact_By_PkArgs = {
  _set?: InputMaybe<Company_Contact_Set_Input>;
  pk_columns: Company_Contact_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Company_Contact_ManyArgs = {
  updates: Array<Company_Contact_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_Company_ManyArgs = {
  updates: Array<Company_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_Company_TeamArgs = {
  _set?: InputMaybe<Company_Team_Set_Input>;
  where: Company_Team_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Company_Team_By_PkArgs = {
  _set?: InputMaybe<Company_Team_Set_Input>;
  pk_columns: Company_Team_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Company_Team_ContributorArgs = {
  _set?: InputMaybe<Company_Team_Contributor_Set_Input>;
  where: Company_Team_Contributor_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Company_Team_Contributor_By_PkArgs = {
  _set?: InputMaybe<Company_Team_Contributor_Set_Input>;
  pk_columns: Company_Team_Contributor_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Company_Team_Contributor_ManyArgs = {
  updates: Array<Company_Team_Contributor_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_Company_Team_ManyArgs = {
  updates: Array<Company_Team_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_Contributor_TypeArgs = {
  _set?: InputMaybe<Contributor_Type_Set_Input>;
  where: Contributor_Type_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Contributor_Type_By_PkArgs = {
  _set?: InputMaybe<Contributor_Type_Set_Input>;
  pk_columns: Contributor_Type_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Contributor_Type_ManyArgs = {
  updates: Array<Contributor_Type_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_Current_User_MetaArgs = {
  _set?: InputMaybe<Current_User_Meta_Set_Input>;
  where: Current_User_Meta_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Current_User_Meta_ManyArgs = {
  updates: Array<Current_User_Meta_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_Custom_PayoutArgs = {
  _inc?: InputMaybe<Custom_Payout_Inc_Input>;
  _set?: InputMaybe<Custom_Payout_Set_Input>;
  where: Custom_Payout_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Custom_Payout_By_PkArgs = {
  _inc?: InputMaybe<Custom_Payout_Inc_Input>;
  _set?: InputMaybe<Custom_Payout_Set_Input>;
  pk_columns: Custom_Payout_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Custom_Payout_Line_ItemArgs = {
  _inc?: InputMaybe<Custom_Payout_Line_Item_Inc_Input>;
  _set?: InputMaybe<Custom_Payout_Line_Item_Set_Input>;
  where: Custom_Payout_Line_Item_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Custom_Payout_Line_Item_By_PkArgs = {
  _inc?: InputMaybe<Custom_Payout_Line_Item_Inc_Input>;
  _set?: InputMaybe<Custom_Payout_Line_Item_Set_Input>;
  pk_columns: Custom_Payout_Line_Item_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Custom_Payout_Line_Item_ManyArgs = {
  updates: Array<Custom_Payout_Line_Item_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_Custom_Payout_ManyArgs = {
  updates: Array<Custom_Payout_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_Custom_Project_DistributionArgs = {
  _set?: InputMaybe<Custom_Project_Distribution_Set_Input>;
  where: Custom_Project_Distribution_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Custom_Project_Distribution_By_PkArgs = {
  _set?: InputMaybe<Custom_Project_Distribution_Set_Input>;
  pk_columns: Custom_Project_Distribution_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Custom_Project_Distribution_ManyArgs = {
  updates: Array<Custom_Project_Distribution_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_Custom_Project_Payout_DistributionArgs = {
  _inc?: InputMaybe<Custom_Project_Payout_Distribution_Inc_Input>;
  _set?: InputMaybe<Custom_Project_Payout_Distribution_Set_Input>;
  where: Custom_Project_Payout_Distribution_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Custom_Project_Payout_Distribution_By_PkArgs = {
  _inc?: InputMaybe<Custom_Project_Payout_Distribution_Inc_Input>;
  _set?: InputMaybe<Custom_Project_Payout_Distribution_Set_Input>;
  pk_columns: Custom_Project_Payout_Distribution_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Custom_Project_Payout_Distribution_ManyArgs = {
  updates: Array<Custom_Project_Payout_Distribution_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_CustomerArgs = {
  _inc?: InputMaybe<Customer_Inc_Input>;
  _set?: InputMaybe<Customer_Set_Input>;
  where: Customer_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Customer_By_PkArgs = {
  _inc?: InputMaybe<Customer_Inc_Input>;
  _set?: InputMaybe<Customer_Set_Input>;
  pk_columns: Customer_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Customer_Closing_PartyArgs = {
  _inc?: InputMaybe<Customer_Closing_Party_Inc_Input>;
  _set?: InputMaybe<Customer_Closing_Party_Set_Input>;
  where: Customer_Closing_Party_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Customer_Closing_Party_By_PkArgs = {
  _inc?: InputMaybe<Customer_Closing_Party_Inc_Input>;
  _set?: InputMaybe<Customer_Closing_Party_Set_Input>;
  pk_columns: Customer_Closing_Party_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Customer_Closing_Party_ManyArgs = {
  updates: Array<Customer_Closing_Party_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_Customer_ManyArgs = {
  updates: Array<Customer_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_Customer_Originating_PartyArgs = {
  _inc?: InputMaybe<Customer_Originating_Party_Inc_Input>;
  _set?: InputMaybe<Customer_Originating_Party_Set_Input>;
  where: Customer_Originating_Party_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Customer_Originating_Party_By_PkArgs = {
  _inc?: InputMaybe<Customer_Originating_Party_Inc_Input>;
  _set?: InputMaybe<Customer_Originating_Party_Set_Input>;
  pk_columns: Customer_Originating_Party_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Customer_Originating_Party_ManyArgs = {
  updates: Array<Customer_Originating_Party_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_Customer_ReferrerArgs = {
  _inc?: InputMaybe<Customer_Referrer_Inc_Input>;
  _set?: InputMaybe<Customer_Referrer_Set_Input>;
  where: Customer_Referrer_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Customer_Referrer_By_PkArgs = {
  _inc?: InputMaybe<Customer_Referrer_Inc_Input>;
  _set?: InputMaybe<Customer_Referrer_Set_Input>;
  pk_columns: Customer_Referrer_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Customer_Referrer_ManyArgs = {
  updates: Array<Customer_Referrer_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_DocumentArgs = {
  _inc?: InputMaybe<Document_Inc_Input>;
  _set?: InputMaybe<Document_Set_Input>;
  where: Document_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Document_Associated_CompanyArgs = {
  _set?: InputMaybe<Document_Associated_Company_Set_Input>;
  where: Document_Associated_Company_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Document_Associated_Company_By_PkArgs = {
  _set?: InputMaybe<Document_Associated_Company_Set_Input>;
  pk_columns: Document_Associated_Company_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Document_Associated_Company_ManyArgs = {
  updates: Array<Document_Associated_Company_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_Document_Associated_UserArgs = {
  _set?: InputMaybe<Document_Associated_User_Set_Input>;
  where: Document_Associated_User_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Document_Associated_User_By_PkArgs = {
  _set?: InputMaybe<Document_Associated_User_Set_Input>;
  pk_columns: Document_Associated_User_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Document_Associated_User_ManyArgs = {
  updates: Array<Document_Associated_User_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_Document_By_PkArgs = {
  _inc?: InputMaybe<Document_Inc_Input>;
  _set?: InputMaybe<Document_Set_Input>;
  pk_columns: Document_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Document_Extra_FieldArgs = {
  _set?: InputMaybe<Document_Extra_Field_Set_Input>;
  where: Document_Extra_Field_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Document_Extra_Field_By_PkArgs = {
  _set?: InputMaybe<Document_Extra_Field_Set_Input>;
  pk_columns: Document_Extra_Field_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Document_Extra_Field_ManyArgs = {
  updates: Array<Document_Extra_Field_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_Document_Extra_Field_ValueArgs = {
  _set?: InputMaybe<Document_Extra_Field_Value_Set_Input>;
  where: Document_Extra_Field_Value_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Document_Extra_Field_Value_By_PkArgs = {
  _set?: InputMaybe<Document_Extra_Field_Value_Set_Input>;
  pk_columns: Document_Extra_Field_Value_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Document_Extra_Field_Value_ManyArgs = {
  updates: Array<Document_Extra_Field_Value_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_Document_ManyArgs = {
  updates: Array<Document_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_Document_TypeArgs = {
  _set?: InputMaybe<Document_Type_Set_Input>;
  where: Document_Type_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Document_Type_By_PkArgs = {
  _set?: InputMaybe<Document_Type_Set_Input>;
  pk_columns: Document_Type_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Document_Type_ManyArgs = {
  updates: Array<Document_Type_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_EndpointArgs = {
  _set?: InputMaybe<Endpoint_Set_Input>;
  where: Endpoint_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Endpoint_By_PkArgs = {
  _set?: InputMaybe<Endpoint_Set_Input>;
  pk_columns: Endpoint_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Endpoint_ManyArgs = {
  updates: Array<Endpoint_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_Fixed_Price_Invoice_Line_ItemArgs = {
  _inc?: InputMaybe<Fixed_Price_Invoice_Line_Item_Inc_Input>;
  _set?: InputMaybe<Fixed_Price_Invoice_Line_Item_Set_Input>;
  where: Fixed_Price_Invoice_Line_Item_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Fixed_Price_Invoice_Line_Item_By_PkArgs = {
  _inc?: InputMaybe<Fixed_Price_Invoice_Line_Item_Inc_Input>;
  _set?: InputMaybe<Fixed_Price_Invoice_Line_Item_Set_Input>;
  pk_columns: Fixed_Price_Invoice_Line_Item_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Fixed_Price_Invoice_Line_Item_ManyArgs = {
  updates: Array<Fixed_Price_Invoice_Line_Item_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_In_Market_Experience_LevelArgs = {
  _set?: InputMaybe<In_Market_Experience_Level_Set_Input>;
  where: In_Market_Experience_Level_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_In_Market_Experience_Level_By_PkArgs = {
  _set?: InputMaybe<In_Market_Experience_Level_Set_Input>;
  pk_columns: In_Market_Experience_Level_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_In_Market_Experience_Level_ManyArgs = {
  updates: Array<In_Market_Experience_Level_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_IndustryArgs = {
  _set?: InputMaybe<Industry_Set_Input>;
  where: Industry_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Industry_By_PkArgs = {
  _set?: InputMaybe<Industry_Set_Input>;
  pk_columns: Industry_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Industry_Experience_LevelArgs = {
  _set?: InputMaybe<Industry_Experience_Level_Set_Input>;
  where: Industry_Experience_Level_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Industry_Experience_Level_By_PkArgs = {
  _set?: InputMaybe<Industry_Experience_Level_Set_Input>;
  pk_columns: Industry_Experience_Level_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Industry_Experience_Level_ManyArgs = {
  updates: Array<Industry_Experience_Level_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_Industry_Google_GroupArgs = {
  _set?: InputMaybe<Industry_Google_Group_Set_Input>;
  where: Industry_Google_Group_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Industry_Google_Group_By_PkArgs = {
  _set?: InputMaybe<Industry_Google_Group_Set_Input>;
  pk_columns: Industry_Google_Group_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Industry_Google_Group_ManyArgs = {
  updates: Array<Industry_Google_Group_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_Industry_ManyArgs = {
  updates: Array<Industry_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_Industry_Slack_ChannelArgs = {
  _set?: InputMaybe<Industry_Slack_Channel_Set_Input>;
  where: Industry_Slack_Channel_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Industry_Slack_Channel_By_PkArgs = {
  _set?: InputMaybe<Industry_Slack_Channel_Set_Input>;
  pk_columns: Industry_Slack_Channel_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Industry_Slack_Channel_ManyArgs = {
  updates: Array<Industry_Slack_Channel_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_InvoiceArgs = {
  _inc?: InputMaybe<Invoice_Inc_Input>;
  _set?: InputMaybe<Invoice_Set_Input>;
  where: Invoice_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Invoice_By_PkArgs = {
  _inc?: InputMaybe<Invoice_Inc_Input>;
  _set?: InputMaybe<Invoice_Set_Input>;
  pk_columns: Invoice_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Invoice_DistributionArgs = {
  _set?: InputMaybe<Invoice_Distribution_Set_Input>;
  where: Invoice_Distribution_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Invoice_Distribution_By_PkArgs = {
  _set?: InputMaybe<Invoice_Distribution_Set_Input>;
  pk_columns: Invoice_Distribution_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Invoice_Distribution_ManyArgs = {
  updates: Array<Invoice_Distribution_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_Invoice_ManyArgs = {
  updates: Array<Invoice_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_Invoice_Service_TypeArgs = {
  _set?: InputMaybe<Invoice_Service_Type_Set_Input>;
  where: Invoice_Service_Type_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Invoice_Service_Type_By_PkArgs = {
  _set?: InputMaybe<Invoice_Service_Type_Set_Input>;
  pk_columns: Invoice_Service_Type_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Invoice_Service_Type_ManyArgs = {
  updates: Array<Invoice_Service_Type_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_Invoice_StatusArgs = {
  _inc?: InputMaybe<Invoice_Status_Inc_Input>;
  _set?: InputMaybe<Invoice_Status_Set_Input>;
  where: Invoice_Status_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Invoice_Status_By_PkArgs = {
  _inc?: InputMaybe<Invoice_Status_Inc_Input>;
  _set?: InputMaybe<Invoice_Status_Set_Input>;
  pk_columns: Invoice_Status_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Invoice_Status_ManyArgs = {
  updates: Array<Invoice_Status_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_Invoice_TermArgs = {
  _set?: InputMaybe<Invoice_Term_Set_Input>;
  where: Invoice_Term_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Invoice_Term_By_PkArgs = {
  _set?: InputMaybe<Invoice_Term_Set_Input>;
  pk_columns: Invoice_Term_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Invoice_Term_ManyArgs = {
  updates: Array<Invoice_Term_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_Language_LevelArgs = {
  _set?: InputMaybe<Language_Level_Set_Input>;
  where: Language_Level_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Language_Level_By_PkArgs = {
  _set?: InputMaybe<Language_Level_Set_Input>;
  pk_columns: Language_Level_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Language_Level_ManyArgs = {
  updates: Array<Language_Level_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_Late_Payment_PeriodArgs = {
  _set?: InputMaybe<Late_Payment_Period_Set_Input>;
  where: Late_Payment_Period_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Late_Payment_Period_By_PkArgs = {
  _set?: InputMaybe<Late_Payment_Period_Set_Input>;
  pk_columns: Late_Payment_Period_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Late_Payment_Period_ManyArgs = {
  updates: Array<Late_Payment_Period_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_No_Of_EmployeesArgs = {
  _set?: InputMaybe<No_Of_Employees_Set_Input>;
  where: No_Of_Employees_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_No_Of_Employees_By_PkArgs = {
  _set?: InputMaybe<No_Of_Employees_Set_Input>;
  pk_columns: No_Of_Employees_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_No_Of_Employees_ManyArgs = {
  updates: Array<No_Of_Employees_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_PartnerArgs = {
  _set?: InputMaybe<Partner_Set_Input>;
  where: Partner_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Partner_By_PkArgs = {
  _set?: InputMaybe<Partner_Set_Input>;
  pk_columns: Partner_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Partner_CategoryArgs = {
  _set?: InputMaybe<Partner_Category_Set_Input>;
  where: Partner_Category_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Partner_Category_By_PkArgs = {
  _set?: InputMaybe<Partner_Category_Set_Input>;
  pk_columns: Partner_Category_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Partner_Category_ManyArgs = {
  updates: Array<Partner_Category_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_Partner_Custom_FieldArgs = {
  _set?: InputMaybe<Partner_Custom_Field_Set_Input>;
  where: Partner_Custom_Field_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Partner_Custom_Field_By_PkArgs = {
  _set?: InputMaybe<Partner_Custom_Field_Set_Input>;
  pk_columns: Partner_Custom_Field_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Partner_Custom_Field_ManyArgs = {
  updates: Array<Partner_Custom_Field_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_Partner_Gallery_ImageArgs = {
  _set?: InputMaybe<Partner_Gallery_Image_Set_Input>;
  where: Partner_Gallery_Image_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Partner_Gallery_Image_By_PkArgs = {
  _set?: InputMaybe<Partner_Gallery_Image_Set_Input>;
  pk_columns: Partner_Gallery_Image_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Partner_Gallery_Image_ManyArgs = {
  updates: Array<Partner_Gallery_Image_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_Partner_ManyArgs = {
  updates: Array<Partner_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_Payout_DistributionArgs = {
  _inc?: InputMaybe<Payout_Distribution_Inc_Input>;
  _set?: InputMaybe<Payout_Distribution_Set_Input>;
  where: Payout_Distribution_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Payout_Distribution_By_PkArgs = {
  _inc?: InputMaybe<Payout_Distribution_Inc_Input>;
  _set?: InputMaybe<Payout_Distribution_Set_Input>;
  pk_columns: Payout_Distribution_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Payout_Distribution_ManyArgs = {
  updates: Array<Payout_Distribution_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_Product_Or_Service_TypeArgs = {
  _set?: InputMaybe<Product_Or_Service_Type_Set_Input>;
  where: Product_Or_Service_Type_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Product_Or_Service_Type_By_PkArgs = {
  _set?: InputMaybe<Product_Or_Service_Type_Set_Input>;
  pk_columns: Product_Or_Service_Type_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Product_Or_Service_Type_ManyArgs = {
  updates: Array<Product_Or_Service_Type_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_Public_User_MetaArgs = {
  _set?: InputMaybe<Public_User_Meta_Set_Input>;
  where: Public_User_Meta_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Public_User_Meta_ManyArgs = {
  updates: Array<Public_User_Meta_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_Recurring_IntervalArgs = {
  _set?: InputMaybe<Recurring_Interval_Set_Input>;
  where: Recurring_Interval_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Recurring_Interval_By_PkArgs = {
  _set?: InputMaybe<Recurring_Interval_Set_Input>;
  pk_columns: Recurring_Interval_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Recurring_Interval_ManyArgs = {
  updates: Array<Recurring_Interval_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_RouteArgs = {
  _inc?: InputMaybe<Route_Inc_Input>;
  _set?: InputMaybe<Route_Set_Input>;
  where: Route_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Route_By_PkArgs = {
  _inc?: InputMaybe<Route_Inc_Input>;
  _set?: InputMaybe<Route_Set_Input>;
  pk_columns: Route_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Route_EndpointArgs = {
  _set?: InputMaybe<Route_Endpoint_Set_Input>;
  where: Route_Endpoint_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Route_Endpoint_By_PkArgs = {
  _set?: InputMaybe<Route_Endpoint_Set_Input>;
  pk_columns: Route_Endpoint_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Route_Endpoint_ManyArgs = {
  updates: Array<Route_Endpoint_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_Route_GroupArgs = {
  _inc?: InputMaybe<Route_Group_Inc_Input>;
  _set?: InputMaybe<Route_Group_Set_Input>;
  where: Route_Group_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Route_Group_By_PkArgs = {
  _inc?: InputMaybe<Route_Group_Inc_Input>;
  _set?: InputMaybe<Route_Group_Set_Input>;
  pk_columns: Route_Group_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Route_Group_ManyArgs = {
  updates: Array<Route_Group_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_Route_ManyArgs = {
  updates: Array<Route_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_SkillArgs = {
  _set?: InputMaybe<Skill_Set_Input>;
  where: Skill_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Skill_By_PkArgs = {
  _set?: InputMaybe<Skill_Set_Input>;
  pk_columns: Skill_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Skill_CategoryArgs = {
  _set?: InputMaybe<Skill_Category_Set_Input>;
  where: Skill_Category_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Skill_Category_By_PkArgs = {
  _set?: InputMaybe<Skill_Category_Set_Input>;
  pk_columns: Skill_Category_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Skill_Category_ManyArgs = {
  updates: Array<Skill_Category_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_Skill_Google_GroupArgs = {
  _set?: InputMaybe<Skill_Google_Group_Set_Input>;
  where: Skill_Google_Group_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Skill_Google_Group_By_PkArgs = {
  _set?: InputMaybe<Skill_Google_Group_Set_Input>;
  pk_columns: Skill_Google_Group_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Skill_Google_Group_ManyArgs = {
  updates: Array<Skill_Google_Group_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_Skill_LevelArgs = {
  _set?: InputMaybe<Skill_Level_Set_Input>;
  where: Skill_Level_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Skill_Level_By_PkArgs = {
  _set?: InputMaybe<Skill_Level_Set_Input>;
  pk_columns: Skill_Level_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Skill_Level_ManyArgs = {
  updates: Array<Skill_Level_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_Skill_ManyArgs = {
  updates: Array<Skill_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_Skill_Skill_CategoriesArgs = {
  _set?: InputMaybe<Skill_Skill_Categories_Set_Input>;
  where: Skill_Skill_Categories_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Skill_Skill_Categories_By_PkArgs = {
  _set?: InputMaybe<Skill_Skill_Categories_Set_Input>;
  pk_columns: Skill_Skill_Categories_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Skill_Skill_Categories_ManyArgs = {
  updates: Array<Skill_Skill_Categories_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_Skill_Slack_ChannelArgs = {
  _set?: InputMaybe<Skill_Slack_Channel_Set_Input>;
  where: Skill_Slack_Channel_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Skill_Slack_Channel_By_PkArgs = {
  _set?: InputMaybe<Skill_Slack_Channel_Set_Input>;
  pk_columns: Skill_Slack_Channel_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Skill_Slack_Channel_ManyArgs = {
  updates: Array<Skill_Slack_Channel_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_Slack_AnswerArgs = {
  _set?: InputMaybe<Slack_Answer_Set_Input>;
  where: Slack_Answer_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Slack_Answer_By_PkArgs = {
  _set?: InputMaybe<Slack_Answer_Set_Input>;
  pk_columns: Slack_Answer_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Slack_Answer_ManyArgs = {
  updates: Array<Slack_Answer_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_Slack_Birthday_And_Anniversary_MessageArgs = {
  _set?: InputMaybe<Slack_Birthday_And_Anniversary_Message_Set_Input>;
  where: Slack_Birthday_And_Anniversary_Message_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Slack_Birthday_And_Anniversary_Message_By_PkArgs = {
  _set?: InputMaybe<Slack_Birthday_And_Anniversary_Message_Set_Input>;
  pk_columns: Slack_Birthday_And_Anniversary_Message_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Slack_Birthday_And_Anniversary_Message_ManyArgs = {
  updates: Array<Slack_Birthday_And_Anniversary_Message_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_Slack_MessageArgs = {
  _inc?: InputMaybe<Slack_Message_Inc_Input>;
  _set?: InputMaybe<Slack_Message_Set_Input>;
  where: Slack_Message_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Slack_Message_By_PkArgs = {
  _inc?: InputMaybe<Slack_Message_Inc_Input>;
  _set?: InputMaybe<Slack_Message_Set_Input>;
  pk_columns: Slack_Message_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Slack_Message_ManyArgs = {
  updates: Array<Slack_Message_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_Slack_Message_Trigger_LogArgs = {
  _set?: InputMaybe<Slack_Message_Trigger_Log_Set_Input>;
  where: Slack_Message_Trigger_Log_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Slack_Message_Trigger_Log_By_PkArgs = {
  _set?: InputMaybe<Slack_Message_Trigger_Log_Set_Input>;
  pk_columns: Slack_Message_Trigger_Log_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Slack_Message_Trigger_Log_ManyArgs = {
  updates: Array<Slack_Message_Trigger_Log_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_Slack_OutreachArgs = {
  _set?: InputMaybe<Slack_Outreach_Set_Input>;
  where: Slack_Outreach_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Slack_Outreach_By_PkArgs = {
  _set?: InputMaybe<Slack_Outreach_Set_Input>;
  pk_columns: Slack_Outreach_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Slack_Outreach_ManyArgs = {
  updates: Array<Slack_Outreach_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_TeamArgs = {
  _set?: InputMaybe<Team_Set_Input>;
  where: Team_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Team_By_PkArgs = {
  _set?: InputMaybe<Team_Set_Input>;
  pk_columns: Team_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Team_Google_GroupArgs = {
  _set?: InputMaybe<Team_Google_Group_Set_Input>;
  where: Team_Google_Group_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Team_Google_Group_By_PkArgs = {
  _set?: InputMaybe<Team_Google_Group_Set_Input>;
  pk_columns: Team_Google_Group_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Team_Google_Group_ManyArgs = {
  updates: Array<Team_Google_Group_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_Team_IndustryArgs = {
  _set?: InputMaybe<Team_Industry_Set_Input>;
  where: Team_Industry_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Team_Industry_By_PkArgs = {
  _set?: InputMaybe<Team_Industry_Set_Input>;
  pk_columns: Team_Industry_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Team_Industry_ManyArgs = {
  updates: Array<Team_Industry_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_Team_ManyArgs = {
  updates: Array<Team_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_Team_SkillArgs = {
  _set?: InputMaybe<Team_Skill_Set_Input>;
  where: Team_Skill_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Team_Skill_By_PkArgs = {
  _set?: InputMaybe<Team_Skill_Set_Input>;
  pk_columns: Team_Skill_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Team_Skill_ManyArgs = {
  updates: Array<Team_Skill_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_Team_Slack_ChannelArgs = {
  _set?: InputMaybe<Team_Slack_Channel_Set_Input>;
  where: Team_Slack_Channel_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Team_Slack_Channel_By_PkArgs = {
  _set?: InputMaybe<Team_Slack_Channel_Set_Input>;
  pk_columns: Team_Slack_Channel_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Team_Slack_Channel_ManyArgs = {
  updates: Array<Team_Slack_Channel_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_Time_And_Material_Invoice_Line_ItemArgs = {
  _inc?: InputMaybe<Time_And_Material_Invoice_Line_Item_Inc_Input>;
  _set?: InputMaybe<Time_And_Material_Invoice_Line_Item_Set_Input>;
  where: Time_And_Material_Invoice_Line_Item_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Time_And_Material_Invoice_Line_Item_By_PkArgs = {
  _inc?: InputMaybe<Time_And_Material_Invoice_Line_Item_Inc_Input>;
  _set?: InputMaybe<Time_And_Material_Invoice_Line_Item_Set_Input>;
  pk_columns: Time_And_Material_Invoice_Line_Item_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Time_And_Material_Invoice_Line_Item_ManyArgs = {
  updates: Array<Time_And_Material_Invoice_Line_Item_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_ToolArgs = {
  _inc?: InputMaybe<Tool_Inc_Input>;
  _set?: InputMaybe<Tool_Set_Input>;
  where: Tool_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Tool_By_PkArgs = {
  _inc?: InputMaybe<Tool_Inc_Input>;
  _set?: InputMaybe<Tool_Set_Input>;
  pk_columns: Tool_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Tool_ManyArgs = {
  updates: Array<Tool_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_TriggerArgs = {
  _set?: InputMaybe<Trigger_Set_Input>;
  where: Trigger_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Trigger_By_PkArgs = {
  _set?: InputMaybe<Trigger_Set_Input>;
  pk_columns: Trigger_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Trigger_ManyArgs = {
  updates: Array<Trigger_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_User_Basic_InformationArgs = {
  _set?: InputMaybe<User_Basic_Information_Set_Input>;
  where: User_Basic_Information_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_User_Basic_Information_By_PkArgs = {
  _set?: InputMaybe<User_Basic_Information_Set_Input>;
  pk_columns: User_Basic_Information_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_User_Basic_Information_ManyArgs = {
  updates: Array<User_Basic_Information_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_User_CompanyArgs = {
  _set?: InputMaybe<User_Company_Set_Input>;
  where: User_Company_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_User_Company_By_PkArgs = {
  _set?: InputMaybe<User_Company_Set_Input>;
  pk_columns: User_Company_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_User_Company_ManyArgs = {
  updates: Array<User_Company_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_User_Completed_Customer_SaleArgs = {
  _inc?: InputMaybe<User_Completed_Customer_Sale_Inc_Input>;
  _set?: InputMaybe<User_Completed_Customer_Sale_Set_Input>;
  where: User_Completed_Customer_Sale_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_User_Completed_Customer_Sale_By_PkArgs = {
  _inc?: InputMaybe<User_Completed_Customer_Sale_Inc_Input>;
  _set?: InputMaybe<User_Completed_Customer_Sale_Set_Input>;
  pk_columns: User_Completed_Customer_Sale_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_User_Completed_Customer_Sale_ManyArgs = {
  updates: Array<User_Completed_Customer_Sale_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_User_In_Market_ExperienceArgs = {
  _set?: InputMaybe<User_In_Market_Experience_Set_Input>;
  where: User_In_Market_Experience_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_User_In_Market_Experience_By_PkArgs = {
  _set?: InputMaybe<User_In_Market_Experience_Set_Input>;
  pk_columns: User_In_Market_Experience_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_User_In_Market_Experience_ManyArgs = {
  updates: Array<User_In_Market_Experience_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_User_Industry_ExperienceArgs = {
  _set?: InputMaybe<User_Industry_Experience_Set_Input>;
  where: User_Industry_Experience_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_User_Industry_Experience_By_PkArgs = {
  _set?: InputMaybe<User_Industry_Experience_Set_Input>;
  pk_columns: User_Industry_Experience_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_User_Industry_Experience_ManyArgs = {
  updates: Array<User_Industry_Experience_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_User_LanguageArgs = {
  _set?: InputMaybe<User_Language_Set_Input>;
  where: User_Language_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_User_Language_By_PkArgs = {
  _set?: InputMaybe<User_Language_Set_Input>;
  pk_columns: User_Language_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_User_Language_ManyArgs = {
  updates: Array<User_Language_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_User_MetaArgs = {
  _set?: InputMaybe<User_Meta_Set_Input>;
  where: User_Meta_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_User_Meta_By_PkArgs = {
  _set?: InputMaybe<User_Meta_Set_Input>;
  pk_columns: User_Meta_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_User_Meta_ManyArgs = {
  updates: Array<User_Meta_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_User_Meta_User_RoleArgs = {
  _set?: InputMaybe<User_Meta_User_Role_Set_Input>;
  where: User_Meta_User_Role_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_User_Meta_User_Role_By_PkArgs = {
  _set?: InputMaybe<User_Meta_User_Role_Set_Input>;
  pk_columns: User_Meta_User_Role_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_User_Meta_User_Role_ManyArgs = {
  updates: Array<User_Meta_User_Role_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_User_Professional_InformationArgs = {
  _inc?: InputMaybe<User_Professional_Information_Inc_Input>;
  _set?: InputMaybe<User_Professional_Information_Set_Input>;
  where: User_Professional_Information_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_User_Professional_Information_By_PkArgs = {
  _inc?: InputMaybe<User_Professional_Information_Inc_Input>;
  _set?: InputMaybe<User_Professional_Information_Set_Input>;
  pk_columns: User_Professional_Information_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_User_Professional_Information_ManyArgs = {
  updates: Array<User_Professional_Information_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_User_ProfileArgs = {
  _set?: InputMaybe<User_Profile_Set_Input>;
  where: User_Profile_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_User_Profile_By_PkArgs = {
  _set?: InputMaybe<User_Profile_Set_Input>;
  pk_columns: User_Profile_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_User_Profile_CompanyArgs = {
  _set?: InputMaybe<User_Profile_Company_Set_Input>;
  where: User_Profile_Company_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_User_Profile_Company_By_PkArgs = {
  _set?: InputMaybe<User_Profile_Company_Set_Input>;
  pk_columns: User_Profile_Company_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_User_Profile_Company_ManyArgs = {
  updates: Array<User_Profile_Company_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_User_Profile_IndustryArgs = {
  _set?: InputMaybe<User_Profile_Industry_Set_Input>;
  where: User_Profile_Industry_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_User_Profile_Industry_By_PkArgs = {
  _set?: InputMaybe<User_Profile_Industry_Set_Input>;
  pk_columns: User_Profile_Industry_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_User_Profile_Industry_ManyArgs = {
  updates: Array<User_Profile_Industry_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_User_Profile_ManyArgs = {
  updates: Array<User_Profile_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_User_Profile_SkillArgs = {
  _set?: InputMaybe<User_Profile_Skill_Set_Input>;
  where: User_Profile_Skill_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_User_Profile_Skill_By_PkArgs = {
  _set?: InputMaybe<User_Profile_Skill_Set_Input>;
  pk_columns: User_Profile_Skill_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_User_Profile_Skill_ManyArgs = {
  updates: Array<User_Profile_Skill_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_User_Profile_TabArgs = {
  _set?: InputMaybe<User_Profile_Tab_Set_Input>;
  where: User_Profile_Tab_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_User_Profile_Tab_By_PkArgs = {
  _set?: InputMaybe<User_Profile_Tab_Set_Input>;
  pk_columns: User_Profile_Tab_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_User_Profile_Tab_EndpointArgs = {
  _set?: InputMaybe<User_Profile_Tab_Endpoint_Set_Input>;
  where: User_Profile_Tab_Endpoint_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_User_Profile_Tab_Endpoint_By_PkArgs = {
  _set?: InputMaybe<User_Profile_Tab_Endpoint_Set_Input>;
  pk_columns: User_Profile_Tab_Endpoint_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_User_Profile_Tab_Endpoint_ManyArgs = {
  updates: Array<User_Profile_Tab_Endpoint_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_User_Profile_Tab_ManyArgs = {
  updates: Array<User_Profile_Tab_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_User_Profile_TeamArgs = {
  _set?: InputMaybe<User_Profile_Team_Set_Input>;
  where: User_Profile_Team_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_User_Profile_Team_By_PkArgs = {
  _set?: InputMaybe<User_Profile_Team_Set_Input>;
  pk_columns: User_Profile_Team_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_User_Profile_Team_ManyArgs = {
  updates: Array<User_Profile_Team_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_User_Profile_VisibilityArgs = {
  _set?: InputMaybe<User_Profile_Visibility_Set_Input>;
  where: User_Profile_Visibility_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_User_Profile_Visibility_By_PkArgs = {
  _set?: InputMaybe<User_Profile_Visibility_Set_Input>;
  pk_columns: User_Profile_Visibility_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_User_Profile_Visibility_ManyArgs = {
  updates: Array<User_Profile_Visibility_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_User_RoleArgs = {
  _set?: InputMaybe<User_Role_Set_Input>;
  where: User_Role_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_User_Role_By_PkArgs = {
  _set?: InputMaybe<User_Role_Set_Input>;
  pk_columns: User_Role_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_User_Role_CapabilityArgs = {
  _set?: InputMaybe<User_Role_Capability_Set_Input>;
  where: User_Role_Capability_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_User_Role_Capability_By_PkArgs = {
  _set?: InputMaybe<User_Role_Capability_Set_Input>;
  pk_columns: User_Role_Capability_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_User_Role_Capability_ManyArgs = {
  updates: Array<User_Role_Capability_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_User_Role_ManyArgs = {
  updates: Array<User_Role_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_User_Role_RouteArgs = {
  _set?: InputMaybe<User_Role_Route_Set_Input>;
  where: User_Role_Route_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_User_Role_Route_By_PkArgs = {
  _set?: InputMaybe<User_Role_Route_Set_Input>;
  pk_columns: User_Role_Route_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_User_Role_Route_ManyArgs = {
  updates: Array<User_Role_Route_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_User_Role_User_Profile_TabArgs = {
  _set?: InputMaybe<User_Role_User_Profile_Tab_Set_Input>;
  where: User_Role_User_Profile_Tab_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_User_Role_User_Profile_Tab_By_PkArgs = {
  _set?: InputMaybe<User_Role_User_Profile_Tab_Set_Input>;
  pk_columns: User_Role_User_Profile_Tab_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_User_Role_User_Profile_Tab_ManyArgs = {
  updates: Array<User_Role_User_Profile_Tab_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_User_SkillArgs = {
  _set?: InputMaybe<User_Skill_Set_Input>;
  where: User_Skill_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_User_Skill_By_PkArgs = {
  _set?: InputMaybe<User_Skill_Set_Input>;
  pk_columns: User_Skill_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_User_Skill_ManyArgs = {
  updates: Array<User_Skill_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_User_Work_ExperienceArgs = {
  _set?: InputMaybe<User_Work_Experience_Set_Input>;
  where: User_Work_Experience_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_User_Work_Experience_By_PkArgs = {
  _set?: InputMaybe<User_Work_Experience_Set_Input>;
  pk_columns: User_Work_Experience_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_User_Work_Experience_ManyArgs = {
  updates: Array<User_Work_Experience_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_WebhookArgs = {
  _set?: InputMaybe<Webhook_Set_Input>;
  where: Webhook_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Webhook_By_PkArgs = {
  _set?: InputMaybe<Webhook_Set_Input>;
  pk_columns: Webhook_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Webhook_ManyArgs = {
  updates: Array<Webhook_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_Webhook_TriggerArgs = {
  _set?: InputMaybe<Webhook_Trigger_Set_Input>;
  where: Webhook_Trigger_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Webhook_Trigger_By_PkArgs = {
  _set?: InputMaybe<Webhook_Trigger_Set_Input>;
  pk_columns: Webhook_Trigger_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Webhook_Trigger_ManyArgs = {
  updates: Array<Webhook_Trigger_Updates>;
};

/** columns and relationships of "no_of_employees" */
export type No_Of_Employees = {
  __typename?: 'no_of_employees';
  /** An array relationship */
  companies: Array<Company>;
  /** An aggregate relationship */
  companies_aggregate: Company_Aggregate;
  id: Scalars['uuid'];
  name: Scalars['String'];
  /** An array relationship */
  partners: Array<Partner>;
  /** An aggregate relationship */
  partners_aggregate: Partner_Aggregate;
};

/** columns and relationships of "no_of_employees" */
export type No_Of_EmployeesCompaniesArgs = {
  distinct_on?: InputMaybe<Array<Company_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Company_Order_By>>;
  where?: InputMaybe<Company_Bool_Exp>;
};

/** columns and relationships of "no_of_employees" */
export type No_Of_EmployeesCompanies_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Company_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Company_Order_By>>;
  where?: InputMaybe<Company_Bool_Exp>;
};

/** columns and relationships of "no_of_employees" */
export type No_Of_EmployeesPartnersArgs = {
  distinct_on?: InputMaybe<Array<Partner_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Partner_Order_By>>;
  where?: InputMaybe<Partner_Bool_Exp>;
};

/** columns and relationships of "no_of_employees" */
export type No_Of_EmployeesPartners_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Partner_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Partner_Order_By>>;
  where?: InputMaybe<Partner_Bool_Exp>;
};

/** aggregated selection of "no_of_employees" */
export type No_Of_Employees_Aggregate = {
  __typename?: 'no_of_employees_aggregate';
  aggregate?: Maybe<No_Of_Employees_Aggregate_Fields>;
  nodes: Array<No_Of_Employees>;
};

/** aggregate fields of "no_of_employees" */
export type No_Of_Employees_Aggregate_Fields = {
  __typename?: 'no_of_employees_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<No_Of_Employees_Max_Fields>;
  min?: Maybe<No_Of_Employees_Min_Fields>;
};

/** aggregate fields of "no_of_employees" */
export type No_Of_Employees_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<No_Of_Employees_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** Boolean expression to filter rows from the table "no_of_employees". All fields are combined with a logical 'AND'. */
export type No_Of_Employees_Bool_Exp = {
  _and?: InputMaybe<Array<No_Of_Employees_Bool_Exp>>;
  _not?: InputMaybe<No_Of_Employees_Bool_Exp>;
  _or?: InputMaybe<Array<No_Of_Employees_Bool_Exp>>;
  companies?: InputMaybe<Company_Bool_Exp>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  partners?: InputMaybe<Partner_Bool_Exp>;
};

/** unique or primary key constraints on table "no_of_employees" */
export enum No_Of_Employees_Constraint {
  /** unique or primary key constraint on columns "name" */
  NoOfEmployeesNameKey = 'no_of_employees_name_key',
  /** unique or primary key constraint on columns "id" */
  NoOfEmployeesPkey = 'no_of_employees_pkey',
}

/** input type for inserting data into table "no_of_employees" */
export type No_Of_Employees_Insert_Input = {
  companies?: InputMaybe<Company_Arr_Rel_Insert_Input>;
  id?: InputMaybe<Scalars['uuid']>;
  name?: InputMaybe<Scalars['String']>;
  partners?: InputMaybe<Partner_Arr_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type No_Of_Employees_Max_Fields = {
  __typename?: 'no_of_employees_max_fields';
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type No_Of_Employees_Min_Fields = {
  __typename?: 'no_of_employees_min_fields';
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "no_of_employees" */
export type No_Of_Employees_Mutation_Response = {
  __typename?: 'no_of_employees_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<No_Of_Employees>;
};

/** input type for inserting object relation for remote table "no_of_employees" */
export type No_Of_Employees_Obj_Rel_Insert_Input = {
  data: No_Of_Employees_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<No_Of_Employees_On_Conflict>;
};

/** on_conflict condition type for table "no_of_employees" */
export type No_Of_Employees_On_Conflict = {
  constraint: No_Of_Employees_Constraint;
  update_columns?: Array<No_Of_Employees_Update_Column>;
  where?: InputMaybe<No_Of_Employees_Bool_Exp>;
};

/** Ordering options when selecting data from "no_of_employees". */
export type No_Of_Employees_Order_By = {
  companies_aggregate?: InputMaybe<Company_Aggregate_Order_By>;
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  partners_aggregate?: InputMaybe<Partner_Aggregate_Order_By>;
};

/** primary key columns input for table: no_of_employees */
export type No_Of_Employees_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "no_of_employees" */
export enum No_Of_Employees_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
}

/** input type for updating data in table "no_of_employees" */
export type No_Of_Employees_Set_Input = {
  id?: InputMaybe<Scalars['uuid']>;
  name?: InputMaybe<Scalars['String']>;
};

/** Streaming cursor of the table "no_of_employees" */
export type No_Of_Employees_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: No_Of_Employees_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type No_Of_Employees_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['uuid']>;
  name?: InputMaybe<Scalars['String']>;
};

/** update columns of table "no_of_employees" */
export enum No_Of_Employees_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
}

export type No_Of_Employees_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<No_Of_Employees_Set_Input>;
  where: No_Of_Employees_Bool_Exp;
};

/** Boolean expression to compare columns of type "numeric". All fields are combined with logical 'AND'. */
export type Numeric_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['numeric']>;
  _gt?: InputMaybe<Scalars['numeric']>;
  _gte?: InputMaybe<Scalars['numeric']>;
  _in?: InputMaybe<Array<Scalars['numeric']>>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  _lt?: InputMaybe<Scalars['numeric']>;
  _lte?: InputMaybe<Scalars['numeric']>;
  _neq?: InputMaybe<Scalars['numeric']>;
  _nin?: InputMaybe<Array<Scalars['numeric']>>;
};

/** column ordering options */
export enum Order_By {
  /** in ascending order, nulls last */
  Asc = 'asc',
  /** in ascending order, nulls first */
  AscNullsFirst = 'asc_nulls_first',
  /** in ascending order, nulls last */
  AscNullsLast = 'asc_nulls_last',
  /** in descending order, nulls first */
  Desc = 'desc',
  /** in descending order, nulls first */
  DescNullsFirst = 'desc_nulls_first',
  /** in descending order, nulls last */
  DescNullsLast = 'desc_nulls_last',
}

/** columns and relationships of "partner" */
export type Partner = {
  __typename?: 'partner';
  about: Scalars['String'];
  addressLine1: Scalars['String'];
  addressLine2?: Maybe<Scalars['String']>;
  city: Scalars['String'];
  companyDBAName: Scalars['String'];
  companyLegalName: Scalars['String'];
  companyLogoKey: Scalars['String'];
  compensationModel?: Maybe<Scalars['String']>;
  country: Scalars['String'];
  created_at: Scalars['timestamptz'];
  id: Scalars['uuid'];
  internalChampionID?: Maybe<Scalars['uuid']>;
  /** An object relationship */
  internal_champion?: Maybe<User_Meta>;
  linkedinURL?: Maybe<Scalars['String']>;
  noOfEmployeesID?: Maybe<Scalars['uuid']>;
  /** An object relationship */
  no_of_employee?: Maybe<No_Of_Employees>;
  partnerCategoryID: Scalars['uuid'];
  /** An object relationship */
  partner_category: Partner_Category;
  /** An array relationship */
  partner_custom_fields: Array<Partner_Custom_Field>;
  /** An aggregate relationship */
  partner_custom_fields_aggregate: Partner_Custom_Field_Aggregate;
  /** An array relationship */
  partner_gallery_images: Array<Partner_Gallery_Image>;
  /** An aggregate relationship */
  partner_gallery_images_aggregate: Partner_Gallery_Image_Aggregate;
  primaryContactEmail?: Maybe<Scalars['String']>;
  primaryContactName?: Maybe<Scalars['String']>;
  primaryContactNumber?: Maybe<Scalars['String']>;
  referralTermsOverview?: Maybe<Scalars['String']>;
  secondaryContactEmail?: Maybe<Scalars['String']>;
  secondaryContactName?: Maybe<Scalars['String']>;
  secondaryContactNumber?: Maybe<Scalars['String']>;
  stateOrProvince: Scalars['String'];
  summary: Scalars['String'];
  twitterURL?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
  userMetaID: Scalars['uuid'];
  /** An object relationship */
  user_meta: User_Meta;
  website?: Maybe<Scalars['String']>;
  zipOrPostalCode: Scalars['String'];
};

/** columns and relationships of "partner" */
export type PartnerPartner_Custom_FieldsArgs = {
  distinct_on?: InputMaybe<Array<Partner_Custom_Field_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Partner_Custom_Field_Order_By>>;
  where?: InputMaybe<Partner_Custom_Field_Bool_Exp>;
};

/** columns and relationships of "partner" */
export type PartnerPartner_Custom_Fields_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Partner_Custom_Field_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Partner_Custom_Field_Order_By>>;
  where?: InputMaybe<Partner_Custom_Field_Bool_Exp>;
};

/** columns and relationships of "partner" */
export type PartnerPartner_Gallery_ImagesArgs = {
  distinct_on?: InputMaybe<Array<Partner_Gallery_Image_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Partner_Gallery_Image_Order_By>>;
  where?: InputMaybe<Partner_Gallery_Image_Bool_Exp>;
};

/** columns and relationships of "partner" */
export type PartnerPartner_Gallery_Images_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Partner_Gallery_Image_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Partner_Gallery_Image_Order_By>>;
  where?: InputMaybe<Partner_Gallery_Image_Bool_Exp>;
};

/** aggregated selection of "partner" */
export type Partner_Aggregate = {
  __typename?: 'partner_aggregate';
  aggregate?: Maybe<Partner_Aggregate_Fields>;
  nodes: Array<Partner>;
};

/** aggregate fields of "partner" */
export type Partner_Aggregate_Fields = {
  __typename?: 'partner_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<Partner_Max_Fields>;
  min?: Maybe<Partner_Min_Fields>;
};

/** aggregate fields of "partner" */
export type Partner_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Partner_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "partner" */
export type Partner_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Partner_Max_Order_By>;
  min?: InputMaybe<Partner_Min_Order_By>;
};

/** input type for inserting array relation for remote table "partner" */
export type Partner_Arr_Rel_Insert_Input = {
  data: Array<Partner_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Partner_On_Conflict>;
};

/** Boolean expression to filter rows from the table "partner". All fields are combined with a logical 'AND'. */
export type Partner_Bool_Exp = {
  _and?: InputMaybe<Array<Partner_Bool_Exp>>;
  _not?: InputMaybe<Partner_Bool_Exp>;
  _or?: InputMaybe<Array<Partner_Bool_Exp>>;
  about?: InputMaybe<String_Comparison_Exp>;
  addressLine1?: InputMaybe<String_Comparison_Exp>;
  addressLine2?: InputMaybe<String_Comparison_Exp>;
  city?: InputMaybe<String_Comparison_Exp>;
  companyDBAName?: InputMaybe<String_Comparison_Exp>;
  companyLegalName?: InputMaybe<String_Comparison_Exp>;
  companyLogoKey?: InputMaybe<String_Comparison_Exp>;
  compensationModel?: InputMaybe<String_Comparison_Exp>;
  country?: InputMaybe<String_Comparison_Exp>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  internalChampionID?: InputMaybe<Uuid_Comparison_Exp>;
  internal_champion?: InputMaybe<User_Meta_Bool_Exp>;
  linkedinURL?: InputMaybe<String_Comparison_Exp>;
  noOfEmployeesID?: InputMaybe<Uuid_Comparison_Exp>;
  no_of_employee?: InputMaybe<No_Of_Employees_Bool_Exp>;
  partnerCategoryID?: InputMaybe<Uuid_Comparison_Exp>;
  partner_category?: InputMaybe<Partner_Category_Bool_Exp>;
  partner_custom_fields?: InputMaybe<Partner_Custom_Field_Bool_Exp>;
  partner_gallery_images?: InputMaybe<Partner_Gallery_Image_Bool_Exp>;
  primaryContactEmail?: InputMaybe<String_Comparison_Exp>;
  primaryContactName?: InputMaybe<String_Comparison_Exp>;
  primaryContactNumber?: InputMaybe<String_Comparison_Exp>;
  referralTermsOverview?: InputMaybe<String_Comparison_Exp>;
  secondaryContactEmail?: InputMaybe<String_Comparison_Exp>;
  secondaryContactName?: InputMaybe<String_Comparison_Exp>;
  secondaryContactNumber?: InputMaybe<String_Comparison_Exp>;
  stateOrProvince?: InputMaybe<String_Comparison_Exp>;
  summary?: InputMaybe<String_Comparison_Exp>;
  twitterURL?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  userMetaID?: InputMaybe<Uuid_Comparison_Exp>;
  user_meta?: InputMaybe<User_Meta_Bool_Exp>;
  website?: InputMaybe<String_Comparison_Exp>;
  zipOrPostalCode?: InputMaybe<String_Comparison_Exp>;
};

/** columns and relationships of "partner_category" */
export type Partner_Category = {
  __typename?: 'partner_category';
  description?: Maybe<Scalars['String']>;
  id: Scalars['uuid'];
  name: Scalars['String'];
  /** An array relationship */
  partners: Array<Partner>;
  /** An aggregate relationship */
  partners_aggregate: Partner_Aggregate;
};

/** columns and relationships of "partner_category" */
export type Partner_CategoryPartnersArgs = {
  distinct_on?: InputMaybe<Array<Partner_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Partner_Order_By>>;
  where?: InputMaybe<Partner_Bool_Exp>;
};

/** columns and relationships of "partner_category" */
export type Partner_CategoryPartners_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Partner_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Partner_Order_By>>;
  where?: InputMaybe<Partner_Bool_Exp>;
};

/** aggregated selection of "partner_category" */
export type Partner_Category_Aggregate = {
  __typename?: 'partner_category_aggregate';
  aggregate?: Maybe<Partner_Category_Aggregate_Fields>;
  nodes: Array<Partner_Category>;
};

/** aggregate fields of "partner_category" */
export type Partner_Category_Aggregate_Fields = {
  __typename?: 'partner_category_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<Partner_Category_Max_Fields>;
  min?: Maybe<Partner_Category_Min_Fields>;
};

/** aggregate fields of "partner_category" */
export type Partner_Category_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Partner_Category_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** Boolean expression to filter rows from the table "partner_category". All fields are combined with a logical 'AND'. */
export type Partner_Category_Bool_Exp = {
  _and?: InputMaybe<Array<Partner_Category_Bool_Exp>>;
  _not?: InputMaybe<Partner_Category_Bool_Exp>;
  _or?: InputMaybe<Array<Partner_Category_Bool_Exp>>;
  description?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  partners?: InputMaybe<Partner_Bool_Exp>;
};

/** unique or primary key constraints on table "partner_category" */
export enum Partner_Category_Constraint {
  /** unique or primary key constraint on columns "id" */
  PartnerCategoryPkey = 'partner_category_pkey',
}

/** input type for inserting data into table "partner_category" */
export type Partner_Category_Insert_Input = {
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['uuid']>;
  name?: InputMaybe<Scalars['String']>;
  partners?: InputMaybe<Partner_Arr_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type Partner_Category_Max_Fields = {
  __typename?: 'partner_category_max_fields';
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type Partner_Category_Min_Fields = {
  __typename?: 'partner_category_min_fields';
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "partner_category" */
export type Partner_Category_Mutation_Response = {
  __typename?: 'partner_category_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Partner_Category>;
};

/** input type for inserting object relation for remote table "partner_category" */
export type Partner_Category_Obj_Rel_Insert_Input = {
  data: Partner_Category_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Partner_Category_On_Conflict>;
};

/** on_conflict condition type for table "partner_category" */
export type Partner_Category_On_Conflict = {
  constraint: Partner_Category_Constraint;
  update_columns?: Array<Partner_Category_Update_Column>;
  where?: InputMaybe<Partner_Category_Bool_Exp>;
};

/** Ordering options when selecting data from "partner_category". */
export type Partner_Category_Order_By = {
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  partners_aggregate?: InputMaybe<Partner_Aggregate_Order_By>;
};

/** primary key columns input for table: partner_category */
export type Partner_Category_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "partner_category" */
export enum Partner_Category_Select_Column {
  /** column name */
  Description = 'description',
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
}

/** input type for updating data in table "partner_category" */
export type Partner_Category_Set_Input = {
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['uuid']>;
  name?: InputMaybe<Scalars['String']>;
};

/** Streaming cursor of the table "partner_category" */
export type Partner_Category_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Partner_Category_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Partner_Category_Stream_Cursor_Value_Input = {
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['uuid']>;
  name?: InputMaybe<Scalars['String']>;
};

/** update columns of table "partner_category" */
export enum Partner_Category_Update_Column {
  /** column name */
  Description = 'description',
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
}

export type Partner_Category_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Partner_Category_Set_Input>;
  where: Partner_Category_Bool_Exp;
};

/** unique or primary key constraints on table "partner" */
export enum Partner_Constraint {
  /** unique or primary key constraint on columns "id" */
  PartnerPkey = 'partner_pkey',
  /** unique or primary key constraint on columns "userMetaID" */
  PartnerUserMetaIdKey = 'partner_userMetaID_key',
  /** unique or primary key constraint on columns "website" */
  PartnerWebsiteKey = 'partner_website_key',
}

/** columns and relationships of "partner_custom_field" */
export type Partner_Custom_Field = {
  __typename?: 'partner_custom_field';
  fieldData: Scalars['String'];
  fieldName: Scalars['String'];
  id: Scalars['uuid'];
  /** An object relationship */
  partner: Partner;
  partnerID: Scalars['uuid'];
};

/** aggregated selection of "partner_custom_field" */
export type Partner_Custom_Field_Aggregate = {
  __typename?: 'partner_custom_field_aggregate';
  aggregate?: Maybe<Partner_Custom_Field_Aggregate_Fields>;
  nodes: Array<Partner_Custom_Field>;
};

/** aggregate fields of "partner_custom_field" */
export type Partner_Custom_Field_Aggregate_Fields = {
  __typename?: 'partner_custom_field_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<Partner_Custom_Field_Max_Fields>;
  min?: Maybe<Partner_Custom_Field_Min_Fields>;
};

/** aggregate fields of "partner_custom_field" */
export type Partner_Custom_Field_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Partner_Custom_Field_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "partner_custom_field" */
export type Partner_Custom_Field_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Partner_Custom_Field_Max_Order_By>;
  min?: InputMaybe<Partner_Custom_Field_Min_Order_By>;
};

/** input type for inserting array relation for remote table "partner_custom_field" */
export type Partner_Custom_Field_Arr_Rel_Insert_Input = {
  data: Array<Partner_Custom_Field_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Partner_Custom_Field_On_Conflict>;
};

/** Boolean expression to filter rows from the table "partner_custom_field". All fields are combined with a logical 'AND'. */
export type Partner_Custom_Field_Bool_Exp = {
  _and?: InputMaybe<Array<Partner_Custom_Field_Bool_Exp>>;
  _not?: InputMaybe<Partner_Custom_Field_Bool_Exp>;
  _or?: InputMaybe<Array<Partner_Custom_Field_Bool_Exp>>;
  fieldData?: InputMaybe<String_Comparison_Exp>;
  fieldName?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  partner?: InputMaybe<Partner_Bool_Exp>;
  partnerID?: InputMaybe<Uuid_Comparison_Exp>;
};

/** unique or primary key constraints on table "partner_custom_field" */
export enum Partner_Custom_Field_Constraint {
  /** unique or primary key constraint on columns "id" */
  PartnerCustomFieldPkey = 'partner_custom_field_pkey',
}

/** input type for inserting data into table "partner_custom_field" */
export type Partner_Custom_Field_Insert_Input = {
  fieldData?: InputMaybe<Scalars['String']>;
  fieldName?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['uuid']>;
  partner?: InputMaybe<Partner_Obj_Rel_Insert_Input>;
  partnerID?: InputMaybe<Scalars['uuid']>;
};

/** aggregate max on columns */
export type Partner_Custom_Field_Max_Fields = {
  __typename?: 'partner_custom_field_max_fields';
  fieldData?: Maybe<Scalars['String']>;
  fieldName?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  partnerID?: Maybe<Scalars['uuid']>;
};

/** order by max() on columns of table "partner_custom_field" */
export type Partner_Custom_Field_Max_Order_By = {
  fieldData?: InputMaybe<Order_By>;
  fieldName?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  partnerID?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Partner_Custom_Field_Min_Fields = {
  __typename?: 'partner_custom_field_min_fields';
  fieldData?: Maybe<Scalars['String']>;
  fieldName?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  partnerID?: Maybe<Scalars['uuid']>;
};

/** order by min() on columns of table "partner_custom_field" */
export type Partner_Custom_Field_Min_Order_By = {
  fieldData?: InputMaybe<Order_By>;
  fieldName?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  partnerID?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "partner_custom_field" */
export type Partner_Custom_Field_Mutation_Response = {
  __typename?: 'partner_custom_field_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Partner_Custom_Field>;
};

/** on_conflict condition type for table "partner_custom_field" */
export type Partner_Custom_Field_On_Conflict = {
  constraint: Partner_Custom_Field_Constraint;
  update_columns?: Array<Partner_Custom_Field_Update_Column>;
  where?: InputMaybe<Partner_Custom_Field_Bool_Exp>;
};

/** Ordering options when selecting data from "partner_custom_field". */
export type Partner_Custom_Field_Order_By = {
  fieldData?: InputMaybe<Order_By>;
  fieldName?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  partner?: InputMaybe<Partner_Order_By>;
  partnerID?: InputMaybe<Order_By>;
};

/** primary key columns input for table: partner_custom_field */
export type Partner_Custom_Field_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "partner_custom_field" */
export enum Partner_Custom_Field_Select_Column {
  /** column name */
  FieldData = 'fieldData',
  /** column name */
  FieldName = 'fieldName',
  /** column name */
  Id = 'id',
  /** column name */
  PartnerId = 'partnerID',
}

/** input type for updating data in table "partner_custom_field" */
export type Partner_Custom_Field_Set_Input = {
  fieldData?: InputMaybe<Scalars['String']>;
  fieldName?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['uuid']>;
  partnerID?: InputMaybe<Scalars['uuid']>;
};

/** Streaming cursor of the table "partner_custom_field" */
export type Partner_Custom_Field_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Partner_Custom_Field_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Partner_Custom_Field_Stream_Cursor_Value_Input = {
  fieldData?: InputMaybe<Scalars['String']>;
  fieldName?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['uuid']>;
  partnerID?: InputMaybe<Scalars['uuid']>;
};

/** update columns of table "partner_custom_field" */
export enum Partner_Custom_Field_Update_Column {
  /** column name */
  FieldData = 'fieldData',
  /** column name */
  FieldName = 'fieldName',
  /** column name */
  Id = 'id',
  /** column name */
  PartnerId = 'partnerID',
}

export type Partner_Custom_Field_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Partner_Custom_Field_Set_Input>;
  where: Partner_Custom_Field_Bool_Exp;
};

/** columns and relationships of "partner_gallery_image" */
export type Partner_Gallery_Image = {
  __typename?: 'partner_gallery_image';
  id: Scalars['uuid'];
  imageKey: Scalars['String'];
  /** An object relationship */
  partner: Partner;
  partnerID: Scalars['uuid'];
};

/** aggregated selection of "partner_gallery_image" */
export type Partner_Gallery_Image_Aggregate = {
  __typename?: 'partner_gallery_image_aggregate';
  aggregate?: Maybe<Partner_Gallery_Image_Aggregate_Fields>;
  nodes: Array<Partner_Gallery_Image>;
};

/** aggregate fields of "partner_gallery_image" */
export type Partner_Gallery_Image_Aggregate_Fields = {
  __typename?: 'partner_gallery_image_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<Partner_Gallery_Image_Max_Fields>;
  min?: Maybe<Partner_Gallery_Image_Min_Fields>;
};

/** aggregate fields of "partner_gallery_image" */
export type Partner_Gallery_Image_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Partner_Gallery_Image_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "partner_gallery_image" */
export type Partner_Gallery_Image_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Partner_Gallery_Image_Max_Order_By>;
  min?: InputMaybe<Partner_Gallery_Image_Min_Order_By>;
};

/** input type for inserting array relation for remote table "partner_gallery_image" */
export type Partner_Gallery_Image_Arr_Rel_Insert_Input = {
  data: Array<Partner_Gallery_Image_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Partner_Gallery_Image_On_Conflict>;
};

/** Boolean expression to filter rows from the table "partner_gallery_image". All fields are combined with a logical 'AND'. */
export type Partner_Gallery_Image_Bool_Exp = {
  _and?: InputMaybe<Array<Partner_Gallery_Image_Bool_Exp>>;
  _not?: InputMaybe<Partner_Gallery_Image_Bool_Exp>;
  _or?: InputMaybe<Array<Partner_Gallery_Image_Bool_Exp>>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  imageKey?: InputMaybe<String_Comparison_Exp>;
  partner?: InputMaybe<Partner_Bool_Exp>;
  partnerID?: InputMaybe<Uuid_Comparison_Exp>;
};

/** unique or primary key constraints on table "partner_gallery_image" */
export enum Partner_Gallery_Image_Constraint {
  /** unique or primary key constraint on columns "id" */
  PartnerGalleryImagePkey = 'partner_gallery_image_pkey',
}

/** input type for inserting data into table "partner_gallery_image" */
export type Partner_Gallery_Image_Insert_Input = {
  id?: InputMaybe<Scalars['uuid']>;
  imageKey?: InputMaybe<Scalars['String']>;
  partner?: InputMaybe<Partner_Obj_Rel_Insert_Input>;
  partnerID?: InputMaybe<Scalars['uuid']>;
};

/** aggregate max on columns */
export type Partner_Gallery_Image_Max_Fields = {
  __typename?: 'partner_gallery_image_max_fields';
  id?: Maybe<Scalars['uuid']>;
  imageKey?: Maybe<Scalars['String']>;
  partnerID?: Maybe<Scalars['uuid']>;
};

/** order by max() on columns of table "partner_gallery_image" */
export type Partner_Gallery_Image_Max_Order_By = {
  id?: InputMaybe<Order_By>;
  imageKey?: InputMaybe<Order_By>;
  partnerID?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Partner_Gallery_Image_Min_Fields = {
  __typename?: 'partner_gallery_image_min_fields';
  id?: Maybe<Scalars['uuid']>;
  imageKey?: Maybe<Scalars['String']>;
  partnerID?: Maybe<Scalars['uuid']>;
};

/** order by min() on columns of table "partner_gallery_image" */
export type Partner_Gallery_Image_Min_Order_By = {
  id?: InputMaybe<Order_By>;
  imageKey?: InputMaybe<Order_By>;
  partnerID?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "partner_gallery_image" */
export type Partner_Gallery_Image_Mutation_Response = {
  __typename?: 'partner_gallery_image_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Partner_Gallery_Image>;
};

/** on_conflict condition type for table "partner_gallery_image" */
export type Partner_Gallery_Image_On_Conflict = {
  constraint: Partner_Gallery_Image_Constraint;
  update_columns?: Array<Partner_Gallery_Image_Update_Column>;
  where?: InputMaybe<Partner_Gallery_Image_Bool_Exp>;
};

/** Ordering options when selecting data from "partner_gallery_image". */
export type Partner_Gallery_Image_Order_By = {
  id?: InputMaybe<Order_By>;
  imageKey?: InputMaybe<Order_By>;
  partner?: InputMaybe<Partner_Order_By>;
  partnerID?: InputMaybe<Order_By>;
};

/** primary key columns input for table: partner_gallery_image */
export type Partner_Gallery_Image_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "partner_gallery_image" */
export enum Partner_Gallery_Image_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  ImageKey = 'imageKey',
  /** column name */
  PartnerId = 'partnerID',
}

/** input type for updating data in table "partner_gallery_image" */
export type Partner_Gallery_Image_Set_Input = {
  id?: InputMaybe<Scalars['uuid']>;
  imageKey?: InputMaybe<Scalars['String']>;
  partnerID?: InputMaybe<Scalars['uuid']>;
};

/** Streaming cursor of the table "partner_gallery_image" */
export type Partner_Gallery_Image_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Partner_Gallery_Image_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Partner_Gallery_Image_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['uuid']>;
  imageKey?: InputMaybe<Scalars['String']>;
  partnerID?: InputMaybe<Scalars['uuid']>;
};

/** update columns of table "partner_gallery_image" */
export enum Partner_Gallery_Image_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  ImageKey = 'imageKey',
  /** column name */
  PartnerId = 'partnerID',
}

export type Partner_Gallery_Image_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Partner_Gallery_Image_Set_Input>;
  where: Partner_Gallery_Image_Bool_Exp;
};

/** input type for inserting data into table "partner" */
export type Partner_Insert_Input = {
  about?: InputMaybe<Scalars['String']>;
  addressLine1?: InputMaybe<Scalars['String']>;
  addressLine2?: InputMaybe<Scalars['String']>;
  city?: InputMaybe<Scalars['String']>;
  companyDBAName?: InputMaybe<Scalars['String']>;
  companyLegalName?: InputMaybe<Scalars['String']>;
  companyLogoKey?: InputMaybe<Scalars['String']>;
  compensationModel?: InputMaybe<Scalars['String']>;
  country?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['uuid']>;
  internalChampionID?: InputMaybe<Scalars['uuid']>;
  internal_champion?: InputMaybe<User_Meta_Obj_Rel_Insert_Input>;
  linkedinURL?: InputMaybe<Scalars['String']>;
  noOfEmployeesID?: InputMaybe<Scalars['uuid']>;
  no_of_employee?: InputMaybe<No_Of_Employees_Obj_Rel_Insert_Input>;
  partnerCategoryID?: InputMaybe<Scalars['uuid']>;
  partner_category?: InputMaybe<Partner_Category_Obj_Rel_Insert_Input>;
  partner_custom_fields?: InputMaybe<Partner_Custom_Field_Arr_Rel_Insert_Input>;
  partner_gallery_images?: InputMaybe<Partner_Gallery_Image_Arr_Rel_Insert_Input>;
  primaryContactEmail?: InputMaybe<Scalars['String']>;
  primaryContactName?: InputMaybe<Scalars['String']>;
  primaryContactNumber?: InputMaybe<Scalars['String']>;
  referralTermsOverview?: InputMaybe<Scalars['String']>;
  secondaryContactEmail?: InputMaybe<Scalars['String']>;
  secondaryContactName?: InputMaybe<Scalars['String']>;
  secondaryContactNumber?: InputMaybe<Scalars['String']>;
  stateOrProvince?: InputMaybe<Scalars['String']>;
  summary?: InputMaybe<Scalars['String']>;
  twitterURL?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  userMetaID?: InputMaybe<Scalars['uuid']>;
  user_meta?: InputMaybe<User_Meta_Obj_Rel_Insert_Input>;
  website?: InputMaybe<Scalars['String']>;
  zipOrPostalCode?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Partner_Max_Fields = {
  __typename?: 'partner_max_fields';
  about?: Maybe<Scalars['String']>;
  addressLine1?: Maybe<Scalars['String']>;
  addressLine2?: Maybe<Scalars['String']>;
  city?: Maybe<Scalars['String']>;
  companyDBAName?: Maybe<Scalars['String']>;
  companyLegalName?: Maybe<Scalars['String']>;
  companyLogoKey?: Maybe<Scalars['String']>;
  compensationModel?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  internalChampionID?: Maybe<Scalars['uuid']>;
  linkedinURL?: Maybe<Scalars['String']>;
  noOfEmployeesID?: Maybe<Scalars['uuid']>;
  partnerCategoryID?: Maybe<Scalars['uuid']>;
  primaryContactEmail?: Maybe<Scalars['String']>;
  primaryContactName?: Maybe<Scalars['String']>;
  primaryContactNumber?: Maybe<Scalars['String']>;
  referralTermsOverview?: Maybe<Scalars['String']>;
  secondaryContactEmail?: Maybe<Scalars['String']>;
  secondaryContactName?: Maybe<Scalars['String']>;
  secondaryContactNumber?: Maybe<Scalars['String']>;
  stateOrProvince?: Maybe<Scalars['String']>;
  summary?: Maybe<Scalars['String']>;
  twitterURL?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  userMetaID?: Maybe<Scalars['uuid']>;
  website?: Maybe<Scalars['String']>;
  zipOrPostalCode?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "partner" */
export type Partner_Max_Order_By = {
  about?: InputMaybe<Order_By>;
  addressLine1?: InputMaybe<Order_By>;
  addressLine2?: InputMaybe<Order_By>;
  city?: InputMaybe<Order_By>;
  companyDBAName?: InputMaybe<Order_By>;
  companyLegalName?: InputMaybe<Order_By>;
  companyLogoKey?: InputMaybe<Order_By>;
  compensationModel?: InputMaybe<Order_By>;
  country?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  internalChampionID?: InputMaybe<Order_By>;
  linkedinURL?: InputMaybe<Order_By>;
  noOfEmployeesID?: InputMaybe<Order_By>;
  partnerCategoryID?: InputMaybe<Order_By>;
  primaryContactEmail?: InputMaybe<Order_By>;
  primaryContactName?: InputMaybe<Order_By>;
  primaryContactNumber?: InputMaybe<Order_By>;
  referralTermsOverview?: InputMaybe<Order_By>;
  secondaryContactEmail?: InputMaybe<Order_By>;
  secondaryContactName?: InputMaybe<Order_By>;
  secondaryContactNumber?: InputMaybe<Order_By>;
  stateOrProvince?: InputMaybe<Order_By>;
  summary?: InputMaybe<Order_By>;
  twitterURL?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  userMetaID?: InputMaybe<Order_By>;
  website?: InputMaybe<Order_By>;
  zipOrPostalCode?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Partner_Min_Fields = {
  __typename?: 'partner_min_fields';
  about?: Maybe<Scalars['String']>;
  addressLine1?: Maybe<Scalars['String']>;
  addressLine2?: Maybe<Scalars['String']>;
  city?: Maybe<Scalars['String']>;
  companyDBAName?: Maybe<Scalars['String']>;
  companyLegalName?: Maybe<Scalars['String']>;
  companyLogoKey?: Maybe<Scalars['String']>;
  compensationModel?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  internalChampionID?: Maybe<Scalars['uuid']>;
  linkedinURL?: Maybe<Scalars['String']>;
  noOfEmployeesID?: Maybe<Scalars['uuid']>;
  partnerCategoryID?: Maybe<Scalars['uuid']>;
  primaryContactEmail?: Maybe<Scalars['String']>;
  primaryContactName?: Maybe<Scalars['String']>;
  primaryContactNumber?: Maybe<Scalars['String']>;
  referralTermsOverview?: Maybe<Scalars['String']>;
  secondaryContactEmail?: Maybe<Scalars['String']>;
  secondaryContactName?: Maybe<Scalars['String']>;
  secondaryContactNumber?: Maybe<Scalars['String']>;
  stateOrProvince?: Maybe<Scalars['String']>;
  summary?: Maybe<Scalars['String']>;
  twitterURL?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  userMetaID?: Maybe<Scalars['uuid']>;
  website?: Maybe<Scalars['String']>;
  zipOrPostalCode?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "partner" */
export type Partner_Min_Order_By = {
  about?: InputMaybe<Order_By>;
  addressLine1?: InputMaybe<Order_By>;
  addressLine2?: InputMaybe<Order_By>;
  city?: InputMaybe<Order_By>;
  companyDBAName?: InputMaybe<Order_By>;
  companyLegalName?: InputMaybe<Order_By>;
  companyLogoKey?: InputMaybe<Order_By>;
  compensationModel?: InputMaybe<Order_By>;
  country?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  internalChampionID?: InputMaybe<Order_By>;
  linkedinURL?: InputMaybe<Order_By>;
  noOfEmployeesID?: InputMaybe<Order_By>;
  partnerCategoryID?: InputMaybe<Order_By>;
  primaryContactEmail?: InputMaybe<Order_By>;
  primaryContactName?: InputMaybe<Order_By>;
  primaryContactNumber?: InputMaybe<Order_By>;
  referralTermsOverview?: InputMaybe<Order_By>;
  secondaryContactEmail?: InputMaybe<Order_By>;
  secondaryContactName?: InputMaybe<Order_By>;
  secondaryContactNumber?: InputMaybe<Order_By>;
  stateOrProvince?: InputMaybe<Order_By>;
  summary?: InputMaybe<Order_By>;
  twitterURL?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  userMetaID?: InputMaybe<Order_By>;
  website?: InputMaybe<Order_By>;
  zipOrPostalCode?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "partner" */
export type Partner_Mutation_Response = {
  __typename?: 'partner_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Partner>;
};

/** input type for inserting object relation for remote table "partner" */
export type Partner_Obj_Rel_Insert_Input = {
  data: Partner_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Partner_On_Conflict>;
};

/** on_conflict condition type for table "partner" */
export type Partner_On_Conflict = {
  constraint: Partner_Constraint;
  update_columns?: Array<Partner_Update_Column>;
  where?: InputMaybe<Partner_Bool_Exp>;
};

/** Ordering options when selecting data from "partner". */
export type Partner_Order_By = {
  about?: InputMaybe<Order_By>;
  addressLine1?: InputMaybe<Order_By>;
  addressLine2?: InputMaybe<Order_By>;
  city?: InputMaybe<Order_By>;
  companyDBAName?: InputMaybe<Order_By>;
  companyLegalName?: InputMaybe<Order_By>;
  companyLogoKey?: InputMaybe<Order_By>;
  compensationModel?: InputMaybe<Order_By>;
  country?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  internalChampionID?: InputMaybe<Order_By>;
  internal_champion?: InputMaybe<User_Meta_Order_By>;
  linkedinURL?: InputMaybe<Order_By>;
  noOfEmployeesID?: InputMaybe<Order_By>;
  no_of_employee?: InputMaybe<No_Of_Employees_Order_By>;
  partnerCategoryID?: InputMaybe<Order_By>;
  partner_category?: InputMaybe<Partner_Category_Order_By>;
  partner_custom_fields_aggregate?: InputMaybe<Partner_Custom_Field_Aggregate_Order_By>;
  partner_gallery_images_aggregate?: InputMaybe<Partner_Gallery_Image_Aggregate_Order_By>;
  primaryContactEmail?: InputMaybe<Order_By>;
  primaryContactName?: InputMaybe<Order_By>;
  primaryContactNumber?: InputMaybe<Order_By>;
  referralTermsOverview?: InputMaybe<Order_By>;
  secondaryContactEmail?: InputMaybe<Order_By>;
  secondaryContactName?: InputMaybe<Order_By>;
  secondaryContactNumber?: InputMaybe<Order_By>;
  stateOrProvince?: InputMaybe<Order_By>;
  summary?: InputMaybe<Order_By>;
  twitterURL?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  userMetaID?: InputMaybe<Order_By>;
  user_meta?: InputMaybe<User_Meta_Order_By>;
  website?: InputMaybe<Order_By>;
  zipOrPostalCode?: InputMaybe<Order_By>;
};

/** primary key columns input for table: partner */
export type Partner_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "partner" */
export enum Partner_Select_Column {
  /** column name */
  About = 'about',
  /** column name */
  AddressLine1 = 'addressLine1',
  /** column name */
  AddressLine2 = 'addressLine2',
  /** column name */
  City = 'city',
  /** column name */
  CompanyDbaName = 'companyDBAName',
  /** column name */
  CompanyLegalName = 'companyLegalName',
  /** column name */
  CompanyLogoKey = 'companyLogoKey',
  /** column name */
  CompensationModel = 'compensationModel',
  /** column name */
  Country = 'country',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  InternalChampionId = 'internalChampionID',
  /** column name */
  LinkedinUrl = 'linkedinURL',
  /** column name */
  NoOfEmployeesId = 'noOfEmployeesID',
  /** column name */
  PartnerCategoryId = 'partnerCategoryID',
  /** column name */
  PrimaryContactEmail = 'primaryContactEmail',
  /** column name */
  PrimaryContactName = 'primaryContactName',
  /** column name */
  PrimaryContactNumber = 'primaryContactNumber',
  /** column name */
  ReferralTermsOverview = 'referralTermsOverview',
  /** column name */
  SecondaryContactEmail = 'secondaryContactEmail',
  /** column name */
  SecondaryContactName = 'secondaryContactName',
  /** column name */
  SecondaryContactNumber = 'secondaryContactNumber',
  /** column name */
  StateOrProvince = 'stateOrProvince',
  /** column name */
  Summary = 'summary',
  /** column name */
  TwitterUrl = 'twitterURL',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserMetaId = 'userMetaID',
  /** column name */
  Website = 'website',
  /** column name */
  ZipOrPostalCode = 'zipOrPostalCode',
}

/** input type for updating data in table "partner" */
export type Partner_Set_Input = {
  about?: InputMaybe<Scalars['String']>;
  addressLine1?: InputMaybe<Scalars['String']>;
  addressLine2?: InputMaybe<Scalars['String']>;
  city?: InputMaybe<Scalars['String']>;
  companyDBAName?: InputMaybe<Scalars['String']>;
  companyLegalName?: InputMaybe<Scalars['String']>;
  companyLogoKey?: InputMaybe<Scalars['String']>;
  compensationModel?: InputMaybe<Scalars['String']>;
  country?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['uuid']>;
  internalChampionID?: InputMaybe<Scalars['uuid']>;
  linkedinURL?: InputMaybe<Scalars['String']>;
  noOfEmployeesID?: InputMaybe<Scalars['uuid']>;
  partnerCategoryID?: InputMaybe<Scalars['uuid']>;
  primaryContactEmail?: InputMaybe<Scalars['String']>;
  primaryContactName?: InputMaybe<Scalars['String']>;
  primaryContactNumber?: InputMaybe<Scalars['String']>;
  referralTermsOverview?: InputMaybe<Scalars['String']>;
  secondaryContactEmail?: InputMaybe<Scalars['String']>;
  secondaryContactName?: InputMaybe<Scalars['String']>;
  secondaryContactNumber?: InputMaybe<Scalars['String']>;
  stateOrProvince?: InputMaybe<Scalars['String']>;
  summary?: InputMaybe<Scalars['String']>;
  twitterURL?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  userMetaID?: InputMaybe<Scalars['uuid']>;
  website?: InputMaybe<Scalars['String']>;
  zipOrPostalCode?: InputMaybe<Scalars['String']>;
};

/** Streaming cursor of the table "partner" */
export type Partner_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Partner_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Partner_Stream_Cursor_Value_Input = {
  about?: InputMaybe<Scalars['String']>;
  addressLine1?: InputMaybe<Scalars['String']>;
  addressLine2?: InputMaybe<Scalars['String']>;
  city?: InputMaybe<Scalars['String']>;
  companyDBAName?: InputMaybe<Scalars['String']>;
  companyLegalName?: InputMaybe<Scalars['String']>;
  companyLogoKey?: InputMaybe<Scalars['String']>;
  compensationModel?: InputMaybe<Scalars['String']>;
  country?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['uuid']>;
  internalChampionID?: InputMaybe<Scalars['uuid']>;
  linkedinURL?: InputMaybe<Scalars['String']>;
  noOfEmployeesID?: InputMaybe<Scalars['uuid']>;
  partnerCategoryID?: InputMaybe<Scalars['uuid']>;
  primaryContactEmail?: InputMaybe<Scalars['String']>;
  primaryContactName?: InputMaybe<Scalars['String']>;
  primaryContactNumber?: InputMaybe<Scalars['String']>;
  referralTermsOverview?: InputMaybe<Scalars['String']>;
  secondaryContactEmail?: InputMaybe<Scalars['String']>;
  secondaryContactName?: InputMaybe<Scalars['String']>;
  secondaryContactNumber?: InputMaybe<Scalars['String']>;
  stateOrProvince?: InputMaybe<Scalars['String']>;
  summary?: InputMaybe<Scalars['String']>;
  twitterURL?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  userMetaID?: InputMaybe<Scalars['uuid']>;
  website?: InputMaybe<Scalars['String']>;
  zipOrPostalCode?: InputMaybe<Scalars['String']>;
};

/** update columns of table "partner" */
export enum Partner_Update_Column {
  /** column name */
  About = 'about',
  /** column name */
  AddressLine1 = 'addressLine1',
  /** column name */
  AddressLine2 = 'addressLine2',
  /** column name */
  City = 'city',
  /** column name */
  CompanyDbaName = 'companyDBAName',
  /** column name */
  CompanyLegalName = 'companyLegalName',
  /** column name */
  CompanyLogoKey = 'companyLogoKey',
  /** column name */
  CompensationModel = 'compensationModel',
  /** column name */
  Country = 'country',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  InternalChampionId = 'internalChampionID',
  /** column name */
  LinkedinUrl = 'linkedinURL',
  /** column name */
  NoOfEmployeesId = 'noOfEmployeesID',
  /** column name */
  PartnerCategoryId = 'partnerCategoryID',
  /** column name */
  PrimaryContactEmail = 'primaryContactEmail',
  /** column name */
  PrimaryContactName = 'primaryContactName',
  /** column name */
  PrimaryContactNumber = 'primaryContactNumber',
  /** column name */
  ReferralTermsOverview = 'referralTermsOverview',
  /** column name */
  SecondaryContactEmail = 'secondaryContactEmail',
  /** column name */
  SecondaryContactName = 'secondaryContactName',
  /** column name */
  SecondaryContactNumber = 'secondaryContactNumber',
  /** column name */
  StateOrProvince = 'stateOrProvince',
  /** column name */
  Summary = 'summary',
  /** column name */
  TwitterUrl = 'twitterURL',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserMetaId = 'userMetaID',
  /** column name */
  Website = 'website',
  /** column name */
  ZipOrPostalCode = 'zipOrPostalCode',
}

export type Partner_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Partner_Set_Input>;
  where: Partner_Bool_Exp;
};

/** columns and relationships of "payout_distribution" */
export type Payout_Distribution = {
  __typename?: 'payout_distribution';
  contributorTypeID: Scalars['uuid'];
  /** An object relationship */
  contributor_type: Contributor_Type;
  created_at?: Maybe<Scalars['timestamptz']>;
  id: Scalars['uuid'];
  invoiceDistributionID: Scalars['uuid'];
  /** An object relationship */
  invoice_distribution: Invoice_Distribution;
  isPaid?: Maybe<Scalars['Boolean']>;
  paidOn?: Maybe<Scalars['timestamp']>;
  percentage: Scalars['float8'];
  /** An object relationship */
  public_user_meta?: Maybe<Public_User_Meta>;
  userMetaID?: Maybe<Scalars['uuid']>;
  /** An object relationship */
  user_meta?: Maybe<User_Meta>;
};

/** aggregated selection of "payout_distribution" */
export type Payout_Distribution_Aggregate = {
  __typename?: 'payout_distribution_aggregate';
  aggregate?: Maybe<Payout_Distribution_Aggregate_Fields>;
  nodes: Array<Payout_Distribution>;
};

/** aggregate fields of "payout_distribution" */
export type Payout_Distribution_Aggregate_Fields = {
  __typename?: 'payout_distribution_aggregate_fields';
  avg?: Maybe<Payout_Distribution_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Payout_Distribution_Max_Fields>;
  min?: Maybe<Payout_Distribution_Min_Fields>;
  stddev?: Maybe<Payout_Distribution_Stddev_Fields>;
  stddev_pop?: Maybe<Payout_Distribution_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Payout_Distribution_Stddev_Samp_Fields>;
  sum?: Maybe<Payout_Distribution_Sum_Fields>;
  var_pop?: Maybe<Payout_Distribution_Var_Pop_Fields>;
  var_samp?: Maybe<Payout_Distribution_Var_Samp_Fields>;
  variance?: Maybe<Payout_Distribution_Variance_Fields>;
};

/** aggregate fields of "payout_distribution" */
export type Payout_Distribution_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Payout_Distribution_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "payout_distribution" */
export type Payout_Distribution_Aggregate_Order_By = {
  avg?: InputMaybe<Payout_Distribution_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Payout_Distribution_Max_Order_By>;
  min?: InputMaybe<Payout_Distribution_Min_Order_By>;
  stddev?: InputMaybe<Payout_Distribution_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Payout_Distribution_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Payout_Distribution_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Payout_Distribution_Sum_Order_By>;
  var_pop?: InputMaybe<Payout_Distribution_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Payout_Distribution_Var_Samp_Order_By>;
  variance?: InputMaybe<Payout_Distribution_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "payout_distribution" */
export type Payout_Distribution_Arr_Rel_Insert_Input = {
  data: Array<Payout_Distribution_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Payout_Distribution_On_Conflict>;
};

/** aggregate avg on columns */
export type Payout_Distribution_Avg_Fields = {
  __typename?: 'payout_distribution_avg_fields';
  percentage?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "payout_distribution" */
export type Payout_Distribution_Avg_Order_By = {
  percentage?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "payout_distribution". All fields are combined with a logical 'AND'. */
export type Payout_Distribution_Bool_Exp = {
  _and?: InputMaybe<Array<Payout_Distribution_Bool_Exp>>;
  _not?: InputMaybe<Payout_Distribution_Bool_Exp>;
  _or?: InputMaybe<Array<Payout_Distribution_Bool_Exp>>;
  contributorTypeID?: InputMaybe<Uuid_Comparison_Exp>;
  contributor_type?: InputMaybe<Contributor_Type_Bool_Exp>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  invoiceDistributionID?: InputMaybe<Uuid_Comparison_Exp>;
  invoice_distribution?: InputMaybe<Invoice_Distribution_Bool_Exp>;
  isPaid?: InputMaybe<Boolean_Comparison_Exp>;
  paidOn?: InputMaybe<Timestamp_Comparison_Exp>;
  percentage?: InputMaybe<Float8_Comparison_Exp>;
  public_user_meta?: InputMaybe<Public_User_Meta_Bool_Exp>;
  userMetaID?: InputMaybe<Uuid_Comparison_Exp>;
  user_meta?: InputMaybe<User_Meta_Bool_Exp>;
};

/** unique or primary key constraints on table "payout_distribution" */
export enum Payout_Distribution_Constraint {
  /** unique or primary key constraint on columns "id" */
  PayoutDistributionPkey = 'payout_distribution_pkey',
}

/** input type for incrementing numeric columns in table "payout_distribution" */
export type Payout_Distribution_Inc_Input = {
  percentage?: InputMaybe<Scalars['float8']>;
};

/** input type for inserting data into table "payout_distribution" */
export type Payout_Distribution_Insert_Input = {
  contributorTypeID?: InputMaybe<Scalars['uuid']>;
  contributor_type?: InputMaybe<Contributor_Type_Obj_Rel_Insert_Input>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['uuid']>;
  invoiceDistributionID?: InputMaybe<Scalars['uuid']>;
  invoice_distribution?: InputMaybe<Invoice_Distribution_Obj_Rel_Insert_Input>;
  isPaid?: InputMaybe<Scalars['Boolean']>;
  paidOn?: InputMaybe<Scalars['timestamp']>;
  percentage?: InputMaybe<Scalars['float8']>;
  public_user_meta?: InputMaybe<Public_User_Meta_Obj_Rel_Insert_Input>;
  userMetaID?: InputMaybe<Scalars['uuid']>;
  user_meta?: InputMaybe<User_Meta_Obj_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type Payout_Distribution_Max_Fields = {
  __typename?: 'payout_distribution_max_fields';
  contributorTypeID?: Maybe<Scalars['uuid']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  invoiceDistributionID?: Maybe<Scalars['uuid']>;
  paidOn?: Maybe<Scalars['timestamp']>;
  percentage?: Maybe<Scalars['float8']>;
  userMetaID?: Maybe<Scalars['uuid']>;
};

/** order by max() on columns of table "payout_distribution" */
export type Payout_Distribution_Max_Order_By = {
  contributorTypeID?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  invoiceDistributionID?: InputMaybe<Order_By>;
  paidOn?: InputMaybe<Order_By>;
  percentage?: InputMaybe<Order_By>;
  userMetaID?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Payout_Distribution_Min_Fields = {
  __typename?: 'payout_distribution_min_fields';
  contributorTypeID?: Maybe<Scalars['uuid']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  invoiceDistributionID?: Maybe<Scalars['uuid']>;
  paidOn?: Maybe<Scalars['timestamp']>;
  percentage?: Maybe<Scalars['float8']>;
  userMetaID?: Maybe<Scalars['uuid']>;
};

/** order by min() on columns of table "payout_distribution" */
export type Payout_Distribution_Min_Order_By = {
  contributorTypeID?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  invoiceDistributionID?: InputMaybe<Order_By>;
  paidOn?: InputMaybe<Order_By>;
  percentage?: InputMaybe<Order_By>;
  userMetaID?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "payout_distribution" */
export type Payout_Distribution_Mutation_Response = {
  __typename?: 'payout_distribution_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Payout_Distribution>;
};

/** on_conflict condition type for table "payout_distribution" */
export type Payout_Distribution_On_Conflict = {
  constraint: Payout_Distribution_Constraint;
  update_columns?: Array<Payout_Distribution_Update_Column>;
  where?: InputMaybe<Payout_Distribution_Bool_Exp>;
};

/** Ordering options when selecting data from "payout_distribution". */
export type Payout_Distribution_Order_By = {
  contributorTypeID?: InputMaybe<Order_By>;
  contributor_type?: InputMaybe<Contributor_Type_Order_By>;
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  invoiceDistributionID?: InputMaybe<Order_By>;
  invoice_distribution?: InputMaybe<Invoice_Distribution_Order_By>;
  isPaid?: InputMaybe<Order_By>;
  paidOn?: InputMaybe<Order_By>;
  percentage?: InputMaybe<Order_By>;
  public_user_meta?: InputMaybe<Public_User_Meta_Order_By>;
  userMetaID?: InputMaybe<Order_By>;
  user_meta?: InputMaybe<User_Meta_Order_By>;
};

/** primary key columns input for table: payout_distribution */
export type Payout_Distribution_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "payout_distribution" */
export enum Payout_Distribution_Select_Column {
  /** column name */
  ContributorTypeId = 'contributorTypeID',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  InvoiceDistributionId = 'invoiceDistributionID',
  /** column name */
  IsPaid = 'isPaid',
  /** column name */
  PaidOn = 'paidOn',
  /** column name */
  Percentage = 'percentage',
  /** column name */
  UserMetaId = 'userMetaID',
}

/** input type for updating data in table "payout_distribution" */
export type Payout_Distribution_Set_Input = {
  contributorTypeID?: InputMaybe<Scalars['uuid']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['uuid']>;
  invoiceDistributionID?: InputMaybe<Scalars['uuid']>;
  isPaid?: InputMaybe<Scalars['Boolean']>;
  paidOn?: InputMaybe<Scalars['timestamp']>;
  percentage?: InputMaybe<Scalars['float8']>;
  userMetaID?: InputMaybe<Scalars['uuid']>;
};

/** aggregate stddev on columns */
export type Payout_Distribution_Stddev_Fields = {
  __typename?: 'payout_distribution_stddev_fields';
  percentage?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "payout_distribution" */
export type Payout_Distribution_Stddev_Order_By = {
  percentage?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Payout_Distribution_Stddev_Pop_Fields = {
  __typename?: 'payout_distribution_stddev_pop_fields';
  percentage?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "payout_distribution" */
export type Payout_Distribution_Stddev_Pop_Order_By = {
  percentage?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Payout_Distribution_Stddev_Samp_Fields = {
  __typename?: 'payout_distribution_stddev_samp_fields';
  percentage?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "payout_distribution" */
export type Payout_Distribution_Stddev_Samp_Order_By = {
  percentage?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "payout_distribution" */
export type Payout_Distribution_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Payout_Distribution_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Payout_Distribution_Stream_Cursor_Value_Input = {
  contributorTypeID?: InputMaybe<Scalars['uuid']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['uuid']>;
  invoiceDistributionID?: InputMaybe<Scalars['uuid']>;
  isPaid?: InputMaybe<Scalars['Boolean']>;
  paidOn?: InputMaybe<Scalars['timestamp']>;
  percentage?: InputMaybe<Scalars['float8']>;
  userMetaID?: InputMaybe<Scalars['uuid']>;
};

/** aggregate sum on columns */
export type Payout_Distribution_Sum_Fields = {
  __typename?: 'payout_distribution_sum_fields';
  percentage?: Maybe<Scalars['float8']>;
};

/** order by sum() on columns of table "payout_distribution" */
export type Payout_Distribution_Sum_Order_By = {
  percentage?: InputMaybe<Order_By>;
};

/** update columns of table "payout_distribution" */
export enum Payout_Distribution_Update_Column {
  /** column name */
  ContributorTypeId = 'contributorTypeID',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  InvoiceDistributionId = 'invoiceDistributionID',
  /** column name */
  IsPaid = 'isPaid',
  /** column name */
  PaidOn = 'paidOn',
  /** column name */
  Percentage = 'percentage',
  /** column name */
  UserMetaId = 'userMetaID',
}

export type Payout_Distribution_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Payout_Distribution_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Payout_Distribution_Set_Input>;
  where: Payout_Distribution_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Payout_Distribution_Var_Pop_Fields = {
  __typename?: 'payout_distribution_var_pop_fields';
  percentage?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "payout_distribution" */
export type Payout_Distribution_Var_Pop_Order_By = {
  percentage?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Payout_Distribution_Var_Samp_Fields = {
  __typename?: 'payout_distribution_var_samp_fields';
  percentage?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "payout_distribution" */
export type Payout_Distribution_Var_Samp_Order_By = {
  percentage?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Payout_Distribution_Variance_Fields = {
  __typename?: 'payout_distribution_variance_fields';
  percentage?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "payout_distribution" */
export type Payout_Distribution_Variance_Order_By = {
  percentage?: InputMaybe<Order_By>;
};

/** columns and relationships of "product_or_service_type" */
export type Product_Or_Service_Type = {
  __typename?: 'product_or_service_type';
  /** An array relationship */
  custom_payout_line_items: Array<Custom_Payout_Line_Item>;
  /** An aggregate relationship */
  custom_payout_line_items_aggregate: Custom_Payout_Line_Item_Aggregate;
  /** An array relationship */
  fixed_price_invoice_line_items: Array<Fixed_Price_Invoice_Line_Item>;
  /** An aggregate relationship */
  fixed_price_invoice_line_items_aggregate: Fixed_Price_Invoice_Line_Item_Aggregate;
  id: Scalars['uuid'];
  name: Scalars['String'];
  /** An array relationship */
  time_and_material_invoice_line_items: Array<Time_And_Material_Invoice_Line_Item>;
  /** An aggregate relationship */
  time_and_material_invoice_line_items_aggregate: Time_And_Material_Invoice_Line_Item_Aggregate;
};

/** columns and relationships of "product_or_service_type" */
export type Product_Or_Service_TypeCustom_Payout_Line_ItemsArgs = {
  distinct_on?: InputMaybe<Array<Custom_Payout_Line_Item_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Custom_Payout_Line_Item_Order_By>>;
  where?: InputMaybe<Custom_Payout_Line_Item_Bool_Exp>;
};

/** columns and relationships of "product_or_service_type" */
export type Product_Or_Service_TypeCustom_Payout_Line_Items_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Custom_Payout_Line_Item_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Custom_Payout_Line_Item_Order_By>>;
  where?: InputMaybe<Custom_Payout_Line_Item_Bool_Exp>;
};

/** columns and relationships of "product_or_service_type" */
export type Product_Or_Service_TypeFixed_Price_Invoice_Line_ItemsArgs = {
  distinct_on?: InputMaybe<Array<Fixed_Price_Invoice_Line_Item_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Fixed_Price_Invoice_Line_Item_Order_By>>;
  where?: InputMaybe<Fixed_Price_Invoice_Line_Item_Bool_Exp>;
};

/** columns and relationships of "product_or_service_type" */
export type Product_Or_Service_TypeFixed_Price_Invoice_Line_Items_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Fixed_Price_Invoice_Line_Item_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Fixed_Price_Invoice_Line_Item_Order_By>>;
  where?: InputMaybe<Fixed_Price_Invoice_Line_Item_Bool_Exp>;
};

/** columns and relationships of "product_or_service_type" */
export type Product_Or_Service_TypeTime_And_Material_Invoice_Line_ItemsArgs = {
  distinct_on?: InputMaybe<Array<Time_And_Material_Invoice_Line_Item_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Time_And_Material_Invoice_Line_Item_Order_By>>;
  where?: InputMaybe<Time_And_Material_Invoice_Line_Item_Bool_Exp>;
};

/** columns and relationships of "product_or_service_type" */
export type Product_Or_Service_TypeTime_And_Material_Invoice_Line_Items_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Time_And_Material_Invoice_Line_Item_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Time_And_Material_Invoice_Line_Item_Order_By>>;
  where?: InputMaybe<Time_And_Material_Invoice_Line_Item_Bool_Exp>;
};

/** aggregated selection of "product_or_service_type" */
export type Product_Or_Service_Type_Aggregate = {
  __typename?: 'product_or_service_type_aggregate';
  aggregate?: Maybe<Product_Or_Service_Type_Aggregate_Fields>;
  nodes: Array<Product_Or_Service_Type>;
};

/** aggregate fields of "product_or_service_type" */
export type Product_Or_Service_Type_Aggregate_Fields = {
  __typename?: 'product_or_service_type_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<Product_Or_Service_Type_Max_Fields>;
  min?: Maybe<Product_Or_Service_Type_Min_Fields>;
};

/** aggregate fields of "product_or_service_type" */
export type Product_Or_Service_Type_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Product_Or_Service_Type_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** Boolean expression to filter rows from the table "product_or_service_type". All fields are combined with a logical 'AND'. */
export type Product_Or_Service_Type_Bool_Exp = {
  _and?: InputMaybe<Array<Product_Or_Service_Type_Bool_Exp>>;
  _not?: InputMaybe<Product_Or_Service_Type_Bool_Exp>;
  _or?: InputMaybe<Array<Product_Or_Service_Type_Bool_Exp>>;
  custom_payout_line_items?: InputMaybe<Custom_Payout_Line_Item_Bool_Exp>;
  fixed_price_invoice_line_items?: InputMaybe<Fixed_Price_Invoice_Line_Item_Bool_Exp>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  time_and_material_invoice_line_items?: InputMaybe<Time_And_Material_Invoice_Line_Item_Bool_Exp>;
};

/** unique or primary key constraints on table "product_or_service_type" */
export enum Product_Or_Service_Type_Constraint {
  /** unique or primary key constraint on columns "name" */
  ProductOrServiceTypeNameKey = 'product_or_service_type_name_key',
  /** unique or primary key constraint on columns "id" */
  ProductOrServiceTypePkey = 'product_or_service_type_pkey',
}

/** input type for inserting data into table "product_or_service_type" */
export type Product_Or_Service_Type_Insert_Input = {
  custom_payout_line_items?: InputMaybe<Custom_Payout_Line_Item_Arr_Rel_Insert_Input>;
  fixed_price_invoice_line_items?: InputMaybe<Fixed_Price_Invoice_Line_Item_Arr_Rel_Insert_Input>;
  id?: InputMaybe<Scalars['uuid']>;
  name?: InputMaybe<Scalars['String']>;
  time_and_material_invoice_line_items?: InputMaybe<Time_And_Material_Invoice_Line_Item_Arr_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type Product_Or_Service_Type_Max_Fields = {
  __typename?: 'product_or_service_type_max_fields';
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type Product_Or_Service_Type_Min_Fields = {
  __typename?: 'product_or_service_type_min_fields';
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "product_or_service_type" */
export type Product_Or_Service_Type_Mutation_Response = {
  __typename?: 'product_or_service_type_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Product_Or_Service_Type>;
};

/** input type for inserting object relation for remote table "product_or_service_type" */
export type Product_Or_Service_Type_Obj_Rel_Insert_Input = {
  data: Product_Or_Service_Type_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Product_Or_Service_Type_On_Conflict>;
};

/** on_conflict condition type for table "product_or_service_type" */
export type Product_Or_Service_Type_On_Conflict = {
  constraint: Product_Or_Service_Type_Constraint;
  update_columns?: Array<Product_Or_Service_Type_Update_Column>;
  where?: InputMaybe<Product_Or_Service_Type_Bool_Exp>;
};

/** Ordering options when selecting data from "product_or_service_type". */
export type Product_Or_Service_Type_Order_By = {
  custom_payout_line_items_aggregate?: InputMaybe<Custom_Payout_Line_Item_Aggregate_Order_By>;
  fixed_price_invoice_line_items_aggregate?: InputMaybe<Fixed_Price_Invoice_Line_Item_Aggregate_Order_By>;
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  time_and_material_invoice_line_items_aggregate?: InputMaybe<Time_And_Material_Invoice_Line_Item_Aggregate_Order_By>;
};

/** primary key columns input for table: product_or_service_type */
export type Product_Or_Service_Type_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "product_or_service_type" */
export enum Product_Or_Service_Type_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
}

/** input type for updating data in table "product_or_service_type" */
export type Product_Or_Service_Type_Set_Input = {
  id?: InputMaybe<Scalars['uuid']>;
  name?: InputMaybe<Scalars['String']>;
};

/** Streaming cursor of the table "product_or_service_type" */
export type Product_Or_Service_Type_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Product_Or_Service_Type_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Product_Or_Service_Type_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['uuid']>;
  name?: InputMaybe<Scalars['String']>;
};

/** update columns of table "product_or_service_type" */
export enum Product_Or_Service_Type_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
}

export type Product_Or_Service_Type_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Product_Or_Service_Type_Set_Input>;
  where: Product_Or_Service_Type_Bool_Exp;
};

/** columns and relationships of "public_user_meta" */
export type Public_User_Meta = {
  __typename?: 'public_user_meta';
  about?: Maybe<Scalars['String']>;
  avatarKey?: Maybe<Scalars['String']>;
  cognitoSub?: Maybe<Scalars['String']>;
  /** An array relationship */
  customer_referrers: Array<Customer_Referrer>;
  /** An aggregate relationship */
  customer_referrers_aggregate: Customer_Referrer_Aggregate;
  /** An array relationship */
  document_associated_users: Array<Document_Associated_User>;
  /** An aggregate relationship */
  document_associated_users_aggregate: Document_Associated_User_Aggregate;
  firstName?: Maybe<Scalars['String']>;
  /** An array relationship */
  fixed_price_invoice_line_items: Array<Fixed_Price_Invoice_Line_Item>;
  /** An aggregate relationship */
  fixed_price_invoice_line_items_aggregate: Fixed_Price_Invoice_Line_Item_Aggregate;
  id?: Maybe<Scalars['uuid']>;
  lastName?: Maybe<Scalars['String']>;
  /** A computed field, executes function "user_full_name" */
  name?: Maybe<Scalars['String']>;
  /** An array relationship */
  payout_distributions: Array<Payout_Distribution>;
  /** An aggregate relationship */
  payout_distributions_aggregate: Payout_Distribution_Aggregate;
  slackID?: Maybe<Scalars['String']>;
  /** An array relationship */
  slack_availabilities: Array<Slack_Availability>;
  /** An aggregate relationship */
  slack_availabilities_aggregate: Slack_Availability_Aggregate;
  /** An array relationship */
  time_and_material_invoice_line_items: Array<Time_And_Material_Invoice_Line_Item>;
  /** An aggregate relationship */
  time_and_material_invoice_line_items_aggregate: Time_And_Material_Invoice_Line_Item_Aggregate;
  userProfileVisibilityID?: Maybe<Scalars['uuid']>;
  /** An object relationship */
  user_basic_information?: Maybe<User_Basic_Information>;
  /** An array relationship */
  user_completed_customer_sales: Array<User_Completed_Customer_Sale>;
  /** An aggregate relationship */
  user_completed_customer_sales_aggregate: User_Completed_Customer_Sale_Aggregate;
  /** An array relationship */
  user_industry_experiences: Array<User_Industry_Experience>;
  /** An aggregate relationship */
  user_industry_experiences_aggregate: User_Industry_Experience_Aggregate;
  /** An array relationship */
  user_meta_user_roles: Array<User_Meta_User_Role>;
  /** An aggregate relationship */
  user_meta_user_roles_aggregate: User_Meta_User_Role_Aggregate;
  /** An object relationship */
  user_professional_information?: Maybe<User_Professional_Information>;
  /** An object relationship */
  user_profile_visibility?: Maybe<User_Profile_Visibility>;
  /** An array relationship */
  user_profiles: Array<User_Profile>;
  /** An aggregate relationship */
  user_profiles_aggregate: User_Profile_Aggregate;
  /** An array relationship */
  user_skills: Array<User_Skill>;
  /** An aggregate relationship */
  user_skills_aggregate: User_Skill_Aggregate;
};

/** columns and relationships of "public_user_meta" */
export type Public_User_MetaCustomer_ReferrersArgs = {
  distinct_on?: InputMaybe<Array<Customer_Referrer_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Customer_Referrer_Order_By>>;
  where?: InputMaybe<Customer_Referrer_Bool_Exp>;
};

/** columns and relationships of "public_user_meta" */
export type Public_User_MetaCustomer_Referrers_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Customer_Referrer_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Customer_Referrer_Order_By>>;
  where?: InputMaybe<Customer_Referrer_Bool_Exp>;
};

/** columns and relationships of "public_user_meta" */
export type Public_User_MetaDocument_Associated_UsersArgs = {
  distinct_on?: InputMaybe<Array<Document_Associated_User_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Document_Associated_User_Order_By>>;
  where?: InputMaybe<Document_Associated_User_Bool_Exp>;
};

/** columns and relationships of "public_user_meta" */
export type Public_User_MetaDocument_Associated_Users_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Document_Associated_User_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Document_Associated_User_Order_By>>;
  where?: InputMaybe<Document_Associated_User_Bool_Exp>;
};

/** columns and relationships of "public_user_meta" */
export type Public_User_MetaFixed_Price_Invoice_Line_ItemsArgs = {
  distinct_on?: InputMaybe<Array<Fixed_Price_Invoice_Line_Item_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Fixed_Price_Invoice_Line_Item_Order_By>>;
  where?: InputMaybe<Fixed_Price_Invoice_Line_Item_Bool_Exp>;
};

/** columns and relationships of "public_user_meta" */
export type Public_User_MetaFixed_Price_Invoice_Line_Items_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Fixed_Price_Invoice_Line_Item_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Fixed_Price_Invoice_Line_Item_Order_By>>;
  where?: InputMaybe<Fixed_Price_Invoice_Line_Item_Bool_Exp>;
};

/** columns and relationships of "public_user_meta" */
export type Public_User_MetaPayout_DistributionsArgs = {
  distinct_on?: InputMaybe<Array<Payout_Distribution_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Payout_Distribution_Order_By>>;
  where?: InputMaybe<Payout_Distribution_Bool_Exp>;
};

/** columns and relationships of "public_user_meta" */
export type Public_User_MetaPayout_Distributions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Payout_Distribution_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Payout_Distribution_Order_By>>;
  where?: InputMaybe<Payout_Distribution_Bool_Exp>;
};

/** columns and relationships of "public_user_meta" */
export type Public_User_MetaSlack_AvailabilitiesArgs = {
  distinct_on?: InputMaybe<Array<Slack_Availability_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Slack_Availability_Order_By>>;
  where?: InputMaybe<Slack_Availability_Bool_Exp>;
};

/** columns and relationships of "public_user_meta" */
export type Public_User_MetaSlack_Availabilities_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Slack_Availability_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Slack_Availability_Order_By>>;
  where?: InputMaybe<Slack_Availability_Bool_Exp>;
};

/** columns and relationships of "public_user_meta" */
export type Public_User_MetaTime_And_Material_Invoice_Line_ItemsArgs = {
  distinct_on?: InputMaybe<Array<Time_And_Material_Invoice_Line_Item_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Time_And_Material_Invoice_Line_Item_Order_By>>;
  where?: InputMaybe<Time_And_Material_Invoice_Line_Item_Bool_Exp>;
};

/** columns and relationships of "public_user_meta" */
export type Public_User_MetaTime_And_Material_Invoice_Line_Items_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Time_And_Material_Invoice_Line_Item_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Time_And_Material_Invoice_Line_Item_Order_By>>;
  where?: InputMaybe<Time_And_Material_Invoice_Line_Item_Bool_Exp>;
};

/** columns and relationships of "public_user_meta" */
export type Public_User_MetaUser_Completed_Customer_SalesArgs = {
  distinct_on?: InputMaybe<Array<User_Completed_Customer_Sale_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Completed_Customer_Sale_Order_By>>;
  where?: InputMaybe<User_Completed_Customer_Sale_Bool_Exp>;
};

/** columns and relationships of "public_user_meta" */
export type Public_User_MetaUser_Completed_Customer_Sales_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Completed_Customer_Sale_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Completed_Customer_Sale_Order_By>>;
  where?: InputMaybe<User_Completed_Customer_Sale_Bool_Exp>;
};

/** columns and relationships of "public_user_meta" */
export type Public_User_MetaUser_Industry_ExperiencesArgs = {
  distinct_on?: InputMaybe<Array<User_Industry_Experience_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Industry_Experience_Order_By>>;
  where?: InputMaybe<User_Industry_Experience_Bool_Exp>;
};

/** columns and relationships of "public_user_meta" */
export type Public_User_MetaUser_Industry_Experiences_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Industry_Experience_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Industry_Experience_Order_By>>;
  where?: InputMaybe<User_Industry_Experience_Bool_Exp>;
};

/** columns and relationships of "public_user_meta" */
export type Public_User_MetaUser_Meta_User_RolesArgs = {
  distinct_on?: InputMaybe<Array<User_Meta_User_Role_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Meta_User_Role_Order_By>>;
  where?: InputMaybe<User_Meta_User_Role_Bool_Exp>;
};

/** columns and relationships of "public_user_meta" */
export type Public_User_MetaUser_Meta_User_Roles_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Meta_User_Role_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Meta_User_Role_Order_By>>;
  where?: InputMaybe<User_Meta_User_Role_Bool_Exp>;
};

/** columns and relationships of "public_user_meta" */
export type Public_User_MetaUser_ProfilesArgs = {
  distinct_on?: InputMaybe<Array<User_Profile_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Profile_Order_By>>;
  where?: InputMaybe<User_Profile_Bool_Exp>;
};

/** columns and relationships of "public_user_meta" */
export type Public_User_MetaUser_Profiles_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Profile_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Profile_Order_By>>;
  where?: InputMaybe<User_Profile_Bool_Exp>;
};

/** columns and relationships of "public_user_meta" */
export type Public_User_MetaUser_SkillsArgs = {
  distinct_on?: InputMaybe<Array<User_Skill_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Skill_Order_By>>;
  where?: InputMaybe<User_Skill_Bool_Exp>;
};

/** columns and relationships of "public_user_meta" */
export type Public_User_MetaUser_Skills_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Skill_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Skill_Order_By>>;
  where?: InputMaybe<User_Skill_Bool_Exp>;
};

/** aggregated selection of "public_user_meta" */
export type Public_User_Meta_Aggregate = {
  __typename?: 'public_user_meta_aggregate';
  aggregate?: Maybe<Public_User_Meta_Aggregate_Fields>;
  nodes: Array<Public_User_Meta>;
};

/** aggregate fields of "public_user_meta" */
export type Public_User_Meta_Aggregate_Fields = {
  __typename?: 'public_user_meta_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<Public_User_Meta_Max_Fields>;
  min?: Maybe<Public_User_Meta_Min_Fields>;
};

/** aggregate fields of "public_user_meta" */
export type Public_User_Meta_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Public_User_Meta_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** Boolean expression to filter rows from the table "public_user_meta". All fields are combined with a logical 'AND'. */
export type Public_User_Meta_Bool_Exp = {
  _and?: InputMaybe<Array<Public_User_Meta_Bool_Exp>>;
  _not?: InputMaybe<Public_User_Meta_Bool_Exp>;
  _or?: InputMaybe<Array<Public_User_Meta_Bool_Exp>>;
  about?: InputMaybe<String_Comparison_Exp>;
  avatarKey?: InputMaybe<String_Comparison_Exp>;
  cognitoSub?: InputMaybe<String_Comparison_Exp>;
  customer_referrers?: InputMaybe<Customer_Referrer_Bool_Exp>;
  document_associated_users?: InputMaybe<Document_Associated_User_Bool_Exp>;
  firstName?: InputMaybe<String_Comparison_Exp>;
  fixed_price_invoice_line_items?: InputMaybe<Fixed_Price_Invoice_Line_Item_Bool_Exp>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  lastName?: InputMaybe<String_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  payout_distributions?: InputMaybe<Payout_Distribution_Bool_Exp>;
  slackID?: InputMaybe<String_Comparison_Exp>;
  slack_availabilities?: InputMaybe<Slack_Availability_Bool_Exp>;
  time_and_material_invoice_line_items?: InputMaybe<Time_And_Material_Invoice_Line_Item_Bool_Exp>;
  userProfileVisibilityID?: InputMaybe<Uuid_Comparison_Exp>;
  user_basic_information?: InputMaybe<User_Basic_Information_Bool_Exp>;
  user_completed_customer_sales?: InputMaybe<User_Completed_Customer_Sale_Bool_Exp>;
  user_industry_experiences?: InputMaybe<User_Industry_Experience_Bool_Exp>;
  user_meta_user_roles?: InputMaybe<User_Meta_User_Role_Bool_Exp>;
  user_professional_information?: InputMaybe<User_Professional_Information_Bool_Exp>;
  user_profile_visibility?: InputMaybe<User_Profile_Visibility_Bool_Exp>;
  user_profiles?: InputMaybe<User_Profile_Bool_Exp>;
  user_skills?: InputMaybe<User_Skill_Bool_Exp>;
};

/** input type for inserting data into table "public_user_meta" */
export type Public_User_Meta_Insert_Input = {
  about?: InputMaybe<Scalars['String']>;
  avatarKey?: InputMaybe<Scalars['String']>;
  cognitoSub?: InputMaybe<Scalars['String']>;
  customer_referrers?: InputMaybe<Customer_Referrer_Arr_Rel_Insert_Input>;
  document_associated_users?: InputMaybe<Document_Associated_User_Arr_Rel_Insert_Input>;
  firstName?: InputMaybe<Scalars['String']>;
  fixed_price_invoice_line_items?: InputMaybe<Fixed_Price_Invoice_Line_Item_Arr_Rel_Insert_Input>;
  id?: InputMaybe<Scalars['uuid']>;
  lastName?: InputMaybe<Scalars['String']>;
  payout_distributions?: InputMaybe<Payout_Distribution_Arr_Rel_Insert_Input>;
  slackID?: InputMaybe<Scalars['String']>;
  slack_availabilities?: InputMaybe<Slack_Availability_Arr_Rel_Insert_Input>;
  time_and_material_invoice_line_items?: InputMaybe<Time_And_Material_Invoice_Line_Item_Arr_Rel_Insert_Input>;
  userProfileVisibilityID?: InputMaybe<Scalars['uuid']>;
  user_basic_information?: InputMaybe<User_Basic_Information_Obj_Rel_Insert_Input>;
  user_completed_customer_sales?: InputMaybe<User_Completed_Customer_Sale_Arr_Rel_Insert_Input>;
  user_industry_experiences?: InputMaybe<User_Industry_Experience_Arr_Rel_Insert_Input>;
  user_meta_user_roles?: InputMaybe<User_Meta_User_Role_Arr_Rel_Insert_Input>;
  user_professional_information?: InputMaybe<User_Professional_Information_Obj_Rel_Insert_Input>;
  user_profile_visibility?: InputMaybe<User_Profile_Visibility_Obj_Rel_Insert_Input>;
  user_profiles?: InputMaybe<User_Profile_Arr_Rel_Insert_Input>;
  user_skills?: InputMaybe<User_Skill_Arr_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type Public_User_Meta_Max_Fields = {
  __typename?: 'public_user_meta_max_fields';
  about?: Maybe<Scalars['String']>;
  avatarKey?: Maybe<Scalars['String']>;
  cognitoSub?: Maybe<Scalars['String']>;
  firstName?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  lastName?: Maybe<Scalars['String']>;
  slackID?: Maybe<Scalars['String']>;
  userProfileVisibilityID?: Maybe<Scalars['uuid']>;
};

/** aggregate min on columns */
export type Public_User_Meta_Min_Fields = {
  __typename?: 'public_user_meta_min_fields';
  about?: Maybe<Scalars['String']>;
  avatarKey?: Maybe<Scalars['String']>;
  cognitoSub?: Maybe<Scalars['String']>;
  firstName?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  lastName?: Maybe<Scalars['String']>;
  slackID?: Maybe<Scalars['String']>;
  userProfileVisibilityID?: Maybe<Scalars['uuid']>;
};

/** response of any mutation on the table "public_user_meta" */
export type Public_User_Meta_Mutation_Response = {
  __typename?: 'public_user_meta_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Public_User_Meta>;
};

/** input type for inserting object relation for remote table "public_user_meta" */
export type Public_User_Meta_Obj_Rel_Insert_Input = {
  data: Public_User_Meta_Insert_Input;
};

/** Ordering options when selecting data from "public_user_meta". */
export type Public_User_Meta_Order_By = {
  about?: InputMaybe<Order_By>;
  avatarKey?: InputMaybe<Order_By>;
  cognitoSub?: InputMaybe<Order_By>;
  customer_referrers_aggregate?: InputMaybe<Customer_Referrer_Aggregate_Order_By>;
  document_associated_users_aggregate?: InputMaybe<Document_Associated_User_Aggregate_Order_By>;
  firstName?: InputMaybe<Order_By>;
  fixed_price_invoice_line_items_aggregate?: InputMaybe<Fixed_Price_Invoice_Line_Item_Aggregate_Order_By>;
  id?: InputMaybe<Order_By>;
  lastName?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  payout_distributions_aggregate?: InputMaybe<Payout_Distribution_Aggregate_Order_By>;
  slackID?: InputMaybe<Order_By>;
  slack_availabilities_aggregate?: InputMaybe<Slack_Availability_Aggregate_Order_By>;
  time_and_material_invoice_line_items_aggregate?: InputMaybe<Time_And_Material_Invoice_Line_Item_Aggregate_Order_By>;
  userProfileVisibilityID?: InputMaybe<Order_By>;
  user_basic_information?: InputMaybe<User_Basic_Information_Order_By>;
  user_completed_customer_sales_aggregate?: InputMaybe<User_Completed_Customer_Sale_Aggregate_Order_By>;
  user_industry_experiences_aggregate?: InputMaybe<User_Industry_Experience_Aggregate_Order_By>;
  user_meta_user_roles_aggregate?: InputMaybe<User_Meta_User_Role_Aggregate_Order_By>;
  user_professional_information?: InputMaybe<User_Professional_Information_Order_By>;
  user_profile_visibility?: InputMaybe<User_Profile_Visibility_Order_By>;
  user_profiles_aggregate?: InputMaybe<User_Profile_Aggregate_Order_By>;
  user_skills_aggregate?: InputMaybe<User_Skill_Aggregate_Order_By>;
};

/** select columns of table "public_user_meta" */
export enum Public_User_Meta_Select_Column {
  /** column name */
  About = 'about',
  /** column name */
  AvatarKey = 'avatarKey',
  /** column name */
  CognitoSub = 'cognitoSub',
  /** column name */
  FirstName = 'firstName',
  /** column name */
  Id = 'id',
  /** column name */
  LastName = 'lastName',
  /** column name */
  SlackId = 'slackID',
  /** column name */
  UserProfileVisibilityId = 'userProfileVisibilityID',
}

/** input type for updating data in table "public_user_meta" */
export type Public_User_Meta_Set_Input = {
  about?: InputMaybe<Scalars['String']>;
  avatarKey?: InputMaybe<Scalars['String']>;
  cognitoSub?: InputMaybe<Scalars['String']>;
  firstName?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['uuid']>;
  lastName?: InputMaybe<Scalars['String']>;
  slackID?: InputMaybe<Scalars['String']>;
  userProfileVisibilityID?: InputMaybe<Scalars['uuid']>;
};

/** Streaming cursor of the table "public_user_meta" */
export type Public_User_Meta_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Public_User_Meta_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Public_User_Meta_Stream_Cursor_Value_Input = {
  about?: InputMaybe<Scalars['String']>;
  avatarKey?: InputMaybe<Scalars['String']>;
  cognitoSub?: InputMaybe<Scalars['String']>;
  firstName?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['uuid']>;
  lastName?: InputMaybe<Scalars['String']>;
  slackID?: InputMaybe<Scalars['String']>;
  userProfileVisibilityID?: InputMaybe<Scalars['uuid']>;
};

export type Public_User_Meta_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Public_User_Meta_Set_Input>;
  where: Public_User_Meta_Bool_Exp;
};

export type Query_Root = {
  __typename?: 'query_root';
  /** fetch data from the table: "api_user_token" */
  api_user_token: Array<Api_User_Token>;
  /** fetch aggregated fields from the table: "api_user_token" */
  api_user_token_aggregate: Api_User_Token_Aggregate;
  /** fetch data from the table: "api_user_token" using primary key columns */
  api_user_token_by_pk?: Maybe<Api_User_Token>;
  /** fetch data from the table: "billing_frequency" */
  billing_frequency: Array<Billing_Frequency>;
  /** fetch aggregated fields from the table: "billing_frequency" */
  billing_frequency_aggregate: Billing_Frequency_Aggregate;
  /** fetch data from the table: "billing_frequency" using primary key columns */
  billing_frequency_by_pk?: Maybe<Billing_Frequency>;
  /** fetch data from the table: "bookmark_folder" */
  bookmark_folder: Array<Bookmark_Folder>;
  /** fetch aggregated fields from the table: "bookmark_folder" */
  bookmark_folder_aggregate: Bookmark_Folder_Aggregate;
  /** fetch data from the table: "bookmark_folder" using primary key columns */
  bookmark_folder_by_pk?: Maybe<Bookmark_Folder>;
  /** fetch data from the table: "bookmark_link" */
  bookmark_link: Array<Bookmark_Link>;
  /** fetch aggregated fields from the table: "bookmark_link" */
  bookmark_link_aggregate: Bookmark_Link_Aggregate;
  /** fetch data from the table: "bookmark_link" using primary key columns */
  bookmark_link_by_pk?: Maybe<Bookmark_Link>;
  /** fetch data from the table: "capability" */
  capability: Array<Capability>;
  /** fetch aggregated fields from the table: "capability" */
  capability_aggregate: Capability_Aggregate;
  /** fetch data from the table: "capability" using primary key columns */
  capability_by_pk?: Maybe<Capability>;
  /** fetch data from the table: "capability_endpoint" */
  capability_endpoint: Array<Capability_Endpoint>;
  /** fetch aggregated fields from the table: "capability_endpoint" */
  capability_endpoint_aggregate: Capability_Endpoint_Aggregate;
  /** fetch data from the table: "capability_endpoint" using primary key columns */
  capability_endpoint_by_pk?: Maybe<Capability_Endpoint>;
  /** fetch data from the table: "case_study" */
  case_study: Array<Case_Study>;
  /** fetch aggregated fields from the table: "case_study" */
  case_study_aggregate: Case_Study_Aggregate;
  /** fetch data from the table: "case_study" using primary key columns */
  case_study_by_pk?: Maybe<Case_Study>;
  /** fetch data from the table: "case_study_company" */
  case_study_company: Array<Case_Study_Company>;
  /** fetch aggregated fields from the table: "case_study_company" */
  case_study_company_aggregate: Case_Study_Company_Aggregate;
  /** fetch data from the table: "case_study_company" using primary key columns */
  case_study_company_by_pk?: Maybe<Case_Study_Company>;
  /** fetch data from the table: "case_study_industry" */
  case_study_industry: Array<Case_Study_Industry>;
  /** fetch aggregated fields from the table: "case_study_industry" */
  case_study_industry_aggregate: Case_Study_Industry_Aggregate;
  /** fetch data from the table: "case_study_industry" using primary key columns */
  case_study_industry_by_pk?: Maybe<Case_Study_Industry>;
  /** fetch data from the table: "case_study_market" */
  case_study_market: Array<Case_Study_Market>;
  /** fetch aggregated fields from the table: "case_study_market" */
  case_study_market_aggregate: Case_Study_Market_Aggregate;
  /** fetch data from the table: "case_study_market" using primary key columns */
  case_study_market_by_pk?: Maybe<Case_Study_Market>;
  /** fetch data from the table: "case_study_skill" */
  case_study_skill: Array<Case_Study_Skill>;
  /** fetch aggregated fields from the table: "case_study_skill" */
  case_study_skill_aggregate: Case_Study_Skill_Aggregate;
  /** fetch data from the table: "case_study_skill" using primary key columns */
  case_study_skill_by_pk?: Maybe<Case_Study_Skill>;
  /** fetch data from the table: "case_study_team" */
  case_study_team: Array<Case_Study_Team>;
  /** fetch aggregated fields from the table: "case_study_team" */
  case_study_team_aggregate: Case_Study_Team_Aggregate;
  /** fetch data from the table: "case_study_team" using primary key columns */
  case_study_team_by_pk?: Maybe<Case_Study_Team>;
  /** fetch data from the table: "case_study_user" */
  case_study_user: Array<Case_Study_User>;
  /** fetch aggregated fields from the table: "case_study_user" */
  case_study_user_aggregate: Case_Study_User_Aggregate;
  /** fetch data from the table: "case_study_user" using primary key columns */
  case_study_user_by_pk?: Maybe<Case_Study_User>;
  /** fetch data from the table: "company" */
  company: Array<Company>;
  /** fetch aggregated fields from the table: "company" */
  company_aggregate: Company_Aggregate;
  /** fetch data from the table: "company" using primary key columns */
  company_by_pk?: Maybe<Company>;
  /** fetch data from the table: "company_contact" */
  company_contact: Array<Company_Contact>;
  /** fetch aggregated fields from the table: "company_contact" */
  company_contact_aggregate: Company_Contact_Aggregate;
  /** fetch data from the table: "company_contact" using primary key columns */
  company_contact_by_pk?: Maybe<Company_Contact>;
  /** fetch data from the table: "company_team" */
  company_team: Array<Company_Team>;
  /** fetch aggregated fields from the table: "company_team" */
  company_team_aggregate: Company_Team_Aggregate;
  /** fetch data from the table: "company_team" using primary key columns */
  company_team_by_pk?: Maybe<Company_Team>;
  /** fetch data from the table: "company_team_contributor" */
  company_team_contributor: Array<Company_Team_Contributor>;
  /** fetch aggregated fields from the table: "company_team_contributor" */
  company_team_contributor_aggregate: Company_Team_Contributor_Aggregate;
  /** fetch data from the table: "company_team_contributor" using primary key columns */
  company_team_contributor_by_pk?: Maybe<Company_Team_Contributor>;
  /** fetch data from the table: "contributor_type" */
  contributor_type: Array<Contributor_Type>;
  /** fetch aggregated fields from the table: "contributor_type" */
  contributor_type_aggregate: Contributor_Type_Aggregate;
  /** fetch data from the table: "contributor_type" using primary key columns */
  contributor_type_by_pk?: Maybe<Contributor_Type>;
  /** fetch data from the table: "current_user_meta" */
  current_user_meta: Array<Current_User_Meta>;
  /** fetch aggregated fields from the table: "current_user_meta" */
  current_user_meta_aggregate: Current_User_Meta_Aggregate;
  /** fetch data from the table: "custom_payout" */
  custom_payout: Array<Custom_Payout>;
  /** fetch aggregated fields from the table: "custom_payout" */
  custom_payout_aggregate: Custom_Payout_Aggregate;
  /** fetch data from the table: "custom_payout" using primary key columns */
  custom_payout_by_pk?: Maybe<Custom_Payout>;
  /** fetch data from the table: "custom_payout_line_item" */
  custom_payout_line_item: Array<Custom_Payout_Line_Item>;
  /** fetch aggregated fields from the table: "custom_payout_line_item" */
  custom_payout_line_item_aggregate: Custom_Payout_Line_Item_Aggregate;
  /** fetch data from the table: "custom_payout_line_item" using primary key columns */
  custom_payout_line_item_by_pk?: Maybe<Custom_Payout_Line_Item>;
  /** fetch data from the table: "custom_project_distribution" */
  custom_project_distribution: Array<Custom_Project_Distribution>;
  /** fetch aggregated fields from the table: "custom_project_distribution" */
  custom_project_distribution_aggregate: Custom_Project_Distribution_Aggregate;
  /** fetch data from the table: "custom_project_distribution" using primary key columns */
  custom_project_distribution_by_pk?: Maybe<Custom_Project_Distribution>;
  /** fetch data from the table: "custom_project_payout_distribution" */
  custom_project_payout_distribution: Array<Custom_Project_Payout_Distribution>;
  /** fetch aggregated fields from the table: "custom_project_payout_distribution" */
  custom_project_payout_distribution_aggregate: Custom_Project_Payout_Distribution_Aggregate;
  /** fetch data from the table: "custom_project_payout_distribution" using primary key columns */
  custom_project_payout_distribution_by_pk?: Maybe<Custom_Project_Payout_Distribution>;
  /** fetch data from the table: "customer" */
  customer: Array<Customer>;
  /** fetch aggregated fields from the table: "customer" */
  customer_aggregate: Customer_Aggregate;
  /** fetch data from the table: "customer" using primary key columns */
  customer_by_pk?: Maybe<Customer>;
  /** fetch data from the table: "customer_closing_party" */
  customer_closing_party: Array<Customer_Closing_Party>;
  /** fetch aggregated fields from the table: "customer_closing_party" */
  customer_closing_party_aggregate: Customer_Closing_Party_Aggregate;
  /** fetch data from the table: "customer_closing_party" using primary key columns */
  customer_closing_party_by_pk?: Maybe<Customer_Closing_Party>;
  /** fetch data from the table: "customer_originating_party" */
  customer_originating_party: Array<Customer_Originating_Party>;
  /** fetch aggregated fields from the table: "customer_originating_party" */
  customer_originating_party_aggregate: Customer_Originating_Party_Aggregate;
  /** fetch data from the table: "customer_originating_party" using primary key columns */
  customer_originating_party_by_pk?: Maybe<Customer_Originating_Party>;
  /** fetch data from the table: "customer_referrer" */
  customer_referrer: Array<Customer_Referrer>;
  /** fetch aggregated fields from the table: "customer_referrer" */
  customer_referrer_aggregate: Customer_Referrer_Aggregate;
  /** fetch data from the table: "customer_referrer" using primary key columns */
  customer_referrer_by_pk?: Maybe<Customer_Referrer>;
  /** fetch data from the table: "document" */
  document: Array<Document>;
  /** fetch aggregated fields from the table: "document" */
  document_aggregate: Document_Aggregate;
  /** fetch data from the table: "document_associated_company" */
  document_associated_company: Array<Document_Associated_Company>;
  /** fetch aggregated fields from the table: "document_associated_company" */
  document_associated_company_aggregate: Document_Associated_Company_Aggregate;
  /** fetch data from the table: "document_associated_company" using primary key columns */
  document_associated_company_by_pk?: Maybe<Document_Associated_Company>;
  /** fetch data from the table: "document_associated_user" */
  document_associated_user: Array<Document_Associated_User>;
  /** fetch aggregated fields from the table: "document_associated_user" */
  document_associated_user_aggregate: Document_Associated_User_Aggregate;
  /** fetch data from the table: "document_associated_user" using primary key columns */
  document_associated_user_by_pk?: Maybe<Document_Associated_User>;
  /** fetch data from the table: "document" using primary key columns */
  document_by_pk?: Maybe<Document>;
  /** fetch data from the table: "document_extra_field" */
  document_extra_field: Array<Document_Extra_Field>;
  /** fetch aggregated fields from the table: "document_extra_field" */
  document_extra_field_aggregate: Document_Extra_Field_Aggregate;
  /** fetch data from the table: "document_extra_field" using primary key columns */
  document_extra_field_by_pk?: Maybe<Document_Extra_Field>;
  /** fetch data from the table: "document_extra_field_value" */
  document_extra_field_value: Array<Document_Extra_Field_Value>;
  /** fetch aggregated fields from the table: "document_extra_field_value" */
  document_extra_field_value_aggregate: Document_Extra_Field_Value_Aggregate;
  /** fetch data from the table: "document_extra_field_value" using primary key columns */
  document_extra_field_value_by_pk?: Maybe<Document_Extra_Field_Value>;
  /** fetch data from the table: "document_type" */
  document_type: Array<Document_Type>;
  /** fetch aggregated fields from the table: "document_type" */
  document_type_aggregate: Document_Type_Aggregate;
  /** fetch data from the table: "document_type" using primary key columns */
  document_type_by_pk?: Maybe<Document_Type>;
  /** fetch data from the table: "endpoint" */
  endpoint: Array<Endpoint>;
  /** fetch aggregated fields from the table: "endpoint" */
  endpoint_aggregate: Endpoint_Aggregate;
  /** fetch data from the table: "endpoint" using primary key columns */
  endpoint_by_pk?: Maybe<Endpoint>;
  fetchUserPrivateInformation: UserPrivateInformationData;
  /** fetch data from the table: "fixed_price_invoice_line_item" */
  fixed_price_invoice_line_item: Array<Fixed_Price_Invoice_Line_Item>;
  /** fetch aggregated fields from the table: "fixed_price_invoice_line_item" */
  fixed_price_invoice_line_item_aggregate: Fixed_Price_Invoice_Line_Item_Aggregate;
  /** fetch data from the table: "fixed_price_invoice_line_item" using primary key columns */
  fixed_price_invoice_line_item_by_pk?: Maybe<Fixed_Price_Invoice_Line_Item>;
  getGoogleGroups: Array<GoogleGroup>;
  getGoogleUser: GoogleUser;
  getGoogleUsers: Array<GoogleUser>;
  getIntranetUserByID: UserDetailsForIntranetData;
  getSlackChannels: Array<SlackChannel>;
  getSlackUserChannels: Array<SlackChannel>;
  getSlackUserList: Array<SlackUser>;
  getUserCognitoAttributes: CognitoUserAttributes;
  getUsersListForGoogleScripts: GetUsersListForGoogleScriptsResult;
  health: Scalars['String'];
  /** fetch data from the table: "in_market_experience_level" */
  in_market_experience_level: Array<In_Market_Experience_Level>;
  /** fetch aggregated fields from the table: "in_market_experience_level" */
  in_market_experience_level_aggregate: In_Market_Experience_Level_Aggregate;
  /** fetch data from the table: "in_market_experience_level" using primary key columns */
  in_market_experience_level_by_pk?: Maybe<In_Market_Experience_Level>;
  /** fetch data from the table: "industry" */
  industry: Array<Industry>;
  /** fetch aggregated fields from the table: "industry" */
  industry_aggregate: Industry_Aggregate;
  /** fetch data from the table: "industry" using primary key columns */
  industry_by_pk?: Maybe<Industry>;
  /** fetch data from the table: "industry_experience_level" */
  industry_experience_level: Array<Industry_Experience_Level>;
  /** fetch aggregated fields from the table: "industry_experience_level" */
  industry_experience_level_aggregate: Industry_Experience_Level_Aggregate;
  /** fetch data from the table: "industry_experience_level" using primary key columns */
  industry_experience_level_by_pk?: Maybe<Industry_Experience_Level>;
  /** fetch data from the table: "industry_google_group" */
  industry_google_group: Array<Industry_Google_Group>;
  /** fetch aggregated fields from the table: "industry_google_group" */
  industry_google_group_aggregate: Industry_Google_Group_Aggregate;
  /** fetch data from the table: "industry_google_group" using primary key columns */
  industry_google_group_by_pk?: Maybe<Industry_Google_Group>;
  /** fetch data from the table: "industry_slack_channel" */
  industry_slack_channel: Array<Industry_Slack_Channel>;
  /** fetch aggregated fields from the table: "industry_slack_channel" */
  industry_slack_channel_aggregate: Industry_Slack_Channel_Aggregate;
  /** fetch data from the table: "industry_slack_channel" using primary key columns */
  industry_slack_channel_by_pk?: Maybe<Industry_Slack_Channel>;
  /** fetch data from the table: "invoice" */
  invoice: Array<Invoice>;
  /** fetch aggregated fields from the table: "invoice" */
  invoice_aggregate: Invoice_Aggregate;
  /** fetch data from the table: "invoice" using primary key columns */
  invoice_by_pk?: Maybe<Invoice>;
  /** fetch data from the table: "invoice_distribution" */
  invoice_distribution: Array<Invoice_Distribution>;
  /** fetch aggregated fields from the table: "invoice_distribution" */
  invoice_distribution_aggregate: Invoice_Distribution_Aggregate;
  /** fetch data from the table: "invoice_distribution" using primary key columns */
  invoice_distribution_by_pk?: Maybe<Invoice_Distribution>;
  /** fetch data from the table: "invoice_service_type" */
  invoice_service_type: Array<Invoice_Service_Type>;
  /** fetch aggregated fields from the table: "invoice_service_type" */
  invoice_service_type_aggregate: Invoice_Service_Type_Aggregate;
  /** fetch data from the table: "invoice_service_type" using primary key columns */
  invoice_service_type_by_pk?: Maybe<Invoice_Service_Type>;
  /** fetch data from the table: "invoice_status" */
  invoice_status: Array<Invoice_Status>;
  /** fetch aggregated fields from the table: "invoice_status" */
  invoice_status_aggregate: Invoice_Status_Aggregate;
  /** fetch data from the table: "invoice_status" using primary key columns */
  invoice_status_by_pk?: Maybe<Invoice_Status>;
  /** fetch data from the table: "invoice_term" */
  invoice_term: Array<Invoice_Term>;
  /** fetch aggregated fields from the table: "invoice_term" */
  invoice_term_aggregate: Invoice_Term_Aggregate;
  /** fetch data from the table: "invoice_term" using primary key columns */
  invoice_term_by_pk?: Maybe<Invoice_Term>;
  /** fetch data from the table: "language_level" */
  language_level: Array<Language_Level>;
  /** fetch aggregated fields from the table: "language_level" */
  language_level_aggregate: Language_Level_Aggregate;
  /** fetch data from the table: "language_level" using primary key columns */
  language_level_by_pk?: Maybe<Language_Level>;
  /** fetch data from the table: "late_payment_period" */
  late_payment_period: Array<Late_Payment_Period>;
  /** fetch aggregated fields from the table: "late_payment_period" */
  late_payment_period_aggregate: Late_Payment_Period_Aggregate;
  /** fetch data from the table: "late_payment_period" using primary key columns */
  late_payment_period_by_pk?: Maybe<Late_Payment_Period>;
  listUsersIntranet: Array<UserDetailsForIntranetData>;
  /** fetch data from the table: "no_of_employees" */
  no_of_employees: Array<No_Of_Employees>;
  /** fetch aggregated fields from the table: "no_of_employees" */
  no_of_employees_aggregate: No_Of_Employees_Aggregate;
  /** fetch data from the table: "no_of_employees" using primary key columns */
  no_of_employees_by_pk?: Maybe<No_Of_Employees>;
  /** fetch data from the table: "partner" */
  partner: Array<Partner>;
  /** fetch aggregated fields from the table: "partner" */
  partner_aggregate: Partner_Aggregate;
  /** fetch data from the table: "partner" using primary key columns */
  partner_by_pk?: Maybe<Partner>;
  /** fetch data from the table: "partner_category" */
  partner_category: Array<Partner_Category>;
  /** fetch aggregated fields from the table: "partner_category" */
  partner_category_aggregate: Partner_Category_Aggregate;
  /** fetch data from the table: "partner_category" using primary key columns */
  partner_category_by_pk?: Maybe<Partner_Category>;
  /** fetch data from the table: "partner_custom_field" */
  partner_custom_field: Array<Partner_Custom_Field>;
  /** fetch aggregated fields from the table: "partner_custom_field" */
  partner_custom_field_aggregate: Partner_Custom_Field_Aggregate;
  /** fetch data from the table: "partner_custom_field" using primary key columns */
  partner_custom_field_by_pk?: Maybe<Partner_Custom_Field>;
  /** fetch data from the table: "partner_gallery_image" */
  partner_gallery_image: Array<Partner_Gallery_Image>;
  /** fetch aggregated fields from the table: "partner_gallery_image" */
  partner_gallery_image_aggregate: Partner_Gallery_Image_Aggregate;
  /** fetch data from the table: "partner_gallery_image" using primary key columns */
  partner_gallery_image_by_pk?: Maybe<Partner_Gallery_Image>;
  /** fetch data from the table: "payout_distribution" */
  payout_distribution: Array<Payout_Distribution>;
  /** fetch aggregated fields from the table: "payout_distribution" */
  payout_distribution_aggregate: Payout_Distribution_Aggregate;
  /** fetch data from the table: "payout_distribution" using primary key columns */
  payout_distribution_by_pk?: Maybe<Payout_Distribution>;
  /** fetch data from the table: "product_or_service_type" */
  product_or_service_type: Array<Product_Or_Service_Type>;
  /** fetch aggregated fields from the table: "product_or_service_type" */
  product_or_service_type_aggregate: Product_Or_Service_Type_Aggregate;
  /** fetch data from the table: "product_or_service_type" using primary key columns */
  product_or_service_type_by_pk?: Maybe<Product_Or_Service_Type>;
  /** fetch data from the table: "public_user_meta" */
  public_user_meta: Array<Public_User_Meta>;
  /** fetch aggregated fields from the table: "public_user_meta" */
  public_user_meta_aggregate: Public_User_Meta_Aggregate;
  /** fetch data from the table: "recurring_interval" */
  recurring_interval: Array<Recurring_Interval>;
  /** fetch aggregated fields from the table: "recurring_interval" */
  recurring_interval_aggregate: Recurring_Interval_Aggregate;
  /** fetch data from the table: "recurring_interval" using primary key columns */
  recurring_interval_by_pk?: Maybe<Recurring_Interval>;
  /** fetch data from the table: "route" */
  route: Array<Route>;
  /** fetch aggregated fields from the table: "route" */
  route_aggregate: Route_Aggregate;
  /** fetch data from the table: "route" using primary key columns */
  route_by_pk?: Maybe<Route>;
  /** fetch data from the table: "route_endpoint" */
  route_endpoint: Array<Route_Endpoint>;
  /** fetch aggregated fields from the table: "route_endpoint" */
  route_endpoint_aggregate: Route_Endpoint_Aggregate;
  /** fetch data from the table: "route_endpoint" using primary key columns */
  route_endpoint_by_pk?: Maybe<Route_Endpoint>;
  /** fetch data from the table: "route_group" */
  route_group: Array<Route_Group>;
  /** fetch aggregated fields from the table: "route_group" */
  route_group_aggregate: Route_Group_Aggregate;
  /** fetch data from the table: "route_group" using primary key columns */
  route_group_by_pk?: Maybe<Route_Group>;
  /** fetch data from the table: "skill" */
  skill: Array<Skill>;
  /** fetch aggregated fields from the table: "skill" */
  skill_aggregate: Skill_Aggregate;
  /** fetch data from the table: "skill" using primary key columns */
  skill_by_pk?: Maybe<Skill>;
  /** fetch data from the table: "skill_category" */
  skill_category: Array<Skill_Category>;
  /** fetch aggregated fields from the table: "skill_category" */
  skill_category_aggregate: Skill_Category_Aggregate;
  /** fetch data from the table: "skill_category" using primary key columns */
  skill_category_by_pk?: Maybe<Skill_Category>;
  /** fetch data from the table: "skill_google_group" */
  skill_google_group: Array<Skill_Google_Group>;
  /** fetch aggregated fields from the table: "skill_google_group" */
  skill_google_group_aggregate: Skill_Google_Group_Aggregate;
  /** fetch data from the table: "skill_google_group" using primary key columns */
  skill_google_group_by_pk?: Maybe<Skill_Google_Group>;
  /** fetch data from the table: "skill_level" */
  skill_level: Array<Skill_Level>;
  /** fetch aggregated fields from the table: "skill_level" */
  skill_level_aggregate: Skill_Level_Aggregate;
  /** fetch data from the table: "skill_level" using primary key columns */
  skill_level_by_pk?: Maybe<Skill_Level>;
  /** An array relationship */
  skill_skill_categories: Array<Skill_Skill_Categories>;
  /** An aggregate relationship */
  skill_skill_categories_aggregate: Skill_Skill_Categories_Aggregate;
  /** fetch data from the table: "skill_skill_categories" using primary key columns */
  skill_skill_categories_by_pk?: Maybe<Skill_Skill_Categories>;
  /** fetch data from the table: "skill_slack_channel" */
  skill_slack_channel: Array<Skill_Slack_Channel>;
  /** fetch aggregated fields from the table: "skill_slack_channel" */
  skill_slack_channel_aggregate: Skill_Slack_Channel_Aggregate;
  /** fetch data from the table: "skill_slack_channel" using primary key columns */
  skill_slack_channel_by_pk?: Maybe<Skill_Slack_Channel>;
  /** fetch data from the table: "slack_answer" */
  slack_answer: Array<Slack_Answer>;
  /** fetch aggregated fields from the table: "slack_answer" */
  slack_answer_aggregate: Slack_Answer_Aggregate;
  /** fetch data from the table: "slack_answer" using primary key columns */
  slack_answer_by_pk?: Maybe<Slack_Answer>;
  /** fetch data from the table: "slack_availability" */
  slack_availability: Array<Slack_Availability>;
  /** fetch aggregated fields from the table: "slack_availability" */
  slack_availability_aggregate: Slack_Availability_Aggregate;
  /** fetch data from the table: "slack_birthday_and_anniversary_message" */
  slack_birthday_and_anniversary_message: Array<Slack_Birthday_And_Anniversary_Message>;
  /** fetch aggregated fields from the table: "slack_birthday_and_anniversary_message" */
  slack_birthday_and_anniversary_message_aggregate: Slack_Birthday_And_Anniversary_Message_Aggregate;
  /** fetch data from the table: "slack_birthday_and_anniversary_message" using primary key columns */
  slack_birthday_and_anniversary_message_by_pk?: Maybe<Slack_Birthday_And_Anniversary_Message>;
  /** fetch data from the table: "slack_message" */
  slack_message: Array<Slack_Message>;
  /** fetch aggregated fields from the table: "slack_message" */
  slack_message_aggregate: Slack_Message_Aggregate;
  /** fetch data from the table: "slack_message" using primary key columns */
  slack_message_by_pk?: Maybe<Slack_Message>;
  /** fetch data from the table: "slack_message_trigger_log" */
  slack_message_trigger_log: Array<Slack_Message_Trigger_Log>;
  /** fetch aggregated fields from the table: "slack_message_trigger_log" */
  slack_message_trigger_log_aggregate: Slack_Message_Trigger_Log_Aggregate;
  /** fetch data from the table: "slack_message_trigger_log" using primary key columns */
  slack_message_trigger_log_by_pk?: Maybe<Slack_Message_Trigger_Log>;
  /** fetch data from the table: "slack_outreach" */
  slack_outreach: Array<Slack_Outreach>;
  /** fetch aggregated fields from the table: "slack_outreach" */
  slack_outreach_aggregate: Slack_Outreach_Aggregate;
  /** fetch data from the table: "slack_outreach" using primary key columns */
  slack_outreach_by_pk?: Maybe<Slack_Outreach>;
  /** fetch data from the table: "team" */
  team: Array<Team>;
  /** fetch aggregated fields from the table: "team" */
  team_aggregate: Team_Aggregate;
  /** fetch data from the table: "team" using primary key columns */
  team_by_pk?: Maybe<Team>;
  /** fetch data from the table: "team_google_group" */
  team_google_group: Array<Team_Google_Group>;
  /** fetch aggregated fields from the table: "team_google_group" */
  team_google_group_aggregate: Team_Google_Group_Aggregate;
  /** fetch data from the table: "team_google_group" using primary key columns */
  team_google_group_by_pk?: Maybe<Team_Google_Group>;
  /** fetch data from the table: "team_industry" */
  team_industry: Array<Team_Industry>;
  /** fetch aggregated fields from the table: "team_industry" */
  team_industry_aggregate: Team_Industry_Aggregate;
  /** fetch data from the table: "team_industry" using primary key columns */
  team_industry_by_pk?: Maybe<Team_Industry>;
  /** fetch data from the table: "team_skill" */
  team_skill: Array<Team_Skill>;
  /** fetch aggregated fields from the table: "team_skill" */
  team_skill_aggregate: Team_Skill_Aggregate;
  /** fetch data from the table: "team_skill" using primary key columns */
  team_skill_by_pk?: Maybe<Team_Skill>;
  /** fetch data from the table: "team_slack_channel" */
  team_slack_channel: Array<Team_Slack_Channel>;
  /** fetch aggregated fields from the table: "team_slack_channel" */
  team_slack_channel_aggregate: Team_Slack_Channel_Aggregate;
  /** fetch data from the table: "team_slack_channel" using primary key columns */
  team_slack_channel_by_pk?: Maybe<Team_Slack_Channel>;
  /** fetch data from the table: "time_and_material_invoice_line_item" */
  time_and_material_invoice_line_item: Array<Time_And_Material_Invoice_Line_Item>;
  /** fetch aggregated fields from the table: "time_and_material_invoice_line_item" */
  time_and_material_invoice_line_item_aggregate: Time_And_Material_Invoice_Line_Item_Aggregate;
  /** fetch data from the table: "time_and_material_invoice_line_item" using primary key columns */
  time_and_material_invoice_line_item_by_pk?: Maybe<Time_And_Material_Invoice_Line_Item>;
  /** fetch data from the table: "tool" */
  tool: Array<Tool>;
  /** fetch aggregated fields from the table: "tool" */
  tool_aggregate: Tool_Aggregate;
  /** fetch data from the table: "tool" using primary key columns */
  tool_by_pk?: Maybe<Tool>;
  /** fetch data from the table: "trigger" */
  trigger: Array<Trigger>;
  /** fetch aggregated fields from the table: "trigger" */
  trigger_aggregate: Trigger_Aggregate;
  /** fetch data from the table: "trigger" using primary key columns */
  trigger_by_pk?: Maybe<Trigger>;
  userDetailsForGoogleSlides: UserProfile;
  userListForSlackBot: Array<UserForSlackBotResult>;
  /** fetch data from the table: "user_basic_information" */
  user_basic_information: Array<User_Basic_Information>;
  /** fetch aggregated fields from the table: "user_basic_information" */
  user_basic_information_aggregate: User_Basic_Information_Aggregate;
  /** fetch data from the table: "user_basic_information" using primary key columns */
  user_basic_information_by_pk?: Maybe<User_Basic_Information>;
  /** fetch data from the table: "user_company" */
  user_company: Array<User_Company>;
  /** fetch aggregated fields from the table: "user_company" */
  user_company_aggregate: User_Company_Aggregate;
  /** fetch data from the table: "user_company" using primary key columns */
  user_company_by_pk?: Maybe<User_Company>;
  /** fetch data from the table: "user_completed_customer_sale" */
  user_completed_customer_sale: Array<User_Completed_Customer_Sale>;
  /** fetch aggregated fields from the table: "user_completed_customer_sale" */
  user_completed_customer_sale_aggregate: User_Completed_Customer_Sale_Aggregate;
  /** fetch data from the table: "user_completed_customer_sale" using primary key columns */
  user_completed_customer_sale_by_pk?: Maybe<User_Completed_Customer_Sale>;
  /** fetch data from the table: "user_in_market_experience" */
  user_in_market_experience: Array<User_In_Market_Experience>;
  /** fetch aggregated fields from the table: "user_in_market_experience" */
  user_in_market_experience_aggregate: User_In_Market_Experience_Aggregate;
  /** fetch data from the table: "user_in_market_experience" using primary key columns */
  user_in_market_experience_by_pk?: Maybe<User_In_Market_Experience>;
  /** fetch data from the table: "user_industry_experience" */
  user_industry_experience: Array<User_Industry_Experience>;
  /** fetch aggregated fields from the table: "user_industry_experience" */
  user_industry_experience_aggregate: User_Industry_Experience_Aggregate;
  /** fetch data from the table: "user_industry_experience" using primary key columns */
  user_industry_experience_by_pk?: Maybe<User_Industry_Experience>;
  /** fetch data from the table: "user_language" */
  user_language: Array<User_Language>;
  /** fetch aggregated fields from the table: "user_language" */
  user_language_aggregate: User_Language_Aggregate;
  /** fetch data from the table: "user_language" using primary key columns */
  user_language_by_pk?: Maybe<User_Language>;
  /** An array relationship */
  user_meta: Array<User_Meta>;
  /** An aggregate relationship */
  user_meta_aggregate: User_Meta_Aggregate;
  /** fetch data from the table: "user_meta" using primary key columns */
  user_meta_by_pk?: Maybe<User_Meta>;
  /** fetch data from the table: "user_meta_user_role" */
  user_meta_user_role: Array<User_Meta_User_Role>;
  /** fetch aggregated fields from the table: "user_meta_user_role" */
  user_meta_user_role_aggregate: User_Meta_User_Role_Aggregate;
  /** fetch data from the table: "user_meta_user_role" using primary key columns */
  user_meta_user_role_by_pk?: Maybe<User_Meta_User_Role>;
  /** fetch data from the table: "user_professional_information" */
  user_professional_information: Array<User_Professional_Information>;
  /** fetch aggregated fields from the table: "user_professional_information" */
  user_professional_information_aggregate: User_Professional_Information_Aggregate;
  /** fetch data from the table: "user_professional_information" using primary key columns */
  user_professional_information_by_pk?: Maybe<User_Professional_Information>;
  /** fetch data from the table: "user_profile" */
  user_profile: Array<User_Profile>;
  /** fetch aggregated fields from the table: "user_profile" */
  user_profile_aggregate: User_Profile_Aggregate;
  /** fetch data from the table: "user_profile" using primary key columns */
  user_profile_by_pk?: Maybe<User_Profile>;
  /** fetch data from the table: "user_profile_company" */
  user_profile_company: Array<User_Profile_Company>;
  /** fetch aggregated fields from the table: "user_profile_company" */
  user_profile_company_aggregate: User_Profile_Company_Aggregate;
  /** fetch data from the table: "user_profile_company" using primary key columns */
  user_profile_company_by_pk?: Maybe<User_Profile_Company>;
  /** fetch data from the table: "user_profile_industry" */
  user_profile_industry: Array<User_Profile_Industry>;
  /** fetch aggregated fields from the table: "user_profile_industry" */
  user_profile_industry_aggregate: User_Profile_Industry_Aggregate;
  /** fetch data from the table: "user_profile_industry" using primary key columns */
  user_profile_industry_by_pk?: Maybe<User_Profile_Industry>;
  /** fetch data from the table: "user_profile_skill" */
  user_profile_skill: Array<User_Profile_Skill>;
  /** fetch aggregated fields from the table: "user_profile_skill" */
  user_profile_skill_aggregate: User_Profile_Skill_Aggregate;
  /** fetch data from the table: "user_profile_skill" using primary key columns */
  user_profile_skill_by_pk?: Maybe<User_Profile_Skill>;
  /** fetch data from the table: "user_profile_tab" */
  user_profile_tab: Array<User_Profile_Tab>;
  /** fetch aggregated fields from the table: "user_profile_tab" */
  user_profile_tab_aggregate: User_Profile_Tab_Aggregate;
  /** fetch data from the table: "user_profile_tab" using primary key columns */
  user_profile_tab_by_pk?: Maybe<User_Profile_Tab>;
  /** fetch data from the table: "user_profile_tab_endpoint" */
  user_profile_tab_endpoint: Array<User_Profile_Tab_Endpoint>;
  /** fetch aggregated fields from the table: "user_profile_tab_endpoint" */
  user_profile_tab_endpoint_aggregate: User_Profile_Tab_Endpoint_Aggregate;
  /** fetch data from the table: "user_profile_tab_endpoint" using primary key columns */
  user_profile_tab_endpoint_by_pk?: Maybe<User_Profile_Tab_Endpoint>;
  /** fetch data from the table: "user_profile_team" */
  user_profile_team: Array<User_Profile_Team>;
  /** fetch aggregated fields from the table: "user_profile_team" */
  user_profile_team_aggregate: User_Profile_Team_Aggregate;
  /** fetch data from the table: "user_profile_team" using primary key columns */
  user_profile_team_by_pk?: Maybe<User_Profile_Team>;
  /** fetch data from the table: "user_profile_visibility" */
  user_profile_visibility: Array<User_Profile_Visibility>;
  /** fetch aggregated fields from the table: "user_profile_visibility" */
  user_profile_visibility_aggregate: User_Profile_Visibility_Aggregate;
  /** fetch data from the table: "user_profile_visibility" using primary key columns */
  user_profile_visibility_by_pk?: Maybe<User_Profile_Visibility>;
  /** fetch data from the table: "user_role" */
  user_role: Array<User_Role>;
  /** fetch aggregated fields from the table: "user_role" */
  user_role_aggregate: User_Role_Aggregate;
  /** fetch data from the table: "user_role" using primary key columns */
  user_role_by_pk?: Maybe<User_Role>;
  /** fetch data from the table: "user_role_capability" */
  user_role_capability: Array<User_Role_Capability>;
  /** fetch aggregated fields from the table: "user_role_capability" */
  user_role_capability_aggregate: User_Role_Capability_Aggregate;
  /** fetch data from the table: "user_role_capability" using primary key columns */
  user_role_capability_by_pk?: Maybe<User_Role_Capability>;
  /** fetch data from the table: "user_role_route" */
  user_role_route: Array<User_Role_Route>;
  /** fetch aggregated fields from the table: "user_role_route" */
  user_role_route_aggregate: User_Role_Route_Aggregate;
  /** fetch data from the table: "user_role_route" using primary key columns */
  user_role_route_by_pk?: Maybe<User_Role_Route>;
  /** fetch data from the table: "user_role_user_profile_tab" */
  user_role_user_profile_tab: Array<User_Role_User_Profile_Tab>;
  /** fetch aggregated fields from the table: "user_role_user_profile_tab" */
  user_role_user_profile_tab_aggregate: User_Role_User_Profile_Tab_Aggregate;
  /** fetch data from the table: "user_role_user_profile_tab" using primary key columns */
  user_role_user_profile_tab_by_pk?: Maybe<User_Role_User_Profile_Tab>;
  /** fetch data from the table: "user_skill" */
  user_skill: Array<User_Skill>;
  /** fetch aggregated fields from the table: "user_skill" */
  user_skill_aggregate: User_Skill_Aggregate;
  /** fetch data from the table: "user_skill" using primary key columns */
  user_skill_by_pk?: Maybe<User_Skill>;
  /** fetch data from the table: "user_work_experience" */
  user_work_experience: Array<User_Work_Experience>;
  /** fetch aggregated fields from the table: "user_work_experience" */
  user_work_experience_aggregate: User_Work_Experience_Aggregate;
  /** fetch data from the table: "user_work_experience" using primary key columns */
  user_work_experience_by_pk?: Maybe<User_Work_Experience>;
  /** fetch data from the table: "webhook" */
  webhook: Array<Webhook>;
  /** fetch aggregated fields from the table: "webhook" */
  webhook_aggregate: Webhook_Aggregate;
  /** fetch data from the table: "webhook" using primary key columns */
  webhook_by_pk?: Maybe<Webhook>;
  /** fetch data from the table: "webhook_trigger" */
  webhook_trigger: Array<Webhook_Trigger>;
  /** fetch aggregated fields from the table: "webhook_trigger" */
  webhook_trigger_aggregate: Webhook_Trigger_Aggregate;
  /** fetch data from the table: "webhook_trigger" using primary key columns */
  webhook_trigger_by_pk?: Maybe<Webhook_Trigger>;
};

export type Query_RootApi_User_TokenArgs = {
  distinct_on?: InputMaybe<Array<Api_User_Token_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Api_User_Token_Order_By>>;
  where?: InputMaybe<Api_User_Token_Bool_Exp>;
};

export type Query_RootApi_User_Token_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Api_User_Token_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Api_User_Token_Order_By>>;
  where?: InputMaybe<Api_User_Token_Bool_Exp>;
};

export type Query_RootApi_User_Token_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Query_RootBilling_FrequencyArgs = {
  distinct_on?: InputMaybe<Array<Billing_Frequency_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Billing_Frequency_Order_By>>;
  where?: InputMaybe<Billing_Frequency_Bool_Exp>;
};

export type Query_RootBilling_Frequency_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Billing_Frequency_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Billing_Frequency_Order_By>>;
  where?: InputMaybe<Billing_Frequency_Bool_Exp>;
};

export type Query_RootBilling_Frequency_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Query_RootBookmark_FolderArgs = {
  distinct_on?: InputMaybe<Array<Bookmark_Folder_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Bookmark_Folder_Order_By>>;
  where?: InputMaybe<Bookmark_Folder_Bool_Exp>;
};

export type Query_RootBookmark_Folder_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Bookmark_Folder_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Bookmark_Folder_Order_By>>;
  where?: InputMaybe<Bookmark_Folder_Bool_Exp>;
};

export type Query_RootBookmark_Folder_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Query_RootBookmark_LinkArgs = {
  distinct_on?: InputMaybe<Array<Bookmark_Link_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Bookmark_Link_Order_By>>;
  where?: InputMaybe<Bookmark_Link_Bool_Exp>;
};

export type Query_RootBookmark_Link_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Bookmark_Link_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Bookmark_Link_Order_By>>;
  where?: InputMaybe<Bookmark_Link_Bool_Exp>;
};

export type Query_RootBookmark_Link_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Query_RootCapabilityArgs = {
  distinct_on?: InputMaybe<Array<Capability_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Capability_Order_By>>;
  where?: InputMaybe<Capability_Bool_Exp>;
};

export type Query_RootCapability_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Capability_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Capability_Order_By>>;
  where?: InputMaybe<Capability_Bool_Exp>;
};

export type Query_RootCapability_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Query_RootCapability_EndpointArgs = {
  distinct_on?: InputMaybe<Array<Capability_Endpoint_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Capability_Endpoint_Order_By>>;
  where?: InputMaybe<Capability_Endpoint_Bool_Exp>;
};

export type Query_RootCapability_Endpoint_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Capability_Endpoint_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Capability_Endpoint_Order_By>>;
  where?: InputMaybe<Capability_Endpoint_Bool_Exp>;
};

export type Query_RootCapability_Endpoint_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Query_RootCase_StudyArgs = {
  distinct_on?: InputMaybe<Array<Case_Study_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Case_Study_Order_By>>;
  where?: InputMaybe<Case_Study_Bool_Exp>;
};

export type Query_RootCase_Study_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Case_Study_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Case_Study_Order_By>>;
  where?: InputMaybe<Case_Study_Bool_Exp>;
};

export type Query_RootCase_Study_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Query_RootCase_Study_CompanyArgs = {
  distinct_on?: InputMaybe<Array<Case_Study_Company_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Case_Study_Company_Order_By>>;
  where?: InputMaybe<Case_Study_Company_Bool_Exp>;
};

export type Query_RootCase_Study_Company_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Case_Study_Company_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Case_Study_Company_Order_By>>;
  where?: InputMaybe<Case_Study_Company_Bool_Exp>;
};

export type Query_RootCase_Study_Company_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Query_RootCase_Study_IndustryArgs = {
  distinct_on?: InputMaybe<Array<Case_Study_Industry_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Case_Study_Industry_Order_By>>;
  where?: InputMaybe<Case_Study_Industry_Bool_Exp>;
};

export type Query_RootCase_Study_Industry_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Case_Study_Industry_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Case_Study_Industry_Order_By>>;
  where?: InputMaybe<Case_Study_Industry_Bool_Exp>;
};

export type Query_RootCase_Study_Industry_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Query_RootCase_Study_MarketArgs = {
  distinct_on?: InputMaybe<Array<Case_Study_Market_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Case_Study_Market_Order_By>>;
  where?: InputMaybe<Case_Study_Market_Bool_Exp>;
};

export type Query_RootCase_Study_Market_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Case_Study_Market_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Case_Study_Market_Order_By>>;
  where?: InputMaybe<Case_Study_Market_Bool_Exp>;
};

export type Query_RootCase_Study_Market_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Query_RootCase_Study_SkillArgs = {
  distinct_on?: InputMaybe<Array<Case_Study_Skill_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Case_Study_Skill_Order_By>>;
  where?: InputMaybe<Case_Study_Skill_Bool_Exp>;
};

export type Query_RootCase_Study_Skill_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Case_Study_Skill_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Case_Study_Skill_Order_By>>;
  where?: InputMaybe<Case_Study_Skill_Bool_Exp>;
};

export type Query_RootCase_Study_Skill_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Query_RootCase_Study_TeamArgs = {
  distinct_on?: InputMaybe<Array<Case_Study_Team_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Case_Study_Team_Order_By>>;
  where?: InputMaybe<Case_Study_Team_Bool_Exp>;
};

export type Query_RootCase_Study_Team_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Case_Study_Team_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Case_Study_Team_Order_By>>;
  where?: InputMaybe<Case_Study_Team_Bool_Exp>;
};

export type Query_RootCase_Study_Team_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Query_RootCase_Study_UserArgs = {
  distinct_on?: InputMaybe<Array<Case_Study_User_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Case_Study_User_Order_By>>;
  where?: InputMaybe<Case_Study_User_Bool_Exp>;
};

export type Query_RootCase_Study_User_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Case_Study_User_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Case_Study_User_Order_By>>;
  where?: InputMaybe<Case_Study_User_Bool_Exp>;
};

export type Query_RootCase_Study_User_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Query_RootCompanyArgs = {
  distinct_on?: InputMaybe<Array<Company_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Company_Order_By>>;
  where?: InputMaybe<Company_Bool_Exp>;
};

export type Query_RootCompany_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Company_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Company_Order_By>>;
  where?: InputMaybe<Company_Bool_Exp>;
};

export type Query_RootCompany_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Query_RootCompany_ContactArgs = {
  distinct_on?: InputMaybe<Array<Company_Contact_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Company_Contact_Order_By>>;
  where?: InputMaybe<Company_Contact_Bool_Exp>;
};

export type Query_RootCompany_Contact_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Company_Contact_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Company_Contact_Order_By>>;
  where?: InputMaybe<Company_Contact_Bool_Exp>;
};

export type Query_RootCompany_Contact_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Query_RootCompany_TeamArgs = {
  distinct_on?: InputMaybe<Array<Company_Team_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Company_Team_Order_By>>;
  where?: InputMaybe<Company_Team_Bool_Exp>;
};

export type Query_RootCompany_Team_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Company_Team_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Company_Team_Order_By>>;
  where?: InputMaybe<Company_Team_Bool_Exp>;
};

export type Query_RootCompany_Team_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Query_RootCompany_Team_ContributorArgs = {
  distinct_on?: InputMaybe<Array<Company_Team_Contributor_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Company_Team_Contributor_Order_By>>;
  where?: InputMaybe<Company_Team_Contributor_Bool_Exp>;
};

export type Query_RootCompany_Team_Contributor_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Company_Team_Contributor_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Company_Team_Contributor_Order_By>>;
  where?: InputMaybe<Company_Team_Contributor_Bool_Exp>;
};

export type Query_RootCompany_Team_Contributor_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Query_RootContributor_TypeArgs = {
  distinct_on?: InputMaybe<Array<Contributor_Type_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Contributor_Type_Order_By>>;
  where?: InputMaybe<Contributor_Type_Bool_Exp>;
};

export type Query_RootContributor_Type_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Contributor_Type_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Contributor_Type_Order_By>>;
  where?: InputMaybe<Contributor_Type_Bool_Exp>;
};

export type Query_RootContributor_Type_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Query_RootCurrent_User_MetaArgs = {
  distinct_on?: InputMaybe<Array<Current_User_Meta_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Current_User_Meta_Order_By>>;
  where?: InputMaybe<Current_User_Meta_Bool_Exp>;
};

export type Query_RootCurrent_User_Meta_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Current_User_Meta_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Current_User_Meta_Order_By>>;
  where?: InputMaybe<Current_User_Meta_Bool_Exp>;
};

export type Query_RootCustom_PayoutArgs = {
  distinct_on?: InputMaybe<Array<Custom_Payout_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Custom_Payout_Order_By>>;
  where?: InputMaybe<Custom_Payout_Bool_Exp>;
};

export type Query_RootCustom_Payout_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Custom_Payout_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Custom_Payout_Order_By>>;
  where?: InputMaybe<Custom_Payout_Bool_Exp>;
};

export type Query_RootCustom_Payout_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Query_RootCustom_Payout_Line_ItemArgs = {
  distinct_on?: InputMaybe<Array<Custom_Payout_Line_Item_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Custom_Payout_Line_Item_Order_By>>;
  where?: InputMaybe<Custom_Payout_Line_Item_Bool_Exp>;
};

export type Query_RootCustom_Payout_Line_Item_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Custom_Payout_Line_Item_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Custom_Payout_Line_Item_Order_By>>;
  where?: InputMaybe<Custom_Payout_Line_Item_Bool_Exp>;
};

export type Query_RootCustom_Payout_Line_Item_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Query_RootCustom_Project_DistributionArgs = {
  distinct_on?: InputMaybe<Array<Custom_Project_Distribution_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Custom_Project_Distribution_Order_By>>;
  where?: InputMaybe<Custom_Project_Distribution_Bool_Exp>;
};

export type Query_RootCustom_Project_Distribution_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Custom_Project_Distribution_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Custom_Project_Distribution_Order_By>>;
  where?: InputMaybe<Custom_Project_Distribution_Bool_Exp>;
};

export type Query_RootCustom_Project_Distribution_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Query_RootCustom_Project_Payout_DistributionArgs = {
  distinct_on?: InputMaybe<Array<Custom_Project_Payout_Distribution_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Custom_Project_Payout_Distribution_Order_By>>;
  where?: InputMaybe<Custom_Project_Payout_Distribution_Bool_Exp>;
};

export type Query_RootCustom_Project_Payout_Distribution_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Custom_Project_Payout_Distribution_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Custom_Project_Payout_Distribution_Order_By>>;
  where?: InputMaybe<Custom_Project_Payout_Distribution_Bool_Exp>;
};

export type Query_RootCustom_Project_Payout_Distribution_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Query_RootCustomerArgs = {
  distinct_on?: InputMaybe<Array<Customer_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Customer_Order_By>>;
  where?: InputMaybe<Customer_Bool_Exp>;
};

export type Query_RootCustomer_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Customer_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Customer_Order_By>>;
  where?: InputMaybe<Customer_Bool_Exp>;
};

export type Query_RootCustomer_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Query_RootCustomer_Closing_PartyArgs = {
  distinct_on?: InputMaybe<Array<Customer_Closing_Party_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Customer_Closing_Party_Order_By>>;
  where?: InputMaybe<Customer_Closing_Party_Bool_Exp>;
};

export type Query_RootCustomer_Closing_Party_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Customer_Closing_Party_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Customer_Closing_Party_Order_By>>;
  where?: InputMaybe<Customer_Closing_Party_Bool_Exp>;
};

export type Query_RootCustomer_Closing_Party_By_PkArgs = {
  customerID: Scalars['uuid'];
  userMetaID: Scalars['uuid'];
};

export type Query_RootCustomer_Originating_PartyArgs = {
  distinct_on?: InputMaybe<Array<Customer_Originating_Party_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Customer_Originating_Party_Order_By>>;
  where?: InputMaybe<Customer_Originating_Party_Bool_Exp>;
};

export type Query_RootCustomer_Originating_Party_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Customer_Originating_Party_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Customer_Originating_Party_Order_By>>;
  where?: InputMaybe<Customer_Originating_Party_Bool_Exp>;
};

export type Query_RootCustomer_Originating_Party_By_PkArgs = {
  customerID: Scalars['uuid'];
  userMetaID: Scalars['uuid'];
};

export type Query_RootCustomer_ReferrerArgs = {
  distinct_on?: InputMaybe<Array<Customer_Referrer_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Customer_Referrer_Order_By>>;
  where?: InputMaybe<Customer_Referrer_Bool_Exp>;
};

export type Query_RootCustomer_Referrer_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Customer_Referrer_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Customer_Referrer_Order_By>>;
  where?: InputMaybe<Customer_Referrer_Bool_Exp>;
};

export type Query_RootCustomer_Referrer_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Query_RootDocumentArgs = {
  distinct_on?: InputMaybe<Array<Document_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Document_Order_By>>;
  where?: InputMaybe<Document_Bool_Exp>;
};

export type Query_RootDocument_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Document_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Document_Order_By>>;
  where?: InputMaybe<Document_Bool_Exp>;
};

export type Query_RootDocument_Associated_CompanyArgs = {
  distinct_on?: InputMaybe<Array<Document_Associated_Company_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Document_Associated_Company_Order_By>>;
  where?: InputMaybe<Document_Associated_Company_Bool_Exp>;
};

export type Query_RootDocument_Associated_Company_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Document_Associated_Company_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Document_Associated_Company_Order_By>>;
  where?: InputMaybe<Document_Associated_Company_Bool_Exp>;
};

export type Query_RootDocument_Associated_Company_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Query_RootDocument_Associated_UserArgs = {
  distinct_on?: InputMaybe<Array<Document_Associated_User_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Document_Associated_User_Order_By>>;
  where?: InputMaybe<Document_Associated_User_Bool_Exp>;
};

export type Query_RootDocument_Associated_User_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Document_Associated_User_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Document_Associated_User_Order_By>>;
  where?: InputMaybe<Document_Associated_User_Bool_Exp>;
};

export type Query_RootDocument_Associated_User_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Query_RootDocument_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Query_RootDocument_Extra_FieldArgs = {
  distinct_on?: InputMaybe<Array<Document_Extra_Field_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Document_Extra_Field_Order_By>>;
  where?: InputMaybe<Document_Extra_Field_Bool_Exp>;
};

export type Query_RootDocument_Extra_Field_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Document_Extra_Field_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Document_Extra_Field_Order_By>>;
  where?: InputMaybe<Document_Extra_Field_Bool_Exp>;
};

export type Query_RootDocument_Extra_Field_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Query_RootDocument_Extra_Field_ValueArgs = {
  distinct_on?: InputMaybe<Array<Document_Extra_Field_Value_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Document_Extra_Field_Value_Order_By>>;
  where?: InputMaybe<Document_Extra_Field_Value_Bool_Exp>;
};

export type Query_RootDocument_Extra_Field_Value_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Document_Extra_Field_Value_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Document_Extra_Field_Value_Order_By>>;
  where?: InputMaybe<Document_Extra_Field_Value_Bool_Exp>;
};

export type Query_RootDocument_Extra_Field_Value_By_PkArgs = {
  documentExtraFieldID: Scalars['uuid'];
  documentID: Scalars['uuid'];
};

export type Query_RootDocument_TypeArgs = {
  distinct_on?: InputMaybe<Array<Document_Type_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Document_Type_Order_By>>;
  where?: InputMaybe<Document_Type_Bool_Exp>;
};

export type Query_RootDocument_Type_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Document_Type_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Document_Type_Order_By>>;
  where?: InputMaybe<Document_Type_Bool_Exp>;
};

export type Query_RootDocument_Type_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Query_RootEndpointArgs = {
  distinct_on?: InputMaybe<Array<Endpoint_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Endpoint_Order_By>>;
  where?: InputMaybe<Endpoint_Bool_Exp>;
};

export type Query_RootEndpoint_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Endpoint_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Endpoint_Order_By>>;
  where?: InputMaybe<Endpoint_Bool_Exp>;
};

export type Query_RootEndpoint_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Query_RootFetchUserPrivateInformationArgs = {
  accessToken?: InputMaybe<Scalars['String']>;
  userMetaID?: InputMaybe<Scalars['String']>;
};

export type Query_RootFixed_Price_Invoice_Line_ItemArgs = {
  distinct_on?: InputMaybe<Array<Fixed_Price_Invoice_Line_Item_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Fixed_Price_Invoice_Line_Item_Order_By>>;
  where?: InputMaybe<Fixed_Price_Invoice_Line_Item_Bool_Exp>;
};

export type Query_RootFixed_Price_Invoice_Line_Item_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Fixed_Price_Invoice_Line_Item_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Fixed_Price_Invoice_Line_Item_Order_By>>;
  where?: InputMaybe<Fixed_Price_Invoice_Line_Item_Bool_Exp>;
};

export type Query_RootFixed_Price_Invoice_Line_Item_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Query_RootGetGoogleUserArgs = {
  googleAccessToken: Scalars['String'];
  primaryEmail: Scalars['String'];
};

export type Query_RootGetIntranetUserByIdArgs = {
  userID: Scalars['String'];
};

export type Query_RootGetSlackUserChannelsArgs = {
  userSlackID: Scalars['String'];
};

export type Query_RootGetUserCognitoAttributesArgs = {
  username?: InputMaybe<Scalars['String']>;
};

export type Query_RootGetUsersListForGoogleScriptsArgs = {
  userMetaID?: InputMaybe<Scalars['String']>;
};

export type Query_RootIn_Market_Experience_LevelArgs = {
  distinct_on?: InputMaybe<Array<In_Market_Experience_Level_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<In_Market_Experience_Level_Order_By>>;
  where?: InputMaybe<In_Market_Experience_Level_Bool_Exp>;
};

export type Query_RootIn_Market_Experience_Level_AggregateArgs = {
  distinct_on?: InputMaybe<Array<In_Market_Experience_Level_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<In_Market_Experience_Level_Order_By>>;
  where?: InputMaybe<In_Market_Experience_Level_Bool_Exp>;
};

export type Query_RootIn_Market_Experience_Level_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Query_RootIndustryArgs = {
  distinct_on?: InputMaybe<Array<Industry_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Industry_Order_By>>;
  where?: InputMaybe<Industry_Bool_Exp>;
};

export type Query_RootIndustry_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Industry_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Industry_Order_By>>;
  where?: InputMaybe<Industry_Bool_Exp>;
};

export type Query_RootIndustry_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Query_RootIndustry_Experience_LevelArgs = {
  distinct_on?: InputMaybe<Array<Industry_Experience_Level_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Industry_Experience_Level_Order_By>>;
  where?: InputMaybe<Industry_Experience_Level_Bool_Exp>;
};

export type Query_RootIndustry_Experience_Level_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Industry_Experience_Level_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Industry_Experience_Level_Order_By>>;
  where?: InputMaybe<Industry_Experience_Level_Bool_Exp>;
};

export type Query_RootIndustry_Experience_Level_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Query_RootIndustry_Google_GroupArgs = {
  distinct_on?: InputMaybe<Array<Industry_Google_Group_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Industry_Google_Group_Order_By>>;
  where?: InputMaybe<Industry_Google_Group_Bool_Exp>;
};

export type Query_RootIndustry_Google_Group_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Industry_Google_Group_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Industry_Google_Group_Order_By>>;
  where?: InputMaybe<Industry_Google_Group_Bool_Exp>;
};

export type Query_RootIndustry_Google_Group_By_PkArgs = {
  googleGroupID: Scalars['String'];
  industryID: Scalars['uuid'];
};

export type Query_RootIndustry_Slack_ChannelArgs = {
  distinct_on?: InputMaybe<Array<Industry_Slack_Channel_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Industry_Slack_Channel_Order_By>>;
  where?: InputMaybe<Industry_Slack_Channel_Bool_Exp>;
};

export type Query_RootIndustry_Slack_Channel_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Industry_Slack_Channel_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Industry_Slack_Channel_Order_By>>;
  where?: InputMaybe<Industry_Slack_Channel_Bool_Exp>;
};

export type Query_RootIndustry_Slack_Channel_By_PkArgs = {
  industryID: Scalars['uuid'];
  slackChannelID: Scalars['String'];
};

export type Query_RootInvoiceArgs = {
  distinct_on?: InputMaybe<Array<Invoice_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Invoice_Order_By>>;
  where?: InputMaybe<Invoice_Bool_Exp>;
};

export type Query_RootInvoice_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Invoice_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Invoice_Order_By>>;
  where?: InputMaybe<Invoice_Bool_Exp>;
};

export type Query_RootInvoice_By_PkArgs = {
  id: Scalars['Int'];
};

export type Query_RootInvoice_DistributionArgs = {
  distinct_on?: InputMaybe<Array<Invoice_Distribution_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Invoice_Distribution_Order_By>>;
  where?: InputMaybe<Invoice_Distribution_Bool_Exp>;
};

export type Query_RootInvoice_Distribution_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Invoice_Distribution_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Invoice_Distribution_Order_By>>;
  where?: InputMaybe<Invoice_Distribution_Bool_Exp>;
};

export type Query_RootInvoice_Distribution_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Query_RootInvoice_Service_TypeArgs = {
  distinct_on?: InputMaybe<Array<Invoice_Service_Type_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Invoice_Service_Type_Order_By>>;
  where?: InputMaybe<Invoice_Service_Type_Bool_Exp>;
};

export type Query_RootInvoice_Service_Type_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Invoice_Service_Type_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Invoice_Service_Type_Order_By>>;
  where?: InputMaybe<Invoice_Service_Type_Bool_Exp>;
};

export type Query_RootInvoice_Service_Type_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Query_RootInvoice_StatusArgs = {
  distinct_on?: InputMaybe<Array<Invoice_Status_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Invoice_Status_Order_By>>;
  where?: InputMaybe<Invoice_Status_Bool_Exp>;
};

export type Query_RootInvoice_Status_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Invoice_Status_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Invoice_Status_Order_By>>;
  where?: InputMaybe<Invoice_Status_Bool_Exp>;
};

export type Query_RootInvoice_Status_By_PkArgs = {
  id: Scalars['Int'];
};

export type Query_RootInvoice_TermArgs = {
  distinct_on?: InputMaybe<Array<Invoice_Term_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Invoice_Term_Order_By>>;
  where?: InputMaybe<Invoice_Term_Bool_Exp>;
};

export type Query_RootInvoice_Term_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Invoice_Term_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Invoice_Term_Order_By>>;
  where?: InputMaybe<Invoice_Term_Bool_Exp>;
};

export type Query_RootInvoice_Term_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Query_RootLanguage_LevelArgs = {
  distinct_on?: InputMaybe<Array<Language_Level_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Language_Level_Order_By>>;
  where?: InputMaybe<Language_Level_Bool_Exp>;
};

export type Query_RootLanguage_Level_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Language_Level_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Language_Level_Order_By>>;
  where?: InputMaybe<Language_Level_Bool_Exp>;
};

export type Query_RootLanguage_Level_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Query_RootLate_Payment_PeriodArgs = {
  distinct_on?: InputMaybe<Array<Late_Payment_Period_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Late_Payment_Period_Order_By>>;
  where?: InputMaybe<Late_Payment_Period_Bool_Exp>;
};

export type Query_RootLate_Payment_Period_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Late_Payment_Period_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Late_Payment_Period_Order_By>>;
  where?: InputMaybe<Late_Payment_Period_Bool_Exp>;
};

export type Query_RootLate_Payment_Period_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Query_RootListUsersIntranetArgs = {
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type Query_RootNo_Of_EmployeesArgs = {
  distinct_on?: InputMaybe<Array<No_Of_Employees_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<No_Of_Employees_Order_By>>;
  where?: InputMaybe<No_Of_Employees_Bool_Exp>;
};

export type Query_RootNo_Of_Employees_AggregateArgs = {
  distinct_on?: InputMaybe<Array<No_Of_Employees_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<No_Of_Employees_Order_By>>;
  where?: InputMaybe<No_Of_Employees_Bool_Exp>;
};

export type Query_RootNo_Of_Employees_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Query_RootPartnerArgs = {
  distinct_on?: InputMaybe<Array<Partner_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Partner_Order_By>>;
  where?: InputMaybe<Partner_Bool_Exp>;
};

export type Query_RootPartner_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Partner_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Partner_Order_By>>;
  where?: InputMaybe<Partner_Bool_Exp>;
};

export type Query_RootPartner_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Query_RootPartner_CategoryArgs = {
  distinct_on?: InputMaybe<Array<Partner_Category_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Partner_Category_Order_By>>;
  where?: InputMaybe<Partner_Category_Bool_Exp>;
};

export type Query_RootPartner_Category_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Partner_Category_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Partner_Category_Order_By>>;
  where?: InputMaybe<Partner_Category_Bool_Exp>;
};

export type Query_RootPartner_Category_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Query_RootPartner_Custom_FieldArgs = {
  distinct_on?: InputMaybe<Array<Partner_Custom_Field_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Partner_Custom_Field_Order_By>>;
  where?: InputMaybe<Partner_Custom_Field_Bool_Exp>;
};

export type Query_RootPartner_Custom_Field_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Partner_Custom_Field_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Partner_Custom_Field_Order_By>>;
  where?: InputMaybe<Partner_Custom_Field_Bool_Exp>;
};

export type Query_RootPartner_Custom_Field_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Query_RootPartner_Gallery_ImageArgs = {
  distinct_on?: InputMaybe<Array<Partner_Gallery_Image_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Partner_Gallery_Image_Order_By>>;
  where?: InputMaybe<Partner_Gallery_Image_Bool_Exp>;
};

export type Query_RootPartner_Gallery_Image_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Partner_Gallery_Image_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Partner_Gallery_Image_Order_By>>;
  where?: InputMaybe<Partner_Gallery_Image_Bool_Exp>;
};

export type Query_RootPartner_Gallery_Image_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Query_RootPayout_DistributionArgs = {
  distinct_on?: InputMaybe<Array<Payout_Distribution_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Payout_Distribution_Order_By>>;
  where?: InputMaybe<Payout_Distribution_Bool_Exp>;
};

export type Query_RootPayout_Distribution_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Payout_Distribution_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Payout_Distribution_Order_By>>;
  where?: InputMaybe<Payout_Distribution_Bool_Exp>;
};

export type Query_RootPayout_Distribution_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Query_RootProduct_Or_Service_TypeArgs = {
  distinct_on?: InputMaybe<Array<Product_Or_Service_Type_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Product_Or_Service_Type_Order_By>>;
  where?: InputMaybe<Product_Or_Service_Type_Bool_Exp>;
};

export type Query_RootProduct_Or_Service_Type_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Product_Or_Service_Type_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Product_Or_Service_Type_Order_By>>;
  where?: InputMaybe<Product_Or_Service_Type_Bool_Exp>;
};

export type Query_RootProduct_Or_Service_Type_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Query_RootPublic_User_MetaArgs = {
  distinct_on?: InputMaybe<Array<Public_User_Meta_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Public_User_Meta_Order_By>>;
  where?: InputMaybe<Public_User_Meta_Bool_Exp>;
};

export type Query_RootPublic_User_Meta_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Public_User_Meta_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Public_User_Meta_Order_By>>;
  where?: InputMaybe<Public_User_Meta_Bool_Exp>;
};

export type Query_RootRecurring_IntervalArgs = {
  distinct_on?: InputMaybe<Array<Recurring_Interval_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Recurring_Interval_Order_By>>;
  where?: InputMaybe<Recurring_Interval_Bool_Exp>;
};

export type Query_RootRecurring_Interval_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Recurring_Interval_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Recurring_Interval_Order_By>>;
  where?: InputMaybe<Recurring_Interval_Bool_Exp>;
};

export type Query_RootRecurring_Interval_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Query_RootRouteArgs = {
  distinct_on?: InputMaybe<Array<Route_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Route_Order_By>>;
  where?: InputMaybe<Route_Bool_Exp>;
};

export type Query_RootRoute_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Route_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Route_Order_By>>;
  where?: InputMaybe<Route_Bool_Exp>;
};

export type Query_RootRoute_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Query_RootRoute_EndpointArgs = {
  distinct_on?: InputMaybe<Array<Route_Endpoint_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Route_Endpoint_Order_By>>;
  where?: InputMaybe<Route_Endpoint_Bool_Exp>;
};

export type Query_RootRoute_Endpoint_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Route_Endpoint_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Route_Endpoint_Order_By>>;
  where?: InputMaybe<Route_Endpoint_Bool_Exp>;
};

export type Query_RootRoute_Endpoint_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Query_RootRoute_GroupArgs = {
  distinct_on?: InputMaybe<Array<Route_Group_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Route_Group_Order_By>>;
  where?: InputMaybe<Route_Group_Bool_Exp>;
};

export type Query_RootRoute_Group_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Route_Group_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Route_Group_Order_By>>;
  where?: InputMaybe<Route_Group_Bool_Exp>;
};

export type Query_RootRoute_Group_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Query_RootSkillArgs = {
  distinct_on?: InputMaybe<Array<Skill_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Skill_Order_By>>;
  where?: InputMaybe<Skill_Bool_Exp>;
};

export type Query_RootSkill_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Skill_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Skill_Order_By>>;
  where?: InputMaybe<Skill_Bool_Exp>;
};

export type Query_RootSkill_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Query_RootSkill_CategoryArgs = {
  distinct_on?: InputMaybe<Array<Skill_Category_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Skill_Category_Order_By>>;
  where?: InputMaybe<Skill_Category_Bool_Exp>;
};

export type Query_RootSkill_Category_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Skill_Category_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Skill_Category_Order_By>>;
  where?: InputMaybe<Skill_Category_Bool_Exp>;
};

export type Query_RootSkill_Category_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Query_RootSkill_Google_GroupArgs = {
  distinct_on?: InputMaybe<Array<Skill_Google_Group_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Skill_Google_Group_Order_By>>;
  where?: InputMaybe<Skill_Google_Group_Bool_Exp>;
};

export type Query_RootSkill_Google_Group_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Skill_Google_Group_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Skill_Google_Group_Order_By>>;
  where?: InputMaybe<Skill_Google_Group_Bool_Exp>;
};

export type Query_RootSkill_Google_Group_By_PkArgs = {
  googleGroupID: Scalars['String'];
  skillID: Scalars['uuid'];
};

export type Query_RootSkill_LevelArgs = {
  distinct_on?: InputMaybe<Array<Skill_Level_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Skill_Level_Order_By>>;
  where?: InputMaybe<Skill_Level_Bool_Exp>;
};

export type Query_RootSkill_Level_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Skill_Level_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Skill_Level_Order_By>>;
  where?: InputMaybe<Skill_Level_Bool_Exp>;
};

export type Query_RootSkill_Level_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Query_RootSkill_Skill_CategoriesArgs = {
  distinct_on?: InputMaybe<Array<Skill_Skill_Categories_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Skill_Skill_Categories_Order_By>>;
  where?: InputMaybe<Skill_Skill_Categories_Bool_Exp>;
};

export type Query_RootSkill_Skill_Categories_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Skill_Skill_Categories_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Skill_Skill_Categories_Order_By>>;
  where?: InputMaybe<Skill_Skill_Categories_Bool_Exp>;
};

export type Query_RootSkill_Skill_Categories_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Query_RootSkill_Slack_ChannelArgs = {
  distinct_on?: InputMaybe<Array<Skill_Slack_Channel_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Skill_Slack_Channel_Order_By>>;
  where?: InputMaybe<Skill_Slack_Channel_Bool_Exp>;
};

export type Query_RootSkill_Slack_Channel_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Skill_Slack_Channel_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Skill_Slack_Channel_Order_By>>;
  where?: InputMaybe<Skill_Slack_Channel_Bool_Exp>;
};

export type Query_RootSkill_Slack_Channel_By_PkArgs = {
  skillID: Scalars['uuid'];
  slackChannelID: Scalars['String'];
};

export type Query_RootSlack_AnswerArgs = {
  distinct_on?: InputMaybe<Array<Slack_Answer_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Slack_Answer_Order_By>>;
  where?: InputMaybe<Slack_Answer_Bool_Exp>;
};

export type Query_RootSlack_Answer_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Slack_Answer_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Slack_Answer_Order_By>>;
  where?: InputMaybe<Slack_Answer_Bool_Exp>;
};

export type Query_RootSlack_Answer_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Query_RootSlack_AvailabilityArgs = {
  distinct_on?: InputMaybe<Array<Slack_Availability_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Slack_Availability_Order_By>>;
  where?: InputMaybe<Slack_Availability_Bool_Exp>;
};

export type Query_RootSlack_Availability_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Slack_Availability_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Slack_Availability_Order_By>>;
  where?: InputMaybe<Slack_Availability_Bool_Exp>;
};

export type Query_RootSlack_Birthday_And_Anniversary_MessageArgs = {
  distinct_on?: InputMaybe<Array<Slack_Birthday_And_Anniversary_Message_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Slack_Birthday_And_Anniversary_Message_Order_By>>;
  where?: InputMaybe<Slack_Birthday_And_Anniversary_Message_Bool_Exp>;
};

export type Query_RootSlack_Birthday_And_Anniversary_Message_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Slack_Birthday_And_Anniversary_Message_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Slack_Birthday_And_Anniversary_Message_Order_By>>;
  where?: InputMaybe<Slack_Birthday_And_Anniversary_Message_Bool_Exp>;
};

export type Query_RootSlack_Birthday_And_Anniversary_Message_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Query_RootSlack_MessageArgs = {
  distinct_on?: InputMaybe<Array<Slack_Message_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Slack_Message_Order_By>>;
  where?: InputMaybe<Slack_Message_Bool_Exp>;
};

export type Query_RootSlack_Message_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Slack_Message_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Slack_Message_Order_By>>;
  where?: InputMaybe<Slack_Message_Bool_Exp>;
};

export type Query_RootSlack_Message_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Query_RootSlack_Message_Trigger_LogArgs = {
  distinct_on?: InputMaybe<Array<Slack_Message_Trigger_Log_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Slack_Message_Trigger_Log_Order_By>>;
  where?: InputMaybe<Slack_Message_Trigger_Log_Bool_Exp>;
};

export type Query_RootSlack_Message_Trigger_Log_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Slack_Message_Trigger_Log_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Slack_Message_Trigger_Log_Order_By>>;
  where?: InputMaybe<Slack_Message_Trigger_Log_Bool_Exp>;
};

export type Query_RootSlack_Message_Trigger_Log_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Query_RootSlack_OutreachArgs = {
  distinct_on?: InputMaybe<Array<Slack_Outreach_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Slack_Outreach_Order_By>>;
  where?: InputMaybe<Slack_Outreach_Bool_Exp>;
};

export type Query_RootSlack_Outreach_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Slack_Outreach_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Slack_Outreach_Order_By>>;
  where?: InputMaybe<Slack_Outreach_Bool_Exp>;
};

export type Query_RootSlack_Outreach_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Query_RootTeamArgs = {
  distinct_on?: InputMaybe<Array<Team_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Team_Order_By>>;
  where?: InputMaybe<Team_Bool_Exp>;
};

export type Query_RootTeam_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Team_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Team_Order_By>>;
  where?: InputMaybe<Team_Bool_Exp>;
};

export type Query_RootTeam_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Query_RootTeam_Google_GroupArgs = {
  distinct_on?: InputMaybe<Array<Team_Google_Group_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Team_Google_Group_Order_By>>;
  where?: InputMaybe<Team_Google_Group_Bool_Exp>;
};

export type Query_RootTeam_Google_Group_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Team_Google_Group_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Team_Google_Group_Order_By>>;
  where?: InputMaybe<Team_Google_Group_Bool_Exp>;
};

export type Query_RootTeam_Google_Group_By_PkArgs = {
  googleGroupID: Scalars['String'];
  teamID: Scalars['uuid'];
};

export type Query_RootTeam_IndustryArgs = {
  distinct_on?: InputMaybe<Array<Team_Industry_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Team_Industry_Order_By>>;
  where?: InputMaybe<Team_Industry_Bool_Exp>;
};

export type Query_RootTeam_Industry_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Team_Industry_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Team_Industry_Order_By>>;
  where?: InputMaybe<Team_Industry_Bool_Exp>;
};

export type Query_RootTeam_Industry_By_PkArgs = {
  industryID: Scalars['uuid'];
  teamID: Scalars['uuid'];
};

export type Query_RootTeam_SkillArgs = {
  distinct_on?: InputMaybe<Array<Team_Skill_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Team_Skill_Order_By>>;
  where?: InputMaybe<Team_Skill_Bool_Exp>;
};

export type Query_RootTeam_Skill_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Team_Skill_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Team_Skill_Order_By>>;
  where?: InputMaybe<Team_Skill_Bool_Exp>;
};

export type Query_RootTeam_Skill_By_PkArgs = {
  skillID: Scalars['uuid'];
  teamID: Scalars['uuid'];
};

export type Query_RootTeam_Slack_ChannelArgs = {
  distinct_on?: InputMaybe<Array<Team_Slack_Channel_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Team_Slack_Channel_Order_By>>;
  where?: InputMaybe<Team_Slack_Channel_Bool_Exp>;
};

export type Query_RootTeam_Slack_Channel_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Team_Slack_Channel_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Team_Slack_Channel_Order_By>>;
  where?: InputMaybe<Team_Slack_Channel_Bool_Exp>;
};

export type Query_RootTeam_Slack_Channel_By_PkArgs = {
  slackChannelID: Scalars['String'];
  teamID: Scalars['uuid'];
};

export type Query_RootTime_And_Material_Invoice_Line_ItemArgs = {
  distinct_on?: InputMaybe<Array<Time_And_Material_Invoice_Line_Item_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Time_And_Material_Invoice_Line_Item_Order_By>>;
  where?: InputMaybe<Time_And_Material_Invoice_Line_Item_Bool_Exp>;
};

export type Query_RootTime_And_Material_Invoice_Line_Item_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Time_And_Material_Invoice_Line_Item_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Time_And_Material_Invoice_Line_Item_Order_By>>;
  where?: InputMaybe<Time_And_Material_Invoice_Line_Item_Bool_Exp>;
};

export type Query_RootTime_And_Material_Invoice_Line_Item_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Query_RootToolArgs = {
  distinct_on?: InputMaybe<Array<Tool_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Tool_Order_By>>;
  where?: InputMaybe<Tool_Bool_Exp>;
};

export type Query_RootTool_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Tool_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Tool_Order_By>>;
  where?: InputMaybe<Tool_Bool_Exp>;
};

export type Query_RootTool_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Query_RootTriggerArgs = {
  distinct_on?: InputMaybe<Array<Trigger_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Trigger_Order_By>>;
  where?: InputMaybe<Trigger_Bool_Exp>;
};

export type Query_RootTrigger_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Trigger_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Trigger_Order_By>>;
  where?: InputMaybe<Trigger_Bool_Exp>;
};

export type Query_RootTrigger_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Query_RootUserDetailsForGoogleSlidesArgs = {
  userProfileID: Scalars['String'];
};

export type Query_RootUser_Basic_InformationArgs = {
  distinct_on?: InputMaybe<Array<User_Basic_Information_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Basic_Information_Order_By>>;
  where?: InputMaybe<User_Basic_Information_Bool_Exp>;
};

export type Query_RootUser_Basic_Information_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Basic_Information_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Basic_Information_Order_By>>;
  where?: InputMaybe<User_Basic_Information_Bool_Exp>;
};

export type Query_RootUser_Basic_Information_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Query_RootUser_CompanyArgs = {
  distinct_on?: InputMaybe<Array<User_Company_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Company_Order_By>>;
  where?: InputMaybe<User_Company_Bool_Exp>;
};

export type Query_RootUser_Company_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Company_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Company_Order_By>>;
  where?: InputMaybe<User_Company_Bool_Exp>;
};

export type Query_RootUser_Company_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Query_RootUser_Completed_Customer_SaleArgs = {
  distinct_on?: InputMaybe<Array<User_Completed_Customer_Sale_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Completed_Customer_Sale_Order_By>>;
  where?: InputMaybe<User_Completed_Customer_Sale_Bool_Exp>;
};

export type Query_RootUser_Completed_Customer_Sale_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Completed_Customer_Sale_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Completed_Customer_Sale_Order_By>>;
  where?: InputMaybe<User_Completed_Customer_Sale_Bool_Exp>;
};

export type Query_RootUser_Completed_Customer_Sale_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Query_RootUser_In_Market_ExperienceArgs = {
  distinct_on?: InputMaybe<Array<User_In_Market_Experience_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_In_Market_Experience_Order_By>>;
  where?: InputMaybe<User_In_Market_Experience_Bool_Exp>;
};

export type Query_RootUser_In_Market_Experience_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_In_Market_Experience_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_In_Market_Experience_Order_By>>;
  where?: InputMaybe<User_In_Market_Experience_Bool_Exp>;
};

export type Query_RootUser_In_Market_Experience_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Query_RootUser_Industry_ExperienceArgs = {
  distinct_on?: InputMaybe<Array<User_Industry_Experience_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Industry_Experience_Order_By>>;
  where?: InputMaybe<User_Industry_Experience_Bool_Exp>;
};

export type Query_RootUser_Industry_Experience_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Industry_Experience_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Industry_Experience_Order_By>>;
  where?: InputMaybe<User_Industry_Experience_Bool_Exp>;
};

export type Query_RootUser_Industry_Experience_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Query_RootUser_LanguageArgs = {
  distinct_on?: InputMaybe<Array<User_Language_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Language_Order_By>>;
  where?: InputMaybe<User_Language_Bool_Exp>;
};

export type Query_RootUser_Language_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Language_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Language_Order_By>>;
  where?: InputMaybe<User_Language_Bool_Exp>;
};

export type Query_RootUser_Language_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Query_RootUser_MetaArgs = {
  distinct_on?: InputMaybe<Array<User_Meta_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Meta_Order_By>>;
  where?: InputMaybe<User_Meta_Bool_Exp>;
};

export type Query_RootUser_Meta_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Meta_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Meta_Order_By>>;
  where?: InputMaybe<User_Meta_Bool_Exp>;
};

export type Query_RootUser_Meta_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Query_RootUser_Meta_User_RoleArgs = {
  distinct_on?: InputMaybe<Array<User_Meta_User_Role_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Meta_User_Role_Order_By>>;
  where?: InputMaybe<User_Meta_User_Role_Bool_Exp>;
};

export type Query_RootUser_Meta_User_Role_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Meta_User_Role_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Meta_User_Role_Order_By>>;
  where?: InputMaybe<User_Meta_User_Role_Bool_Exp>;
};

export type Query_RootUser_Meta_User_Role_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Query_RootUser_Professional_InformationArgs = {
  distinct_on?: InputMaybe<Array<User_Professional_Information_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Professional_Information_Order_By>>;
  where?: InputMaybe<User_Professional_Information_Bool_Exp>;
};

export type Query_RootUser_Professional_Information_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Professional_Information_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Professional_Information_Order_By>>;
  where?: InputMaybe<User_Professional_Information_Bool_Exp>;
};

export type Query_RootUser_Professional_Information_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Query_RootUser_ProfileArgs = {
  distinct_on?: InputMaybe<Array<User_Profile_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Profile_Order_By>>;
  where?: InputMaybe<User_Profile_Bool_Exp>;
};

export type Query_RootUser_Profile_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Profile_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Profile_Order_By>>;
  where?: InputMaybe<User_Profile_Bool_Exp>;
};

export type Query_RootUser_Profile_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Query_RootUser_Profile_CompanyArgs = {
  distinct_on?: InputMaybe<Array<User_Profile_Company_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Profile_Company_Order_By>>;
  where?: InputMaybe<User_Profile_Company_Bool_Exp>;
};

export type Query_RootUser_Profile_Company_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Profile_Company_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Profile_Company_Order_By>>;
  where?: InputMaybe<User_Profile_Company_Bool_Exp>;
};

export type Query_RootUser_Profile_Company_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Query_RootUser_Profile_IndustryArgs = {
  distinct_on?: InputMaybe<Array<User_Profile_Industry_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Profile_Industry_Order_By>>;
  where?: InputMaybe<User_Profile_Industry_Bool_Exp>;
};

export type Query_RootUser_Profile_Industry_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Profile_Industry_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Profile_Industry_Order_By>>;
  where?: InputMaybe<User_Profile_Industry_Bool_Exp>;
};

export type Query_RootUser_Profile_Industry_By_PkArgs = {
  industryID: Scalars['uuid'];
  userProfileID: Scalars['uuid'];
};

export type Query_RootUser_Profile_SkillArgs = {
  distinct_on?: InputMaybe<Array<User_Profile_Skill_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Profile_Skill_Order_By>>;
  where?: InputMaybe<User_Profile_Skill_Bool_Exp>;
};

export type Query_RootUser_Profile_Skill_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Profile_Skill_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Profile_Skill_Order_By>>;
  where?: InputMaybe<User_Profile_Skill_Bool_Exp>;
};

export type Query_RootUser_Profile_Skill_By_PkArgs = {
  skillID: Scalars['uuid'];
  userProfileID: Scalars['uuid'];
};

export type Query_RootUser_Profile_TabArgs = {
  distinct_on?: InputMaybe<Array<User_Profile_Tab_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Profile_Tab_Order_By>>;
  where?: InputMaybe<User_Profile_Tab_Bool_Exp>;
};

export type Query_RootUser_Profile_Tab_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Profile_Tab_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Profile_Tab_Order_By>>;
  where?: InputMaybe<User_Profile_Tab_Bool_Exp>;
};

export type Query_RootUser_Profile_Tab_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Query_RootUser_Profile_Tab_EndpointArgs = {
  distinct_on?: InputMaybe<Array<User_Profile_Tab_Endpoint_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Profile_Tab_Endpoint_Order_By>>;
  where?: InputMaybe<User_Profile_Tab_Endpoint_Bool_Exp>;
};

export type Query_RootUser_Profile_Tab_Endpoint_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Profile_Tab_Endpoint_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Profile_Tab_Endpoint_Order_By>>;
  where?: InputMaybe<User_Profile_Tab_Endpoint_Bool_Exp>;
};

export type Query_RootUser_Profile_Tab_Endpoint_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Query_RootUser_Profile_TeamArgs = {
  distinct_on?: InputMaybe<Array<User_Profile_Team_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Profile_Team_Order_By>>;
  where?: InputMaybe<User_Profile_Team_Bool_Exp>;
};

export type Query_RootUser_Profile_Team_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Profile_Team_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Profile_Team_Order_By>>;
  where?: InputMaybe<User_Profile_Team_Bool_Exp>;
};

export type Query_RootUser_Profile_Team_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Query_RootUser_Profile_VisibilityArgs = {
  distinct_on?: InputMaybe<Array<User_Profile_Visibility_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Profile_Visibility_Order_By>>;
  where?: InputMaybe<User_Profile_Visibility_Bool_Exp>;
};

export type Query_RootUser_Profile_Visibility_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Profile_Visibility_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Profile_Visibility_Order_By>>;
  where?: InputMaybe<User_Profile_Visibility_Bool_Exp>;
};

export type Query_RootUser_Profile_Visibility_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Query_RootUser_RoleArgs = {
  distinct_on?: InputMaybe<Array<User_Role_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Role_Order_By>>;
  where?: InputMaybe<User_Role_Bool_Exp>;
};

export type Query_RootUser_Role_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Role_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Role_Order_By>>;
  where?: InputMaybe<User_Role_Bool_Exp>;
};

export type Query_RootUser_Role_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Query_RootUser_Role_CapabilityArgs = {
  distinct_on?: InputMaybe<Array<User_Role_Capability_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Role_Capability_Order_By>>;
  where?: InputMaybe<User_Role_Capability_Bool_Exp>;
};

export type Query_RootUser_Role_Capability_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Role_Capability_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Role_Capability_Order_By>>;
  where?: InputMaybe<User_Role_Capability_Bool_Exp>;
};

export type Query_RootUser_Role_Capability_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Query_RootUser_Role_RouteArgs = {
  distinct_on?: InputMaybe<Array<User_Role_Route_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Role_Route_Order_By>>;
  where?: InputMaybe<User_Role_Route_Bool_Exp>;
};

export type Query_RootUser_Role_Route_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Role_Route_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Role_Route_Order_By>>;
  where?: InputMaybe<User_Role_Route_Bool_Exp>;
};

export type Query_RootUser_Role_Route_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Query_RootUser_Role_User_Profile_TabArgs = {
  distinct_on?: InputMaybe<Array<User_Role_User_Profile_Tab_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Role_User_Profile_Tab_Order_By>>;
  where?: InputMaybe<User_Role_User_Profile_Tab_Bool_Exp>;
};

export type Query_RootUser_Role_User_Profile_Tab_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Role_User_Profile_Tab_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Role_User_Profile_Tab_Order_By>>;
  where?: InputMaybe<User_Role_User_Profile_Tab_Bool_Exp>;
};

export type Query_RootUser_Role_User_Profile_Tab_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Query_RootUser_SkillArgs = {
  distinct_on?: InputMaybe<Array<User_Skill_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Skill_Order_By>>;
  where?: InputMaybe<User_Skill_Bool_Exp>;
};

export type Query_RootUser_Skill_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Skill_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Skill_Order_By>>;
  where?: InputMaybe<User_Skill_Bool_Exp>;
};

export type Query_RootUser_Skill_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Query_RootUser_Work_ExperienceArgs = {
  distinct_on?: InputMaybe<Array<User_Work_Experience_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Work_Experience_Order_By>>;
  where?: InputMaybe<User_Work_Experience_Bool_Exp>;
};

export type Query_RootUser_Work_Experience_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Work_Experience_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Work_Experience_Order_By>>;
  where?: InputMaybe<User_Work_Experience_Bool_Exp>;
};

export type Query_RootUser_Work_Experience_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Query_RootWebhookArgs = {
  distinct_on?: InputMaybe<Array<Webhook_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Webhook_Order_By>>;
  where?: InputMaybe<Webhook_Bool_Exp>;
};

export type Query_RootWebhook_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Webhook_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Webhook_Order_By>>;
  where?: InputMaybe<Webhook_Bool_Exp>;
};

export type Query_RootWebhook_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Query_RootWebhook_TriggerArgs = {
  distinct_on?: InputMaybe<Array<Webhook_Trigger_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Webhook_Trigger_Order_By>>;
  where?: InputMaybe<Webhook_Trigger_Bool_Exp>;
};

export type Query_RootWebhook_Trigger_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Webhook_Trigger_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Webhook_Trigger_Order_By>>;
  where?: InputMaybe<Webhook_Trigger_Bool_Exp>;
};

export type Query_RootWebhook_Trigger_By_PkArgs = {
  id: Scalars['uuid'];
};

/** columns and relationships of "recurring_interval" */
export type Recurring_Interval = {
  __typename?: 'recurring_interval';
  id: Scalars['uuid'];
  /** An array relationship */
  invoices: Array<Invoice>;
  /** An aggregate relationship */
  invoices_aggregate: Invoice_Aggregate;
  name: Scalars['String'];
};

/** columns and relationships of "recurring_interval" */
export type Recurring_IntervalInvoicesArgs = {
  distinct_on?: InputMaybe<Array<Invoice_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Invoice_Order_By>>;
  where?: InputMaybe<Invoice_Bool_Exp>;
};

/** columns and relationships of "recurring_interval" */
export type Recurring_IntervalInvoices_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Invoice_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Invoice_Order_By>>;
  where?: InputMaybe<Invoice_Bool_Exp>;
};

/** aggregated selection of "recurring_interval" */
export type Recurring_Interval_Aggregate = {
  __typename?: 'recurring_interval_aggregate';
  aggregate?: Maybe<Recurring_Interval_Aggregate_Fields>;
  nodes: Array<Recurring_Interval>;
};

/** aggregate fields of "recurring_interval" */
export type Recurring_Interval_Aggregate_Fields = {
  __typename?: 'recurring_interval_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<Recurring_Interval_Max_Fields>;
  min?: Maybe<Recurring_Interval_Min_Fields>;
};

/** aggregate fields of "recurring_interval" */
export type Recurring_Interval_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Recurring_Interval_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** Boolean expression to filter rows from the table "recurring_interval". All fields are combined with a logical 'AND'. */
export type Recurring_Interval_Bool_Exp = {
  _and?: InputMaybe<Array<Recurring_Interval_Bool_Exp>>;
  _not?: InputMaybe<Recurring_Interval_Bool_Exp>;
  _or?: InputMaybe<Array<Recurring_Interval_Bool_Exp>>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  invoices?: InputMaybe<Invoice_Bool_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "recurring_interval" */
export enum Recurring_Interval_Constraint {
  /** unique or primary key constraint on columns "name" */
  RecurringIntervalNameKey = 'recurring_interval_name_key',
  /** unique or primary key constraint on columns "id" */
  RecurringIntervalPkey = 'recurring_interval_pkey',
}

/** input type for inserting data into table "recurring_interval" */
export type Recurring_Interval_Insert_Input = {
  id?: InputMaybe<Scalars['uuid']>;
  invoices?: InputMaybe<Invoice_Arr_Rel_Insert_Input>;
  name?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Recurring_Interval_Max_Fields = {
  __typename?: 'recurring_interval_max_fields';
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type Recurring_Interval_Min_Fields = {
  __typename?: 'recurring_interval_min_fields';
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "recurring_interval" */
export type Recurring_Interval_Mutation_Response = {
  __typename?: 'recurring_interval_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Recurring_Interval>;
};

/** input type for inserting object relation for remote table "recurring_interval" */
export type Recurring_Interval_Obj_Rel_Insert_Input = {
  data: Recurring_Interval_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Recurring_Interval_On_Conflict>;
};

/** on_conflict condition type for table "recurring_interval" */
export type Recurring_Interval_On_Conflict = {
  constraint: Recurring_Interval_Constraint;
  update_columns?: Array<Recurring_Interval_Update_Column>;
  where?: InputMaybe<Recurring_Interval_Bool_Exp>;
};

/** Ordering options when selecting data from "recurring_interval". */
export type Recurring_Interval_Order_By = {
  id?: InputMaybe<Order_By>;
  invoices_aggregate?: InputMaybe<Invoice_Aggregate_Order_By>;
  name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: recurring_interval */
export type Recurring_Interval_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "recurring_interval" */
export enum Recurring_Interval_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
}

/** input type for updating data in table "recurring_interval" */
export type Recurring_Interval_Set_Input = {
  id?: InputMaybe<Scalars['uuid']>;
  name?: InputMaybe<Scalars['String']>;
};

/** Streaming cursor of the table "recurring_interval" */
export type Recurring_Interval_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Recurring_Interval_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Recurring_Interval_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['uuid']>;
  name?: InputMaybe<Scalars['String']>;
};

/** update columns of table "recurring_interval" */
export enum Recurring_Interval_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
}

export type Recurring_Interval_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Recurring_Interval_Set_Input>;
  where: Recurring_Interval_Bool_Exp;
};

/** columns and relationships of "route" */
export type Route = {
  __typename?: 'route';
  iconName?: Maybe<Scalars['String']>;
  id: Scalars['uuid'];
  isAssignable: Scalars['Boolean'];
  name: Scalars['String'];
  order: Scalars['Int'];
  path?: Maybe<Scalars['String']>;
  routeGroupID?: Maybe<Scalars['uuid']>;
  /** An array relationship */
  route_endpoints: Array<Route_Endpoint>;
  /** An aggregate relationship */
  route_endpoints_aggregate: Route_Endpoint_Aggregate;
  /** An object relationship */
  route_group?: Maybe<Route_Group>;
  showInMenu: Scalars['Boolean'];
  /** An array relationship */
  user_role_routes: Array<User_Role_Route>;
  /** An aggregate relationship */
  user_role_routes_aggregate: User_Role_Route_Aggregate;
};

/** columns and relationships of "route" */
export type RouteRoute_EndpointsArgs = {
  distinct_on?: InputMaybe<Array<Route_Endpoint_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Route_Endpoint_Order_By>>;
  where?: InputMaybe<Route_Endpoint_Bool_Exp>;
};

/** columns and relationships of "route" */
export type RouteRoute_Endpoints_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Route_Endpoint_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Route_Endpoint_Order_By>>;
  where?: InputMaybe<Route_Endpoint_Bool_Exp>;
};

/** columns and relationships of "route" */
export type RouteUser_Role_RoutesArgs = {
  distinct_on?: InputMaybe<Array<User_Role_Route_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Role_Route_Order_By>>;
  where?: InputMaybe<User_Role_Route_Bool_Exp>;
};

/** columns and relationships of "route" */
export type RouteUser_Role_Routes_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Role_Route_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Role_Route_Order_By>>;
  where?: InputMaybe<User_Role_Route_Bool_Exp>;
};

/** aggregated selection of "route" */
export type Route_Aggregate = {
  __typename?: 'route_aggregate';
  aggregate?: Maybe<Route_Aggregate_Fields>;
  nodes: Array<Route>;
};

/** aggregate fields of "route" */
export type Route_Aggregate_Fields = {
  __typename?: 'route_aggregate_fields';
  avg?: Maybe<Route_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Route_Max_Fields>;
  min?: Maybe<Route_Min_Fields>;
  stddev?: Maybe<Route_Stddev_Fields>;
  stddev_pop?: Maybe<Route_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Route_Stddev_Samp_Fields>;
  sum?: Maybe<Route_Sum_Fields>;
  var_pop?: Maybe<Route_Var_Pop_Fields>;
  var_samp?: Maybe<Route_Var_Samp_Fields>;
  variance?: Maybe<Route_Variance_Fields>;
};

/** aggregate fields of "route" */
export type Route_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Route_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "route" */
export type Route_Aggregate_Order_By = {
  avg?: InputMaybe<Route_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Route_Max_Order_By>;
  min?: InputMaybe<Route_Min_Order_By>;
  stddev?: InputMaybe<Route_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Route_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Route_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Route_Sum_Order_By>;
  var_pop?: InputMaybe<Route_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Route_Var_Samp_Order_By>;
  variance?: InputMaybe<Route_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "route" */
export type Route_Arr_Rel_Insert_Input = {
  data: Array<Route_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Route_On_Conflict>;
};

/** aggregate avg on columns */
export type Route_Avg_Fields = {
  __typename?: 'route_avg_fields';
  order?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "route" */
export type Route_Avg_Order_By = {
  order?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "route". All fields are combined with a logical 'AND'. */
export type Route_Bool_Exp = {
  _and?: InputMaybe<Array<Route_Bool_Exp>>;
  _not?: InputMaybe<Route_Bool_Exp>;
  _or?: InputMaybe<Array<Route_Bool_Exp>>;
  iconName?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  isAssignable?: InputMaybe<Boolean_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  order?: InputMaybe<Int_Comparison_Exp>;
  path?: InputMaybe<String_Comparison_Exp>;
  routeGroupID?: InputMaybe<Uuid_Comparison_Exp>;
  route_endpoints?: InputMaybe<Route_Endpoint_Bool_Exp>;
  route_group?: InputMaybe<Route_Group_Bool_Exp>;
  showInMenu?: InputMaybe<Boolean_Comparison_Exp>;
  user_role_routes?: InputMaybe<User_Role_Route_Bool_Exp>;
};

/** unique or primary key constraints on table "route" */
export enum Route_Constraint {
  /** unique or primary key constraint on columns "name" */
  RouteNameKey = 'route_name_key',
  /** unique or primary key constraint on columns "id" */
  RoutePkey = 'route_pkey',
}

/** columns and relationships of "route_endpoint" */
export type Route_Endpoint = {
  __typename?: 'route_endpoint';
  /** An object relationship */
  endpoint: Endpoint;
  endpointID: Scalars['uuid'];
  id: Scalars['uuid'];
  /** An object relationship */
  route: Route;
  routeID: Scalars['uuid'];
};

/** aggregated selection of "route_endpoint" */
export type Route_Endpoint_Aggregate = {
  __typename?: 'route_endpoint_aggregate';
  aggregate?: Maybe<Route_Endpoint_Aggregate_Fields>;
  nodes: Array<Route_Endpoint>;
};

/** aggregate fields of "route_endpoint" */
export type Route_Endpoint_Aggregate_Fields = {
  __typename?: 'route_endpoint_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<Route_Endpoint_Max_Fields>;
  min?: Maybe<Route_Endpoint_Min_Fields>;
};

/** aggregate fields of "route_endpoint" */
export type Route_Endpoint_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Route_Endpoint_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "route_endpoint" */
export type Route_Endpoint_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Route_Endpoint_Max_Order_By>;
  min?: InputMaybe<Route_Endpoint_Min_Order_By>;
};

/** input type for inserting array relation for remote table "route_endpoint" */
export type Route_Endpoint_Arr_Rel_Insert_Input = {
  data: Array<Route_Endpoint_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Route_Endpoint_On_Conflict>;
};

/** Boolean expression to filter rows from the table "route_endpoint". All fields are combined with a logical 'AND'. */
export type Route_Endpoint_Bool_Exp = {
  _and?: InputMaybe<Array<Route_Endpoint_Bool_Exp>>;
  _not?: InputMaybe<Route_Endpoint_Bool_Exp>;
  _or?: InputMaybe<Array<Route_Endpoint_Bool_Exp>>;
  endpoint?: InputMaybe<Endpoint_Bool_Exp>;
  endpointID?: InputMaybe<Uuid_Comparison_Exp>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  route?: InputMaybe<Route_Bool_Exp>;
  routeID?: InputMaybe<Uuid_Comparison_Exp>;
};

/** unique or primary key constraints on table "route_endpoint" */
export enum Route_Endpoint_Constraint {
  /** unique or primary key constraint on columns "id" */
  RouteEndpointPkey = 'route_endpoint_pkey',
  /** unique or primary key constraint on columns "endpointID", "routeID" */
  RouteEndpointRouteIdEndpointIdKey = 'route_endpoint_routeID_endpointID_key',
}

/** input type for inserting data into table "route_endpoint" */
export type Route_Endpoint_Insert_Input = {
  endpoint?: InputMaybe<Endpoint_Obj_Rel_Insert_Input>;
  endpointID?: InputMaybe<Scalars['uuid']>;
  id?: InputMaybe<Scalars['uuid']>;
  route?: InputMaybe<Route_Obj_Rel_Insert_Input>;
  routeID?: InputMaybe<Scalars['uuid']>;
};

/** aggregate max on columns */
export type Route_Endpoint_Max_Fields = {
  __typename?: 'route_endpoint_max_fields';
  endpointID?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  routeID?: Maybe<Scalars['uuid']>;
};

/** order by max() on columns of table "route_endpoint" */
export type Route_Endpoint_Max_Order_By = {
  endpointID?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  routeID?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Route_Endpoint_Min_Fields = {
  __typename?: 'route_endpoint_min_fields';
  endpointID?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  routeID?: Maybe<Scalars['uuid']>;
};

/** order by min() on columns of table "route_endpoint" */
export type Route_Endpoint_Min_Order_By = {
  endpointID?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  routeID?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "route_endpoint" */
export type Route_Endpoint_Mutation_Response = {
  __typename?: 'route_endpoint_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Route_Endpoint>;
};

/** on_conflict condition type for table "route_endpoint" */
export type Route_Endpoint_On_Conflict = {
  constraint: Route_Endpoint_Constraint;
  update_columns?: Array<Route_Endpoint_Update_Column>;
  where?: InputMaybe<Route_Endpoint_Bool_Exp>;
};

/** Ordering options when selecting data from "route_endpoint". */
export type Route_Endpoint_Order_By = {
  endpoint?: InputMaybe<Endpoint_Order_By>;
  endpointID?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  route?: InputMaybe<Route_Order_By>;
  routeID?: InputMaybe<Order_By>;
};

/** primary key columns input for table: route_endpoint */
export type Route_Endpoint_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "route_endpoint" */
export enum Route_Endpoint_Select_Column {
  /** column name */
  EndpointId = 'endpointID',
  /** column name */
  Id = 'id',
  /** column name */
  RouteId = 'routeID',
}

/** input type for updating data in table "route_endpoint" */
export type Route_Endpoint_Set_Input = {
  endpointID?: InputMaybe<Scalars['uuid']>;
  id?: InputMaybe<Scalars['uuid']>;
  routeID?: InputMaybe<Scalars['uuid']>;
};

/** Streaming cursor of the table "route_endpoint" */
export type Route_Endpoint_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Route_Endpoint_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Route_Endpoint_Stream_Cursor_Value_Input = {
  endpointID?: InputMaybe<Scalars['uuid']>;
  id?: InputMaybe<Scalars['uuid']>;
  routeID?: InputMaybe<Scalars['uuid']>;
};

/** update columns of table "route_endpoint" */
export enum Route_Endpoint_Update_Column {
  /** column name */
  EndpointId = 'endpointID',
  /** column name */
  Id = 'id',
  /** column name */
  RouteId = 'routeID',
}

export type Route_Endpoint_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Route_Endpoint_Set_Input>;
  where: Route_Endpoint_Bool_Exp;
};

/** columns and relationships of "route_group" */
export type Route_Group = {
  __typename?: 'route_group';
  iconName: Scalars['String'];
  id: Scalars['uuid'];
  isHidden: Scalars['Boolean'];
  name: Scalars['String'];
  order: Scalars['Int'];
  path: Scalars['String'];
  /** An array relationship */
  routes: Array<Route>;
  /** An aggregate relationship */
  routes_aggregate: Route_Aggregate;
};

/** columns and relationships of "route_group" */
export type Route_GroupRoutesArgs = {
  distinct_on?: InputMaybe<Array<Route_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Route_Order_By>>;
  where?: InputMaybe<Route_Bool_Exp>;
};

/** columns and relationships of "route_group" */
export type Route_GroupRoutes_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Route_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Route_Order_By>>;
  where?: InputMaybe<Route_Bool_Exp>;
};

/** aggregated selection of "route_group" */
export type Route_Group_Aggregate = {
  __typename?: 'route_group_aggregate';
  aggregate?: Maybe<Route_Group_Aggregate_Fields>;
  nodes: Array<Route_Group>;
};

/** aggregate fields of "route_group" */
export type Route_Group_Aggregate_Fields = {
  __typename?: 'route_group_aggregate_fields';
  avg?: Maybe<Route_Group_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Route_Group_Max_Fields>;
  min?: Maybe<Route_Group_Min_Fields>;
  stddev?: Maybe<Route_Group_Stddev_Fields>;
  stddev_pop?: Maybe<Route_Group_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Route_Group_Stddev_Samp_Fields>;
  sum?: Maybe<Route_Group_Sum_Fields>;
  var_pop?: Maybe<Route_Group_Var_Pop_Fields>;
  var_samp?: Maybe<Route_Group_Var_Samp_Fields>;
  variance?: Maybe<Route_Group_Variance_Fields>;
};

/** aggregate fields of "route_group" */
export type Route_Group_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Route_Group_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Route_Group_Avg_Fields = {
  __typename?: 'route_group_avg_fields';
  order?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "route_group". All fields are combined with a logical 'AND'. */
export type Route_Group_Bool_Exp = {
  _and?: InputMaybe<Array<Route_Group_Bool_Exp>>;
  _not?: InputMaybe<Route_Group_Bool_Exp>;
  _or?: InputMaybe<Array<Route_Group_Bool_Exp>>;
  iconName?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  isHidden?: InputMaybe<Boolean_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  order?: InputMaybe<Int_Comparison_Exp>;
  path?: InputMaybe<String_Comparison_Exp>;
  routes?: InputMaybe<Route_Bool_Exp>;
};

/** unique or primary key constraints on table "route_group" */
export enum Route_Group_Constraint {
  /** unique or primary key constraint on columns "name" */
  RouteGroupNameKey = 'route_group_name_key',
  /** unique or primary key constraint on columns "id" */
  RouteGroupPkey = 'route_group_pkey',
}

/** input type for incrementing numeric columns in table "route_group" */
export type Route_Group_Inc_Input = {
  order?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "route_group" */
export type Route_Group_Insert_Input = {
  iconName?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['uuid']>;
  isHidden?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  order?: InputMaybe<Scalars['Int']>;
  path?: InputMaybe<Scalars['String']>;
  routes?: InputMaybe<Route_Arr_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type Route_Group_Max_Fields = {
  __typename?: 'route_group_max_fields';
  iconName?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
  path?: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type Route_Group_Min_Fields = {
  __typename?: 'route_group_min_fields';
  iconName?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
  path?: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "route_group" */
export type Route_Group_Mutation_Response = {
  __typename?: 'route_group_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Route_Group>;
};

/** input type for inserting object relation for remote table "route_group" */
export type Route_Group_Obj_Rel_Insert_Input = {
  data: Route_Group_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Route_Group_On_Conflict>;
};

/** on_conflict condition type for table "route_group" */
export type Route_Group_On_Conflict = {
  constraint: Route_Group_Constraint;
  update_columns?: Array<Route_Group_Update_Column>;
  where?: InputMaybe<Route_Group_Bool_Exp>;
};

/** Ordering options when selecting data from "route_group". */
export type Route_Group_Order_By = {
  iconName?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  isHidden?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  order?: InputMaybe<Order_By>;
  path?: InputMaybe<Order_By>;
  routes_aggregate?: InputMaybe<Route_Aggregate_Order_By>;
};

/** primary key columns input for table: route_group */
export type Route_Group_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "route_group" */
export enum Route_Group_Select_Column {
  /** column name */
  IconName = 'iconName',
  /** column name */
  Id = 'id',
  /** column name */
  IsHidden = 'isHidden',
  /** column name */
  Name = 'name',
  /** column name */
  Order = 'order',
  /** column name */
  Path = 'path',
}

/** input type for updating data in table "route_group" */
export type Route_Group_Set_Input = {
  iconName?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['uuid']>;
  isHidden?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  order?: InputMaybe<Scalars['Int']>;
  path?: InputMaybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type Route_Group_Stddev_Fields = {
  __typename?: 'route_group_stddev_fields';
  order?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Route_Group_Stddev_Pop_Fields = {
  __typename?: 'route_group_stddev_pop_fields';
  order?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Route_Group_Stddev_Samp_Fields = {
  __typename?: 'route_group_stddev_samp_fields';
  order?: Maybe<Scalars['Float']>;
};

/** Streaming cursor of the table "route_group" */
export type Route_Group_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Route_Group_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Route_Group_Stream_Cursor_Value_Input = {
  iconName?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['uuid']>;
  isHidden?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  order?: InputMaybe<Scalars['Int']>;
  path?: InputMaybe<Scalars['String']>;
};

/** aggregate sum on columns */
export type Route_Group_Sum_Fields = {
  __typename?: 'route_group_sum_fields';
  order?: Maybe<Scalars['Int']>;
};

/** update columns of table "route_group" */
export enum Route_Group_Update_Column {
  /** column name */
  IconName = 'iconName',
  /** column name */
  Id = 'id',
  /** column name */
  IsHidden = 'isHidden',
  /** column name */
  Name = 'name',
  /** column name */
  Order = 'order',
  /** column name */
  Path = 'path',
}

export type Route_Group_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Route_Group_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Route_Group_Set_Input>;
  where: Route_Group_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Route_Group_Var_Pop_Fields = {
  __typename?: 'route_group_var_pop_fields';
  order?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Route_Group_Var_Samp_Fields = {
  __typename?: 'route_group_var_samp_fields';
  order?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Route_Group_Variance_Fields = {
  __typename?: 'route_group_variance_fields';
  order?: Maybe<Scalars['Float']>;
};

/** input type for incrementing numeric columns in table "route" */
export type Route_Inc_Input = {
  order?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "route" */
export type Route_Insert_Input = {
  iconName?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['uuid']>;
  isAssignable?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  order?: InputMaybe<Scalars['Int']>;
  path?: InputMaybe<Scalars['String']>;
  routeGroupID?: InputMaybe<Scalars['uuid']>;
  route_endpoints?: InputMaybe<Route_Endpoint_Arr_Rel_Insert_Input>;
  route_group?: InputMaybe<Route_Group_Obj_Rel_Insert_Input>;
  showInMenu?: InputMaybe<Scalars['Boolean']>;
  user_role_routes?: InputMaybe<User_Role_Route_Arr_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type Route_Max_Fields = {
  __typename?: 'route_max_fields';
  iconName?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
  path?: Maybe<Scalars['String']>;
  routeGroupID?: Maybe<Scalars['uuid']>;
};

/** order by max() on columns of table "route" */
export type Route_Max_Order_By = {
  iconName?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  order?: InputMaybe<Order_By>;
  path?: InputMaybe<Order_By>;
  routeGroupID?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Route_Min_Fields = {
  __typename?: 'route_min_fields';
  iconName?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
  path?: Maybe<Scalars['String']>;
  routeGroupID?: Maybe<Scalars['uuid']>;
};

/** order by min() on columns of table "route" */
export type Route_Min_Order_By = {
  iconName?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  order?: InputMaybe<Order_By>;
  path?: InputMaybe<Order_By>;
  routeGroupID?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "route" */
export type Route_Mutation_Response = {
  __typename?: 'route_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Route>;
};

/** input type for inserting object relation for remote table "route" */
export type Route_Obj_Rel_Insert_Input = {
  data: Route_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Route_On_Conflict>;
};

/** on_conflict condition type for table "route" */
export type Route_On_Conflict = {
  constraint: Route_Constraint;
  update_columns?: Array<Route_Update_Column>;
  where?: InputMaybe<Route_Bool_Exp>;
};

/** Ordering options when selecting data from "route". */
export type Route_Order_By = {
  iconName?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  isAssignable?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  order?: InputMaybe<Order_By>;
  path?: InputMaybe<Order_By>;
  routeGroupID?: InputMaybe<Order_By>;
  route_endpoints_aggregate?: InputMaybe<Route_Endpoint_Aggregate_Order_By>;
  route_group?: InputMaybe<Route_Group_Order_By>;
  showInMenu?: InputMaybe<Order_By>;
  user_role_routes_aggregate?: InputMaybe<User_Role_Route_Aggregate_Order_By>;
};

/** primary key columns input for table: route */
export type Route_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "route" */
export enum Route_Select_Column {
  /** column name */
  IconName = 'iconName',
  /** column name */
  Id = 'id',
  /** column name */
  IsAssignable = 'isAssignable',
  /** column name */
  Name = 'name',
  /** column name */
  Order = 'order',
  /** column name */
  Path = 'path',
  /** column name */
  RouteGroupId = 'routeGroupID',
  /** column name */
  ShowInMenu = 'showInMenu',
}

/** input type for updating data in table "route" */
export type Route_Set_Input = {
  iconName?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['uuid']>;
  isAssignable?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  order?: InputMaybe<Scalars['Int']>;
  path?: InputMaybe<Scalars['String']>;
  routeGroupID?: InputMaybe<Scalars['uuid']>;
  showInMenu?: InputMaybe<Scalars['Boolean']>;
};

/** aggregate stddev on columns */
export type Route_Stddev_Fields = {
  __typename?: 'route_stddev_fields';
  order?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "route" */
export type Route_Stddev_Order_By = {
  order?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Route_Stddev_Pop_Fields = {
  __typename?: 'route_stddev_pop_fields';
  order?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "route" */
export type Route_Stddev_Pop_Order_By = {
  order?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Route_Stddev_Samp_Fields = {
  __typename?: 'route_stddev_samp_fields';
  order?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "route" */
export type Route_Stddev_Samp_Order_By = {
  order?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "route" */
export type Route_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Route_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Route_Stream_Cursor_Value_Input = {
  iconName?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['uuid']>;
  isAssignable?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  order?: InputMaybe<Scalars['Int']>;
  path?: InputMaybe<Scalars['String']>;
  routeGroupID?: InputMaybe<Scalars['uuid']>;
  showInMenu?: InputMaybe<Scalars['Boolean']>;
};

/** aggregate sum on columns */
export type Route_Sum_Fields = {
  __typename?: 'route_sum_fields';
  order?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "route" */
export type Route_Sum_Order_By = {
  order?: InputMaybe<Order_By>;
};

/** update columns of table "route" */
export enum Route_Update_Column {
  /** column name */
  IconName = 'iconName',
  /** column name */
  Id = 'id',
  /** column name */
  IsAssignable = 'isAssignable',
  /** column name */
  Name = 'name',
  /** column name */
  Order = 'order',
  /** column name */
  Path = 'path',
  /** column name */
  RouteGroupId = 'routeGroupID',
  /** column name */
  ShowInMenu = 'showInMenu',
}

export type Route_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Route_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Route_Set_Input>;
  where: Route_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Route_Var_Pop_Fields = {
  __typename?: 'route_var_pop_fields';
  order?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "route" */
export type Route_Var_Pop_Order_By = {
  order?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Route_Var_Samp_Fields = {
  __typename?: 'route_var_samp_fields';
  order?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "route" */
export type Route_Var_Samp_Order_By = {
  order?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Route_Variance_Fields = {
  __typename?: 'route_variance_fields';
  order?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "route" */
export type Route_Variance_Order_By = {
  order?: InputMaybe<Order_By>;
};

/** columns and relationships of "skill" */
export type Skill = {
  __typename?: 'skill';
  /** An array relationship */
  case_study_skills: Array<Case_Study_Skill>;
  /** An aggregate relationship */
  case_study_skills_aggregate: Case_Study_Skill_Aggregate;
  id: Scalars['uuid'];
  name: Scalars['String'];
  /** An array relationship */
  skill_google_groups: Array<Skill_Google_Group>;
  /** An aggregate relationship */
  skill_google_groups_aggregate: Skill_Google_Group_Aggregate;
  /** An array relationship */
  skill_skill_categories: Array<Skill_Skill_Categories>;
  /** An aggregate relationship */
  skill_skill_categories_aggregate: Skill_Skill_Categories_Aggregate;
  /** An array relationship */
  skill_slack_channels: Array<Skill_Slack_Channel>;
  /** An aggregate relationship */
  skill_slack_channels_aggregate: Skill_Slack_Channel_Aggregate;
  /** An array relationship */
  team_skills: Array<Team_Skill>;
  /** An aggregate relationship */
  team_skills_aggregate: Team_Skill_Aggregate;
  /** An array relationship */
  user_profile_skills: Array<User_Profile_Skill>;
  /** An aggregate relationship */
  user_profile_skills_aggregate: User_Profile_Skill_Aggregate;
  /** An array relationship */
  user_skills: Array<User_Skill>;
  /** An aggregate relationship */
  user_skills_aggregate: User_Skill_Aggregate;
};

/** columns and relationships of "skill" */
export type SkillCase_Study_SkillsArgs = {
  distinct_on?: InputMaybe<Array<Case_Study_Skill_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Case_Study_Skill_Order_By>>;
  where?: InputMaybe<Case_Study_Skill_Bool_Exp>;
};

/** columns and relationships of "skill" */
export type SkillCase_Study_Skills_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Case_Study_Skill_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Case_Study_Skill_Order_By>>;
  where?: InputMaybe<Case_Study_Skill_Bool_Exp>;
};

/** columns and relationships of "skill" */
export type SkillSkill_Google_GroupsArgs = {
  distinct_on?: InputMaybe<Array<Skill_Google_Group_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Skill_Google_Group_Order_By>>;
  where?: InputMaybe<Skill_Google_Group_Bool_Exp>;
};

/** columns and relationships of "skill" */
export type SkillSkill_Google_Groups_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Skill_Google_Group_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Skill_Google_Group_Order_By>>;
  where?: InputMaybe<Skill_Google_Group_Bool_Exp>;
};

/** columns and relationships of "skill" */
export type SkillSkill_Skill_CategoriesArgs = {
  distinct_on?: InputMaybe<Array<Skill_Skill_Categories_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Skill_Skill_Categories_Order_By>>;
  where?: InputMaybe<Skill_Skill_Categories_Bool_Exp>;
};

/** columns and relationships of "skill" */
export type SkillSkill_Skill_Categories_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Skill_Skill_Categories_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Skill_Skill_Categories_Order_By>>;
  where?: InputMaybe<Skill_Skill_Categories_Bool_Exp>;
};

/** columns and relationships of "skill" */
export type SkillSkill_Slack_ChannelsArgs = {
  distinct_on?: InputMaybe<Array<Skill_Slack_Channel_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Skill_Slack_Channel_Order_By>>;
  where?: InputMaybe<Skill_Slack_Channel_Bool_Exp>;
};

/** columns and relationships of "skill" */
export type SkillSkill_Slack_Channels_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Skill_Slack_Channel_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Skill_Slack_Channel_Order_By>>;
  where?: InputMaybe<Skill_Slack_Channel_Bool_Exp>;
};

/** columns and relationships of "skill" */
export type SkillTeam_SkillsArgs = {
  distinct_on?: InputMaybe<Array<Team_Skill_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Team_Skill_Order_By>>;
  where?: InputMaybe<Team_Skill_Bool_Exp>;
};

/** columns and relationships of "skill" */
export type SkillTeam_Skills_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Team_Skill_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Team_Skill_Order_By>>;
  where?: InputMaybe<Team_Skill_Bool_Exp>;
};

/** columns and relationships of "skill" */
export type SkillUser_Profile_SkillsArgs = {
  distinct_on?: InputMaybe<Array<User_Profile_Skill_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Profile_Skill_Order_By>>;
  where?: InputMaybe<User_Profile_Skill_Bool_Exp>;
};

/** columns and relationships of "skill" */
export type SkillUser_Profile_Skills_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Profile_Skill_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Profile_Skill_Order_By>>;
  where?: InputMaybe<User_Profile_Skill_Bool_Exp>;
};

/** columns and relationships of "skill" */
export type SkillUser_SkillsArgs = {
  distinct_on?: InputMaybe<Array<User_Skill_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Skill_Order_By>>;
  where?: InputMaybe<User_Skill_Bool_Exp>;
};

/** columns and relationships of "skill" */
export type SkillUser_Skills_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Skill_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Skill_Order_By>>;
  where?: InputMaybe<User_Skill_Bool_Exp>;
};

/** aggregated selection of "skill" */
export type Skill_Aggregate = {
  __typename?: 'skill_aggregate';
  aggregate?: Maybe<Skill_Aggregate_Fields>;
  nodes: Array<Skill>;
};

/** aggregate fields of "skill" */
export type Skill_Aggregate_Fields = {
  __typename?: 'skill_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<Skill_Max_Fields>;
  min?: Maybe<Skill_Min_Fields>;
};

/** aggregate fields of "skill" */
export type Skill_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Skill_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** Boolean expression to filter rows from the table "skill". All fields are combined with a logical 'AND'. */
export type Skill_Bool_Exp = {
  _and?: InputMaybe<Array<Skill_Bool_Exp>>;
  _not?: InputMaybe<Skill_Bool_Exp>;
  _or?: InputMaybe<Array<Skill_Bool_Exp>>;
  case_study_skills?: InputMaybe<Case_Study_Skill_Bool_Exp>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  skill_google_groups?: InputMaybe<Skill_Google_Group_Bool_Exp>;
  skill_skill_categories?: InputMaybe<Skill_Skill_Categories_Bool_Exp>;
  skill_slack_channels?: InputMaybe<Skill_Slack_Channel_Bool_Exp>;
  team_skills?: InputMaybe<Team_Skill_Bool_Exp>;
  user_profile_skills?: InputMaybe<User_Profile_Skill_Bool_Exp>;
  user_skills?: InputMaybe<User_Skill_Bool_Exp>;
};

/** columns and relationships of "skill_category" */
export type Skill_Category = {
  __typename?: 'skill_category';
  id: Scalars['uuid'];
  name: Scalars['String'];
  parentCategoryID?: Maybe<Scalars['uuid']>;
  /** An array relationship */
  skill_categories: Array<Skill_Category>;
  /** An aggregate relationship */
  skill_categories_aggregate: Skill_Category_Aggregate;
  /** An object relationship */
  skill_category?: Maybe<Skill_Category>;
  /** An array relationship */
  skill_skill_categories: Array<Skill_Skill_Categories>;
  /** An aggregate relationship */
  skill_skill_categories_aggregate: Skill_Skill_Categories_Aggregate;
};

/** columns and relationships of "skill_category" */
export type Skill_CategorySkill_CategoriesArgs = {
  distinct_on?: InputMaybe<Array<Skill_Category_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Skill_Category_Order_By>>;
  where?: InputMaybe<Skill_Category_Bool_Exp>;
};

/** columns and relationships of "skill_category" */
export type Skill_CategorySkill_Categories_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Skill_Category_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Skill_Category_Order_By>>;
  where?: InputMaybe<Skill_Category_Bool_Exp>;
};

/** columns and relationships of "skill_category" */
export type Skill_CategorySkill_Skill_CategoriesArgs = {
  distinct_on?: InputMaybe<Array<Skill_Skill_Categories_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Skill_Skill_Categories_Order_By>>;
  where?: InputMaybe<Skill_Skill_Categories_Bool_Exp>;
};

/** columns and relationships of "skill_category" */
export type Skill_CategorySkill_Skill_Categories_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Skill_Skill_Categories_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Skill_Skill_Categories_Order_By>>;
  where?: InputMaybe<Skill_Skill_Categories_Bool_Exp>;
};

/** aggregated selection of "skill_category" */
export type Skill_Category_Aggregate = {
  __typename?: 'skill_category_aggregate';
  aggregate?: Maybe<Skill_Category_Aggregate_Fields>;
  nodes: Array<Skill_Category>;
};

/** aggregate fields of "skill_category" */
export type Skill_Category_Aggregate_Fields = {
  __typename?: 'skill_category_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<Skill_Category_Max_Fields>;
  min?: Maybe<Skill_Category_Min_Fields>;
};

/** aggregate fields of "skill_category" */
export type Skill_Category_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Skill_Category_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "skill_category" */
export type Skill_Category_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Skill_Category_Max_Order_By>;
  min?: InputMaybe<Skill_Category_Min_Order_By>;
};

/** input type for inserting array relation for remote table "skill_category" */
export type Skill_Category_Arr_Rel_Insert_Input = {
  data: Array<Skill_Category_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Skill_Category_On_Conflict>;
};

/** Boolean expression to filter rows from the table "skill_category". All fields are combined with a logical 'AND'. */
export type Skill_Category_Bool_Exp = {
  _and?: InputMaybe<Array<Skill_Category_Bool_Exp>>;
  _not?: InputMaybe<Skill_Category_Bool_Exp>;
  _or?: InputMaybe<Array<Skill_Category_Bool_Exp>>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  parentCategoryID?: InputMaybe<Uuid_Comparison_Exp>;
  skill_categories?: InputMaybe<Skill_Category_Bool_Exp>;
  skill_category?: InputMaybe<Skill_Category_Bool_Exp>;
  skill_skill_categories?: InputMaybe<Skill_Skill_Categories_Bool_Exp>;
};

/** unique or primary key constraints on table "skill_category" */
export enum Skill_Category_Constraint {
  /** unique or primary key constraint on columns "id" */
  SkillCategoryPkey = 'skill_category_pkey',
}

/** input type for inserting data into table "skill_category" */
export type Skill_Category_Insert_Input = {
  id?: InputMaybe<Scalars['uuid']>;
  name?: InputMaybe<Scalars['String']>;
  parentCategoryID?: InputMaybe<Scalars['uuid']>;
  skill_categories?: InputMaybe<Skill_Category_Arr_Rel_Insert_Input>;
  skill_category?: InputMaybe<Skill_Category_Obj_Rel_Insert_Input>;
  skill_skill_categories?: InputMaybe<Skill_Skill_Categories_Arr_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type Skill_Category_Max_Fields = {
  __typename?: 'skill_category_max_fields';
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
  parentCategoryID?: Maybe<Scalars['uuid']>;
};

/** order by max() on columns of table "skill_category" */
export type Skill_Category_Max_Order_By = {
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  parentCategoryID?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Skill_Category_Min_Fields = {
  __typename?: 'skill_category_min_fields';
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
  parentCategoryID?: Maybe<Scalars['uuid']>;
};

/** order by min() on columns of table "skill_category" */
export type Skill_Category_Min_Order_By = {
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  parentCategoryID?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "skill_category" */
export type Skill_Category_Mutation_Response = {
  __typename?: 'skill_category_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Skill_Category>;
};

/** input type for inserting object relation for remote table "skill_category" */
export type Skill_Category_Obj_Rel_Insert_Input = {
  data: Skill_Category_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Skill_Category_On_Conflict>;
};

/** on_conflict condition type for table "skill_category" */
export type Skill_Category_On_Conflict = {
  constraint: Skill_Category_Constraint;
  update_columns?: Array<Skill_Category_Update_Column>;
  where?: InputMaybe<Skill_Category_Bool_Exp>;
};

/** Ordering options when selecting data from "skill_category". */
export type Skill_Category_Order_By = {
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  parentCategoryID?: InputMaybe<Order_By>;
  skill_categories_aggregate?: InputMaybe<Skill_Category_Aggregate_Order_By>;
  skill_category?: InputMaybe<Skill_Category_Order_By>;
  skill_skill_categories_aggregate?: InputMaybe<Skill_Skill_Categories_Aggregate_Order_By>;
};

/** primary key columns input for table: skill_category */
export type Skill_Category_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "skill_category" */
export enum Skill_Category_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
  /** column name */
  ParentCategoryId = 'parentCategoryID',
}

/** input type for updating data in table "skill_category" */
export type Skill_Category_Set_Input = {
  id?: InputMaybe<Scalars['uuid']>;
  name?: InputMaybe<Scalars['String']>;
  parentCategoryID?: InputMaybe<Scalars['uuid']>;
};

/** Streaming cursor of the table "skill_category" */
export type Skill_Category_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Skill_Category_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Skill_Category_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['uuid']>;
  name?: InputMaybe<Scalars['String']>;
  parentCategoryID?: InputMaybe<Scalars['uuid']>;
};

/** update columns of table "skill_category" */
export enum Skill_Category_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
  /** column name */
  ParentCategoryId = 'parentCategoryID',
}

export type Skill_Category_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Skill_Category_Set_Input>;
  where: Skill_Category_Bool_Exp;
};

/** unique or primary key constraints on table "skill" */
export enum Skill_Constraint {
  /** unique or primary key constraint on columns "name" */
  SkillNameKey = 'skill_name_key',
  /** unique or primary key constraint on columns "id" */
  SkillPkey = 'skill_pkey',
}

/** columns and relationships of "skill_google_group" */
export type Skill_Google_Group = {
  __typename?: 'skill_google_group';
  googleGroupID: Scalars['String'];
  /** An object relationship */
  skill: Skill;
  skillID: Scalars['uuid'];
};

/** aggregated selection of "skill_google_group" */
export type Skill_Google_Group_Aggregate = {
  __typename?: 'skill_google_group_aggregate';
  aggregate?: Maybe<Skill_Google_Group_Aggregate_Fields>;
  nodes: Array<Skill_Google_Group>;
};

/** aggregate fields of "skill_google_group" */
export type Skill_Google_Group_Aggregate_Fields = {
  __typename?: 'skill_google_group_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<Skill_Google_Group_Max_Fields>;
  min?: Maybe<Skill_Google_Group_Min_Fields>;
};

/** aggregate fields of "skill_google_group" */
export type Skill_Google_Group_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Skill_Google_Group_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "skill_google_group" */
export type Skill_Google_Group_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Skill_Google_Group_Max_Order_By>;
  min?: InputMaybe<Skill_Google_Group_Min_Order_By>;
};

/** input type for inserting array relation for remote table "skill_google_group" */
export type Skill_Google_Group_Arr_Rel_Insert_Input = {
  data: Array<Skill_Google_Group_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Skill_Google_Group_On_Conflict>;
};

/** Boolean expression to filter rows from the table "skill_google_group". All fields are combined with a logical 'AND'. */
export type Skill_Google_Group_Bool_Exp = {
  _and?: InputMaybe<Array<Skill_Google_Group_Bool_Exp>>;
  _not?: InputMaybe<Skill_Google_Group_Bool_Exp>;
  _or?: InputMaybe<Array<Skill_Google_Group_Bool_Exp>>;
  googleGroupID?: InputMaybe<String_Comparison_Exp>;
  skill?: InputMaybe<Skill_Bool_Exp>;
  skillID?: InputMaybe<Uuid_Comparison_Exp>;
};

/** unique or primary key constraints on table "skill_google_group" */
export enum Skill_Google_Group_Constraint {
  /** unique or primary key constraint on columns "googleGroupID", "skillID" */
  SkillGoogleGroupPkey = 'skill_google_group_pkey',
}

/** input type for inserting data into table "skill_google_group" */
export type Skill_Google_Group_Insert_Input = {
  googleGroupID?: InputMaybe<Scalars['String']>;
  skill?: InputMaybe<Skill_Obj_Rel_Insert_Input>;
  skillID?: InputMaybe<Scalars['uuid']>;
};

/** aggregate max on columns */
export type Skill_Google_Group_Max_Fields = {
  __typename?: 'skill_google_group_max_fields';
  googleGroupID?: Maybe<Scalars['String']>;
  skillID?: Maybe<Scalars['uuid']>;
};

/** order by max() on columns of table "skill_google_group" */
export type Skill_Google_Group_Max_Order_By = {
  googleGroupID?: InputMaybe<Order_By>;
  skillID?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Skill_Google_Group_Min_Fields = {
  __typename?: 'skill_google_group_min_fields';
  googleGroupID?: Maybe<Scalars['String']>;
  skillID?: Maybe<Scalars['uuid']>;
};

/** order by min() on columns of table "skill_google_group" */
export type Skill_Google_Group_Min_Order_By = {
  googleGroupID?: InputMaybe<Order_By>;
  skillID?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "skill_google_group" */
export type Skill_Google_Group_Mutation_Response = {
  __typename?: 'skill_google_group_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Skill_Google_Group>;
};

/** on_conflict condition type for table "skill_google_group" */
export type Skill_Google_Group_On_Conflict = {
  constraint: Skill_Google_Group_Constraint;
  update_columns?: Array<Skill_Google_Group_Update_Column>;
  where?: InputMaybe<Skill_Google_Group_Bool_Exp>;
};

/** Ordering options when selecting data from "skill_google_group". */
export type Skill_Google_Group_Order_By = {
  googleGroupID?: InputMaybe<Order_By>;
  skill?: InputMaybe<Skill_Order_By>;
  skillID?: InputMaybe<Order_By>;
};

/** primary key columns input for table: skill_google_group */
export type Skill_Google_Group_Pk_Columns_Input = {
  googleGroupID: Scalars['String'];
  skillID: Scalars['uuid'];
};

/** select columns of table "skill_google_group" */
export enum Skill_Google_Group_Select_Column {
  /** column name */
  GoogleGroupId = 'googleGroupID',
  /** column name */
  SkillId = 'skillID',
}

/** input type for updating data in table "skill_google_group" */
export type Skill_Google_Group_Set_Input = {
  googleGroupID?: InputMaybe<Scalars['String']>;
  skillID?: InputMaybe<Scalars['uuid']>;
};

/** Streaming cursor of the table "skill_google_group" */
export type Skill_Google_Group_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Skill_Google_Group_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Skill_Google_Group_Stream_Cursor_Value_Input = {
  googleGroupID?: InputMaybe<Scalars['String']>;
  skillID?: InputMaybe<Scalars['uuid']>;
};

/** update columns of table "skill_google_group" */
export enum Skill_Google_Group_Update_Column {
  /** column name */
  GoogleGroupId = 'googleGroupID',
  /** column name */
  SkillId = 'skillID',
}

export type Skill_Google_Group_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Skill_Google_Group_Set_Input>;
  where: Skill_Google_Group_Bool_Exp;
};

/** input type for inserting data into table "skill" */
export type Skill_Insert_Input = {
  case_study_skills?: InputMaybe<Case_Study_Skill_Arr_Rel_Insert_Input>;
  id?: InputMaybe<Scalars['uuid']>;
  name?: InputMaybe<Scalars['String']>;
  skill_google_groups?: InputMaybe<Skill_Google_Group_Arr_Rel_Insert_Input>;
  skill_skill_categories?: InputMaybe<Skill_Skill_Categories_Arr_Rel_Insert_Input>;
  skill_slack_channels?: InputMaybe<Skill_Slack_Channel_Arr_Rel_Insert_Input>;
  team_skills?: InputMaybe<Team_Skill_Arr_Rel_Insert_Input>;
  user_profile_skills?: InputMaybe<User_Profile_Skill_Arr_Rel_Insert_Input>;
  user_skills?: InputMaybe<User_Skill_Arr_Rel_Insert_Input>;
};

/** columns and relationships of "skill_level" */
export type Skill_Level = {
  __typename?: 'skill_level';
  id: Scalars['uuid'];
  name: Scalars['String'];
  /** An array relationship */
  user_skills: Array<User_Skill>;
  /** An aggregate relationship */
  user_skills_aggregate: User_Skill_Aggregate;
};

/** columns and relationships of "skill_level" */
export type Skill_LevelUser_SkillsArgs = {
  distinct_on?: InputMaybe<Array<User_Skill_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Skill_Order_By>>;
  where?: InputMaybe<User_Skill_Bool_Exp>;
};

/** columns and relationships of "skill_level" */
export type Skill_LevelUser_Skills_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Skill_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Skill_Order_By>>;
  where?: InputMaybe<User_Skill_Bool_Exp>;
};

/** aggregated selection of "skill_level" */
export type Skill_Level_Aggregate = {
  __typename?: 'skill_level_aggregate';
  aggregate?: Maybe<Skill_Level_Aggregate_Fields>;
  nodes: Array<Skill_Level>;
};

/** aggregate fields of "skill_level" */
export type Skill_Level_Aggregate_Fields = {
  __typename?: 'skill_level_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<Skill_Level_Max_Fields>;
  min?: Maybe<Skill_Level_Min_Fields>;
};

/** aggregate fields of "skill_level" */
export type Skill_Level_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Skill_Level_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** Boolean expression to filter rows from the table "skill_level". All fields are combined with a logical 'AND'. */
export type Skill_Level_Bool_Exp = {
  _and?: InputMaybe<Array<Skill_Level_Bool_Exp>>;
  _not?: InputMaybe<Skill_Level_Bool_Exp>;
  _or?: InputMaybe<Array<Skill_Level_Bool_Exp>>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  user_skills?: InputMaybe<User_Skill_Bool_Exp>;
};

/** unique or primary key constraints on table "skill_level" */
export enum Skill_Level_Constraint {
  /** unique or primary key constraint on columns "name" */
  SkillLevelNameKey = 'skill_level_name_key',
  /** unique or primary key constraint on columns "id" */
  SkillLevelPkey = 'skill_level_pkey',
}

/** input type for inserting data into table "skill_level" */
export type Skill_Level_Insert_Input = {
  id?: InputMaybe<Scalars['uuid']>;
  name?: InputMaybe<Scalars['String']>;
  user_skills?: InputMaybe<User_Skill_Arr_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type Skill_Level_Max_Fields = {
  __typename?: 'skill_level_max_fields';
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type Skill_Level_Min_Fields = {
  __typename?: 'skill_level_min_fields';
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "skill_level" */
export type Skill_Level_Mutation_Response = {
  __typename?: 'skill_level_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Skill_Level>;
};

/** input type for inserting object relation for remote table "skill_level" */
export type Skill_Level_Obj_Rel_Insert_Input = {
  data: Skill_Level_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Skill_Level_On_Conflict>;
};

/** on_conflict condition type for table "skill_level" */
export type Skill_Level_On_Conflict = {
  constraint: Skill_Level_Constraint;
  update_columns?: Array<Skill_Level_Update_Column>;
  where?: InputMaybe<Skill_Level_Bool_Exp>;
};

/** Ordering options when selecting data from "skill_level". */
export type Skill_Level_Order_By = {
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  user_skills_aggregate?: InputMaybe<User_Skill_Aggregate_Order_By>;
};

/** primary key columns input for table: skill_level */
export type Skill_Level_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "skill_level" */
export enum Skill_Level_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
}

/** input type for updating data in table "skill_level" */
export type Skill_Level_Set_Input = {
  id?: InputMaybe<Scalars['uuid']>;
  name?: InputMaybe<Scalars['String']>;
};

/** Streaming cursor of the table "skill_level" */
export type Skill_Level_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Skill_Level_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Skill_Level_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['uuid']>;
  name?: InputMaybe<Scalars['String']>;
};

/** update columns of table "skill_level" */
export enum Skill_Level_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
}

export type Skill_Level_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Skill_Level_Set_Input>;
  where: Skill_Level_Bool_Exp;
};

/** aggregate max on columns */
export type Skill_Max_Fields = {
  __typename?: 'skill_max_fields';
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type Skill_Min_Fields = {
  __typename?: 'skill_min_fields';
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "skill" */
export type Skill_Mutation_Response = {
  __typename?: 'skill_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Skill>;
};

/** input type for inserting object relation for remote table "skill" */
export type Skill_Obj_Rel_Insert_Input = {
  data: Skill_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Skill_On_Conflict>;
};

/** on_conflict condition type for table "skill" */
export type Skill_On_Conflict = {
  constraint: Skill_Constraint;
  update_columns?: Array<Skill_Update_Column>;
  where?: InputMaybe<Skill_Bool_Exp>;
};

/** Ordering options when selecting data from "skill". */
export type Skill_Order_By = {
  case_study_skills_aggregate?: InputMaybe<Case_Study_Skill_Aggregate_Order_By>;
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  skill_google_groups_aggregate?: InputMaybe<Skill_Google_Group_Aggregate_Order_By>;
  skill_skill_categories_aggregate?: InputMaybe<Skill_Skill_Categories_Aggregate_Order_By>;
  skill_slack_channels_aggregate?: InputMaybe<Skill_Slack_Channel_Aggregate_Order_By>;
  team_skills_aggregate?: InputMaybe<Team_Skill_Aggregate_Order_By>;
  user_profile_skills_aggregate?: InputMaybe<User_Profile_Skill_Aggregate_Order_By>;
  user_skills_aggregate?: InputMaybe<User_Skill_Aggregate_Order_By>;
};

/** primary key columns input for table: skill */
export type Skill_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "skill" */
export enum Skill_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
}

/** input type for updating data in table "skill" */
export type Skill_Set_Input = {
  id?: InputMaybe<Scalars['uuid']>;
  name?: InputMaybe<Scalars['String']>;
};

/** columns and relationships of "skill_skill_categories" */
export type Skill_Skill_Categories = {
  __typename?: 'skill_skill_categories';
  categoryID: Scalars['uuid'];
  id: Scalars['uuid'];
  /** An object relationship */
  skill: Skill;
  skillID: Scalars['uuid'];
  /** An object relationship */
  skill_category: Skill_Category;
};

/** aggregated selection of "skill_skill_categories" */
export type Skill_Skill_Categories_Aggregate = {
  __typename?: 'skill_skill_categories_aggregate';
  aggregate?: Maybe<Skill_Skill_Categories_Aggregate_Fields>;
  nodes: Array<Skill_Skill_Categories>;
};

/** aggregate fields of "skill_skill_categories" */
export type Skill_Skill_Categories_Aggregate_Fields = {
  __typename?: 'skill_skill_categories_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<Skill_Skill_Categories_Max_Fields>;
  min?: Maybe<Skill_Skill_Categories_Min_Fields>;
};

/** aggregate fields of "skill_skill_categories" */
export type Skill_Skill_Categories_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Skill_Skill_Categories_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "skill_skill_categories" */
export type Skill_Skill_Categories_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Skill_Skill_Categories_Max_Order_By>;
  min?: InputMaybe<Skill_Skill_Categories_Min_Order_By>;
};

/** input type for inserting array relation for remote table "skill_skill_categories" */
export type Skill_Skill_Categories_Arr_Rel_Insert_Input = {
  data: Array<Skill_Skill_Categories_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Skill_Skill_Categories_On_Conflict>;
};

/** Boolean expression to filter rows from the table "skill_skill_categories". All fields are combined with a logical 'AND'. */
export type Skill_Skill_Categories_Bool_Exp = {
  _and?: InputMaybe<Array<Skill_Skill_Categories_Bool_Exp>>;
  _not?: InputMaybe<Skill_Skill_Categories_Bool_Exp>;
  _or?: InputMaybe<Array<Skill_Skill_Categories_Bool_Exp>>;
  categoryID?: InputMaybe<Uuid_Comparison_Exp>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  skill?: InputMaybe<Skill_Bool_Exp>;
  skillID?: InputMaybe<Uuid_Comparison_Exp>;
  skill_category?: InputMaybe<Skill_Category_Bool_Exp>;
};

/** unique or primary key constraints on table "skill_skill_categories" */
export enum Skill_Skill_Categories_Constraint {
  /** unique or primary key constraint on columns "id" */
  SkillSkillCategoriesPkey = 'skill_skill_categories_pkey',
  /** unique or primary key constraint on columns "categoryID", "skillID" */
  SkillSkillCategoriesSkillIdCategoryIdKey = 'skill_skill_categories_skillID_categoryID_key',
}

/** input type for inserting data into table "skill_skill_categories" */
export type Skill_Skill_Categories_Insert_Input = {
  categoryID?: InputMaybe<Scalars['uuid']>;
  id?: InputMaybe<Scalars['uuid']>;
  skill?: InputMaybe<Skill_Obj_Rel_Insert_Input>;
  skillID?: InputMaybe<Scalars['uuid']>;
  skill_category?: InputMaybe<Skill_Category_Obj_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type Skill_Skill_Categories_Max_Fields = {
  __typename?: 'skill_skill_categories_max_fields';
  categoryID?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  skillID?: Maybe<Scalars['uuid']>;
};

/** order by max() on columns of table "skill_skill_categories" */
export type Skill_Skill_Categories_Max_Order_By = {
  categoryID?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  skillID?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Skill_Skill_Categories_Min_Fields = {
  __typename?: 'skill_skill_categories_min_fields';
  categoryID?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  skillID?: Maybe<Scalars['uuid']>;
};

/** order by min() on columns of table "skill_skill_categories" */
export type Skill_Skill_Categories_Min_Order_By = {
  categoryID?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  skillID?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "skill_skill_categories" */
export type Skill_Skill_Categories_Mutation_Response = {
  __typename?: 'skill_skill_categories_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Skill_Skill_Categories>;
};

/** on_conflict condition type for table "skill_skill_categories" */
export type Skill_Skill_Categories_On_Conflict = {
  constraint: Skill_Skill_Categories_Constraint;
  update_columns?: Array<Skill_Skill_Categories_Update_Column>;
  where?: InputMaybe<Skill_Skill_Categories_Bool_Exp>;
};

/** Ordering options when selecting data from "skill_skill_categories". */
export type Skill_Skill_Categories_Order_By = {
  categoryID?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  skill?: InputMaybe<Skill_Order_By>;
  skillID?: InputMaybe<Order_By>;
  skill_category?: InputMaybe<Skill_Category_Order_By>;
};

/** primary key columns input for table: skill_skill_categories */
export type Skill_Skill_Categories_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "skill_skill_categories" */
export enum Skill_Skill_Categories_Select_Column {
  /** column name */
  CategoryId = 'categoryID',
  /** column name */
  Id = 'id',
  /** column name */
  SkillId = 'skillID',
}

/** input type for updating data in table "skill_skill_categories" */
export type Skill_Skill_Categories_Set_Input = {
  categoryID?: InputMaybe<Scalars['uuid']>;
  id?: InputMaybe<Scalars['uuid']>;
  skillID?: InputMaybe<Scalars['uuid']>;
};

/** Streaming cursor of the table "skill_skill_categories" */
export type Skill_Skill_Categories_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Skill_Skill_Categories_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Skill_Skill_Categories_Stream_Cursor_Value_Input = {
  categoryID?: InputMaybe<Scalars['uuid']>;
  id?: InputMaybe<Scalars['uuid']>;
  skillID?: InputMaybe<Scalars['uuid']>;
};

/** update columns of table "skill_skill_categories" */
export enum Skill_Skill_Categories_Update_Column {
  /** column name */
  CategoryId = 'categoryID',
  /** column name */
  Id = 'id',
  /** column name */
  SkillId = 'skillID',
}

export type Skill_Skill_Categories_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Skill_Skill_Categories_Set_Input>;
  where: Skill_Skill_Categories_Bool_Exp;
};

/** columns and relationships of "skill_slack_channel" */
export type Skill_Slack_Channel = {
  __typename?: 'skill_slack_channel';
  /** An object relationship */
  skill: Skill;
  skillID: Scalars['uuid'];
  slackChannelID: Scalars['String'];
};

/** aggregated selection of "skill_slack_channel" */
export type Skill_Slack_Channel_Aggregate = {
  __typename?: 'skill_slack_channel_aggregate';
  aggregate?: Maybe<Skill_Slack_Channel_Aggregate_Fields>;
  nodes: Array<Skill_Slack_Channel>;
};

/** aggregate fields of "skill_slack_channel" */
export type Skill_Slack_Channel_Aggregate_Fields = {
  __typename?: 'skill_slack_channel_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<Skill_Slack_Channel_Max_Fields>;
  min?: Maybe<Skill_Slack_Channel_Min_Fields>;
};

/** aggregate fields of "skill_slack_channel" */
export type Skill_Slack_Channel_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Skill_Slack_Channel_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "skill_slack_channel" */
export type Skill_Slack_Channel_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Skill_Slack_Channel_Max_Order_By>;
  min?: InputMaybe<Skill_Slack_Channel_Min_Order_By>;
};

/** input type for inserting array relation for remote table "skill_slack_channel" */
export type Skill_Slack_Channel_Arr_Rel_Insert_Input = {
  data: Array<Skill_Slack_Channel_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Skill_Slack_Channel_On_Conflict>;
};

/** Boolean expression to filter rows from the table "skill_slack_channel". All fields are combined with a logical 'AND'. */
export type Skill_Slack_Channel_Bool_Exp = {
  _and?: InputMaybe<Array<Skill_Slack_Channel_Bool_Exp>>;
  _not?: InputMaybe<Skill_Slack_Channel_Bool_Exp>;
  _or?: InputMaybe<Array<Skill_Slack_Channel_Bool_Exp>>;
  skill?: InputMaybe<Skill_Bool_Exp>;
  skillID?: InputMaybe<Uuid_Comparison_Exp>;
  slackChannelID?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "skill_slack_channel" */
export enum Skill_Slack_Channel_Constraint {
  /** unique or primary key constraint on columns "slackChannelID", "skillID" */
  SkillSlackChannelPkey = 'skill_slack_channel_pkey',
}

/** input type for inserting data into table "skill_slack_channel" */
export type Skill_Slack_Channel_Insert_Input = {
  skill?: InputMaybe<Skill_Obj_Rel_Insert_Input>;
  skillID?: InputMaybe<Scalars['uuid']>;
  slackChannelID?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Skill_Slack_Channel_Max_Fields = {
  __typename?: 'skill_slack_channel_max_fields';
  skillID?: Maybe<Scalars['uuid']>;
  slackChannelID?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "skill_slack_channel" */
export type Skill_Slack_Channel_Max_Order_By = {
  skillID?: InputMaybe<Order_By>;
  slackChannelID?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Skill_Slack_Channel_Min_Fields = {
  __typename?: 'skill_slack_channel_min_fields';
  skillID?: Maybe<Scalars['uuid']>;
  slackChannelID?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "skill_slack_channel" */
export type Skill_Slack_Channel_Min_Order_By = {
  skillID?: InputMaybe<Order_By>;
  slackChannelID?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "skill_slack_channel" */
export type Skill_Slack_Channel_Mutation_Response = {
  __typename?: 'skill_slack_channel_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Skill_Slack_Channel>;
};

/** on_conflict condition type for table "skill_slack_channel" */
export type Skill_Slack_Channel_On_Conflict = {
  constraint: Skill_Slack_Channel_Constraint;
  update_columns?: Array<Skill_Slack_Channel_Update_Column>;
  where?: InputMaybe<Skill_Slack_Channel_Bool_Exp>;
};

/** Ordering options when selecting data from "skill_slack_channel". */
export type Skill_Slack_Channel_Order_By = {
  skill?: InputMaybe<Skill_Order_By>;
  skillID?: InputMaybe<Order_By>;
  slackChannelID?: InputMaybe<Order_By>;
};

/** primary key columns input for table: skill_slack_channel */
export type Skill_Slack_Channel_Pk_Columns_Input = {
  skillID: Scalars['uuid'];
  slackChannelID: Scalars['String'];
};

/** select columns of table "skill_slack_channel" */
export enum Skill_Slack_Channel_Select_Column {
  /** column name */
  SkillId = 'skillID',
  /** column name */
  SlackChannelId = 'slackChannelID',
}

/** input type for updating data in table "skill_slack_channel" */
export type Skill_Slack_Channel_Set_Input = {
  skillID?: InputMaybe<Scalars['uuid']>;
  slackChannelID?: InputMaybe<Scalars['String']>;
};

/** Streaming cursor of the table "skill_slack_channel" */
export type Skill_Slack_Channel_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Skill_Slack_Channel_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Skill_Slack_Channel_Stream_Cursor_Value_Input = {
  skillID?: InputMaybe<Scalars['uuid']>;
  slackChannelID?: InputMaybe<Scalars['String']>;
};

/** update columns of table "skill_slack_channel" */
export enum Skill_Slack_Channel_Update_Column {
  /** column name */
  SkillId = 'skillID',
  /** column name */
  SlackChannelId = 'slackChannelID',
}

export type Skill_Slack_Channel_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Skill_Slack_Channel_Set_Input>;
  where: Skill_Slack_Channel_Bool_Exp;
};

/** Streaming cursor of the table "skill" */
export type Skill_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Skill_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Skill_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['uuid']>;
  name?: InputMaybe<Scalars['String']>;
};

/** update columns of table "skill" */
export enum Skill_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
}

export type Skill_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Skill_Set_Input>;
  where: Skill_Bool_Exp;
};

/** columns and relationships of "slack_answer" */
export type Slack_Answer = {
  __typename?: 'slack_answer';
  enabled: Scalars['Boolean'];
  id: Scalars['uuid'];
  slackMessageID: Scalars['uuid'];
  /** An object relationship */
  slack_message: Slack_Message;
  /** An array relationship */
  slack_message_trigger_logs: Array<Slack_Message_Trigger_Log>;
  /** An aggregate relationship */
  slack_message_trigger_logs_aggregate: Slack_Message_Trigger_Log_Aggregate;
  text: Scalars['String'];
};

/** columns and relationships of "slack_answer" */
export type Slack_AnswerSlack_Message_Trigger_LogsArgs = {
  distinct_on?: InputMaybe<Array<Slack_Message_Trigger_Log_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Slack_Message_Trigger_Log_Order_By>>;
  where?: InputMaybe<Slack_Message_Trigger_Log_Bool_Exp>;
};

/** columns and relationships of "slack_answer" */
export type Slack_AnswerSlack_Message_Trigger_Logs_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Slack_Message_Trigger_Log_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Slack_Message_Trigger_Log_Order_By>>;
  where?: InputMaybe<Slack_Message_Trigger_Log_Bool_Exp>;
};

/** aggregated selection of "slack_answer" */
export type Slack_Answer_Aggregate = {
  __typename?: 'slack_answer_aggregate';
  aggregate?: Maybe<Slack_Answer_Aggregate_Fields>;
  nodes: Array<Slack_Answer>;
};

/** aggregate fields of "slack_answer" */
export type Slack_Answer_Aggregate_Fields = {
  __typename?: 'slack_answer_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<Slack_Answer_Max_Fields>;
  min?: Maybe<Slack_Answer_Min_Fields>;
};

/** aggregate fields of "slack_answer" */
export type Slack_Answer_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Slack_Answer_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "slack_answer" */
export type Slack_Answer_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Slack_Answer_Max_Order_By>;
  min?: InputMaybe<Slack_Answer_Min_Order_By>;
};

/** input type for inserting array relation for remote table "slack_answer" */
export type Slack_Answer_Arr_Rel_Insert_Input = {
  data: Array<Slack_Answer_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Slack_Answer_On_Conflict>;
};

/** Boolean expression to filter rows from the table "slack_answer". All fields are combined with a logical 'AND'. */
export type Slack_Answer_Bool_Exp = {
  _and?: InputMaybe<Array<Slack_Answer_Bool_Exp>>;
  _not?: InputMaybe<Slack_Answer_Bool_Exp>;
  _or?: InputMaybe<Array<Slack_Answer_Bool_Exp>>;
  enabled?: InputMaybe<Boolean_Comparison_Exp>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  slackMessageID?: InputMaybe<Uuid_Comparison_Exp>;
  slack_message?: InputMaybe<Slack_Message_Bool_Exp>;
  slack_message_trigger_logs?: InputMaybe<Slack_Message_Trigger_Log_Bool_Exp>;
  text?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "slack_answer" */
export enum Slack_Answer_Constraint {
  /** unique or primary key constraint on columns "id" */
  SlackAnswerPkey = 'slack_answer_pkey',
}

/** input type for inserting data into table "slack_answer" */
export type Slack_Answer_Insert_Input = {
  enabled?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['uuid']>;
  slackMessageID?: InputMaybe<Scalars['uuid']>;
  slack_message?: InputMaybe<Slack_Message_Obj_Rel_Insert_Input>;
  slack_message_trigger_logs?: InputMaybe<Slack_Message_Trigger_Log_Arr_Rel_Insert_Input>;
  text?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Slack_Answer_Max_Fields = {
  __typename?: 'slack_answer_max_fields';
  id?: Maybe<Scalars['uuid']>;
  slackMessageID?: Maybe<Scalars['uuid']>;
  text?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "slack_answer" */
export type Slack_Answer_Max_Order_By = {
  id?: InputMaybe<Order_By>;
  slackMessageID?: InputMaybe<Order_By>;
  text?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Slack_Answer_Min_Fields = {
  __typename?: 'slack_answer_min_fields';
  id?: Maybe<Scalars['uuid']>;
  slackMessageID?: Maybe<Scalars['uuid']>;
  text?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "slack_answer" */
export type Slack_Answer_Min_Order_By = {
  id?: InputMaybe<Order_By>;
  slackMessageID?: InputMaybe<Order_By>;
  text?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "slack_answer" */
export type Slack_Answer_Mutation_Response = {
  __typename?: 'slack_answer_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Slack_Answer>;
};

/** input type for inserting object relation for remote table "slack_answer" */
export type Slack_Answer_Obj_Rel_Insert_Input = {
  data: Slack_Answer_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Slack_Answer_On_Conflict>;
};

/** on_conflict condition type for table "slack_answer" */
export type Slack_Answer_On_Conflict = {
  constraint: Slack_Answer_Constraint;
  update_columns?: Array<Slack_Answer_Update_Column>;
  where?: InputMaybe<Slack_Answer_Bool_Exp>;
};

/** Ordering options when selecting data from "slack_answer". */
export type Slack_Answer_Order_By = {
  enabled?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  slackMessageID?: InputMaybe<Order_By>;
  slack_message?: InputMaybe<Slack_Message_Order_By>;
  slack_message_trigger_logs_aggregate?: InputMaybe<Slack_Message_Trigger_Log_Aggregate_Order_By>;
  text?: InputMaybe<Order_By>;
};

/** primary key columns input for table: slack_answer */
export type Slack_Answer_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "slack_answer" */
export enum Slack_Answer_Select_Column {
  /** column name */
  Enabled = 'enabled',
  /** column name */
  Id = 'id',
  /** column name */
  SlackMessageId = 'slackMessageID',
  /** column name */
  Text = 'text',
}

/** input type for updating data in table "slack_answer" */
export type Slack_Answer_Set_Input = {
  enabled?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['uuid']>;
  slackMessageID?: InputMaybe<Scalars['uuid']>;
  text?: InputMaybe<Scalars['String']>;
};

/** Streaming cursor of the table "slack_answer" */
export type Slack_Answer_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Slack_Answer_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Slack_Answer_Stream_Cursor_Value_Input = {
  enabled?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['uuid']>;
  slackMessageID?: InputMaybe<Scalars['uuid']>;
  text?: InputMaybe<Scalars['String']>;
};

/** update columns of table "slack_answer" */
export enum Slack_Answer_Update_Column {
  /** column name */
  Enabled = 'enabled',
  /** column name */
  Id = 'id',
  /** column name */
  SlackMessageId = 'slackMessageID',
  /** column name */
  Text = 'text',
}

export type Slack_Answer_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Slack_Answer_Set_Input>;
  where: Slack_Answer_Bool_Exp;
};

/** columns and relationships of "slack_availability" */
export type Slack_Availability = {
  __typename?: 'slack_availability';
  answerID?: Maybe<Scalars['uuid']>;
  answerText?: Maybe<Scalars['String']>;
  answered_at?: Maybe<Scalars['timestamptz']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  firstName?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  lastName?: Maybe<Scalars['String']>;
  message?: Maybe<Scalars['String']>;
  messageID?: Maybe<Scalars['uuid']>;
  outreachNumber?: Maybe<Scalars['Int']>;
  questionNumber?: Maybe<Scalars['Int']>;
  userMetaID?: Maybe<Scalars['uuid']>;
  /** An object relationship */
  user_meta?: Maybe<User_Meta>;
};

/** aggregated selection of "slack_availability" */
export type Slack_Availability_Aggregate = {
  __typename?: 'slack_availability_aggregate';
  aggregate?: Maybe<Slack_Availability_Aggregate_Fields>;
  nodes: Array<Slack_Availability>;
};

/** aggregate fields of "slack_availability" */
export type Slack_Availability_Aggregate_Fields = {
  __typename?: 'slack_availability_aggregate_fields';
  avg?: Maybe<Slack_Availability_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Slack_Availability_Max_Fields>;
  min?: Maybe<Slack_Availability_Min_Fields>;
  stddev?: Maybe<Slack_Availability_Stddev_Fields>;
  stddev_pop?: Maybe<Slack_Availability_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Slack_Availability_Stddev_Samp_Fields>;
  sum?: Maybe<Slack_Availability_Sum_Fields>;
  var_pop?: Maybe<Slack_Availability_Var_Pop_Fields>;
  var_samp?: Maybe<Slack_Availability_Var_Samp_Fields>;
  variance?: Maybe<Slack_Availability_Variance_Fields>;
};

/** aggregate fields of "slack_availability" */
export type Slack_Availability_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Slack_Availability_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "slack_availability" */
export type Slack_Availability_Aggregate_Order_By = {
  avg?: InputMaybe<Slack_Availability_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Slack_Availability_Max_Order_By>;
  min?: InputMaybe<Slack_Availability_Min_Order_By>;
  stddev?: InputMaybe<Slack_Availability_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Slack_Availability_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Slack_Availability_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Slack_Availability_Sum_Order_By>;
  var_pop?: InputMaybe<Slack_Availability_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Slack_Availability_Var_Samp_Order_By>;
  variance?: InputMaybe<Slack_Availability_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "slack_availability" */
export type Slack_Availability_Arr_Rel_Insert_Input = {
  data: Array<Slack_Availability_Insert_Input>;
};

/** aggregate avg on columns */
export type Slack_Availability_Avg_Fields = {
  __typename?: 'slack_availability_avg_fields';
  outreachNumber?: Maybe<Scalars['Float']>;
  questionNumber?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "slack_availability" */
export type Slack_Availability_Avg_Order_By = {
  outreachNumber?: InputMaybe<Order_By>;
  questionNumber?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "slack_availability". All fields are combined with a logical 'AND'. */
export type Slack_Availability_Bool_Exp = {
  _and?: InputMaybe<Array<Slack_Availability_Bool_Exp>>;
  _not?: InputMaybe<Slack_Availability_Bool_Exp>;
  _or?: InputMaybe<Array<Slack_Availability_Bool_Exp>>;
  answerID?: InputMaybe<Uuid_Comparison_Exp>;
  answerText?: InputMaybe<String_Comparison_Exp>;
  answered_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  firstName?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  lastName?: InputMaybe<String_Comparison_Exp>;
  message?: InputMaybe<String_Comparison_Exp>;
  messageID?: InputMaybe<Uuid_Comparison_Exp>;
  outreachNumber?: InputMaybe<Int_Comparison_Exp>;
  questionNumber?: InputMaybe<Int_Comparison_Exp>;
  userMetaID?: InputMaybe<Uuid_Comparison_Exp>;
  user_meta?: InputMaybe<User_Meta_Bool_Exp>;
};

/** input type for inserting data into table "slack_availability" */
export type Slack_Availability_Insert_Input = {
  answerID?: InputMaybe<Scalars['uuid']>;
  answerText?: InputMaybe<Scalars['String']>;
  answered_at?: InputMaybe<Scalars['timestamptz']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  firstName?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['uuid']>;
  lastName?: InputMaybe<Scalars['String']>;
  message?: InputMaybe<Scalars['String']>;
  messageID?: InputMaybe<Scalars['uuid']>;
  outreachNumber?: InputMaybe<Scalars['Int']>;
  questionNumber?: InputMaybe<Scalars['Int']>;
  userMetaID?: InputMaybe<Scalars['uuid']>;
  user_meta?: InputMaybe<User_Meta_Obj_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type Slack_Availability_Max_Fields = {
  __typename?: 'slack_availability_max_fields';
  answerID?: Maybe<Scalars['uuid']>;
  answerText?: Maybe<Scalars['String']>;
  answered_at?: Maybe<Scalars['timestamptz']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  firstName?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  lastName?: Maybe<Scalars['String']>;
  message?: Maybe<Scalars['String']>;
  messageID?: Maybe<Scalars['uuid']>;
  outreachNumber?: Maybe<Scalars['Int']>;
  questionNumber?: Maybe<Scalars['Int']>;
  userMetaID?: Maybe<Scalars['uuid']>;
};

/** order by max() on columns of table "slack_availability" */
export type Slack_Availability_Max_Order_By = {
  answerID?: InputMaybe<Order_By>;
  answerText?: InputMaybe<Order_By>;
  answered_at?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  firstName?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  lastName?: InputMaybe<Order_By>;
  message?: InputMaybe<Order_By>;
  messageID?: InputMaybe<Order_By>;
  outreachNumber?: InputMaybe<Order_By>;
  questionNumber?: InputMaybe<Order_By>;
  userMetaID?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Slack_Availability_Min_Fields = {
  __typename?: 'slack_availability_min_fields';
  answerID?: Maybe<Scalars['uuid']>;
  answerText?: Maybe<Scalars['String']>;
  answered_at?: Maybe<Scalars['timestamptz']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  firstName?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  lastName?: Maybe<Scalars['String']>;
  message?: Maybe<Scalars['String']>;
  messageID?: Maybe<Scalars['uuid']>;
  outreachNumber?: Maybe<Scalars['Int']>;
  questionNumber?: Maybe<Scalars['Int']>;
  userMetaID?: Maybe<Scalars['uuid']>;
};

/** order by min() on columns of table "slack_availability" */
export type Slack_Availability_Min_Order_By = {
  answerID?: InputMaybe<Order_By>;
  answerText?: InputMaybe<Order_By>;
  answered_at?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  firstName?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  lastName?: InputMaybe<Order_By>;
  message?: InputMaybe<Order_By>;
  messageID?: InputMaybe<Order_By>;
  outreachNumber?: InputMaybe<Order_By>;
  questionNumber?: InputMaybe<Order_By>;
  userMetaID?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "slack_availability". */
export type Slack_Availability_Order_By = {
  answerID?: InputMaybe<Order_By>;
  answerText?: InputMaybe<Order_By>;
  answered_at?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  firstName?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  lastName?: InputMaybe<Order_By>;
  message?: InputMaybe<Order_By>;
  messageID?: InputMaybe<Order_By>;
  outreachNumber?: InputMaybe<Order_By>;
  questionNumber?: InputMaybe<Order_By>;
  userMetaID?: InputMaybe<Order_By>;
  user_meta?: InputMaybe<User_Meta_Order_By>;
};

/** select columns of table "slack_availability" */
export enum Slack_Availability_Select_Column {
  /** column name */
  AnswerId = 'answerID',
  /** column name */
  AnswerText = 'answerText',
  /** column name */
  AnsweredAt = 'answered_at',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  FirstName = 'firstName',
  /** column name */
  Id = 'id',
  /** column name */
  LastName = 'lastName',
  /** column name */
  Message = 'message',
  /** column name */
  MessageId = 'messageID',
  /** column name */
  OutreachNumber = 'outreachNumber',
  /** column name */
  QuestionNumber = 'questionNumber',
  /** column name */
  UserMetaId = 'userMetaID',
}

/** aggregate stddev on columns */
export type Slack_Availability_Stddev_Fields = {
  __typename?: 'slack_availability_stddev_fields';
  outreachNumber?: Maybe<Scalars['Float']>;
  questionNumber?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "slack_availability" */
export type Slack_Availability_Stddev_Order_By = {
  outreachNumber?: InputMaybe<Order_By>;
  questionNumber?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Slack_Availability_Stddev_Pop_Fields = {
  __typename?: 'slack_availability_stddev_pop_fields';
  outreachNumber?: Maybe<Scalars['Float']>;
  questionNumber?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "slack_availability" */
export type Slack_Availability_Stddev_Pop_Order_By = {
  outreachNumber?: InputMaybe<Order_By>;
  questionNumber?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Slack_Availability_Stddev_Samp_Fields = {
  __typename?: 'slack_availability_stddev_samp_fields';
  outreachNumber?: Maybe<Scalars['Float']>;
  questionNumber?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "slack_availability" */
export type Slack_Availability_Stddev_Samp_Order_By = {
  outreachNumber?: InputMaybe<Order_By>;
  questionNumber?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "slack_availability" */
export type Slack_Availability_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Slack_Availability_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Slack_Availability_Stream_Cursor_Value_Input = {
  answerID?: InputMaybe<Scalars['uuid']>;
  answerText?: InputMaybe<Scalars['String']>;
  answered_at?: InputMaybe<Scalars['timestamptz']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  firstName?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['uuid']>;
  lastName?: InputMaybe<Scalars['String']>;
  message?: InputMaybe<Scalars['String']>;
  messageID?: InputMaybe<Scalars['uuid']>;
  outreachNumber?: InputMaybe<Scalars['Int']>;
  questionNumber?: InputMaybe<Scalars['Int']>;
  userMetaID?: InputMaybe<Scalars['uuid']>;
};

/** aggregate sum on columns */
export type Slack_Availability_Sum_Fields = {
  __typename?: 'slack_availability_sum_fields';
  outreachNumber?: Maybe<Scalars['Int']>;
  questionNumber?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "slack_availability" */
export type Slack_Availability_Sum_Order_By = {
  outreachNumber?: InputMaybe<Order_By>;
  questionNumber?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Slack_Availability_Var_Pop_Fields = {
  __typename?: 'slack_availability_var_pop_fields';
  outreachNumber?: Maybe<Scalars['Float']>;
  questionNumber?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "slack_availability" */
export type Slack_Availability_Var_Pop_Order_By = {
  outreachNumber?: InputMaybe<Order_By>;
  questionNumber?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Slack_Availability_Var_Samp_Fields = {
  __typename?: 'slack_availability_var_samp_fields';
  outreachNumber?: Maybe<Scalars['Float']>;
  questionNumber?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "slack_availability" */
export type Slack_Availability_Var_Samp_Order_By = {
  outreachNumber?: InputMaybe<Order_By>;
  questionNumber?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Slack_Availability_Variance_Fields = {
  __typename?: 'slack_availability_variance_fields';
  outreachNumber?: Maybe<Scalars['Float']>;
  questionNumber?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "slack_availability" */
export type Slack_Availability_Variance_Order_By = {
  outreachNumber?: InputMaybe<Order_By>;
  questionNumber?: InputMaybe<Order_By>;
};

/** columns and relationships of "slack_birthday_and_anniversary_message" */
export type Slack_Birthday_And_Anniversary_Message = {
  __typename?: 'slack_birthday_and_anniversary_message';
  id: Scalars['uuid'];
  message: Scalars['String'];
  type: Scalars['String'];
};

/** aggregated selection of "slack_birthday_and_anniversary_message" */
export type Slack_Birthday_And_Anniversary_Message_Aggregate = {
  __typename?: 'slack_birthday_and_anniversary_message_aggregate';
  aggregate?: Maybe<Slack_Birthday_And_Anniversary_Message_Aggregate_Fields>;
  nodes: Array<Slack_Birthday_And_Anniversary_Message>;
};

/** aggregate fields of "slack_birthday_and_anniversary_message" */
export type Slack_Birthday_And_Anniversary_Message_Aggregate_Fields = {
  __typename?: 'slack_birthday_and_anniversary_message_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<Slack_Birthday_And_Anniversary_Message_Max_Fields>;
  min?: Maybe<Slack_Birthday_And_Anniversary_Message_Min_Fields>;
};

/** aggregate fields of "slack_birthday_and_anniversary_message" */
export type Slack_Birthday_And_Anniversary_Message_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Slack_Birthday_And_Anniversary_Message_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** Boolean expression to filter rows from the table "slack_birthday_and_anniversary_message". All fields are combined with a logical 'AND'. */
export type Slack_Birthday_And_Anniversary_Message_Bool_Exp = {
  _and?: InputMaybe<Array<Slack_Birthday_And_Anniversary_Message_Bool_Exp>>;
  _not?: InputMaybe<Slack_Birthday_And_Anniversary_Message_Bool_Exp>;
  _or?: InputMaybe<Array<Slack_Birthday_And_Anniversary_Message_Bool_Exp>>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  message?: InputMaybe<String_Comparison_Exp>;
  type?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "slack_birthday_and_anniversary_message" */
export enum Slack_Birthday_And_Anniversary_Message_Constraint {
  /** unique or primary key constraint on columns "id" */
  SlackBirthdayAndAnniversaryMessagePkey = 'slack_birthday_and_anniversary_message_pkey',
}

/** input type for inserting data into table "slack_birthday_and_anniversary_message" */
export type Slack_Birthday_And_Anniversary_Message_Insert_Input = {
  id?: InputMaybe<Scalars['uuid']>;
  message?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Slack_Birthday_And_Anniversary_Message_Max_Fields = {
  __typename?: 'slack_birthday_and_anniversary_message_max_fields';
  id?: Maybe<Scalars['uuid']>;
  message?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type Slack_Birthday_And_Anniversary_Message_Min_Fields = {
  __typename?: 'slack_birthday_and_anniversary_message_min_fields';
  id?: Maybe<Scalars['uuid']>;
  message?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "slack_birthday_and_anniversary_message" */
export type Slack_Birthday_And_Anniversary_Message_Mutation_Response = {
  __typename?: 'slack_birthday_and_anniversary_message_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Slack_Birthday_And_Anniversary_Message>;
};

/** on_conflict condition type for table "slack_birthday_and_anniversary_message" */
export type Slack_Birthday_And_Anniversary_Message_On_Conflict = {
  constraint: Slack_Birthday_And_Anniversary_Message_Constraint;
  update_columns?: Array<Slack_Birthday_And_Anniversary_Message_Update_Column>;
  where?: InputMaybe<Slack_Birthday_And_Anniversary_Message_Bool_Exp>;
};

/** Ordering options when selecting data from "slack_birthday_and_anniversary_message". */
export type Slack_Birthday_And_Anniversary_Message_Order_By = {
  id?: InputMaybe<Order_By>;
  message?: InputMaybe<Order_By>;
  type?: InputMaybe<Order_By>;
};

/** primary key columns input for table: slack_birthday_and_anniversary_message */
export type Slack_Birthday_And_Anniversary_Message_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "slack_birthday_and_anniversary_message" */
export enum Slack_Birthday_And_Anniversary_Message_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Message = 'message',
  /** column name */
  Type = 'type',
}

/** input type for updating data in table "slack_birthday_and_anniversary_message" */
export type Slack_Birthday_And_Anniversary_Message_Set_Input = {
  id?: InputMaybe<Scalars['uuid']>;
  message?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
};

/** Streaming cursor of the table "slack_birthday_and_anniversary_message" */
export type Slack_Birthday_And_Anniversary_Message_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Slack_Birthday_And_Anniversary_Message_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Slack_Birthday_And_Anniversary_Message_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['uuid']>;
  message?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
};

/** update columns of table "slack_birthday_and_anniversary_message" */
export enum Slack_Birthday_And_Anniversary_Message_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Message = 'message',
  /** column name */
  Type = 'type',
}

export type Slack_Birthday_And_Anniversary_Message_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Slack_Birthday_And_Anniversary_Message_Set_Input>;
  where: Slack_Birthday_And_Anniversary_Message_Bool_Exp;
};

/** columns and relationships of "slack_message" */
export type Slack_Message = {
  __typename?: 'slack_message';
  id: Scalars['uuid'];
  outreachNumber?: Maybe<Scalars['Int']>;
  questionNumber?: Maybe<Scalars['Int']>;
  /** An array relationship */
  slack_answers: Array<Slack_Answer>;
  /** An aggregate relationship */
  slack_answers_aggregate: Slack_Answer_Aggregate;
  /** An array relationship */
  slack_message_trigger_logs: Array<Slack_Message_Trigger_Log>;
  /** An aggregate relationship */
  slack_message_trigger_logs_aggregate: Slack_Message_Trigger_Log_Aggregate;
  text: Scalars['String'];
};

/** columns and relationships of "slack_message" */
export type Slack_MessageSlack_AnswersArgs = {
  distinct_on?: InputMaybe<Array<Slack_Answer_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Slack_Answer_Order_By>>;
  where?: InputMaybe<Slack_Answer_Bool_Exp>;
};

/** columns and relationships of "slack_message" */
export type Slack_MessageSlack_Answers_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Slack_Answer_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Slack_Answer_Order_By>>;
  where?: InputMaybe<Slack_Answer_Bool_Exp>;
};

/** columns and relationships of "slack_message" */
export type Slack_MessageSlack_Message_Trigger_LogsArgs = {
  distinct_on?: InputMaybe<Array<Slack_Message_Trigger_Log_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Slack_Message_Trigger_Log_Order_By>>;
  where?: InputMaybe<Slack_Message_Trigger_Log_Bool_Exp>;
};

/** columns and relationships of "slack_message" */
export type Slack_MessageSlack_Message_Trigger_Logs_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Slack_Message_Trigger_Log_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Slack_Message_Trigger_Log_Order_By>>;
  where?: InputMaybe<Slack_Message_Trigger_Log_Bool_Exp>;
};

/** aggregated selection of "slack_message" */
export type Slack_Message_Aggregate = {
  __typename?: 'slack_message_aggregate';
  aggregate?: Maybe<Slack_Message_Aggregate_Fields>;
  nodes: Array<Slack_Message>;
};

/** aggregate fields of "slack_message" */
export type Slack_Message_Aggregate_Fields = {
  __typename?: 'slack_message_aggregate_fields';
  avg?: Maybe<Slack_Message_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Slack_Message_Max_Fields>;
  min?: Maybe<Slack_Message_Min_Fields>;
  stddev?: Maybe<Slack_Message_Stddev_Fields>;
  stddev_pop?: Maybe<Slack_Message_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Slack_Message_Stddev_Samp_Fields>;
  sum?: Maybe<Slack_Message_Sum_Fields>;
  var_pop?: Maybe<Slack_Message_Var_Pop_Fields>;
  var_samp?: Maybe<Slack_Message_Var_Samp_Fields>;
  variance?: Maybe<Slack_Message_Variance_Fields>;
};

/** aggregate fields of "slack_message" */
export type Slack_Message_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Slack_Message_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Slack_Message_Avg_Fields = {
  __typename?: 'slack_message_avg_fields';
  outreachNumber?: Maybe<Scalars['Float']>;
  questionNumber?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "slack_message". All fields are combined with a logical 'AND'. */
export type Slack_Message_Bool_Exp = {
  _and?: InputMaybe<Array<Slack_Message_Bool_Exp>>;
  _not?: InputMaybe<Slack_Message_Bool_Exp>;
  _or?: InputMaybe<Array<Slack_Message_Bool_Exp>>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  outreachNumber?: InputMaybe<Int_Comparison_Exp>;
  questionNumber?: InputMaybe<Int_Comparison_Exp>;
  slack_answers?: InputMaybe<Slack_Answer_Bool_Exp>;
  slack_message_trigger_logs?: InputMaybe<Slack_Message_Trigger_Log_Bool_Exp>;
  text?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "slack_message" */
export enum Slack_Message_Constraint {
  /** unique or primary key constraint on columns "outreachNumber", "questionNumber" */
  SlackMessageOutreachNumberQuestionNumberKey = 'slack_message_outreachNumber_questionNumber_key',
  /** unique or primary key constraint on columns "id" */
  SlackMessagePkey = 'slack_message_pkey',
}

/** input type for incrementing numeric columns in table "slack_message" */
export type Slack_Message_Inc_Input = {
  outreachNumber?: InputMaybe<Scalars['Int']>;
  questionNumber?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "slack_message" */
export type Slack_Message_Insert_Input = {
  id?: InputMaybe<Scalars['uuid']>;
  outreachNumber?: InputMaybe<Scalars['Int']>;
  questionNumber?: InputMaybe<Scalars['Int']>;
  slack_answers?: InputMaybe<Slack_Answer_Arr_Rel_Insert_Input>;
  slack_message_trigger_logs?: InputMaybe<Slack_Message_Trigger_Log_Arr_Rel_Insert_Input>;
  text?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Slack_Message_Max_Fields = {
  __typename?: 'slack_message_max_fields';
  id?: Maybe<Scalars['uuid']>;
  outreachNumber?: Maybe<Scalars['Int']>;
  questionNumber?: Maybe<Scalars['Int']>;
  text?: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type Slack_Message_Min_Fields = {
  __typename?: 'slack_message_min_fields';
  id?: Maybe<Scalars['uuid']>;
  outreachNumber?: Maybe<Scalars['Int']>;
  questionNumber?: Maybe<Scalars['Int']>;
  text?: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "slack_message" */
export type Slack_Message_Mutation_Response = {
  __typename?: 'slack_message_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Slack_Message>;
};

/** input type for inserting object relation for remote table "slack_message" */
export type Slack_Message_Obj_Rel_Insert_Input = {
  data: Slack_Message_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Slack_Message_On_Conflict>;
};

/** on_conflict condition type for table "slack_message" */
export type Slack_Message_On_Conflict = {
  constraint: Slack_Message_Constraint;
  update_columns?: Array<Slack_Message_Update_Column>;
  where?: InputMaybe<Slack_Message_Bool_Exp>;
};

/** Ordering options when selecting data from "slack_message". */
export type Slack_Message_Order_By = {
  id?: InputMaybe<Order_By>;
  outreachNumber?: InputMaybe<Order_By>;
  questionNumber?: InputMaybe<Order_By>;
  slack_answers_aggregate?: InputMaybe<Slack_Answer_Aggregate_Order_By>;
  slack_message_trigger_logs_aggregate?: InputMaybe<Slack_Message_Trigger_Log_Aggregate_Order_By>;
  text?: InputMaybe<Order_By>;
};

/** primary key columns input for table: slack_message */
export type Slack_Message_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "slack_message" */
export enum Slack_Message_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  OutreachNumber = 'outreachNumber',
  /** column name */
  QuestionNumber = 'questionNumber',
  /** column name */
  Text = 'text',
}

/** input type for updating data in table "slack_message" */
export type Slack_Message_Set_Input = {
  id?: InputMaybe<Scalars['uuid']>;
  outreachNumber?: InputMaybe<Scalars['Int']>;
  questionNumber?: InputMaybe<Scalars['Int']>;
  text?: InputMaybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type Slack_Message_Stddev_Fields = {
  __typename?: 'slack_message_stddev_fields';
  outreachNumber?: Maybe<Scalars['Float']>;
  questionNumber?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Slack_Message_Stddev_Pop_Fields = {
  __typename?: 'slack_message_stddev_pop_fields';
  outreachNumber?: Maybe<Scalars['Float']>;
  questionNumber?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Slack_Message_Stddev_Samp_Fields = {
  __typename?: 'slack_message_stddev_samp_fields';
  outreachNumber?: Maybe<Scalars['Float']>;
  questionNumber?: Maybe<Scalars['Float']>;
};

/** Streaming cursor of the table "slack_message" */
export type Slack_Message_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Slack_Message_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Slack_Message_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['uuid']>;
  outreachNumber?: InputMaybe<Scalars['Int']>;
  questionNumber?: InputMaybe<Scalars['Int']>;
  text?: InputMaybe<Scalars['String']>;
};

/** aggregate sum on columns */
export type Slack_Message_Sum_Fields = {
  __typename?: 'slack_message_sum_fields';
  outreachNumber?: Maybe<Scalars['Int']>;
  questionNumber?: Maybe<Scalars['Int']>;
};

/** columns and relationships of "slack_message_trigger_log" */
export type Slack_Message_Trigger_Log = {
  __typename?: 'slack_message_trigger_log';
  answered_at?: Maybe<Scalars['timestamptz']>;
  created_at: Scalars['timestamptz'];
  id: Scalars['uuid'];
  slackAnswerID?: Maybe<Scalars['uuid']>;
  slackMessageID: Scalars['uuid'];
  slackOutreachID: Scalars['uuid'];
  /** An object relationship */
  slack_answer?: Maybe<Slack_Answer>;
  /** An object relationship */
  slack_message: Slack_Message;
  /** An object relationship */
  slack_outreach: Slack_Outreach;
};

/** aggregated selection of "slack_message_trigger_log" */
export type Slack_Message_Trigger_Log_Aggregate = {
  __typename?: 'slack_message_trigger_log_aggregate';
  aggregate?: Maybe<Slack_Message_Trigger_Log_Aggregate_Fields>;
  nodes: Array<Slack_Message_Trigger_Log>;
};

/** aggregate fields of "slack_message_trigger_log" */
export type Slack_Message_Trigger_Log_Aggregate_Fields = {
  __typename?: 'slack_message_trigger_log_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<Slack_Message_Trigger_Log_Max_Fields>;
  min?: Maybe<Slack_Message_Trigger_Log_Min_Fields>;
};

/** aggregate fields of "slack_message_trigger_log" */
export type Slack_Message_Trigger_Log_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Slack_Message_Trigger_Log_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "slack_message_trigger_log" */
export type Slack_Message_Trigger_Log_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Slack_Message_Trigger_Log_Max_Order_By>;
  min?: InputMaybe<Slack_Message_Trigger_Log_Min_Order_By>;
};

/** input type for inserting array relation for remote table "slack_message_trigger_log" */
export type Slack_Message_Trigger_Log_Arr_Rel_Insert_Input = {
  data: Array<Slack_Message_Trigger_Log_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Slack_Message_Trigger_Log_On_Conflict>;
};

/** Boolean expression to filter rows from the table "slack_message_trigger_log". All fields are combined with a logical 'AND'. */
export type Slack_Message_Trigger_Log_Bool_Exp = {
  _and?: InputMaybe<Array<Slack_Message_Trigger_Log_Bool_Exp>>;
  _not?: InputMaybe<Slack_Message_Trigger_Log_Bool_Exp>;
  _or?: InputMaybe<Array<Slack_Message_Trigger_Log_Bool_Exp>>;
  answered_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  slackAnswerID?: InputMaybe<Uuid_Comparison_Exp>;
  slackMessageID?: InputMaybe<Uuid_Comparison_Exp>;
  slackOutreachID?: InputMaybe<Uuid_Comparison_Exp>;
  slack_answer?: InputMaybe<Slack_Answer_Bool_Exp>;
  slack_message?: InputMaybe<Slack_Message_Bool_Exp>;
  slack_outreach?: InputMaybe<Slack_Outreach_Bool_Exp>;
};

/** unique or primary key constraints on table "slack_message_trigger_log" */
export enum Slack_Message_Trigger_Log_Constraint {
  /** unique or primary key constraint on columns "id" */
  SlackMessageTriggerLogPkey = 'slack_message_trigger_log_pkey',
}

/** input type for inserting data into table "slack_message_trigger_log" */
export type Slack_Message_Trigger_Log_Insert_Input = {
  answered_at?: InputMaybe<Scalars['timestamptz']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['uuid']>;
  slackAnswerID?: InputMaybe<Scalars['uuid']>;
  slackMessageID?: InputMaybe<Scalars['uuid']>;
  slackOutreachID?: InputMaybe<Scalars['uuid']>;
  slack_answer?: InputMaybe<Slack_Answer_Obj_Rel_Insert_Input>;
  slack_message?: InputMaybe<Slack_Message_Obj_Rel_Insert_Input>;
  slack_outreach?: InputMaybe<Slack_Outreach_Obj_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type Slack_Message_Trigger_Log_Max_Fields = {
  __typename?: 'slack_message_trigger_log_max_fields';
  answered_at?: Maybe<Scalars['timestamptz']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  slackAnswerID?: Maybe<Scalars['uuid']>;
  slackMessageID?: Maybe<Scalars['uuid']>;
  slackOutreachID?: Maybe<Scalars['uuid']>;
};

/** order by max() on columns of table "slack_message_trigger_log" */
export type Slack_Message_Trigger_Log_Max_Order_By = {
  answered_at?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  slackAnswerID?: InputMaybe<Order_By>;
  slackMessageID?: InputMaybe<Order_By>;
  slackOutreachID?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Slack_Message_Trigger_Log_Min_Fields = {
  __typename?: 'slack_message_trigger_log_min_fields';
  answered_at?: Maybe<Scalars['timestamptz']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  slackAnswerID?: Maybe<Scalars['uuid']>;
  slackMessageID?: Maybe<Scalars['uuid']>;
  slackOutreachID?: Maybe<Scalars['uuid']>;
};

/** order by min() on columns of table "slack_message_trigger_log" */
export type Slack_Message_Trigger_Log_Min_Order_By = {
  answered_at?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  slackAnswerID?: InputMaybe<Order_By>;
  slackMessageID?: InputMaybe<Order_By>;
  slackOutreachID?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "slack_message_trigger_log" */
export type Slack_Message_Trigger_Log_Mutation_Response = {
  __typename?: 'slack_message_trigger_log_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Slack_Message_Trigger_Log>;
};

/** on_conflict condition type for table "slack_message_trigger_log" */
export type Slack_Message_Trigger_Log_On_Conflict = {
  constraint: Slack_Message_Trigger_Log_Constraint;
  update_columns?: Array<Slack_Message_Trigger_Log_Update_Column>;
  where?: InputMaybe<Slack_Message_Trigger_Log_Bool_Exp>;
};

/** Ordering options when selecting data from "slack_message_trigger_log". */
export type Slack_Message_Trigger_Log_Order_By = {
  answered_at?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  slackAnswerID?: InputMaybe<Order_By>;
  slackMessageID?: InputMaybe<Order_By>;
  slackOutreachID?: InputMaybe<Order_By>;
  slack_answer?: InputMaybe<Slack_Answer_Order_By>;
  slack_message?: InputMaybe<Slack_Message_Order_By>;
  slack_outreach?: InputMaybe<Slack_Outreach_Order_By>;
};

/** primary key columns input for table: slack_message_trigger_log */
export type Slack_Message_Trigger_Log_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "slack_message_trigger_log" */
export enum Slack_Message_Trigger_Log_Select_Column {
  /** column name */
  AnsweredAt = 'answered_at',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  SlackAnswerId = 'slackAnswerID',
  /** column name */
  SlackMessageId = 'slackMessageID',
  /** column name */
  SlackOutreachId = 'slackOutreachID',
}

/** input type for updating data in table "slack_message_trigger_log" */
export type Slack_Message_Trigger_Log_Set_Input = {
  answered_at?: InputMaybe<Scalars['timestamptz']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['uuid']>;
  slackAnswerID?: InputMaybe<Scalars['uuid']>;
  slackMessageID?: InputMaybe<Scalars['uuid']>;
  slackOutreachID?: InputMaybe<Scalars['uuid']>;
};

/** Streaming cursor of the table "slack_message_trigger_log" */
export type Slack_Message_Trigger_Log_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Slack_Message_Trigger_Log_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Slack_Message_Trigger_Log_Stream_Cursor_Value_Input = {
  answered_at?: InputMaybe<Scalars['timestamptz']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['uuid']>;
  slackAnswerID?: InputMaybe<Scalars['uuid']>;
  slackMessageID?: InputMaybe<Scalars['uuid']>;
  slackOutreachID?: InputMaybe<Scalars['uuid']>;
};

/** update columns of table "slack_message_trigger_log" */
export enum Slack_Message_Trigger_Log_Update_Column {
  /** column name */
  AnsweredAt = 'answered_at',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  SlackAnswerId = 'slackAnswerID',
  /** column name */
  SlackMessageId = 'slackMessageID',
  /** column name */
  SlackOutreachId = 'slackOutreachID',
}

export type Slack_Message_Trigger_Log_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Slack_Message_Trigger_Log_Set_Input>;
  where: Slack_Message_Trigger_Log_Bool_Exp;
};

/** update columns of table "slack_message" */
export enum Slack_Message_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  OutreachNumber = 'outreachNumber',
  /** column name */
  QuestionNumber = 'questionNumber',
  /** column name */
  Text = 'text',
}

export type Slack_Message_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Slack_Message_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Slack_Message_Set_Input>;
  where: Slack_Message_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Slack_Message_Var_Pop_Fields = {
  __typename?: 'slack_message_var_pop_fields';
  outreachNumber?: Maybe<Scalars['Float']>;
  questionNumber?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Slack_Message_Var_Samp_Fields = {
  __typename?: 'slack_message_var_samp_fields';
  outreachNumber?: Maybe<Scalars['Float']>;
  questionNumber?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Slack_Message_Variance_Fields = {
  __typename?: 'slack_message_variance_fields';
  outreachNumber?: Maybe<Scalars['Float']>;
  questionNumber?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "slack_outreach" */
export type Slack_Outreach = {
  __typename?: 'slack_outreach';
  created_at: Scalars['timestamptz'];
  id: Scalars['uuid'];
  /** An array relationship */
  slack_message_trigger_logs: Array<Slack_Message_Trigger_Log>;
  /** An aggregate relationship */
  slack_message_trigger_logs_aggregate: Slack_Message_Trigger_Log_Aggregate;
  userMetaID: Scalars['uuid'];
  /** An object relationship */
  user_meta: User_Meta;
};

/** columns and relationships of "slack_outreach" */
export type Slack_OutreachSlack_Message_Trigger_LogsArgs = {
  distinct_on?: InputMaybe<Array<Slack_Message_Trigger_Log_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Slack_Message_Trigger_Log_Order_By>>;
  where?: InputMaybe<Slack_Message_Trigger_Log_Bool_Exp>;
};

/** columns and relationships of "slack_outreach" */
export type Slack_OutreachSlack_Message_Trigger_Logs_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Slack_Message_Trigger_Log_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Slack_Message_Trigger_Log_Order_By>>;
  where?: InputMaybe<Slack_Message_Trigger_Log_Bool_Exp>;
};

/** aggregated selection of "slack_outreach" */
export type Slack_Outreach_Aggregate = {
  __typename?: 'slack_outreach_aggregate';
  aggregate?: Maybe<Slack_Outreach_Aggregate_Fields>;
  nodes: Array<Slack_Outreach>;
};

/** aggregate fields of "slack_outreach" */
export type Slack_Outreach_Aggregate_Fields = {
  __typename?: 'slack_outreach_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<Slack_Outreach_Max_Fields>;
  min?: Maybe<Slack_Outreach_Min_Fields>;
};

/** aggregate fields of "slack_outreach" */
export type Slack_Outreach_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Slack_Outreach_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "slack_outreach" */
export type Slack_Outreach_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Slack_Outreach_Max_Order_By>;
  min?: InputMaybe<Slack_Outreach_Min_Order_By>;
};

/** input type for inserting array relation for remote table "slack_outreach" */
export type Slack_Outreach_Arr_Rel_Insert_Input = {
  data: Array<Slack_Outreach_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Slack_Outreach_On_Conflict>;
};

/** Boolean expression to filter rows from the table "slack_outreach". All fields are combined with a logical 'AND'. */
export type Slack_Outreach_Bool_Exp = {
  _and?: InputMaybe<Array<Slack_Outreach_Bool_Exp>>;
  _not?: InputMaybe<Slack_Outreach_Bool_Exp>;
  _or?: InputMaybe<Array<Slack_Outreach_Bool_Exp>>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  slack_message_trigger_logs?: InputMaybe<Slack_Message_Trigger_Log_Bool_Exp>;
  userMetaID?: InputMaybe<Uuid_Comparison_Exp>;
  user_meta?: InputMaybe<User_Meta_Bool_Exp>;
};

/** unique or primary key constraints on table "slack_outreach" */
export enum Slack_Outreach_Constraint {
  /** unique or primary key constraint on columns "id" */
  SlackOutreachPkey = 'slack_outreach_pkey',
}

/** input type for inserting data into table "slack_outreach" */
export type Slack_Outreach_Insert_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['uuid']>;
  slack_message_trigger_logs?: InputMaybe<Slack_Message_Trigger_Log_Arr_Rel_Insert_Input>;
  userMetaID?: InputMaybe<Scalars['uuid']>;
  user_meta?: InputMaybe<User_Meta_Obj_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type Slack_Outreach_Max_Fields = {
  __typename?: 'slack_outreach_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  userMetaID?: Maybe<Scalars['uuid']>;
};

/** order by max() on columns of table "slack_outreach" */
export type Slack_Outreach_Max_Order_By = {
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  userMetaID?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Slack_Outreach_Min_Fields = {
  __typename?: 'slack_outreach_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  userMetaID?: Maybe<Scalars['uuid']>;
};

/** order by min() on columns of table "slack_outreach" */
export type Slack_Outreach_Min_Order_By = {
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  userMetaID?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "slack_outreach" */
export type Slack_Outreach_Mutation_Response = {
  __typename?: 'slack_outreach_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Slack_Outreach>;
};

/** input type for inserting object relation for remote table "slack_outreach" */
export type Slack_Outreach_Obj_Rel_Insert_Input = {
  data: Slack_Outreach_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Slack_Outreach_On_Conflict>;
};

/** on_conflict condition type for table "slack_outreach" */
export type Slack_Outreach_On_Conflict = {
  constraint: Slack_Outreach_Constraint;
  update_columns?: Array<Slack_Outreach_Update_Column>;
  where?: InputMaybe<Slack_Outreach_Bool_Exp>;
};

/** Ordering options when selecting data from "slack_outreach". */
export type Slack_Outreach_Order_By = {
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  slack_message_trigger_logs_aggregate?: InputMaybe<Slack_Message_Trigger_Log_Aggregate_Order_By>;
  userMetaID?: InputMaybe<Order_By>;
  user_meta?: InputMaybe<User_Meta_Order_By>;
};

/** primary key columns input for table: slack_outreach */
export type Slack_Outreach_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "slack_outreach" */
export enum Slack_Outreach_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  UserMetaId = 'userMetaID',
}

/** input type for updating data in table "slack_outreach" */
export type Slack_Outreach_Set_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['uuid']>;
  userMetaID?: InputMaybe<Scalars['uuid']>;
};

/** Streaming cursor of the table "slack_outreach" */
export type Slack_Outreach_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Slack_Outreach_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Slack_Outreach_Stream_Cursor_Value_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['uuid']>;
  userMetaID?: InputMaybe<Scalars['uuid']>;
};

/** update columns of table "slack_outreach" */
export enum Slack_Outreach_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  UserMetaId = 'userMetaID',
}

export type Slack_Outreach_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Slack_Outreach_Set_Input>;
  where: Slack_Outreach_Bool_Exp;
};

export type Subscription_Root = {
  __typename?: 'subscription_root';
  /** fetch data from the table: "api_user_token" */
  api_user_token: Array<Api_User_Token>;
  /** fetch aggregated fields from the table: "api_user_token" */
  api_user_token_aggregate: Api_User_Token_Aggregate;
  /** fetch data from the table: "api_user_token" using primary key columns */
  api_user_token_by_pk?: Maybe<Api_User_Token>;
  /** fetch data from the table in a streaming manner : "api_user_token" */
  api_user_token_stream: Array<Api_User_Token>;
  /** fetch data from the table: "billing_frequency" */
  billing_frequency: Array<Billing_Frequency>;
  /** fetch aggregated fields from the table: "billing_frequency" */
  billing_frequency_aggregate: Billing_Frequency_Aggregate;
  /** fetch data from the table: "billing_frequency" using primary key columns */
  billing_frequency_by_pk?: Maybe<Billing_Frequency>;
  /** fetch data from the table in a streaming manner : "billing_frequency" */
  billing_frequency_stream: Array<Billing_Frequency>;
  /** fetch data from the table: "bookmark_folder" */
  bookmark_folder: Array<Bookmark_Folder>;
  /** fetch aggregated fields from the table: "bookmark_folder" */
  bookmark_folder_aggregate: Bookmark_Folder_Aggregate;
  /** fetch data from the table: "bookmark_folder" using primary key columns */
  bookmark_folder_by_pk?: Maybe<Bookmark_Folder>;
  /** fetch data from the table in a streaming manner : "bookmark_folder" */
  bookmark_folder_stream: Array<Bookmark_Folder>;
  /** fetch data from the table: "bookmark_link" */
  bookmark_link: Array<Bookmark_Link>;
  /** fetch aggregated fields from the table: "bookmark_link" */
  bookmark_link_aggregate: Bookmark_Link_Aggregate;
  /** fetch data from the table: "bookmark_link" using primary key columns */
  bookmark_link_by_pk?: Maybe<Bookmark_Link>;
  /** fetch data from the table in a streaming manner : "bookmark_link" */
  bookmark_link_stream: Array<Bookmark_Link>;
  /** fetch data from the table: "capability" */
  capability: Array<Capability>;
  /** fetch aggregated fields from the table: "capability" */
  capability_aggregate: Capability_Aggregate;
  /** fetch data from the table: "capability" using primary key columns */
  capability_by_pk?: Maybe<Capability>;
  /** fetch data from the table: "capability_endpoint" */
  capability_endpoint: Array<Capability_Endpoint>;
  /** fetch aggregated fields from the table: "capability_endpoint" */
  capability_endpoint_aggregate: Capability_Endpoint_Aggregate;
  /** fetch data from the table: "capability_endpoint" using primary key columns */
  capability_endpoint_by_pk?: Maybe<Capability_Endpoint>;
  /** fetch data from the table in a streaming manner : "capability_endpoint" */
  capability_endpoint_stream: Array<Capability_Endpoint>;
  /** fetch data from the table in a streaming manner : "capability" */
  capability_stream: Array<Capability>;
  /** fetch data from the table: "case_study" */
  case_study: Array<Case_Study>;
  /** fetch aggregated fields from the table: "case_study" */
  case_study_aggregate: Case_Study_Aggregate;
  /** fetch data from the table: "case_study" using primary key columns */
  case_study_by_pk?: Maybe<Case_Study>;
  /** fetch data from the table: "case_study_company" */
  case_study_company: Array<Case_Study_Company>;
  /** fetch aggregated fields from the table: "case_study_company" */
  case_study_company_aggregate: Case_Study_Company_Aggregate;
  /** fetch data from the table: "case_study_company" using primary key columns */
  case_study_company_by_pk?: Maybe<Case_Study_Company>;
  /** fetch data from the table in a streaming manner : "case_study_company" */
  case_study_company_stream: Array<Case_Study_Company>;
  /** fetch data from the table: "case_study_industry" */
  case_study_industry: Array<Case_Study_Industry>;
  /** fetch aggregated fields from the table: "case_study_industry" */
  case_study_industry_aggregate: Case_Study_Industry_Aggregate;
  /** fetch data from the table: "case_study_industry" using primary key columns */
  case_study_industry_by_pk?: Maybe<Case_Study_Industry>;
  /** fetch data from the table in a streaming manner : "case_study_industry" */
  case_study_industry_stream: Array<Case_Study_Industry>;
  /** fetch data from the table: "case_study_market" */
  case_study_market: Array<Case_Study_Market>;
  /** fetch aggregated fields from the table: "case_study_market" */
  case_study_market_aggregate: Case_Study_Market_Aggregate;
  /** fetch data from the table: "case_study_market" using primary key columns */
  case_study_market_by_pk?: Maybe<Case_Study_Market>;
  /** fetch data from the table in a streaming manner : "case_study_market" */
  case_study_market_stream: Array<Case_Study_Market>;
  /** fetch data from the table: "case_study_skill" */
  case_study_skill: Array<Case_Study_Skill>;
  /** fetch aggregated fields from the table: "case_study_skill" */
  case_study_skill_aggregate: Case_Study_Skill_Aggregate;
  /** fetch data from the table: "case_study_skill" using primary key columns */
  case_study_skill_by_pk?: Maybe<Case_Study_Skill>;
  /** fetch data from the table in a streaming manner : "case_study_skill" */
  case_study_skill_stream: Array<Case_Study_Skill>;
  /** fetch data from the table in a streaming manner : "case_study" */
  case_study_stream: Array<Case_Study>;
  /** fetch data from the table: "case_study_team" */
  case_study_team: Array<Case_Study_Team>;
  /** fetch aggregated fields from the table: "case_study_team" */
  case_study_team_aggregate: Case_Study_Team_Aggregate;
  /** fetch data from the table: "case_study_team" using primary key columns */
  case_study_team_by_pk?: Maybe<Case_Study_Team>;
  /** fetch data from the table in a streaming manner : "case_study_team" */
  case_study_team_stream: Array<Case_Study_Team>;
  /** fetch data from the table: "case_study_user" */
  case_study_user: Array<Case_Study_User>;
  /** fetch aggregated fields from the table: "case_study_user" */
  case_study_user_aggregate: Case_Study_User_Aggregate;
  /** fetch data from the table: "case_study_user" using primary key columns */
  case_study_user_by_pk?: Maybe<Case_Study_User>;
  /** fetch data from the table in a streaming manner : "case_study_user" */
  case_study_user_stream: Array<Case_Study_User>;
  /** fetch data from the table: "company" */
  company: Array<Company>;
  /** fetch aggregated fields from the table: "company" */
  company_aggregate: Company_Aggregate;
  /** fetch data from the table: "company" using primary key columns */
  company_by_pk?: Maybe<Company>;
  /** fetch data from the table: "company_contact" */
  company_contact: Array<Company_Contact>;
  /** fetch aggregated fields from the table: "company_contact" */
  company_contact_aggregate: Company_Contact_Aggregate;
  /** fetch data from the table: "company_contact" using primary key columns */
  company_contact_by_pk?: Maybe<Company_Contact>;
  /** fetch data from the table in a streaming manner : "company_contact" */
  company_contact_stream: Array<Company_Contact>;
  /** fetch data from the table in a streaming manner : "company" */
  company_stream: Array<Company>;
  /** fetch data from the table: "company_team" */
  company_team: Array<Company_Team>;
  /** fetch aggregated fields from the table: "company_team" */
  company_team_aggregate: Company_Team_Aggregate;
  /** fetch data from the table: "company_team" using primary key columns */
  company_team_by_pk?: Maybe<Company_Team>;
  /** fetch data from the table: "company_team_contributor" */
  company_team_contributor: Array<Company_Team_Contributor>;
  /** fetch aggregated fields from the table: "company_team_contributor" */
  company_team_contributor_aggregate: Company_Team_Contributor_Aggregate;
  /** fetch data from the table: "company_team_contributor" using primary key columns */
  company_team_contributor_by_pk?: Maybe<Company_Team_Contributor>;
  /** fetch data from the table in a streaming manner : "company_team_contributor" */
  company_team_contributor_stream: Array<Company_Team_Contributor>;
  /** fetch data from the table in a streaming manner : "company_team" */
  company_team_stream: Array<Company_Team>;
  /** fetch data from the table: "contributor_type" */
  contributor_type: Array<Contributor_Type>;
  /** fetch aggregated fields from the table: "contributor_type" */
  contributor_type_aggregate: Contributor_Type_Aggregate;
  /** fetch data from the table: "contributor_type" using primary key columns */
  contributor_type_by_pk?: Maybe<Contributor_Type>;
  /** fetch data from the table in a streaming manner : "contributor_type" */
  contributor_type_stream: Array<Contributor_Type>;
  /** fetch data from the table: "current_user_meta" */
  current_user_meta: Array<Current_User_Meta>;
  /** fetch aggregated fields from the table: "current_user_meta" */
  current_user_meta_aggregate: Current_User_Meta_Aggregate;
  /** fetch data from the table in a streaming manner : "current_user_meta" */
  current_user_meta_stream: Array<Current_User_Meta>;
  /** fetch data from the table: "custom_payout" */
  custom_payout: Array<Custom_Payout>;
  /** fetch aggregated fields from the table: "custom_payout" */
  custom_payout_aggregate: Custom_Payout_Aggregate;
  /** fetch data from the table: "custom_payout" using primary key columns */
  custom_payout_by_pk?: Maybe<Custom_Payout>;
  /** fetch data from the table: "custom_payout_line_item" */
  custom_payout_line_item: Array<Custom_Payout_Line_Item>;
  /** fetch aggregated fields from the table: "custom_payout_line_item" */
  custom_payout_line_item_aggregate: Custom_Payout_Line_Item_Aggregate;
  /** fetch data from the table: "custom_payout_line_item" using primary key columns */
  custom_payout_line_item_by_pk?: Maybe<Custom_Payout_Line_Item>;
  /** fetch data from the table in a streaming manner : "custom_payout_line_item" */
  custom_payout_line_item_stream: Array<Custom_Payout_Line_Item>;
  /** fetch data from the table in a streaming manner : "custom_payout" */
  custom_payout_stream: Array<Custom_Payout>;
  /** fetch data from the table: "custom_project_distribution" */
  custom_project_distribution: Array<Custom_Project_Distribution>;
  /** fetch aggregated fields from the table: "custom_project_distribution" */
  custom_project_distribution_aggregate: Custom_Project_Distribution_Aggregate;
  /** fetch data from the table: "custom_project_distribution" using primary key columns */
  custom_project_distribution_by_pk?: Maybe<Custom_Project_Distribution>;
  /** fetch data from the table in a streaming manner : "custom_project_distribution" */
  custom_project_distribution_stream: Array<Custom_Project_Distribution>;
  /** fetch data from the table: "custom_project_payout_distribution" */
  custom_project_payout_distribution: Array<Custom_Project_Payout_Distribution>;
  /** fetch aggregated fields from the table: "custom_project_payout_distribution" */
  custom_project_payout_distribution_aggregate: Custom_Project_Payout_Distribution_Aggregate;
  /** fetch data from the table: "custom_project_payout_distribution" using primary key columns */
  custom_project_payout_distribution_by_pk?: Maybe<Custom_Project_Payout_Distribution>;
  /** fetch data from the table in a streaming manner : "custom_project_payout_distribution" */
  custom_project_payout_distribution_stream: Array<Custom_Project_Payout_Distribution>;
  /** fetch data from the table: "customer" */
  customer: Array<Customer>;
  /** fetch aggregated fields from the table: "customer" */
  customer_aggregate: Customer_Aggregate;
  /** fetch data from the table: "customer" using primary key columns */
  customer_by_pk?: Maybe<Customer>;
  /** fetch data from the table: "customer_closing_party" */
  customer_closing_party: Array<Customer_Closing_Party>;
  /** fetch aggregated fields from the table: "customer_closing_party" */
  customer_closing_party_aggregate: Customer_Closing_Party_Aggregate;
  /** fetch data from the table: "customer_closing_party" using primary key columns */
  customer_closing_party_by_pk?: Maybe<Customer_Closing_Party>;
  /** fetch data from the table in a streaming manner : "customer_closing_party" */
  customer_closing_party_stream: Array<Customer_Closing_Party>;
  /** fetch data from the table: "customer_originating_party" */
  customer_originating_party: Array<Customer_Originating_Party>;
  /** fetch aggregated fields from the table: "customer_originating_party" */
  customer_originating_party_aggregate: Customer_Originating_Party_Aggregate;
  /** fetch data from the table: "customer_originating_party" using primary key columns */
  customer_originating_party_by_pk?: Maybe<Customer_Originating_Party>;
  /** fetch data from the table in a streaming manner : "customer_originating_party" */
  customer_originating_party_stream: Array<Customer_Originating_Party>;
  /** fetch data from the table: "customer_referrer" */
  customer_referrer: Array<Customer_Referrer>;
  /** fetch aggregated fields from the table: "customer_referrer" */
  customer_referrer_aggregate: Customer_Referrer_Aggregate;
  /** fetch data from the table: "customer_referrer" using primary key columns */
  customer_referrer_by_pk?: Maybe<Customer_Referrer>;
  /** fetch data from the table in a streaming manner : "customer_referrer" */
  customer_referrer_stream: Array<Customer_Referrer>;
  /** fetch data from the table in a streaming manner : "customer" */
  customer_stream: Array<Customer>;
  /** fetch data from the table: "document" */
  document: Array<Document>;
  /** fetch aggregated fields from the table: "document" */
  document_aggregate: Document_Aggregate;
  /** fetch data from the table: "document_associated_company" */
  document_associated_company: Array<Document_Associated_Company>;
  /** fetch aggregated fields from the table: "document_associated_company" */
  document_associated_company_aggregate: Document_Associated_Company_Aggregate;
  /** fetch data from the table: "document_associated_company" using primary key columns */
  document_associated_company_by_pk?: Maybe<Document_Associated_Company>;
  /** fetch data from the table in a streaming manner : "document_associated_company" */
  document_associated_company_stream: Array<Document_Associated_Company>;
  /** fetch data from the table: "document_associated_user" */
  document_associated_user: Array<Document_Associated_User>;
  /** fetch aggregated fields from the table: "document_associated_user" */
  document_associated_user_aggregate: Document_Associated_User_Aggregate;
  /** fetch data from the table: "document_associated_user" using primary key columns */
  document_associated_user_by_pk?: Maybe<Document_Associated_User>;
  /** fetch data from the table in a streaming manner : "document_associated_user" */
  document_associated_user_stream: Array<Document_Associated_User>;
  /** fetch data from the table: "document" using primary key columns */
  document_by_pk?: Maybe<Document>;
  /** fetch data from the table: "document_extra_field" */
  document_extra_field: Array<Document_Extra_Field>;
  /** fetch aggregated fields from the table: "document_extra_field" */
  document_extra_field_aggregate: Document_Extra_Field_Aggregate;
  /** fetch data from the table: "document_extra_field" using primary key columns */
  document_extra_field_by_pk?: Maybe<Document_Extra_Field>;
  /** fetch data from the table in a streaming manner : "document_extra_field" */
  document_extra_field_stream: Array<Document_Extra_Field>;
  /** fetch data from the table: "document_extra_field_value" */
  document_extra_field_value: Array<Document_Extra_Field_Value>;
  /** fetch aggregated fields from the table: "document_extra_field_value" */
  document_extra_field_value_aggregate: Document_Extra_Field_Value_Aggregate;
  /** fetch data from the table: "document_extra_field_value" using primary key columns */
  document_extra_field_value_by_pk?: Maybe<Document_Extra_Field_Value>;
  /** fetch data from the table in a streaming manner : "document_extra_field_value" */
  document_extra_field_value_stream: Array<Document_Extra_Field_Value>;
  /** fetch data from the table in a streaming manner : "document" */
  document_stream: Array<Document>;
  /** fetch data from the table: "document_type" */
  document_type: Array<Document_Type>;
  /** fetch aggregated fields from the table: "document_type" */
  document_type_aggregate: Document_Type_Aggregate;
  /** fetch data from the table: "document_type" using primary key columns */
  document_type_by_pk?: Maybe<Document_Type>;
  /** fetch data from the table in a streaming manner : "document_type" */
  document_type_stream: Array<Document_Type>;
  /** fetch data from the table: "endpoint" */
  endpoint: Array<Endpoint>;
  /** fetch aggregated fields from the table: "endpoint" */
  endpoint_aggregate: Endpoint_Aggregate;
  /** fetch data from the table: "endpoint" using primary key columns */
  endpoint_by_pk?: Maybe<Endpoint>;
  /** fetch data from the table in a streaming manner : "endpoint" */
  endpoint_stream: Array<Endpoint>;
  /** fetch data from the table: "fixed_price_invoice_line_item" */
  fixed_price_invoice_line_item: Array<Fixed_Price_Invoice_Line_Item>;
  /** fetch aggregated fields from the table: "fixed_price_invoice_line_item" */
  fixed_price_invoice_line_item_aggregate: Fixed_Price_Invoice_Line_Item_Aggregate;
  /** fetch data from the table: "fixed_price_invoice_line_item" using primary key columns */
  fixed_price_invoice_line_item_by_pk?: Maybe<Fixed_Price_Invoice_Line_Item>;
  /** fetch data from the table in a streaming manner : "fixed_price_invoice_line_item" */
  fixed_price_invoice_line_item_stream: Array<Fixed_Price_Invoice_Line_Item>;
  /** fetch data from the table: "in_market_experience_level" */
  in_market_experience_level: Array<In_Market_Experience_Level>;
  /** fetch aggregated fields from the table: "in_market_experience_level" */
  in_market_experience_level_aggregate: In_Market_Experience_Level_Aggregate;
  /** fetch data from the table: "in_market_experience_level" using primary key columns */
  in_market_experience_level_by_pk?: Maybe<In_Market_Experience_Level>;
  /** fetch data from the table in a streaming manner : "in_market_experience_level" */
  in_market_experience_level_stream: Array<In_Market_Experience_Level>;
  /** fetch data from the table: "industry" */
  industry: Array<Industry>;
  /** fetch aggregated fields from the table: "industry" */
  industry_aggregate: Industry_Aggregate;
  /** fetch data from the table: "industry" using primary key columns */
  industry_by_pk?: Maybe<Industry>;
  /** fetch data from the table: "industry_experience_level" */
  industry_experience_level: Array<Industry_Experience_Level>;
  /** fetch aggregated fields from the table: "industry_experience_level" */
  industry_experience_level_aggregate: Industry_Experience_Level_Aggregate;
  /** fetch data from the table: "industry_experience_level" using primary key columns */
  industry_experience_level_by_pk?: Maybe<Industry_Experience_Level>;
  /** fetch data from the table in a streaming manner : "industry_experience_level" */
  industry_experience_level_stream: Array<Industry_Experience_Level>;
  /** fetch data from the table: "industry_google_group" */
  industry_google_group: Array<Industry_Google_Group>;
  /** fetch aggregated fields from the table: "industry_google_group" */
  industry_google_group_aggregate: Industry_Google_Group_Aggregate;
  /** fetch data from the table: "industry_google_group" using primary key columns */
  industry_google_group_by_pk?: Maybe<Industry_Google_Group>;
  /** fetch data from the table in a streaming manner : "industry_google_group" */
  industry_google_group_stream: Array<Industry_Google_Group>;
  /** fetch data from the table: "industry_slack_channel" */
  industry_slack_channel: Array<Industry_Slack_Channel>;
  /** fetch aggregated fields from the table: "industry_slack_channel" */
  industry_slack_channel_aggregate: Industry_Slack_Channel_Aggregate;
  /** fetch data from the table: "industry_slack_channel" using primary key columns */
  industry_slack_channel_by_pk?: Maybe<Industry_Slack_Channel>;
  /** fetch data from the table in a streaming manner : "industry_slack_channel" */
  industry_slack_channel_stream: Array<Industry_Slack_Channel>;
  /** fetch data from the table in a streaming manner : "industry" */
  industry_stream: Array<Industry>;
  /** fetch data from the table: "invoice" */
  invoice: Array<Invoice>;
  /** fetch aggregated fields from the table: "invoice" */
  invoice_aggregate: Invoice_Aggregate;
  /** fetch data from the table: "invoice" using primary key columns */
  invoice_by_pk?: Maybe<Invoice>;
  /** fetch data from the table: "invoice_distribution" */
  invoice_distribution: Array<Invoice_Distribution>;
  /** fetch aggregated fields from the table: "invoice_distribution" */
  invoice_distribution_aggregate: Invoice_Distribution_Aggregate;
  /** fetch data from the table: "invoice_distribution" using primary key columns */
  invoice_distribution_by_pk?: Maybe<Invoice_Distribution>;
  /** fetch data from the table in a streaming manner : "invoice_distribution" */
  invoice_distribution_stream: Array<Invoice_Distribution>;
  /** fetch data from the table: "invoice_service_type" */
  invoice_service_type: Array<Invoice_Service_Type>;
  /** fetch aggregated fields from the table: "invoice_service_type" */
  invoice_service_type_aggregate: Invoice_Service_Type_Aggregate;
  /** fetch data from the table: "invoice_service_type" using primary key columns */
  invoice_service_type_by_pk?: Maybe<Invoice_Service_Type>;
  /** fetch data from the table in a streaming manner : "invoice_service_type" */
  invoice_service_type_stream: Array<Invoice_Service_Type>;
  /** fetch data from the table: "invoice_status" */
  invoice_status: Array<Invoice_Status>;
  /** fetch aggregated fields from the table: "invoice_status" */
  invoice_status_aggregate: Invoice_Status_Aggregate;
  /** fetch data from the table: "invoice_status" using primary key columns */
  invoice_status_by_pk?: Maybe<Invoice_Status>;
  /** fetch data from the table in a streaming manner : "invoice_status" */
  invoice_status_stream: Array<Invoice_Status>;
  /** fetch data from the table in a streaming manner : "invoice" */
  invoice_stream: Array<Invoice>;
  /** fetch data from the table: "invoice_term" */
  invoice_term: Array<Invoice_Term>;
  /** fetch aggregated fields from the table: "invoice_term" */
  invoice_term_aggregate: Invoice_Term_Aggregate;
  /** fetch data from the table: "invoice_term" using primary key columns */
  invoice_term_by_pk?: Maybe<Invoice_Term>;
  /** fetch data from the table in a streaming manner : "invoice_term" */
  invoice_term_stream: Array<Invoice_Term>;
  /** fetch data from the table: "language_level" */
  language_level: Array<Language_Level>;
  /** fetch aggregated fields from the table: "language_level" */
  language_level_aggregate: Language_Level_Aggregate;
  /** fetch data from the table: "language_level" using primary key columns */
  language_level_by_pk?: Maybe<Language_Level>;
  /** fetch data from the table in a streaming manner : "language_level" */
  language_level_stream: Array<Language_Level>;
  /** fetch data from the table: "late_payment_period" */
  late_payment_period: Array<Late_Payment_Period>;
  /** fetch aggregated fields from the table: "late_payment_period" */
  late_payment_period_aggregate: Late_Payment_Period_Aggregate;
  /** fetch data from the table: "late_payment_period" using primary key columns */
  late_payment_period_by_pk?: Maybe<Late_Payment_Period>;
  /** fetch data from the table in a streaming manner : "late_payment_period" */
  late_payment_period_stream: Array<Late_Payment_Period>;
  /** fetch data from the table: "no_of_employees" */
  no_of_employees: Array<No_Of_Employees>;
  /** fetch aggregated fields from the table: "no_of_employees" */
  no_of_employees_aggregate: No_Of_Employees_Aggregate;
  /** fetch data from the table: "no_of_employees" using primary key columns */
  no_of_employees_by_pk?: Maybe<No_Of_Employees>;
  /** fetch data from the table in a streaming manner : "no_of_employees" */
  no_of_employees_stream: Array<No_Of_Employees>;
  /** fetch data from the table: "partner" */
  partner: Array<Partner>;
  /** fetch aggregated fields from the table: "partner" */
  partner_aggregate: Partner_Aggregate;
  /** fetch data from the table: "partner" using primary key columns */
  partner_by_pk?: Maybe<Partner>;
  /** fetch data from the table: "partner_category" */
  partner_category: Array<Partner_Category>;
  /** fetch aggregated fields from the table: "partner_category" */
  partner_category_aggregate: Partner_Category_Aggregate;
  /** fetch data from the table: "partner_category" using primary key columns */
  partner_category_by_pk?: Maybe<Partner_Category>;
  /** fetch data from the table in a streaming manner : "partner_category" */
  partner_category_stream: Array<Partner_Category>;
  /** fetch data from the table: "partner_custom_field" */
  partner_custom_field: Array<Partner_Custom_Field>;
  /** fetch aggregated fields from the table: "partner_custom_field" */
  partner_custom_field_aggregate: Partner_Custom_Field_Aggregate;
  /** fetch data from the table: "partner_custom_field" using primary key columns */
  partner_custom_field_by_pk?: Maybe<Partner_Custom_Field>;
  /** fetch data from the table in a streaming manner : "partner_custom_field" */
  partner_custom_field_stream: Array<Partner_Custom_Field>;
  /** fetch data from the table: "partner_gallery_image" */
  partner_gallery_image: Array<Partner_Gallery_Image>;
  /** fetch aggregated fields from the table: "partner_gallery_image" */
  partner_gallery_image_aggregate: Partner_Gallery_Image_Aggregate;
  /** fetch data from the table: "partner_gallery_image" using primary key columns */
  partner_gallery_image_by_pk?: Maybe<Partner_Gallery_Image>;
  /** fetch data from the table in a streaming manner : "partner_gallery_image" */
  partner_gallery_image_stream: Array<Partner_Gallery_Image>;
  /** fetch data from the table in a streaming manner : "partner" */
  partner_stream: Array<Partner>;
  /** fetch data from the table: "payout_distribution" */
  payout_distribution: Array<Payout_Distribution>;
  /** fetch aggregated fields from the table: "payout_distribution" */
  payout_distribution_aggregate: Payout_Distribution_Aggregate;
  /** fetch data from the table: "payout_distribution" using primary key columns */
  payout_distribution_by_pk?: Maybe<Payout_Distribution>;
  /** fetch data from the table in a streaming manner : "payout_distribution" */
  payout_distribution_stream: Array<Payout_Distribution>;
  /** fetch data from the table: "product_or_service_type" */
  product_or_service_type: Array<Product_Or_Service_Type>;
  /** fetch aggregated fields from the table: "product_or_service_type" */
  product_or_service_type_aggregate: Product_Or_Service_Type_Aggregate;
  /** fetch data from the table: "product_or_service_type" using primary key columns */
  product_or_service_type_by_pk?: Maybe<Product_Or_Service_Type>;
  /** fetch data from the table in a streaming manner : "product_or_service_type" */
  product_or_service_type_stream: Array<Product_Or_Service_Type>;
  /** fetch data from the table: "public_user_meta" */
  public_user_meta: Array<Public_User_Meta>;
  /** fetch aggregated fields from the table: "public_user_meta" */
  public_user_meta_aggregate: Public_User_Meta_Aggregate;
  /** fetch data from the table in a streaming manner : "public_user_meta" */
  public_user_meta_stream: Array<Public_User_Meta>;
  /** fetch data from the table: "recurring_interval" */
  recurring_interval: Array<Recurring_Interval>;
  /** fetch aggregated fields from the table: "recurring_interval" */
  recurring_interval_aggregate: Recurring_Interval_Aggregate;
  /** fetch data from the table: "recurring_interval" using primary key columns */
  recurring_interval_by_pk?: Maybe<Recurring_Interval>;
  /** fetch data from the table in a streaming manner : "recurring_interval" */
  recurring_interval_stream: Array<Recurring_Interval>;
  /** fetch data from the table: "route" */
  route: Array<Route>;
  /** fetch aggregated fields from the table: "route" */
  route_aggregate: Route_Aggregate;
  /** fetch data from the table: "route" using primary key columns */
  route_by_pk?: Maybe<Route>;
  /** fetch data from the table: "route_endpoint" */
  route_endpoint: Array<Route_Endpoint>;
  /** fetch aggregated fields from the table: "route_endpoint" */
  route_endpoint_aggregate: Route_Endpoint_Aggregate;
  /** fetch data from the table: "route_endpoint" using primary key columns */
  route_endpoint_by_pk?: Maybe<Route_Endpoint>;
  /** fetch data from the table in a streaming manner : "route_endpoint" */
  route_endpoint_stream: Array<Route_Endpoint>;
  /** fetch data from the table: "route_group" */
  route_group: Array<Route_Group>;
  /** fetch aggregated fields from the table: "route_group" */
  route_group_aggregate: Route_Group_Aggregate;
  /** fetch data from the table: "route_group" using primary key columns */
  route_group_by_pk?: Maybe<Route_Group>;
  /** fetch data from the table in a streaming manner : "route_group" */
  route_group_stream: Array<Route_Group>;
  /** fetch data from the table in a streaming manner : "route" */
  route_stream: Array<Route>;
  /** fetch data from the table: "skill" */
  skill: Array<Skill>;
  /** fetch aggregated fields from the table: "skill" */
  skill_aggregate: Skill_Aggregate;
  /** fetch data from the table: "skill" using primary key columns */
  skill_by_pk?: Maybe<Skill>;
  /** fetch data from the table: "skill_category" */
  skill_category: Array<Skill_Category>;
  /** fetch aggregated fields from the table: "skill_category" */
  skill_category_aggregate: Skill_Category_Aggregate;
  /** fetch data from the table: "skill_category" using primary key columns */
  skill_category_by_pk?: Maybe<Skill_Category>;
  /** fetch data from the table in a streaming manner : "skill_category" */
  skill_category_stream: Array<Skill_Category>;
  /** fetch data from the table: "skill_google_group" */
  skill_google_group: Array<Skill_Google_Group>;
  /** fetch aggregated fields from the table: "skill_google_group" */
  skill_google_group_aggregate: Skill_Google_Group_Aggregate;
  /** fetch data from the table: "skill_google_group" using primary key columns */
  skill_google_group_by_pk?: Maybe<Skill_Google_Group>;
  /** fetch data from the table in a streaming manner : "skill_google_group" */
  skill_google_group_stream: Array<Skill_Google_Group>;
  /** fetch data from the table: "skill_level" */
  skill_level: Array<Skill_Level>;
  /** fetch aggregated fields from the table: "skill_level" */
  skill_level_aggregate: Skill_Level_Aggregate;
  /** fetch data from the table: "skill_level" using primary key columns */
  skill_level_by_pk?: Maybe<Skill_Level>;
  /** fetch data from the table in a streaming manner : "skill_level" */
  skill_level_stream: Array<Skill_Level>;
  /** An array relationship */
  skill_skill_categories: Array<Skill_Skill_Categories>;
  /** An aggregate relationship */
  skill_skill_categories_aggregate: Skill_Skill_Categories_Aggregate;
  /** fetch data from the table: "skill_skill_categories" using primary key columns */
  skill_skill_categories_by_pk?: Maybe<Skill_Skill_Categories>;
  /** fetch data from the table in a streaming manner : "skill_skill_categories" */
  skill_skill_categories_stream: Array<Skill_Skill_Categories>;
  /** fetch data from the table: "skill_slack_channel" */
  skill_slack_channel: Array<Skill_Slack_Channel>;
  /** fetch aggregated fields from the table: "skill_slack_channel" */
  skill_slack_channel_aggregate: Skill_Slack_Channel_Aggregate;
  /** fetch data from the table: "skill_slack_channel" using primary key columns */
  skill_slack_channel_by_pk?: Maybe<Skill_Slack_Channel>;
  /** fetch data from the table in a streaming manner : "skill_slack_channel" */
  skill_slack_channel_stream: Array<Skill_Slack_Channel>;
  /** fetch data from the table in a streaming manner : "skill" */
  skill_stream: Array<Skill>;
  /** fetch data from the table: "slack_answer" */
  slack_answer: Array<Slack_Answer>;
  /** fetch aggregated fields from the table: "slack_answer" */
  slack_answer_aggregate: Slack_Answer_Aggregate;
  /** fetch data from the table: "slack_answer" using primary key columns */
  slack_answer_by_pk?: Maybe<Slack_Answer>;
  /** fetch data from the table in a streaming manner : "slack_answer" */
  slack_answer_stream: Array<Slack_Answer>;
  /** fetch data from the table: "slack_availability" */
  slack_availability: Array<Slack_Availability>;
  /** fetch aggregated fields from the table: "slack_availability" */
  slack_availability_aggregate: Slack_Availability_Aggregate;
  /** fetch data from the table in a streaming manner : "slack_availability" */
  slack_availability_stream: Array<Slack_Availability>;
  /** fetch data from the table: "slack_birthday_and_anniversary_message" */
  slack_birthday_and_anniversary_message: Array<Slack_Birthday_And_Anniversary_Message>;
  /** fetch aggregated fields from the table: "slack_birthday_and_anniversary_message" */
  slack_birthday_and_anniversary_message_aggregate: Slack_Birthday_And_Anniversary_Message_Aggregate;
  /** fetch data from the table: "slack_birthday_and_anniversary_message" using primary key columns */
  slack_birthday_and_anniversary_message_by_pk?: Maybe<Slack_Birthday_And_Anniversary_Message>;
  /** fetch data from the table in a streaming manner : "slack_birthday_and_anniversary_message" */
  slack_birthday_and_anniversary_message_stream: Array<Slack_Birthday_And_Anniversary_Message>;
  /** fetch data from the table: "slack_message" */
  slack_message: Array<Slack_Message>;
  /** fetch aggregated fields from the table: "slack_message" */
  slack_message_aggregate: Slack_Message_Aggregate;
  /** fetch data from the table: "slack_message" using primary key columns */
  slack_message_by_pk?: Maybe<Slack_Message>;
  /** fetch data from the table in a streaming manner : "slack_message" */
  slack_message_stream: Array<Slack_Message>;
  /** fetch data from the table: "slack_message_trigger_log" */
  slack_message_trigger_log: Array<Slack_Message_Trigger_Log>;
  /** fetch aggregated fields from the table: "slack_message_trigger_log" */
  slack_message_trigger_log_aggregate: Slack_Message_Trigger_Log_Aggregate;
  /** fetch data from the table: "slack_message_trigger_log" using primary key columns */
  slack_message_trigger_log_by_pk?: Maybe<Slack_Message_Trigger_Log>;
  /** fetch data from the table in a streaming manner : "slack_message_trigger_log" */
  slack_message_trigger_log_stream: Array<Slack_Message_Trigger_Log>;
  /** fetch data from the table: "slack_outreach" */
  slack_outreach: Array<Slack_Outreach>;
  /** fetch aggregated fields from the table: "slack_outreach" */
  slack_outreach_aggregate: Slack_Outreach_Aggregate;
  /** fetch data from the table: "slack_outreach" using primary key columns */
  slack_outreach_by_pk?: Maybe<Slack_Outreach>;
  /** fetch data from the table in a streaming manner : "slack_outreach" */
  slack_outreach_stream: Array<Slack_Outreach>;
  /** fetch data from the table: "team" */
  team: Array<Team>;
  /** fetch aggregated fields from the table: "team" */
  team_aggregate: Team_Aggregate;
  /** fetch data from the table: "team" using primary key columns */
  team_by_pk?: Maybe<Team>;
  /** fetch data from the table: "team_google_group" */
  team_google_group: Array<Team_Google_Group>;
  /** fetch aggregated fields from the table: "team_google_group" */
  team_google_group_aggregate: Team_Google_Group_Aggregate;
  /** fetch data from the table: "team_google_group" using primary key columns */
  team_google_group_by_pk?: Maybe<Team_Google_Group>;
  /** fetch data from the table in a streaming manner : "team_google_group" */
  team_google_group_stream: Array<Team_Google_Group>;
  /** fetch data from the table: "team_industry" */
  team_industry: Array<Team_Industry>;
  /** fetch aggregated fields from the table: "team_industry" */
  team_industry_aggregate: Team_Industry_Aggregate;
  /** fetch data from the table: "team_industry" using primary key columns */
  team_industry_by_pk?: Maybe<Team_Industry>;
  /** fetch data from the table in a streaming manner : "team_industry" */
  team_industry_stream: Array<Team_Industry>;
  /** fetch data from the table: "team_skill" */
  team_skill: Array<Team_Skill>;
  /** fetch aggregated fields from the table: "team_skill" */
  team_skill_aggregate: Team_Skill_Aggregate;
  /** fetch data from the table: "team_skill" using primary key columns */
  team_skill_by_pk?: Maybe<Team_Skill>;
  /** fetch data from the table in a streaming manner : "team_skill" */
  team_skill_stream: Array<Team_Skill>;
  /** fetch data from the table: "team_slack_channel" */
  team_slack_channel: Array<Team_Slack_Channel>;
  /** fetch aggregated fields from the table: "team_slack_channel" */
  team_slack_channel_aggregate: Team_Slack_Channel_Aggregate;
  /** fetch data from the table: "team_slack_channel" using primary key columns */
  team_slack_channel_by_pk?: Maybe<Team_Slack_Channel>;
  /** fetch data from the table in a streaming manner : "team_slack_channel" */
  team_slack_channel_stream: Array<Team_Slack_Channel>;
  /** fetch data from the table in a streaming manner : "team" */
  team_stream: Array<Team>;
  /** fetch data from the table: "time_and_material_invoice_line_item" */
  time_and_material_invoice_line_item: Array<Time_And_Material_Invoice_Line_Item>;
  /** fetch aggregated fields from the table: "time_and_material_invoice_line_item" */
  time_and_material_invoice_line_item_aggregate: Time_And_Material_Invoice_Line_Item_Aggregate;
  /** fetch data from the table: "time_and_material_invoice_line_item" using primary key columns */
  time_and_material_invoice_line_item_by_pk?: Maybe<Time_And_Material_Invoice_Line_Item>;
  /** fetch data from the table in a streaming manner : "time_and_material_invoice_line_item" */
  time_and_material_invoice_line_item_stream: Array<Time_And_Material_Invoice_Line_Item>;
  /** fetch data from the table: "tool" */
  tool: Array<Tool>;
  /** fetch aggregated fields from the table: "tool" */
  tool_aggregate: Tool_Aggregate;
  /** fetch data from the table: "tool" using primary key columns */
  tool_by_pk?: Maybe<Tool>;
  /** fetch data from the table in a streaming manner : "tool" */
  tool_stream: Array<Tool>;
  /** fetch data from the table: "trigger" */
  trigger: Array<Trigger>;
  /** fetch aggregated fields from the table: "trigger" */
  trigger_aggregate: Trigger_Aggregate;
  /** fetch data from the table: "trigger" using primary key columns */
  trigger_by_pk?: Maybe<Trigger>;
  /** fetch data from the table in a streaming manner : "trigger" */
  trigger_stream: Array<Trigger>;
  /** fetch data from the table: "user_basic_information" */
  user_basic_information: Array<User_Basic_Information>;
  /** fetch aggregated fields from the table: "user_basic_information" */
  user_basic_information_aggregate: User_Basic_Information_Aggregate;
  /** fetch data from the table: "user_basic_information" using primary key columns */
  user_basic_information_by_pk?: Maybe<User_Basic_Information>;
  /** fetch data from the table in a streaming manner : "user_basic_information" */
  user_basic_information_stream: Array<User_Basic_Information>;
  /** fetch data from the table: "user_company" */
  user_company: Array<User_Company>;
  /** fetch aggregated fields from the table: "user_company" */
  user_company_aggregate: User_Company_Aggregate;
  /** fetch data from the table: "user_company" using primary key columns */
  user_company_by_pk?: Maybe<User_Company>;
  /** fetch data from the table in a streaming manner : "user_company" */
  user_company_stream: Array<User_Company>;
  /** fetch data from the table: "user_completed_customer_sale" */
  user_completed_customer_sale: Array<User_Completed_Customer_Sale>;
  /** fetch aggregated fields from the table: "user_completed_customer_sale" */
  user_completed_customer_sale_aggregate: User_Completed_Customer_Sale_Aggregate;
  /** fetch data from the table: "user_completed_customer_sale" using primary key columns */
  user_completed_customer_sale_by_pk?: Maybe<User_Completed_Customer_Sale>;
  /** fetch data from the table in a streaming manner : "user_completed_customer_sale" */
  user_completed_customer_sale_stream: Array<User_Completed_Customer_Sale>;
  /** fetch data from the table: "user_in_market_experience" */
  user_in_market_experience: Array<User_In_Market_Experience>;
  /** fetch aggregated fields from the table: "user_in_market_experience" */
  user_in_market_experience_aggregate: User_In_Market_Experience_Aggregate;
  /** fetch data from the table: "user_in_market_experience" using primary key columns */
  user_in_market_experience_by_pk?: Maybe<User_In_Market_Experience>;
  /** fetch data from the table in a streaming manner : "user_in_market_experience" */
  user_in_market_experience_stream: Array<User_In_Market_Experience>;
  /** fetch data from the table: "user_industry_experience" */
  user_industry_experience: Array<User_Industry_Experience>;
  /** fetch aggregated fields from the table: "user_industry_experience" */
  user_industry_experience_aggregate: User_Industry_Experience_Aggregate;
  /** fetch data from the table: "user_industry_experience" using primary key columns */
  user_industry_experience_by_pk?: Maybe<User_Industry_Experience>;
  /** fetch data from the table in a streaming manner : "user_industry_experience" */
  user_industry_experience_stream: Array<User_Industry_Experience>;
  /** fetch data from the table: "user_language" */
  user_language: Array<User_Language>;
  /** fetch aggregated fields from the table: "user_language" */
  user_language_aggregate: User_Language_Aggregate;
  /** fetch data from the table: "user_language" using primary key columns */
  user_language_by_pk?: Maybe<User_Language>;
  /** fetch data from the table in a streaming manner : "user_language" */
  user_language_stream: Array<User_Language>;
  /** An array relationship */
  user_meta: Array<User_Meta>;
  /** An aggregate relationship */
  user_meta_aggregate: User_Meta_Aggregate;
  /** fetch data from the table: "user_meta" using primary key columns */
  user_meta_by_pk?: Maybe<User_Meta>;
  /** fetch data from the table in a streaming manner : "user_meta" */
  user_meta_stream: Array<User_Meta>;
  /** fetch data from the table: "user_meta_user_role" */
  user_meta_user_role: Array<User_Meta_User_Role>;
  /** fetch aggregated fields from the table: "user_meta_user_role" */
  user_meta_user_role_aggregate: User_Meta_User_Role_Aggregate;
  /** fetch data from the table: "user_meta_user_role" using primary key columns */
  user_meta_user_role_by_pk?: Maybe<User_Meta_User_Role>;
  /** fetch data from the table in a streaming manner : "user_meta_user_role" */
  user_meta_user_role_stream: Array<User_Meta_User_Role>;
  /** fetch data from the table: "user_professional_information" */
  user_professional_information: Array<User_Professional_Information>;
  /** fetch aggregated fields from the table: "user_professional_information" */
  user_professional_information_aggregate: User_Professional_Information_Aggregate;
  /** fetch data from the table: "user_professional_information" using primary key columns */
  user_professional_information_by_pk?: Maybe<User_Professional_Information>;
  /** fetch data from the table in a streaming manner : "user_professional_information" */
  user_professional_information_stream: Array<User_Professional_Information>;
  /** fetch data from the table: "user_profile" */
  user_profile: Array<User_Profile>;
  /** fetch aggregated fields from the table: "user_profile" */
  user_profile_aggregate: User_Profile_Aggregate;
  /** fetch data from the table: "user_profile" using primary key columns */
  user_profile_by_pk?: Maybe<User_Profile>;
  /** fetch data from the table: "user_profile_company" */
  user_profile_company: Array<User_Profile_Company>;
  /** fetch aggregated fields from the table: "user_profile_company" */
  user_profile_company_aggregate: User_Profile_Company_Aggregate;
  /** fetch data from the table: "user_profile_company" using primary key columns */
  user_profile_company_by_pk?: Maybe<User_Profile_Company>;
  /** fetch data from the table in a streaming manner : "user_profile_company" */
  user_profile_company_stream: Array<User_Profile_Company>;
  /** fetch data from the table: "user_profile_industry" */
  user_profile_industry: Array<User_Profile_Industry>;
  /** fetch aggregated fields from the table: "user_profile_industry" */
  user_profile_industry_aggregate: User_Profile_Industry_Aggregate;
  /** fetch data from the table: "user_profile_industry" using primary key columns */
  user_profile_industry_by_pk?: Maybe<User_Profile_Industry>;
  /** fetch data from the table in a streaming manner : "user_profile_industry" */
  user_profile_industry_stream: Array<User_Profile_Industry>;
  /** fetch data from the table: "user_profile_skill" */
  user_profile_skill: Array<User_Profile_Skill>;
  /** fetch aggregated fields from the table: "user_profile_skill" */
  user_profile_skill_aggregate: User_Profile_Skill_Aggregate;
  /** fetch data from the table: "user_profile_skill" using primary key columns */
  user_profile_skill_by_pk?: Maybe<User_Profile_Skill>;
  /** fetch data from the table in a streaming manner : "user_profile_skill" */
  user_profile_skill_stream: Array<User_Profile_Skill>;
  /** fetch data from the table in a streaming manner : "user_profile" */
  user_profile_stream: Array<User_Profile>;
  /** fetch data from the table: "user_profile_tab" */
  user_profile_tab: Array<User_Profile_Tab>;
  /** fetch aggregated fields from the table: "user_profile_tab" */
  user_profile_tab_aggregate: User_Profile_Tab_Aggregate;
  /** fetch data from the table: "user_profile_tab" using primary key columns */
  user_profile_tab_by_pk?: Maybe<User_Profile_Tab>;
  /** fetch data from the table: "user_profile_tab_endpoint" */
  user_profile_tab_endpoint: Array<User_Profile_Tab_Endpoint>;
  /** fetch aggregated fields from the table: "user_profile_tab_endpoint" */
  user_profile_tab_endpoint_aggregate: User_Profile_Tab_Endpoint_Aggregate;
  /** fetch data from the table: "user_profile_tab_endpoint" using primary key columns */
  user_profile_tab_endpoint_by_pk?: Maybe<User_Profile_Tab_Endpoint>;
  /** fetch data from the table in a streaming manner : "user_profile_tab_endpoint" */
  user_profile_tab_endpoint_stream: Array<User_Profile_Tab_Endpoint>;
  /** fetch data from the table in a streaming manner : "user_profile_tab" */
  user_profile_tab_stream: Array<User_Profile_Tab>;
  /** fetch data from the table: "user_profile_team" */
  user_profile_team: Array<User_Profile_Team>;
  /** fetch aggregated fields from the table: "user_profile_team" */
  user_profile_team_aggregate: User_Profile_Team_Aggregate;
  /** fetch data from the table: "user_profile_team" using primary key columns */
  user_profile_team_by_pk?: Maybe<User_Profile_Team>;
  /** fetch data from the table in a streaming manner : "user_profile_team" */
  user_profile_team_stream: Array<User_Profile_Team>;
  /** fetch data from the table: "user_profile_visibility" */
  user_profile_visibility: Array<User_Profile_Visibility>;
  /** fetch aggregated fields from the table: "user_profile_visibility" */
  user_profile_visibility_aggregate: User_Profile_Visibility_Aggregate;
  /** fetch data from the table: "user_profile_visibility" using primary key columns */
  user_profile_visibility_by_pk?: Maybe<User_Profile_Visibility>;
  /** fetch data from the table in a streaming manner : "user_profile_visibility" */
  user_profile_visibility_stream: Array<User_Profile_Visibility>;
  /** fetch data from the table: "user_role" */
  user_role: Array<User_Role>;
  /** fetch aggregated fields from the table: "user_role" */
  user_role_aggregate: User_Role_Aggregate;
  /** fetch data from the table: "user_role" using primary key columns */
  user_role_by_pk?: Maybe<User_Role>;
  /** fetch data from the table: "user_role_capability" */
  user_role_capability: Array<User_Role_Capability>;
  /** fetch aggregated fields from the table: "user_role_capability" */
  user_role_capability_aggregate: User_Role_Capability_Aggregate;
  /** fetch data from the table: "user_role_capability" using primary key columns */
  user_role_capability_by_pk?: Maybe<User_Role_Capability>;
  /** fetch data from the table in a streaming manner : "user_role_capability" */
  user_role_capability_stream: Array<User_Role_Capability>;
  /** fetch data from the table: "user_role_route" */
  user_role_route: Array<User_Role_Route>;
  /** fetch aggregated fields from the table: "user_role_route" */
  user_role_route_aggregate: User_Role_Route_Aggregate;
  /** fetch data from the table: "user_role_route" using primary key columns */
  user_role_route_by_pk?: Maybe<User_Role_Route>;
  /** fetch data from the table in a streaming manner : "user_role_route" */
  user_role_route_stream: Array<User_Role_Route>;
  /** fetch data from the table in a streaming manner : "user_role" */
  user_role_stream: Array<User_Role>;
  /** fetch data from the table: "user_role_user_profile_tab" */
  user_role_user_profile_tab: Array<User_Role_User_Profile_Tab>;
  /** fetch aggregated fields from the table: "user_role_user_profile_tab" */
  user_role_user_profile_tab_aggregate: User_Role_User_Profile_Tab_Aggregate;
  /** fetch data from the table: "user_role_user_profile_tab" using primary key columns */
  user_role_user_profile_tab_by_pk?: Maybe<User_Role_User_Profile_Tab>;
  /** fetch data from the table in a streaming manner : "user_role_user_profile_tab" */
  user_role_user_profile_tab_stream: Array<User_Role_User_Profile_Tab>;
  /** fetch data from the table: "user_skill" */
  user_skill: Array<User_Skill>;
  /** fetch aggregated fields from the table: "user_skill" */
  user_skill_aggregate: User_Skill_Aggregate;
  /** fetch data from the table: "user_skill" using primary key columns */
  user_skill_by_pk?: Maybe<User_Skill>;
  /** fetch data from the table in a streaming manner : "user_skill" */
  user_skill_stream: Array<User_Skill>;
  /** fetch data from the table: "user_work_experience" */
  user_work_experience: Array<User_Work_Experience>;
  /** fetch aggregated fields from the table: "user_work_experience" */
  user_work_experience_aggregate: User_Work_Experience_Aggregate;
  /** fetch data from the table: "user_work_experience" using primary key columns */
  user_work_experience_by_pk?: Maybe<User_Work_Experience>;
  /** fetch data from the table in a streaming manner : "user_work_experience" */
  user_work_experience_stream: Array<User_Work_Experience>;
  /** fetch data from the table: "webhook" */
  webhook: Array<Webhook>;
  /** fetch aggregated fields from the table: "webhook" */
  webhook_aggregate: Webhook_Aggregate;
  /** fetch data from the table: "webhook" using primary key columns */
  webhook_by_pk?: Maybe<Webhook>;
  /** fetch data from the table in a streaming manner : "webhook" */
  webhook_stream: Array<Webhook>;
  /** fetch data from the table: "webhook_trigger" */
  webhook_trigger: Array<Webhook_Trigger>;
  /** fetch aggregated fields from the table: "webhook_trigger" */
  webhook_trigger_aggregate: Webhook_Trigger_Aggregate;
  /** fetch data from the table: "webhook_trigger" using primary key columns */
  webhook_trigger_by_pk?: Maybe<Webhook_Trigger>;
  /** fetch data from the table in a streaming manner : "webhook_trigger" */
  webhook_trigger_stream: Array<Webhook_Trigger>;
};

export type Subscription_RootApi_User_TokenArgs = {
  distinct_on?: InputMaybe<Array<Api_User_Token_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Api_User_Token_Order_By>>;
  where?: InputMaybe<Api_User_Token_Bool_Exp>;
};

export type Subscription_RootApi_User_Token_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Api_User_Token_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Api_User_Token_Order_By>>;
  where?: InputMaybe<Api_User_Token_Bool_Exp>;
};

export type Subscription_RootApi_User_Token_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Subscription_RootApi_User_Token_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Api_User_Token_Stream_Cursor_Input>>;
  where?: InputMaybe<Api_User_Token_Bool_Exp>;
};

export type Subscription_RootBilling_FrequencyArgs = {
  distinct_on?: InputMaybe<Array<Billing_Frequency_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Billing_Frequency_Order_By>>;
  where?: InputMaybe<Billing_Frequency_Bool_Exp>;
};

export type Subscription_RootBilling_Frequency_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Billing_Frequency_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Billing_Frequency_Order_By>>;
  where?: InputMaybe<Billing_Frequency_Bool_Exp>;
};

export type Subscription_RootBilling_Frequency_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Subscription_RootBilling_Frequency_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Billing_Frequency_Stream_Cursor_Input>>;
  where?: InputMaybe<Billing_Frequency_Bool_Exp>;
};

export type Subscription_RootBookmark_FolderArgs = {
  distinct_on?: InputMaybe<Array<Bookmark_Folder_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Bookmark_Folder_Order_By>>;
  where?: InputMaybe<Bookmark_Folder_Bool_Exp>;
};

export type Subscription_RootBookmark_Folder_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Bookmark_Folder_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Bookmark_Folder_Order_By>>;
  where?: InputMaybe<Bookmark_Folder_Bool_Exp>;
};

export type Subscription_RootBookmark_Folder_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Subscription_RootBookmark_Folder_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Bookmark_Folder_Stream_Cursor_Input>>;
  where?: InputMaybe<Bookmark_Folder_Bool_Exp>;
};

export type Subscription_RootBookmark_LinkArgs = {
  distinct_on?: InputMaybe<Array<Bookmark_Link_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Bookmark_Link_Order_By>>;
  where?: InputMaybe<Bookmark_Link_Bool_Exp>;
};

export type Subscription_RootBookmark_Link_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Bookmark_Link_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Bookmark_Link_Order_By>>;
  where?: InputMaybe<Bookmark_Link_Bool_Exp>;
};

export type Subscription_RootBookmark_Link_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Subscription_RootBookmark_Link_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Bookmark_Link_Stream_Cursor_Input>>;
  where?: InputMaybe<Bookmark_Link_Bool_Exp>;
};

export type Subscription_RootCapabilityArgs = {
  distinct_on?: InputMaybe<Array<Capability_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Capability_Order_By>>;
  where?: InputMaybe<Capability_Bool_Exp>;
};

export type Subscription_RootCapability_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Capability_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Capability_Order_By>>;
  where?: InputMaybe<Capability_Bool_Exp>;
};

export type Subscription_RootCapability_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Subscription_RootCapability_EndpointArgs = {
  distinct_on?: InputMaybe<Array<Capability_Endpoint_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Capability_Endpoint_Order_By>>;
  where?: InputMaybe<Capability_Endpoint_Bool_Exp>;
};

export type Subscription_RootCapability_Endpoint_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Capability_Endpoint_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Capability_Endpoint_Order_By>>;
  where?: InputMaybe<Capability_Endpoint_Bool_Exp>;
};

export type Subscription_RootCapability_Endpoint_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Subscription_RootCapability_Endpoint_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Capability_Endpoint_Stream_Cursor_Input>>;
  where?: InputMaybe<Capability_Endpoint_Bool_Exp>;
};

export type Subscription_RootCapability_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Capability_Stream_Cursor_Input>>;
  where?: InputMaybe<Capability_Bool_Exp>;
};

export type Subscription_RootCase_StudyArgs = {
  distinct_on?: InputMaybe<Array<Case_Study_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Case_Study_Order_By>>;
  where?: InputMaybe<Case_Study_Bool_Exp>;
};

export type Subscription_RootCase_Study_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Case_Study_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Case_Study_Order_By>>;
  where?: InputMaybe<Case_Study_Bool_Exp>;
};

export type Subscription_RootCase_Study_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Subscription_RootCase_Study_CompanyArgs = {
  distinct_on?: InputMaybe<Array<Case_Study_Company_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Case_Study_Company_Order_By>>;
  where?: InputMaybe<Case_Study_Company_Bool_Exp>;
};

export type Subscription_RootCase_Study_Company_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Case_Study_Company_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Case_Study_Company_Order_By>>;
  where?: InputMaybe<Case_Study_Company_Bool_Exp>;
};

export type Subscription_RootCase_Study_Company_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Subscription_RootCase_Study_Company_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Case_Study_Company_Stream_Cursor_Input>>;
  where?: InputMaybe<Case_Study_Company_Bool_Exp>;
};

export type Subscription_RootCase_Study_IndustryArgs = {
  distinct_on?: InputMaybe<Array<Case_Study_Industry_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Case_Study_Industry_Order_By>>;
  where?: InputMaybe<Case_Study_Industry_Bool_Exp>;
};

export type Subscription_RootCase_Study_Industry_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Case_Study_Industry_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Case_Study_Industry_Order_By>>;
  where?: InputMaybe<Case_Study_Industry_Bool_Exp>;
};

export type Subscription_RootCase_Study_Industry_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Subscription_RootCase_Study_Industry_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Case_Study_Industry_Stream_Cursor_Input>>;
  where?: InputMaybe<Case_Study_Industry_Bool_Exp>;
};

export type Subscription_RootCase_Study_MarketArgs = {
  distinct_on?: InputMaybe<Array<Case_Study_Market_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Case_Study_Market_Order_By>>;
  where?: InputMaybe<Case_Study_Market_Bool_Exp>;
};

export type Subscription_RootCase_Study_Market_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Case_Study_Market_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Case_Study_Market_Order_By>>;
  where?: InputMaybe<Case_Study_Market_Bool_Exp>;
};

export type Subscription_RootCase_Study_Market_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Subscription_RootCase_Study_Market_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Case_Study_Market_Stream_Cursor_Input>>;
  where?: InputMaybe<Case_Study_Market_Bool_Exp>;
};

export type Subscription_RootCase_Study_SkillArgs = {
  distinct_on?: InputMaybe<Array<Case_Study_Skill_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Case_Study_Skill_Order_By>>;
  where?: InputMaybe<Case_Study_Skill_Bool_Exp>;
};

export type Subscription_RootCase_Study_Skill_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Case_Study_Skill_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Case_Study_Skill_Order_By>>;
  where?: InputMaybe<Case_Study_Skill_Bool_Exp>;
};

export type Subscription_RootCase_Study_Skill_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Subscription_RootCase_Study_Skill_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Case_Study_Skill_Stream_Cursor_Input>>;
  where?: InputMaybe<Case_Study_Skill_Bool_Exp>;
};

export type Subscription_RootCase_Study_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Case_Study_Stream_Cursor_Input>>;
  where?: InputMaybe<Case_Study_Bool_Exp>;
};

export type Subscription_RootCase_Study_TeamArgs = {
  distinct_on?: InputMaybe<Array<Case_Study_Team_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Case_Study_Team_Order_By>>;
  where?: InputMaybe<Case_Study_Team_Bool_Exp>;
};

export type Subscription_RootCase_Study_Team_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Case_Study_Team_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Case_Study_Team_Order_By>>;
  where?: InputMaybe<Case_Study_Team_Bool_Exp>;
};

export type Subscription_RootCase_Study_Team_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Subscription_RootCase_Study_Team_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Case_Study_Team_Stream_Cursor_Input>>;
  where?: InputMaybe<Case_Study_Team_Bool_Exp>;
};

export type Subscription_RootCase_Study_UserArgs = {
  distinct_on?: InputMaybe<Array<Case_Study_User_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Case_Study_User_Order_By>>;
  where?: InputMaybe<Case_Study_User_Bool_Exp>;
};

export type Subscription_RootCase_Study_User_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Case_Study_User_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Case_Study_User_Order_By>>;
  where?: InputMaybe<Case_Study_User_Bool_Exp>;
};

export type Subscription_RootCase_Study_User_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Subscription_RootCase_Study_User_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Case_Study_User_Stream_Cursor_Input>>;
  where?: InputMaybe<Case_Study_User_Bool_Exp>;
};

export type Subscription_RootCompanyArgs = {
  distinct_on?: InputMaybe<Array<Company_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Company_Order_By>>;
  where?: InputMaybe<Company_Bool_Exp>;
};

export type Subscription_RootCompany_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Company_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Company_Order_By>>;
  where?: InputMaybe<Company_Bool_Exp>;
};

export type Subscription_RootCompany_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Subscription_RootCompany_ContactArgs = {
  distinct_on?: InputMaybe<Array<Company_Contact_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Company_Contact_Order_By>>;
  where?: InputMaybe<Company_Contact_Bool_Exp>;
};

export type Subscription_RootCompany_Contact_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Company_Contact_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Company_Contact_Order_By>>;
  where?: InputMaybe<Company_Contact_Bool_Exp>;
};

export type Subscription_RootCompany_Contact_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Subscription_RootCompany_Contact_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Company_Contact_Stream_Cursor_Input>>;
  where?: InputMaybe<Company_Contact_Bool_Exp>;
};

export type Subscription_RootCompany_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Company_Stream_Cursor_Input>>;
  where?: InputMaybe<Company_Bool_Exp>;
};

export type Subscription_RootCompany_TeamArgs = {
  distinct_on?: InputMaybe<Array<Company_Team_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Company_Team_Order_By>>;
  where?: InputMaybe<Company_Team_Bool_Exp>;
};

export type Subscription_RootCompany_Team_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Company_Team_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Company_Team_Order_By>>;
  where?: InputMaybe<Company_Team_Bool_Exp>;
};

export type Subscription_RootCompany_Team_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Subscription_RootCompany_Team_ContributorArgs = {
  distinct_on?: InputMaybe<Array<Company_Team_Contributor_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Company_Team_Contributor_Order_By>>;
  where?: InputMaybe<Company_Team_Contributor_Bool_Exp>;
};

export type Subscription_RootCompany_Team_Contributor_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Company_Team_Contributor_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Company_Team_Contributor_Order_By>>;
  where?: InputMaybe<Company_Team_Contributor_Bool_Exp>;
};

export type Subscription_RootCompany_Team_Contributor_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Subscription_RootCompany_Team_Contributor_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Company_Team_Contributor_Stream_Cursor_Input>>;
  where?: InputMaybe<Company_Team_Contributor_Bool_Exp>;
};

export type Subscription_RootCompany_Team_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Company_Team_Stream_Cursor_Input>>;
  where?: InputMaybe<Company_Team_Bool_Exp>;
};

export type Subscription_RootContributor_TypeArgs = {
  distinct_on?: InputMaybe<Array<Contributor_Type_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Contributor_Type_Order_By>>;
  where?: InputMaybe<Contributor_Type_Bool_Exp>;
};

export type Subscription_RootContributor_Type_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Contributor_Type_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Contributor_Type_Order_By>>;
  where?: InputMaybe<Contributor_Type_Bool_Exp>;
};

export type Subscription_RootContributor_Type_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Subscription_RootContributor_Type_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Contributor_Type_Stream_Cursor_Input>>;
  where?: InputMaybe<Contributor_Type_Bool_Exp>;
};

export type Subscription_RootCurrent_User_MetaArgs = {
  distinct_on?: InputMaybe<Array<Current_User_Meta_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Current_User_Meta_Order_By>>;
  where?: InputMaybe<Current_User_Meta_Bool_Exp>;
};

export type Subscription_RootCurrent_User_Meta_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Current_User_Meta_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Current_User_Meta_Order_By>>;
  where?: InputMaybe<Current_User_Meta_Bool_Exp>;
};

export type Subscription_RootCurrent_User_Meta_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Current_User_Meta_Stream_Cursor_Input>>;
  where?: InputMaybe<Current_User_Meta_Bool_Exp>;
};

export type Subscription_RootCustom_PayoutArgs = {
  distinct_on?: InputMaybe<Array<Custom_Payout_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Custom_Payout_Order_By>>;
  where?: InputMaybe<Custom_Payout_Bool_Exp>;
};

export type Subscription_RootCustom_Payout_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Custom_Payout_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Custom_Payout_Order_By>>;
  where?: InputMaybe<Custom_Payout_Bool_Exp>;
};

export type Subscription_RootCustom_Payout_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Subscription_RootCustom_Payout_Line_ItemArgs = {
  distinct_on?: InputMaybe<Array<Custom_Payout_Line_Item_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Custom_Payout_Line_Item_Order_By>>;
  where?: InputMaybe<Custom_Payout_Line_Item_Bool_Exp>;
};

export type Subscription_RootCustom_Payout_Line_Item_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Custom_Payout_Line_Item_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Custom_Payout_Line_Item_Order_By>>;
  where?: InputMaybe<Custom_Payout_Line_Item_Bool_Exp>;
};

export type Subscription_RootCustom_Payout_Line_Item_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Subscription_RootCustom_Payout_Line_Item_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Custom_Payout_Line_Item_Stream_Cursor_Input>>;
  where?: InputMaybe<Custom_Payout_Line_Item_Bool_Exp>;
};

export type Subscription_RootCustom_Payout_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Custom_Payout_Stream_Cursor_Input>>;
  where?: InputMaybe<Custom_Payout_Bool_Exp>;
};

export type Subscription_RootCustom_Project_DistributionArgs = {
  distinct_on?: InputMaybe<Array<Custom_Project_Distribution_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Custom_Project_Distribution_Order_By>>;
  where?: InputMaybe<Custom_Project_Distribution_Bool_Exp>;
};

export type Subscription_RootCustom_Project_Distribution_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Custom_Project_Distribution_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Custom_Project_Distribution_Order_By>>;
  where?: InputMaybe<Custom_Project_Distribution_Bool_Exp>;
};

export type Subscription_RootCustom_Project_Distribution_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Subscription_RootCustom_Project_Distribution_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Custom_Project_Distribution_Stream_Cursor_Input>>;
  where?: InputMaybe<Custom_Project_Distribution_Bool_Exp>;
};

export type Subscription_RootCustom_Project_Payout_DistributionArgs = {
  distinct_on?: InputMaybe<Array<Custom_Project_Payout_Distribution_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Custom_Project_Payout_Distribution_Order_By>>;
  where?: InputMaybe<Custom_Project_Payout_Distribution_Bool_Exp>;
};

export type Subscription_RootCustom_Project_Payout_Distribution_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Custom_Project_Payout_Distribution_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Custom_Project_Payout_Distribution_Order_By>>;
  where?: InputMaybe<Custom_Project_Payout_Distribution_Bool_Exp>;
};

export type Subscription_RootCustom_Project_Payout_Distribution_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Subscription_RootCustom_Project_Payout_Distribution_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Custom_Project_Payout_Distribution_Stream_Cursor_Input>>;
  where?: InputMaybe<Custom_Project_Payout_Distribution_Bool_Exp>;
};

export type Subscription_RootCustomerArgs = {
  distinct_on?: InputMaybe<Array<Customer_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Customer_Order_By>>;
  where?: InputMaybe<Customer_Bool_Exp>;
};

export type Subscription_RootCustomer_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Customer_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Customer_Order_By>>;
  where?: InputMaybe<Customer_Bool_Exp>;
};

export type Subscription_RootCustomer_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Subscription_RootCustomer_Closing_PartyArgs = {
  distinct_on?: InputMaybe<Array<Customer_Closing_Party_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Customer_Closing_Party_Order_By>>;
  where?: InputMaybe<Customer_Closing_Party_Bool_Exp>;
};

export type Subscription_RootCustomer_Closing_Party_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Customer_Closing_Party_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Customer_Closing_Party_Order_By>>;
  where?: InputMaybe<Customer_Closing_Party_Bool_Exp>;
};

export type Subscription_RootCustomer_Closing_Party_By_PkArgs = {
  customerID: Scalars['uuid'];
  userMetaID: Scalars['uuid'];
};

export type Subscription_RootCustomer_Closing_Party_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Customer_Closing_Party_Stream_Cursor_Input>>;
  where?: InputMaybe<Customer_Closing_Party_Bool_Exp>;
};

export type Subscription_RootCustomer_Originating_PartyArgs = {
  distinct_on?: InputMaybe<Array<Customer_Originating_Party_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Customer_Originating_Party_Order_By>>;
  where?: InputMaybe<Customer_Originating_Party_Bool_Exp>;
};

export type Subscription_RootCustomer_Originating_Party_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Customer_Originating_Party_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Customer_Originating_Party_Order_By>>;
  where?: InputMaybe<Customer_Originating_Party_Bool_Exp>;
};

export type Subscription_RootCustomer_Originating_Party_By_PkArgs = {
  customerID: Scalars['uuid'];
  userMetaID: Scalars['uuid'];
};

export type Subscription_RootCustomer_Originating_Party_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Customer_Originating_Party_Stream_Cursor_Input>>;
  where?: InputMaybe<Customer_Originating_Party_Bool_Exp>;
};

export type Subscription_RootCustomer_ReferrerArgs = {
  distinct_on?: InputMaybe<Array<Customer_Referrer_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Customer_Referrer_Order_By>>;
  where?: InputMaybe<Customer_Referrer_Bool_Exp>;
};

export type Subscription_RootCustomer_Referrer_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Customer_Referrer_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Customer_Referrer_Order_By>>;
  where?: InputMaybe<Customer_Referrer_Bool_Exp>;
};

export type Subscription_RootCustomer_Referrer_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Subscription_RootCustomer_Referrer_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Customer_Referrer_Stream_Cursor_Input>>;
  where?: InputMaybe<Customer_Referrer_Bool_Exp>;
};

export type Subscription_RootCustomer_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Customer_Stream_Cursor_Input>>;
  where?: InputMaybe<Customer_Bool_Exp>;
};

export type Subscription_RootDocumentArgs = {
  distinct_on?: InputMaybe<Array<Document_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Document_Order_By>>;
  where?: InputMaybe<Document_Bool_Exp>;
};

export type Subscription_RootDocument_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Document_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Document_Order_By>>;
  where?: InputMaybe<Document_Bool_Exp>;
};

export type Subscription_RootDocument_Associated_CompanyArgs = {
  distinct_on?: InputMaybe<Array<Document_Associated_Company_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Document_Associated_Company_Order_By>>;
  where?: InputMaybe<Document_Associated_Company_Bool_Exp>;
};

export type Subscription_RootDocument_Associated_Company_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Document_Associated_Company_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Document_Associated_Company_Order_By>>;
  where?: InputMaybe<Document_Associated_Company_Bool_Exp>;
};

export type Subscription_RootDocument_Associated_Company_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Subscription_RootDocument_Associated_Company_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Document_Associated_Company_Stream_Cursor_Input>>;
  where?: InputMaybe<Document_Associated_Company_Bool_Exp>;
};

export type Subscription_RootDocument_Associated_UserArgs = {
  distinct_on?: InputMaybe<Array<Document_Associated_User_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Document_Associated_User_Order_By>>;
  where?: InputMaybe<Document_Associated_User_Bool_Exp>;
};

export type Subscription_RootDocument_Associated_User_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Document_Associated_User_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Document_Associated_User_Order_By>>;
  where?: InputMaybe<Document_Associated_User_Bool_Exp>;
};

export type Subscription_RootDocument_Associated_User_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Subscription_RootDocument_Associated_User_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Document_Associated_User_Stream_Cursor_Input>>;
  where?: InputMaybe<Document_Associated_User_Bool_Exp>;
};

export type Subscription_RootDocument_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Subscription_RootDocument_Extra_FieldArgs = {
  distinct_on?: InputMaybe<Array<Document_Extra_Field_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Document_Extra_Field_Order_By>>;
  where?: InputMaybe<Document_Extra_Field_Bool_Exp>;
};

export type Subscription_RootDocument_Extra_Field_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Document_Extra_Field_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Document_Extra_Field_Order_By>>;
  where?: InputMaybe<Document_Extra_Field_Bool_Exp>;
};

export type Subscription_RootDocument_Extra_Field_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Subscription_RootDocument_Extra_Field_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Document_Extra_Field_Stream_Cursor_Input>>;
  where?: InputMaybe<Document_Extra_Field_Bool_Exp>;
};

export type Subscription_RootDocument_Extra_Field_ValueArgs = {
  distinct_on?: InputMaybe<Array<Document_Extra_Field_Value_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Document_Extra_Field_Value_Order_By>>;
  where?: InputMaybe<Document_Extra_Field_Value_Bool_Exp>;
};

export type Subscription_RootDocument_Extra_Field_Value_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Document_Extra_Field_Value_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Document_Extra_Field_Value_Order_By>>;
  where?: InputMaybe<Document_Extra_Field_Value_Bool_Exp>;
};

export type Subscription_RootDocument_Extra_Field_Value_By_PkArgs = {
  documentExtraFieldID: Scalars['uuid'];
  documentID: Scalars['uuid'];
};

export type Subscription_RootDocument_Extra_Field_Value_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Document_Extra_Field_Value_Stream_Cursor_Input>>;
  where?: InputMaybe<Document_Extra_Field_Value_Bool_Exp>;
};

export type Subscription_RootDocument_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Document_Stream_Cursor_Input>>;
  where?: InputMaybe<Document_Bool_Exp>;
};

export type Subscription_RootDocument_TypeArgs = {
  distinct_on?: InputMaybe<Array<Document_Type_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Document_Type_Order_By>>;
  where?: InputMaybe<Document_Type_Bool_Exp>;
};

export type Subscription_RootDocument_Type_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Document_Type_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Document_Type_Order_By>>;
  where?: InputMaybe<Document_Type_Bool_Exp>;
};

export type Subscription_RootDocument_Type_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Subscription_RootDocument_Type_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Document_Type_Stream_Cursor_Input>>;
  where?: InputMaybe<Document_Type_Bool_Exp>;
};

export type Subscription_RootEndpointArgs = {
  distinct_on?: InputMaybe<Array<Endpoint_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Endpoint_Order_By>>;
  where?: InputMaybe<Endpoint_Bool_Exp>;
};

export type Subscription_RootEndpoint_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Endpoint_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Endpoint_Order_By>>;
  where?: InputMaybe<Endpoint_Bool_Exp>;
};

export type Subscription_RootEndpoint_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Subscription_RootEndpoint_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Endpoint_Stream_Cursor_Input>>;
  where?: InputMaybe<Endpoint_Bool_Exp>;
};

export type Subscription_RootFixed_Price_Invoice_Line_ItemArgs = {
  distinct_on?: InputMaybe<Array<Fixed_Price_Invoice_Line_Item_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Fixed_Price_Invoice_Line_Item_Order_By>>;
  where?: InputMaybe<Fixed_Price_Invoice_Line_Item_Bool_Exp>;
};

export type Subscription_RootFixed_Price_Invoice_Line_Item_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Fixed_Price_Invoice_Line_Item_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Fixed_Price_Invoice_Line_Item_Order_By>>;
  where?: InputMaybe<Fixed_Price_Invoice_Line_Item_Bool_Exp>;
};

export type Subscription_RootFixed_Price_Invoice_Line_Item_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Subscription_RootFixed_Price_Invoice_Line_Item_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Fixed_Price_Invoice_Line_Item_Stream_Cursor_Input>>;
  where?: InputMaybe<Fixed_Price_Invoice_Line_Item_Bool_Exp>;
};

export type Subscription_RootIn_Market_Experience_LevelArgs = {
  distinct_on?: InputMaybe<Array<In_Market_Experience_Level_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<In_Market_Experience_Level_Order_By>>;
  where?: InputMaybe<In_Market_Experience_Level_Bool_Exp>;
};

export type Subscription_RootIn_Market_Experience_Level_AggregateArgs = {
  distinct_on?: InputMaybe<Array<In_Market_Experience_Level_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<In_Market_Experience_Level_Order_By>>;
  where?: InputMaybe<In_Market_Experience_Level_Bool_Exp>;
};

export type Subscription_RootIn_Market_Experience_Level_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Subscription_RootIn_Market_Experience_Level_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<In_Market_Experience_Level_Stream_Cursor_Input>>;
  where?: InputMaybe<In_Market_Experience_Level_Bool_Exp>;
};

export type Subscription_RootIndustryArgs = {
  distinct_on?: InputMaybe<Array<Industry_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Industry_Order_By>>;
  where?: InputMaybe<Industry_Bool_Exp>;
};

export type Subscription_RootIndustry_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Industry_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Industry_Order_By>>;
  where?: InputMaybe<Industry_Bool_Exp>;
};

export type Subscription_RootIndustry_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Subscription_RootIndustry_Experience_LevelArgs = {
  distinct_on?: InputMaybe<Array<Industry_Experience_Level_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Industry_Experience_Level_Order_By>>;
  where?: InputMaybe<Industry_Experience_Level_Bool_Exp>;
};

export type Subscription_RootIndustry_Experience_Level_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Industry_Experience_Level_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Industry_Experience_Level_Order_By>>;
  where?: InputMaybe<Industry_Experience_Level_Bool_Exp>;
};

export type Subscription_RootIndustry_Experience_Level_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Subscription_RootIndustry_Experience_Level_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Industry_Experience_Level_Stream_Cursor_Input>>;
  where?: InputMaybe<Industry_Experience_Level_Bool_Exp>;
};

export type Subscription_RootIndustry_Google_GroupArgs = {
  distinct_on?: InputMaybe<Array<Industry_Google_Group_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Industry_Google_Group_Order_By>>;
  where?: InputMaybe<Industry_Google_Group_Bool_Exp>;
};

export type Subscription_RootIndustry_Google_Group_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Industry_Google_Group_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Industry_Google_Group_Order_By>>;
  where?: InputMaybe<Industry_Google_Group_Bool_Exp>;
};

export type Subscription_RootIndustry_Google_Group_By_PkArgs = {
  googleGroupID: Scalars['String'];
  industryID: Scalars['uuid'];
};

export type Subscription_RootIndustry_Google_Group_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Industry_Google_Group_Stream_Cursor_Input>>;
  where?: InputMaybe<Industry_Google_Group_Bool_Exp>;
};

export type Subscription_RootIndustry_Slack_ChannelArgs = {
  distinct_on?: InputMaybe<Array<Industry_Slack_Channel_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Industry_Slack_Channel_Order_By>>;
  where?: InputMaybe<Industry_Slack_Channel_Bool_Exp>;
};

export type Subscription_RootIndustry_Slack_Channel_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Industry_Slack_Channel_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Industry_Slack_Channel_Order_By>>;
  where?: InputMaybe<Industry_Slack_Channel_Bool_Exp>;
};

export type Subscription_RootIndustry_Slack_Channel_By_PkArgs = {
  industryID: Scalars['uuid'];
  slackChannelID: Scalars['String'];
};

export type Subscription_RootIndustry_Slack_Channel_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Industry_Slack_Channel_Stream_Cursor_Input>>;
  where?: InputMaybe<Industry_Slack_Channel_Bool_Exp>;
};

export type Subscription_RootIndustry_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Industry_Stream_Cursor_Input>>;
  where?: InputMaybe<Industry_Bool_Exp>;
};

export type Subscription_RootInvoiceArgs = {
  distinct_on?: InputMaybe<Array<Invoice_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Invoice_Order_By>>;
  where?: InputMaybe<Invoice_Bool_Exp>;
};

export type Subscription_RootInvoice_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Invoice_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Invoice_Order_By>>;
  where?: InputMaybe<Invoice_Bool_Exp>;
};

export type Subscription_RootInvoice_By_PkArgs = {
  id: Scalars['Int'];
};

export type Subscription_RootInvoice_DistributionArgs = {
  distinct_on?: InputMaybe<Array<Invoice_Distribution_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Invoice_Distribution_Order_By>>;
  where?: InputMaybe<Invoice_Distribution_Bool_Exp>;
};

export type Subscription_RootInvoice_Distribution_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Invoice_Distribution_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Invoice_Distribution_Order_By>>;
  where?: InputMaybe<Invoice_Distribution_Bool_Exp>;
};

export type Subscription_RootInvoice_Distribution_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Subscription_RootInvoice_Distribution_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Invoice_Distribution_Stream_Cursor_Input>>;
  where?: InputMaybe<Invoice_Distribution_Bool_Exp>;
};

export type Subscription_RootInvoice_Service_TypeArgs = {
  distinct_on?: InputMaybe<Array<Invoice_Service_Type_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Invoice_Service_Type_Order_By>>;
  where?: InputMaybe<Invoice_Service_Type_Bool_Exp>;
};

export type Subscription_RootInvoice_Service_Type_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Invoice_Service_Type_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Invoice_Service_Type_Order_By>>;
  where?: InputMaybe<Invoice_Service_Type_Bool_Exp>;
};

export type Subscription_RootInvoice_Service_Type_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Subscription_RootInvoice_Service_Type_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Invoice_Service_Type_Stream_Cursor_Input>>;
  where?: InputMaybe<Invoice_Service_Type_Bool_Exp>;
};

export type Subscription_RootInvoice_StatusArgs = {
  distinct_on?: InputMaybe<Array<Invoice_Status_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Invoice_Status_Order_By>>;
  where?: InputMaybe<Invoice_Status_Bool_Exp>;
};

export type Subscription_RootInvoice_Status_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Invoice_Status_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Invoice_Status_Order_By>>;
  where?: InputMaybe<Invoice_Status_Bool_Exp>;
};

export type Subscription_RootInvoice_Status_By_PkArgs = {
  id: Scalars['Int'];
};

export type Subscription_RootInvoice_Status_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Invoice_Status_Stream_Cursor_Input>>;
  where?: InputMaybe<Invoice_Status_Bool_Exp>;
};

export type Subscription_RootInvoice_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Invoice_Stream_Cursor_Input>>;
  where?: InputMaybe<Invoice_Bool_Exp>;
};

export type Subscription_RootInvoice_TermArgs = {
  distinct_on?: InputMaybe<Array<Invoice_Term_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Invoice_Term_Order_By>>;
  where?: InputMaybe<Invoice_Term_Bool_Exp>;
};

export type Subscription_RootInvoice_Term_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Invoice_Term_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Invoice_Term_Order_By>>;
  where?: InputMaybe<Invoice_Term_Bool_Exp>;
};

export type Subscription_RootInvoice_Term_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Subscription_RootInvoice_Term_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Invoice_Term_Stream_Cursor_Input>>;
  where?: InputMaybe<Invoice_Term_Bool_Exp>;
};

export type Subscription_RootLanguage_LevelArgs = {
  distinct_on?: InputMaybe<Array<Language_Level_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Language_Level_Order_By>>;
  where?: InputMaybe<Language_Level_Bool_Exp>;
};

export type Subscription_RootLanguage_Level_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Language_Level_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Language_Level_Order_By>>;
  where?: InputMaybe<Language_Level_Bool_Exp>;
};

export type Subscription_RootLanguage_Level_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Subscription_RootLanguage_Level_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Language_Level_Stream_Cursor_Input>>;
  where?: InputMaybe<Language_Level_Bool_Exp>;
};

export type Subscription_RootLate_Payment_PeriodArgs = {
  distinct_on?: InputMaybe<Array<Late_Payment_Period_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Late_Payment_Period_Order_By>>;
  where?: InputMaybe<Late_Payment_Period_Bool_Exp>;
};

export type Subscription_RootLate_Payment_Period_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Late_Payment_Period_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Late_Payment_Period_Order_By>>;
  where?: InputMaybe<Late_Payment_Period_Bool_Exp>;
};

export type Subscription_RootLate_Payment_Period_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Subscription_RootLate_Payment_Period_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Late_Payment_Period_Stream_Cursor_Input>>;
  where?: InputMaybe<Late_Payment_Period_Bool_Exp>;
};

export type Subscription_RootNo_Of_EmployeesArgs = {
  distinct_on?: InputMaybe<Array<No_Of_Employees_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<No_Of_Employees_Order_By>>;
  where?: InputMaybe<No_Of_Employees_Bool_Exp>;
};

export type Subscription_RootNo_Of_Employees_AggregateArgs = {
  distinct_on?: InputMaybe<Array<No_Of_Employees_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<No_Of_Employees_Order_By>>;
  where?: InputMaybe<No_Of_Employees_Bool_Exp>;
};

export type Subscription_RootNo_Of_Employees_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Subscription_RootNo_Of_Employees_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<No_Of_Employees_Stream_Cursor_Input>>;
  where?: InputMaybe<No_Of_Employees_Bool_Exp>;
};

export type Subscription_RootPartnerArgs = {
  distinct_on?: InputMaybe<Array<Partner_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Partner_Order_By>>;
  where?: InputMaybe<Partner_Bool_Exp>;
};

export type Subscription_RootPartner_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Partner_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Partner_Order_By>>;
  where?: InputMaybe<Partner_Bool_Exp>;
};

export type Subscription_RootPartner_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Subscription_RootPartner_CategoryArgs = {
  distinct_on?: InputMaybe<Array<Partner_Category_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Partner_Category_Order_By>>;
  where?: InputMaybe<Partner_Category_Bool_Exp>;
};

export type Subscription_RootPartner_Category_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Partner_Category_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Partner_Category_Order_By>>;
  where?: InputMaybe<Partner_Category_Bool_Exp>;
};

export type Subscription_RootPartner_Category_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Subscription_RootPartner_Category_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Partner_Category_Stream_Cursor_Input>>;
  where?: InputMaybe<Partner_Category_Bool_Exp>;
};

export type Subscription_RootPartner_Custom_FieldArgs = {
  distinct_on?: InputMaybe<Array<Partner_Custom_Field_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Partner_Custom_Field_Order_By>>;
  where?: InputMaybe<Partner_Custom_Field_Bool_Exp>;
};

export type Subscription_RootPartner_Custom_Field_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Partner_Custom_Field_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Partner_Custom_Field_Order_By>>;
  where?: InputMaybe<Partner_Custom_Field_Bool_Exp>;
};

export type Subscription_RootPartner_Custom_Field_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Subscription_RootPartner_Custom_Field_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Partner_Custom_Field_Stream_Cursor_Input>>;
  where?: InputMaybe<Partner_Custom_Field_Bool_Exp>;
};

export type Subscription_RootPartner_Gallery_ImageArgs = {
  distinct_on?: InputMaybe<Array<Partner_Gallery_Image_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Partner_Gallery_Image_Order_By>>;
  where?: InputMaybe<Partner_Gallery_Image_Bool_Exp>;
};

export type Subscription_RootPartner_Gallery_Image_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Partner_Gallery_Image_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Partner_Gallery_Image_Order_By>>;
  where?: InputMaybe<Partner_Gallery_Image_Bool_Exp>;
};

export type Subscription_RootPartner_Gallery_Image_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Subscription_RootPartner_Gallery_Image_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Partner_Gallery_Image_Stream_Cursor_Input>>;
  where?: InputMaybe<Partner_Gallery_Image_Bool_Exp>;
};

export type Subscription_RootPartner_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Partner_Stream_Cursor_Input>>;
  where?: InputMaybe<Partner_Bool_Exp>;
};

export type Subscription_RootPayout_DistributionArgs = {
  distinct_on?: InputMaybe<Array<Payout_Distribution_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Payout_Distribution_Order_By>>;
  where?: InputMaybe<Payout_Distribution_Bool_Exp>;
};

export type Subscription_RootPayout_Distribution_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Payout_Distribution_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Payout_Distribution_Order_By>>;
  where?: InputMaybe<Payout_Distribution_Bool_Exp>;
};

export type Subscription_RootPayout_Distribution_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Subscription_RootPayout_Distribution_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Payout_Distribution_Stream_Cursor_Input>>;
  where?: InputMaybe<Payout_Distribution_Bool_Exp>;
};

export type Subscription_RootProduct_Or_Service_TypeArgs = {
  distinct_on?: InputMaybe<Array<Product_Or_Service_Type_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Product_Or_Service_Type_Order_By>>;
  where?: InputMaybe<Product_Or_Service_Type_Bool_Exp>;
};

export type Subscription_RootProduct_Or_Service_Type_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Product_Or_Service_Type_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Product_Or_Service_Type_Order_By>>;
  where?: InputMaybe<Product_Or_Service_Type_Bool_Exp>;
};

export type Subscription_RootProduct_Or_Service_Type_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Subscription_RootProduct_Or_Service_Type_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Product_Or_Service_Type_Stream_Cursor_Input>>;
  where?: InputMaybe<Product_Or_Service_Type_Bool_Exp>;
};

export type Subscription_RootPublic_User_MetaArgs = {
  distinct_on?: InputMaybe<Array<Public_User_Meta_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Public_User_Meta_Order_By>>;
  where?: InputMaybe<Public_User_Meta_Bool_Exp>;
};

export type Subscription_RootPublic_User_Meta_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Public_User_Meta_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Public_User_Meta_Order_By>>;
  where?: InputMaybe<Public_User_Meta_Bool_Exp>;
};

export type Subscription_RootPublic_User_Meta_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Public_User_Meta_Stream_Cursor_Input>>;
  where?: InputMaybe<Public_User_Meta_Bool_Exp>;
};

export type Subscription_RootRecurring_IntervalArgs = {
  distinct_on?: InputMaybe<Array<Recurring_Interval_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Recurring_Interval_Order_By>>;
  where?: InputMaybe<Recurring_Interval_Bool_Exp>;
};

export type Subscription_RootRecurring_Interval_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Recurring_Interval_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Recurring_Interval_Order_By>>;
  where?: InputMaybe<Recurring_Interval_Bool_Exp>;
};

export type Subscription_RootRecurring_Interval_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Subscription_RootRecurring_Interval_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Recurring_Interval_Stream_Cursor_Input>>;
  where?: InputMaybe<Recurring_Interval_Bool_Exp>;
};

export type Subscription_RootRouteArgs = {
  distinct_on?: InputMaybe<Array<Route_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Route_Order_By>>;
  where?: InputMaybe<Route_Bool_Exp>;
};

export type Subscription_RootRoute_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Route_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Route_Order_By>>;
  where?: InputMaybe<Route_Bool_Exp>;
};

export type Subscription_RootRoute_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Subscription_RootRoute_EndpointArgs = {
  distinct_on?: InputMaybe<Array<Route_Endpoint_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Route_Endpoint_Order_By>>;
  where?: InputMaybe<Route_Endpoint_Bool_Exp>;
};

export type Subscription_RootRoute_Endpoint_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Route_Endpoint_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Route_Endpoint_Order_By>>;
  where?: InputMaybe<Route_Endpoint_Bool_Exp>;
};

export type Subscription_RootRoute_Endpoint_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Subscription_RootRoute_Endpoint_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Route_Endpoint_Stream_Cursor_Input>>;
  where?: InputMaybe<Route_Endpoint_Bool_Exp>;
};

export type Subscription_RootRoute_GroupArgs = {
  distinct_on?: InputMaybe<Array<Route_Group_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Route_Group_Order_By>>;
  where?: InputMaybe<Route_Group_Bool_Exp>;
};

export type Subscription_RootRoute_Group_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Route_Group_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Route_Group_Order_By>>;
  where?: InputMaybe<Route_Group_Bool_Exp>;
};

export type Subscription_RootRoute_Group_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Subscription_RootRoute_Group_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Route_Group_Stream_Cursor_Input>>;
  where?: InputMaybe<Route_Group_Bool_Exp>;
};

export type Subscription_RootRoute_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Route_Stream_Cursor_Input>>;
  where?: InputMaybe<Route_Bool_Exp>;
};

export type Subscription_RootSkillArgs = {
  distinct_on?: InputMaybe<Array<Skill_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Skill_Order_By>>;
  where?: InputMaybe<Skill_Bool_Exp>;
};

export type Subscription_RootSkill_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Skill_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Skill_Order_By>>;
  where?: InputMaybe<Skill_Bool_Exp>;
};

export type Subscription_RootSkill_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Subscription_RootSkill_CategoryArgs = {
  distinct_on?: InputMaybe<Array<Skill_Category_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Skill_Category_Order_By>>;
  where?: InputMaybe<Skill_Category_Bool_Exp>;
};

export type Subscription_RootSkill_Category_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Skill_Category_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Skill_Category_Order_By>>;
  where?: InputMaybe<Skill_Category_Bool_Exp>;
};

export type Subscription_RootSkill_Category_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Subscription_RootSkill_Category_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Skill_Category_Stream_Cursor_Input>>;
  where?: InputMaybe<Skill_Category_Bool_Exp>;
};

export type Subscription_RootSkill_Google_GroupArgs = {
  distinct_on?: InputMaybe<Array<Skill_Google_Group_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Skill_Google_Group_Order_By>>;
  where?: InputMaybe<Skill_Google_Group_Bool_Exp>;
};

export type Subscription_RootSkill_Google_Group_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Skill_Google_Group_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Skill_Google_Group_Order_By>>;
  where?: InputMaybe<Skill_Google_Group_Bool_Exp>;
};

export type Subscription_RootSkill_Google_Group_By_PkArgs = {
  googleGroupID: Scalars['String'];
  skillID: Scalars['uuid'];
};

export type Subscription_RootSkill_Google_Group_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Skill_Google_Group_Stream_Cursor_Input>>;
  where?: InputMaybe<Skill_Google_Group_Bool_Exp>;
};

export type Subscription_RootSkill_LevelArgs = {
  distinct_on?: InputMaybe<Array<Skill_Level_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Skill_Level_Order_By>>;
  where?: InputMaybe<Skill_Level_Bool_Exp>;
};

export type Subscription_RootSkill_Level_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Skill_Level_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Skill_Level_Order_By>>;
  where?: InputMaybe<Skill_Level_Bool_Exp>;
};

export type Subscription_RootSkill_Level_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Subscription_RootSkill_Level_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Skill_Level_Stream_Cursor_Input>>;
  where?: InputMaybe<Skill_Level_Bool_Exp>;
};

export type Subscription_RootSkill_Skill_CategoriesArgs = {
  distinct_on?: InputMaybe<Array<Skill_Skill_Categories_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Skill_Skill_Categories_Order_By>>;
  where?: InputMaybe<Skill_Skill_Categories_Bool_Exp>;
};

export type Subscription_RootSkill_Skill_Categories_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Skill_Skill_Categories_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Skill_Skill_Categories_Order_By>>;
  where?: InputMaybe<Skill_Skill_Categories_Bool_Exp>;
};

export type Subscription_RootSkill_Skill_Categories_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Subscription_RootSkill_Skill_Categories_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Skill_Skill_Categories_Stream_Cursor_Input>>;
  where?: InputMaybe<Skill_Skill_Categories_Bool_Exp>;
};

export type Subscription_RootSkill_Slack_ChannelArgs = {
  distinct_on?: InputMaybe<Array<Skill_Slack_Channel_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Skill_Slack_Channel_Order_By>>;
  where?: InputMaybe<Skill_Slack_Channel_Bool_Exp>;
};

export type Subscription_RootSkill_Slack_Channel_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Skill_Slack_Channel_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Skill_Slack_Channel_Order_By>>;
  where?: InputMaybe<Skill_Slack_Channel_Bool_Exp>;
};

export type Subscription_RootSkill_Slack_Channel_By_PkArgs = {
  skillID: Scalars['uuid'];
  slackChannelID: Scalars['String'];
};

export type Subscription_RootSkill_Slack_Channel_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Skill_Slack_Channel_Stream_Cursor_Input>>;
  where?: InputMaybe<Skill_Slack_Channel_Bool_Exp>;
};

export type Subscription_RootSkill_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Skill_Stream_Cursor_Input>>;
  where?: InputMaybe<Skill_Bool_Exp>;
};

export type Subscription_RootSlack_AnswerArgs = {
  distinct_on?: InputMaybe<Array<Slack_Answer_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Slack_Answer_Order_By>>;
  where?: InputMaybe<Slack_Answer_Bool_Exp>;
};

export type Subscription_RootSlack_Answer_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Slack_Answer_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Slack_Answer_Order_By>>;
  where?: InputMaybe<Slack_Answer_Bool_Exp>;
};

export type Subscription_RootSlack_Answer_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Subscription_RootSlack_Answer_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Slack_Answer_Stream_Cursor_Input>>;
  where?: InputMaybe<Slack_Answer_Bool_Exp>;
};

export type Subscription_RootSlack_AvailabilityArgs = {
  distinct_on?: InputMaybe<Array<Slack_Availability_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Slack_Availability_Order_By>>;
  where?: InputMaybe<Slack_Availability_Bool_Exp>;
};

export type Subscription_RootSlack_Availability_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Slack_Availability_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Slack_Availability_Order_By>>;
  where?: InputMaybe<Slack_Availability_Bool_Exp>;
};

export type Subscription_RootSlack_Availability_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Slack_Availability_Stream_Cursor_Input>>;
  where?: InputMaybe<Slack_Availability_Bool_Exp>;
};

export type Subscription_RootSlack_Birthday_And_Anniversary_MessageArgs = {
  distinct_on?: InputMaybe<Array<Slack_Birthday_And_Anniversary_Message_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Slack_Birthday_And_Anniversary_Message_Order_By>>;
  where?: InputMaybe<Slack_Birthday_And_Anniversary_Message_Bool_Exp>;
};

export type Subscription_RootSlack_Birthday_And_Anniversary_Message_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Slack_Birthday_And_Anniversary_Message_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Slack_Birthday_And_Anniversary_Message_Order_By>>;
  where?: InputMaybe<Slack_Birthday_And_Anniversary_Message_Bool_Exp>;
};

export type Subscription_RootSlack_Birthday_And_Anniversary_Message_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Subscription_RootSlack_Birthday_And_Anniversary_Message_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Slack_Birthday_And_Anniversary_Message_Stream_Cursor_Input>>;
  where?: InputMaybe<Slack_Birthday_And_Anniversary_Message_Bool_Exp>;
};

export type Subscription_RootSlack_MessageArgs = {
  distinct_on?: InputMaybe<Array<Slack_Message_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Slack_Message_Order_By>>;
  where?: InputMaybe<Slack_Message_Bool_Exp>;
};

export type Subscription_RootSlack_Message_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Slack_Message_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Slack_Message_Order_By>>;
  where?: InputMaybe<Slack_Message_Bool_Exp>;
};

export type Subscription_RootSlack_Message_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Subscription_RootSlack_Message_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Slack_Message_Stream_Cursor_Input>>;
  where?: InputMaybe<Slack_Message_Bool_Exp>;
};

export type Subscription_RootSlack_Message_Trigger_LogArgs = {
  distinct_on?: InputMaybe<Array<Slack_Message_Trigger_Log_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Slack_Message_Trigger_Log_Order_By>>;
  where?: InputMaybe<Slack_Message_Trigger_Log_Bool_Exp>;
};

export type Subscription_RootSlack_Message_Trigger_Log_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Slack_Message_Trigger_Log_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Slack_Message_Trigger_Log_Order_By>>;
  where?: InputMaybe<Slack_Message_Trigger_Log_Bool_Exp>;
};

export type Subscription_RootSlack_Message_Trigger_Log_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Subscription_RootSlack_Message_Trigger_Log_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Slack_Message_Trigger_Log_Stream_Cursor_Input>>;
  where?: InputMaybe<Slack_Message_Trigger_Log_Bool_Exp>;
};

export type Subscription_RootSlack_OutreachArgs = {
  distinct_on?: InputMaybe<Array<Slack_Outreach_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Slack_Outreach_Order_By>>;
  where?: InputMaybe<Slack_Outreach_Bool_Exp>;
};

export type Subscription_RootSlack_Outreach_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Slack_Outreach_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Slack_Outreach_Order_By>>;
  where?: InputMaybe<Slack_Outreach_Bool_Exp>;
};

export type Subscription_RootSlack_Outreach_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Subscription_RootSlack_Outreach_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Slack_Outreach_Stream_Cursor_Input>>;
  where?: InputMaybe<Slack_Outreach_Bool_Exp>;
};

export type Subscription_RootTeamArgs = {
  distinct_on?: InputMaybe<Array<Team_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Team_Order_By>>;
  where?: InputMaybe<Team_Bool_Exp>;
};

export type Subscription_RootTeam_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Team_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Team_Order_By>>;
  where?: InputMaybe<Team_Bool_Exp>;
};

export type Subscription_RootTeam_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Subscription_RootTeam_Google_GroupArgs = {
  distinct_on?: InputMaybe<Array<Team_Google_Group_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Team_Google_Group_Order_By>>;
  where?: InputMaybe<Team_Google_Group_Bool_Exp>;
};

export type Subscription_RootTeam_Google_Group_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Team_Google_Group_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Team_Google_Group_Order_By>>;
  where?: InputMaybe<Team_Google_Group_Bool_Exp>;
};

export type Subscription_RootTeam_Google_Group_By_PkArgs = {
  googleGroupID: Scalars['String'];
  teamID: Scalars['uuid'];
};

export type Subscription_RootTeam_Google_Group_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Team_Google_Group_Stream_Cursor_Input>>;
  where?: InputMaybe<Team_Google_Group_Bool_Exp>;
};

export type Subscription_RootTeam_IndustryArgs = {
  distinct_on?: InputMaybe<Array<Team_Industry_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Team_Industry_Order_By>>;
  where?: InputMaybe<Team_Industry_Bool_Exp>;
};

export type Subscription_RootTeam_Industry_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Team_Industry_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Team_Industry_Order_By>>;
  where?: InputMaybe<Team_Industry_Bool_Exp>;
};

export type Subscription_RootTeam_Industry_By_PkArgs = {
  industryID: Scalars['uuid'];
  teamID: Scalars['uuid'];
};

export type Subscription_RootTeam_Industry_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Team_Industry_Stream_Cursor_Input>>;
  where?: InputMaybe<Team_Industry_Bool_Exp>;
};

export type Subscription_RootTeam_SkillArgs = {
  distinct_on?: InputMaybe<Array<Team_Skill_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Team_Skill_Order_By>>;
  where?: InputMaybe<Team_Skill_Bool_Exp>;
};

export type Subscription_RootTeam_Skill_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Team_Skill_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Team_Skill_Order_By>>;
  where?: InputMaybe<Team_Skill_Bool_Exp>;
};

export type Subscription_RootTeam_Skill_By_PkArgs = {
  skillID: Scalars['uuid'];
  teamID: Scalars['uuid'];
};

export type Subscription_RootTeam_Skill_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Team_Skill_Stream_Cursor_Input>>;
  where?: InputMaybe<Team_Skill_Bool_Exp>;
};

export type Subscription_RootTeam_Slack_ChannelArgs = {
  distinct_on?: InputMaybe<Array<Team_Slack_Channel_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Team_Slack_Channel_Order_By>>;
  where?: InputMaybe<Team_Slack_Channel_Bool_Exp>;
};

export type Subscription_RootTeam_Slack_Channel_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Team_Slack_Channel_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Team_Slack_Channel_Order_By>>;
  where?: InputMaybe<Team_Slack_Channel_Bool_Exp>;
};

export type Subscription_RootTeam_Slack_Channel_By_PkArgs = {
  slackChannelID: Scalars['String'];
  teamID: Scalars['uuid'];
};

export type Subscription_RootTeam_Slack_Channel_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Team_Slack_Channel_Stream_Cursor_Input>>;
  where?: InputMaybe<Team_Slack_Channel_Bool_Exp>;
};

export type Subscription_RootTeam_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Team_Stream_Cursor_Input>>;
  where?: InputMaybe<Team_Bool_Exp>;
};

export type Subscription_RootTime_And_Material_Invoice_Line_ItemArgs = {
  distinct_on?: InputMaybe<Array<Time_And_Material_Invoice_Line_Item_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Time_And_Material_Invoice_Line_Item_Order_By>>;
  where?: InputMaybe<Time_And_Material_Invoice_Line_Item_Bool_Exp>;
};

export type Subscription_RootTime_And_Material_Invoice_Line_Item_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Time_And_Material_Invoice_Line_Item_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Time_And_Material_Invoice_Line_Item_Order_By>>;
  where?: InputMaybe<Time_And_Material_Invoice_Line_Item_Bool_Exp>;
};

export type Subscription_RootTime_And_Material_Invoice_Line_Item_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Subscription_RootTime_And_Material_Invoice_Line_Item_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Time_And_Material_Invoice_Line_Item_Stream_Cursor_Input>>;
  where?: InputMaybe<Time_And_Material_Invoice_Line_Item_Bool_Exp>;
};

export type Subscription_RootToolArgs = {
  distinct_on?: InputMaybe<Array<Tool_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Tool_Order_By>>;
  where?: InputMaybe<Tool_Bool_Exp>;
};

export type Subscription_RootTool_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Tool_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Tool_Order_By>>;
  where?: InputMaybe<Tool_Bool_Exp>;
};

export type Subscription_RootTool_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Subscription_RootTool_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Tool_Stream_Cursor_Input>>;
  where?: InputMaybe<Tool_Bool_Exp>;
};

export type Subscription_RootTriggerArgs = {
  distinct_on?: InputMaybe<Array<Trigger_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Trigger_Order_By>>;
  where?: InputMaybe<Trigger_Bool_Exp>;
};

export type Subscription_RootTrigger_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Trigger_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Trigger_Order_By>>;
  where?: InputMaybe<Trigger_Bool_Exp>;
};

export type Subscription_RootTrigger_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Subscription_RootTrigger_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Trigger_Stream_Cursor_Input>>;
  where?: InputMaybe<Trigger_Bool_Exp>;
};

export type Subscription_RootUser_Basic_InformationArgs = {
  distinct_on?: InputMaybe<Array<User_Basic_Information_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Basic_Information_Order_By>>;
  where?: InputMaybe<User_Basic_Information_Bool_Exp>;
};

export type Subscription_RootUser_Basic_Information_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Basic_Information_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Basic_Information_Order_By>>;
  where?: InputMaybe<User_Basic_Information_Bool_Exp>;
};

export type Subscription_RootUser_Basic_Information_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Subscription_RootUser_Basic_Information_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<User_Basic_Information_Stream_Cursor_Input>>;
  where?: InputMaybe<User_Basic_Information_Bool_Exp>;
};

export type Subscription_RootUser_CompanyArgs = {
  distinct_on?: InputMaybe<Array<User_Company_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Company_Order_By>>;
  where?: InputMaybe<User_Company_Bool_Exp>;
};

export type Subscription_RootUser_Company_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Company_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Company_Order_By>>;
  where?: InputMaybe<User_Company_Bool_Exp>;
};

export type Subscription_RootUser_Company_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Subscription_RootUser_Company_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<User_Company_Stream_Cursor_Input>>;
  where?: InputMaybe<User_Company_Bool_Exp>;
};

export type Subscription_RootUser_Completed_Customer_SaleArgs = {
  distinct_on?: InputMaybe<Array<User_Completed_Customer_Sale_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Completed_Customer_Sale_Order_By>>;
  where?: InputMaybe<User_Completed_Customer_Sale_Bool_Exp>;
};

export type Subscription_RootUser_Completed_Customer_Sale_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Completed_Customer_Sale_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Completed_Customer_Sale_Order_By>>;
  where?: InputMaybe<User_Completed_Customer_Sale_Bool_Exp>;
};

export type Subscription_RootUser_Completed_Customer_Sale_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Subscription_RootUser_Completed_Customer_Sale_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<User_Completed_Customer_Sale_Stream_Cursor_Input>>;
  where?: InputMaybe<User_Completed_Customer_Sale_Bool_Exp>;
};

export type Subscription_RootUser_In_Market_ExperienceArgs = {
  distinct_on?: InputMaybe<Array<User_In_Market_Experience_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_In_Market_Experience_Order_By>>;
  where?: InputMaybe<User_In_Market_Experience_Bool_Exp>;
};

export type Subscription_RootUser_In_Market_Experience_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_In_Market_Experience_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_In_Market_Experience_Order_By>>;
  where?: InputMaybe<User_In_Market_Experience_Bool_Exp>;
};

export type Subscription_RootUser_In_Market_Experience_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Subscription_RootUser_In_Market_Experience_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<User_In_Market_Experience_Stream_Cursor_Input>>;
  where?: InputMaybe<User_In_Market_Experience_Bool_Exp>;
};

export type Subscription_RootUser_Industry_ExperienceArgs = {
  distinct_on?: InputMaybe<Array<User_Industry_Experience_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Industry_Experience_Order_By>>;
  where?: InputMaybe<User_Industry_Experience_Bool_Exp>;
};

export type Subscription_RootUser_Industry_Experience_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Industry_Experience_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Industry_Experience_Order_By>>;
  where?: InputMaybe<User_Industry_Experience_Bool_Exp>;
};

export type Subscription_RootUser_Industry_Experience_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Subscription_RootUser_Industry_Experience_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<User_Industry_Experience_Stream_Cursor_Input>>;
  where?: InputMaybe<User_Industry_Experience_Bool_Exp>;
};

export type Subscription_RootUser_LanguageArgs = {
  distinct_on?: InputMaybe<Array<User_Language_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Language_Order_By>>;
  where?: InputMaybe<User_Language_Bool_Exp>;
};

export type Subscription_RootUser_Language_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Language_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Language_Order_By>>;
  where?: InputMaybe<User_Language_Bool_Exp>;
};

export type Subscription_RootUser_Language_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Subscription_RootUser_Language_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<User_Language_Stream_Cursor_Input>>;
  where?: InputMaybe<User_Language_Bool_Exp>;
};

export type Subscription_RootUser_MetaArgs = {
  distinct_on?: InputMaybe<Array<User_Meta_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Meta_Order_By>>;
  where?: InputMaybe<User_Meta_Bool_Exp>;
};

export type Subscription_RootUser_Meta_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Meta_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Meta_Order_By>>;
  where?: InputMaybe<User_Meta_Bool_Exp>;
};

export type Subscription_RootUser_Meta_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Subscription_RootUser_Meta_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<User_Meta_Stream_Cursor_Input>>;
  where?: InputMaybe<User_Meta_Bool_Exp>;
};

export type Subscription_RootUser_Meta_User_RoleArgs = {
  distinct_on?: InputMaybe<Array<User_Meta_User_Role_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Meta_User_Role_Order_By>>;
  where?: InputMaybe<User_Meta_User_Role_Bool_Exp>;
};

export type Subscription_RootUser_Meta_User_Role_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Meta_User_Role_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Meta_User_Role_Order_By>>;
  where?: InputMaybe<User_Meta_User_Role_Bool_Exp>;
};

export type Subscription_RootUser_Meta_User_Role_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Subscription_RootUser_Meta_User_Role_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<User_Meta_User_Role_Stream_Cursor_Input>>;
  where?: InputMaybe<User_Meta_User_Role_Bool_Exp>;
};

export type Subscription_RootUser_Professional_InformationArgs = {
  distinct_on?: InputMaybe<Array<User_Professional_Information_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Professional_Information_Order_By>>;
  where?: InputMaybe<User_Professional_Information_Bool_Exp>;
};

export type Subscription_RootUser_Professional_Information_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Professional_Information_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Professional_Information_Order_By>>;
  where?: InputMaybe<User_Professional_Information_Bool_Exp>;
};

export type Subscription_RootUser_Professional_Information_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Subscription_RootUser_Professional_Information_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<User_Professional_Information_Stream_Cursor_Input>>;
  where?: InputMaybe<User_Professional_Information_Bool_Exp>;
};

export type Subscription_RootUser_ProfileArgs = {
  distinct_on?: InputMaybe<Array<User_Profile_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Profile_Order_By>>;
  where?: InputMaybe<User_Profile_Bool_Exp>;
};

export type Subscription_RootUser_Profile_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Profile_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Profile_Order_By>>;
  where?: InputMaybe<User_Profile_Bool_Exp>;
};

export type Subscription_RootUser_Profile_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Subscription_RootUser_Profile_CompanyArgs = {
  distinct_on?: InputMaybe<Array<User_Profile_Company_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Profile_Company_Order_By>>;
  where?: InputMaybe<User_Profile_Company_Bool_Exp>;
};

export type Subscription_RootUser_Profile_Company_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Profile_Company_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Profile_Company_Order_By>>;
  where?: InputMaybe<User_Profile_Company_Bool_Exp>;
};

export type Subscription_RootUser_Profile_Company_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Subscription_RootUser_Profile_Company_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<User_Profile_Company_Stream_Cursor_Input>>;
  where?: InputMaybe<User_Profile_Company_Bool_Exp>;
};

export type Subscription_RootUser_Profile_IndustryArgs = {
  distinct_on?: InputMaybe<Array<User_Profile_Industry_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Profile_Industry_Order_By>>;
  where?: InputMaybe<User_Profile_Industry_Bool_Exp>;
};

export type Subscription_RootUser_Profile_Industry_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Profile_Industry_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Profile_Industry_Order_By>>;
  where?: InputMaybe<User_Profile_Industry_Bool_Exp>;
};

export type Subscription_RootUser_Profile_Industry_By_PkArgs = {
  industryID: Scalars['uuid'];
  userProfileID: Scalars['uuid'];
};

export type Subscription_RootUser_Profile_Industry_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<User_Profile_Industry_Stream_Cursor_Input>>;
  where?: InputMaybe<User_Profile_Industry_Bool_Exp>;
};

export type Subscription_RootUser_Profile_SkillArgs = {
  distinct_on?: InputMaybe<Array<User_Profile_Skill_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Profile_Skill_Order_By>>;
  where?: InputMaybe<User_Profile_Skill_Bool_Exp>;
};

export type Subscription_RootUser_Profile_Skill_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Profile_Skill_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Profile_Skill_Order_By>>;
  where?: InputMaybe<User_Profile_Skill_Bool_Exp>;
};

export type Subscription_RootUser_Profile_Skill_By_PkArgs = {
  skillID: Scalars['uuid'];
  userProfileID: Scalars['uuid'];
};

export type Subscription_RootUser_Profile_Skill_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<User_Profile_Skill_Stream_Cursor_Input>>;
  where?: InputMaybe<User_Profile_Skill_Bool_Exp>;
};

export type Subscription_RootUser_Profile_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<User_Profile_Stream_Cursor_Input>>;
  where?: InputMaybe<User_Profile_Bool_Exp>;
};

export type Subscription_RootUser_Profile_TabArgs = {
  distinct_on?: InputMaybe<Array<User_Profile_Tab_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Profile_Tab_Order_By>>;
  where?: InputMaybe<User_Profile_Tab_Bool_Exp>;
};

export type Subscription_RootUser_Profile_Tab_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Profile_Tab_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Profile_Tab_Order_By>>;
  where?: InputMaybe<User_Profile_Tab_Bool_Exp>;
};

export type Subscription_RootUser_Profile_Tab_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Subscription_RootUser_Profile_Tab_EndpointArgs = {
  distinct_on?: InputMaybe<Array<User_Profile_Tab_Endpoint_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Profile_Tab_Endpoint_Order_By>>;
  where?: InputMaybe<User_Profile_Tab_Endpoint_Bool_Exp>;
};

export type Subscription_RootUser_Profile_Tab_Endpoint_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Profile_Tab_Endpoint_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Profile_Tab_Endpoint_Order_By>>;
  where?: InputMaybe<User_Profile_Tab_Endpoint_Bool_Exp>;
};

export type Subscription_RootUser_Profile_Tab_Endpoint_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Subscription_RootUser_Profile_Tab_Endpoint_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<User_Profile_Tab_Endpoint_Stream_Cursor_Input>>;
  where?: InputMaybe<User_Profile_Tab_Endpoint_Bool_Exp>;
};

export type Subscription_RootUser_Profile_Tab_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<User_Profile_Tab_Stream_Cursor_Input>>;
  where?: InputMaybe<User_Profile_Tab_Bool_Exp>;
};

export type Subscription_RootUser_Profile_TeamArgs = {
  distinct_on?: InputMaybe<Array<User_Profile_Team_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Profile_Team_Order_By>>;
  where?: InputMaybe<User_Profile_Team_Bool_Exp>;
};

export type Subscription_RootUser_Profile_Team_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Profile_Team_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Profile_Team_Order_By>>;
  where?: InputMaybe<User_Profile_Team_Bool_Exp>;
};

export type Subscription_RootUser_Profile_Team_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Subscription_RootUser_Profile_Team_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<User_Profile_Team_Stream_Cursor_Input>>;
  where?: InputMaybe<User_Profile_Team_Bool_Exp>;
};

export type Subscription_RootUser_Profile_VisibilityArgs = {
  distinct_on?: InputMaybe<Array<User_Profile_Visibility_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Profile_Visibility_Order_By>>;
  where?: InputMaybe<User_Profile_Visibility_Bool_Exp>;
};

export type Subscription_RootUser_Profile_Visibility_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Profile_Visibility_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Profile_Visibility_Order_By>>;
  where?: InputMaybe<User_Profile_Visibility_Bool_Exp>;
};

export type Subscription_RootUser_Profile_Visibility_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Subscription_RootUser_Profile_Visibility_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<User_Profile_Visibility_Stream_Cursor_Input>>;
  where?: InputMaybe<User_Profile_Visibility_Bool_Exp>;
};

export type Subscription_RootUser_RoleArgs = {
  distinct_on?: InputMaybe<Array<User_Role_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Role_Order_By>>;
  where?: InputMaybe<User_Role_Bool_Exp>;
};

export type Subscription_RootUser_Role_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Role_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Role_Order_By>>;
  where?: InputMaybe<User_Role_Bool_Exp>;
};

export type Subscription_RootUser_Role_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Subscription_RootUser_Role_CapabilityArgs = {
  distinct_on?: InputMaybe<Array<User_Role_Capability_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Role_Capability_Order_By>>;
  where?: InputMaybe<User_Role_Capability_Bool_Exp>;
};

export type Subscription_RootUser_Role_Capability_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Role_Capability_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Role_Capability_Order_By>>;
  where?: InputMaybe<User_Role_Capability_Bool_Exp>;
};

export type Subscription_RootUser_Role_Capability_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Subscription_RootUser_Role_Capability_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<User_Role_Capability_Stream_Cursor_Input>>;
  where?: InputMaybe<User_Role_Capability_Bool_Exp>;
};

export type Subscription_RootUser_Role_RouteArgs = {
  distinct_on?: InputMaybe<Array<User_Role_Route_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Role_Route_Order_By>>;
  where?: InputMaybe<User_Role_Route_Bool_Exp>;
};

export type Subscription_RootUser_Role_Route_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Role_Route_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Role_Route_Order_By>>;
  where?: InputMaybe<User_Role_Route_Bool_Exp>;
};

export type Subscription_RootUser_Role_Route_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Subscription_RootUser_Role_Route_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<User_Role_Route_Stream_Cursor_Input>>;
  where?: InputMaybe<User_Role_Route_Bool_Exp>;
};

export type Subscription_RootUser_Role_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<User_Role_Stream_Cursor_Input>>;
  where?: InputMaybe<User_Role_Bool_Exp>;
};

export type Subscription_RootUser_Role_User_Profile_TabArgs = {
  distinct_on?: InputMaybe<Array<User_Role_User_Profile_Tab_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Role_User_Profile_Tab_Order_By>>;
  where?: InputMaybe<User_Role_User_Profile_Tab_Bool_Exp>;
};

export type Subscription_RootUser_Role_User_Profile_Tab_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Role_User_Profile_Tab_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Role_User_Profile_Tab_Order_By>>;
  where?: InputMaybe<User_Role_User_Profile_Tab_Bool_Exp>;
};

export type Subscription_RootUser_Role_User_Profile_Tab_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Subscription_RootUser_Role_User_Profile_Tab_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<User_Role_User_Profile_Tab_Stream_Cursor_Input>>;
  where?: InputMaybe<User_Role_User_Profile_Tab_Bool_Exp>;
};

export type Subscription_RootUser_SkillArgs = {
  distinct_on?: InputMaybe<Array<User_Skill_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Skill_Order_By>>;
  where?: InputMaybe<User_Skill_Bool_Exp>;
};

export type Subscription_RootUser_Skill_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Skill_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Skill_Order_By>>;
  where?: InputMaybe<User_Skill_Bool_Exp>;
};

export type Subscription_RootUser_Skill_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Subscription_RootUser_Skill_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<User_Skill_Stream_Cursor_Input>>;
  where?: InputMaybe<User_Skill_Bool_Exp>;
};

export type Subscription_RootUser_Work_ExperienceArgs = {
  distinct_on?: InputMaybe<Array<User_Work_Experience_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Work_Experience_Order_By>>;
  where?: InputMaybe<User_Work_Experience_Bool_Exp>;
};

export type Subscription_RootUser_Work_Experience_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Work_Experience_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Work_Experience_Order_By>>;
  where?: InputMaybe<User_Work_Experience_Bool_Exp>;
};

export type Subscription_RootUser_Work_Experience_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Subscription_RootUser_Work_Experience_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<User_Work_Experience_Stream_Cursor_Input>>;
  where?: InputMaybe<User_Work_Experience_Bool_Exp>;
};

export type Subscription_RootWebhookArgs = {
  distinct_on?: InputMaybe<Array<Webhook_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Webhook_Order_By>>;
  where?: InputMaybe<Webhook_Bool_Exp>;
};

export type Subscription_RootWebhook_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Webhook_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Webhook_Order_By>>;
  where?: InputMaybe<Webhook_Bool_Exp>;
};

export type Subscription_RootWebhook_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Subscription_RootWebhook_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Webhook_Stream_Cursor_Input>>;
  where?: InputMaybe<Webhook_Bool_Exp>;
};

export type Subscription_RootWebhook_TriggerArgs = {
  distinct_on?: InputMaybe<Array<Webhook_Trigger_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Webhook_Trigger_Order_By>>;
  where?: InputMaybe<Webhook_Trigger_Bool_Exp>;
};

export type Subscription_RootWebhook_Trigger_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Webhook_Trigger_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Webhook_Trigger_Order_By>>;
  where?: InputMaybe<Webhook_Trigger_Bool_Exp>;
};

export type Subscription_RootWebhook_Trigger_By_PkArgs = {
  id: Scalars['uuid'];
};

export type Subscription_RootWebhook_Trigger_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Webhook_Trigger_Stream_Cursor_Input>>;
  where?: InputMaybe<Webhook_Trigger_Bool_Exp>;
};

/** columns and relationships of "team" */
export type Team = {
  __typename?: 'team';
  /** An array relationship */
  case_study_teams: Array<Case_Study_Team>;
  /** An aggregate relationship */
  case_study_teams_aggregate: Case_Study_Team_Aggregate;
  description?: Maybe<Scalars['String']>;
  googleGroupIds?: Maybe<Scalars['String']>;
  id: Scalars['uuid'];
  isPrivate: Scalars['Boolean'];
  name: Scalars['String'];
  slackChannelIds?: Maybe<Scalars['String']>;
  /** An array relationship */
  team_google_groups: Array<Team_Google_Group>;
  /** An aggregate relationship */
  team_google_groups_aggregate: Team_Google_Group_Aggregate;
  /** An array relationship */
  team_industries: Array<Team_Industry>;
  /** An aggregate relationship */
  team_industries_aggregate: Team_Industry_Aggregate;
  /** An array relationship */
  team_skills: Array<Team_Skill>;
  /** An aggregate relationship */
  team_skills_aggregate: Team_Skill_Aggregate;
  /** An array relationship */
  team_slack_channels: Array<Team_Slack_Channel>;
  /** An aggregate relationship */
  team_slack_channels_aggregate: Team_Slack_Channel_Aggregate;
  /** An array relationship */
  user_profile_teams: Array<User_Profile_Team>;
  /** An aggregate relationship */
  user_profile_teams_aggregate: User_Profile_Team_Aggregate;
};

/** columns and relationships of "team" */
export type TeamCase_Study_TeamsArgs = {
  distinct_on?: InputMaybe<Array<Case_Study_Team_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Case_Study_Team_Order_By>>;
  where?: InputMaybe<Case_Study_Team_Bool_Exp>;
};

/** columns and relationships of "team" */
export type TeamCase_Study_Teams_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Case_Study_Team_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Case_Study_Team_Order_By>>;
  where?: InputMaybe<Case_Study_Team_Bool_Exp>;
};

/** columns and relationships of "team" */
export type TeamTeam_Google_GroupsArgs = {
  distinct_on?: InputMaybe<Array<Team_Google_Group_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Team_Google_Group_Order_By>>;
  where?: InputMaybe<Team_Google_Group_Bool_Exp>;
};

/** columns and relationships of "team" */
export type TeamTeam_Google_Groups_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Team_Google_Group_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Team_Google_Group_Order_By>>;
  where?: InputMaybe<Team_Google_Group_Bool_Exp>;
};

/** columns and relationships of "team" */
export type TeamTeam_IndustriesArgs = {
  distinct_on?: InputMaybe<Array<Team_Industry_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Team_Industry_Order_By>>;
  where?: InputMaybe<Team_Industry_Bool_Exp>;
};

/** columns and relationships of "team" */
export type TeamTeam_Industries_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Team_Industry_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Team_Industry_Order_By>>;
  where?: InputMaybe<Team_Industry_Bool_Exp>;
};

/** columns and relationships of "team" */
export type TeamTeam_SkillsArgs = {
  distinct_on?: InputMaybe<Array<Team_Skill_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Team_Skill_Order_By>>;
  where?: InputMaybe<Team_Skill_Bool_Exp>;
};

/** columns and relationships of "team" */
export type TeamTeam_Skills_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Team_Skill_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Team_Skill_Order_By>>;
  where?: InputMaybe<Team_Skill_Bool_Exp>;
};

/** columns and relationships of "team" */
export type TeamTeam_Slack_ChannelsArgs = {
  distinct_on?: InputMaybe<Array<Team_Slack_Channel_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Team_Slack_Channel_Order_By>>;
  where?: InputMaybe<Team_Slack_Channel_Bool_Exp>;
};

/** columns and relationships of "team" */
export type TeamTeam_Slack_Channels_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Team_Slack_Channel_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Team_Slack_Channel_Order_By>>;
  where?: InputMaybe<Team_Slack_Channel_Bool_Exp>;
};

/** columns and relationships of "team" */
export type TeamUser_Profile_TeamsArgs = {
  distinct_on?: InputMaybe<Array<User_Profile_Team_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Profile_Team_Order_By>>;
  where?: InputMaybe<User_Profile_Team_Bool_Exp>;
};

/** columns and relationships of "team" */
export type TeamUser_Profile_Teams_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Profile_Team_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Profile_Team_Order_By>>;
  where?: InputMaybe<User_Profile_Team_Bool_Exp>;
};

/** aggregated selection of "team" */
export type Team_Aggregate = {
  __typename?: 'team_aggregate';
  aggregate?: Maybe<Team_Aggregate_Fields>;
  nodes: Array<Team>;
};

/** aggregate fields of "team" */
export type Team_Aggregate_Fields = {
  __typename?: 'team_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<Team_Max_Fields>;
  min?: Maybe<Team_Min_Fields>;
};

/** aggregate fields of "team" */
export type Team_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Team_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** Boolean expression to filter rows from the table "team". All fields are combined with a logical 'AND'. */
export type Team_Bool_Exp = {
  _and?: InputMaybe<Array<Team_Bool_Exp>>;
  _not?: InputMaybe<Team_Bool_Exp>;
  _or?: InputMaybe<Array<Team_Bool_Exp>>;
  case_study_teams?: InputMaybe<Case_Study_Team_Bool_Exp>;
  description?: InputMaybe<String_Comparison_Exp>;
  googleGroupIds?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  isPrivate?: InputMaybe<Boolean_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  slackChannelIds?: InputMaybe<String_Comparison_Exp>;
  team_google_groups?: InputMaybe<Team_Google_Group_Bool_Exp>;
  team_industries?: InputMaybe<Team_Industry_Bool_Exp>;
  team_skills?: InputMaybe<Team_Skill_Bool_Exp>;
  team_slack_channels?: InputMaybe<Team_Slack_Channel_Bool_Exp>;
  user_profile_teams?: InputMaybe<User_Profile_Team_Bool_Exp>;
};

/** unique or primary key constraints on table "team" */
export enum Team_Constraint {
  /** unique or primary key constraint on columns "name" */
  TeamNameKey = 'team_name_key',
  /** unique or primary key constraint on columns "id" */
  TeamPkey = 'team_pkey',
}

/** columns and relationships of "team_google_group" */
export type Team_Google_Group = {
  __typename?: 'team_google_group';
  googleGroupID: Scalars['String'];
  /** An object relationship */
  team: Team;
  teamID: Scalars['uuid'];
};

/** aggregated selection of "team_google_group" */
export type Team_Google_Group_Aggregate = {
  __typename?: 'team_google_group_aggregate';
  aggregate?: Maybe<Team_Google_Group_Aggregate_Fields>;
  nodes: Array<Team_Google_Group>;
};

/** aggregate fields of "team_google_group" */
export type Team_Google_Group_Aggregate_Fields = {
  __typename?: 'team_google_group_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<Team_Google_Group_Max_Fields>;
  min?: Maybe<Team_Google_Group_Min_Fields>;
};

/** aggregate fields of "team_google_group" */
export type Team_Google_Group_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Team_Google_Group_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "team_google_group" */
export type Team_Google_Group_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Team_Google_Group_Max_Order_By>;
  min?: InputMaybe<Team_Google_Group_Min_Order_By>;
};

/** input type for inserting array relation for remote table "team_google_group" */
export type Team_Google_Group_Arr_Rel_Insert_Input = {
  data: Array<Team_Google_Group_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Team_Google_Group_On_Conflict>;
};

/** Boolean expression to filter rows from the table "team_google_group". All fields are combined with a logical 'AND'. */
export type Team_Google_Group_Bool_Exp = {
  _and?: InputMaybe<Array<Team_Google_Group_Bool_Exp>>;
  _not?: InputMaybe<Team_Google_Group_Bool_Exp>;
  _or?: InputMaybe<Array<Team_Google_Group_Bool_Exp>>;
  googleGroupID?: InputMaybe<String_Comparison_Exp>;
  team?: InputMaybe<Team_Bool_Exp>;
  teamID?: InputMaybe<Uuid_Comparison_Exp>;
};

/** unique or primary key constraints on table "team_google_group" */
export enum Team_Google_Group_Constraint {
  /** unique or primary key constraint on columns "teamID", "googleGroupID" */
  TeamGoogleGroupPkey = 'team_google_group_pkey',
}

/** input type for inserting data into table "team_google_group" */
export type Team_Google_Group_Insert_Input = {
  googleGroupID?: InputMaybe<Scalars['String']>;
  team?: InputMaybe<Team_Obj_Rel_Insert_Input>;
  teamID?: InputMaybe<Scalars['uuid']>;
};

/** aggregate max on columns */
export type Team_Google_Group_Max_Fields = {
  __typename?: 'team_google_group_max_fields';
  googleGroupID?: Maybe<Scalars['String']>;
  teamID?: Maybe<Scalars['uuid']>;
};

/** order by max() on columns of table "team_google_group" */
export type Team_Google_Group_Max_Order_By = {
  googleGroupID?: InputMaybe<Order_By>;
  teamID?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Team_Google_Group_Min_Fields = {
  __typename?: 'team_google_group_min_fields';
  googleGroupID?: Maybe<Scalars['String']>;
  teamID?: Maybe<Scalars['uuid']>;
};

/** order by min() on columns of table "team_google_group" */
export type Team_Google_Group_Min_Order_By = {
  googleGroupID?: InputMaybe<Order_By>;
  teamID?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "team_google_group" */
export type Team_Google_Group_Mutation_Response = {
  __typename?: 'team_google_group_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Team_Google_Group>;
};

/** on_conflict condition type for table "team_google_group" */
export type Team_Google_Group_On_Conflict = {
  constraint: Team_Google_Group_Constraint;
  update_columns?: Array<Team_Google_Group_Update_Column>;
  where?: InputMaybe<Team_Google_Group_Bool_Exp>;
};

/** Ordering options when selecting data from "team_google_group". */
export type Team_Google_Group_Order_By = {
  googleGroupID?: InputMaybe<Order_By>;
  team?: InputMaybe<Team_Order_By>;
  teamID?: InputMaybe<Order_By>;
};

/** primary key columns input for table: team_google_group */
export type Team_Google_Group_Pk_Columns_Input = {
  googleGroupID: Scalars['String'];
  teamID: Scalars['uuid'];
};

/** select columns of table "team_google_group" */
export enum Team_Google_Group_Select_Column {
  /** column name */
  GoogleGroupId = 'googleGroupID',
  /** column name */
  TeamId = 'teamID',
}

/** input type for updating data in table "team_google_group" */
export type Team_Google_Group_Set_Input = {
  googleGroupID?: InputMaybe<Scalars['String']>;
  teamID?: InputMaybe<Scalars['uuid']>;
};

/** Streaming cursor of the table "team_google_group" */
export type Team_Google_Group_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Team_Google_Group_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Team_Google_Group_Stream_Cursor_Value_Input = {
  googleGroupID?: InputMaybe<Scalars['String']>;
  teamID?: InputMaybe<Scalars['uuid']>;
};

/** update columns of table "team_google_group" */
export enum Team_Google_Group_Update_Column {
  /** column name */
  GoogleGroupId = 'googleGroupID',
  /** column name */
  TeamId = 'teamID',
}

export type Team_Google_Group_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Team_Google_Group_Set_Input>;
  where: Team_Google_Group_Bool_Exp;
};

/** columns and relationships of "team_industry" */
export type Team_Industry = {
  __typename?: 'team_industry';
  /** An object relationship */
  industry: Industry;
  industryID: Scalars['uuid'];
  /** An object relationship */
  team: Team;
  teamID: Scalars['uuid'];
};

/** aggregated selection of "team_industry" */
export type Team_Industry_Aggregate = {
  __typename?: 'team_industry_aggregate';
  aggregate?: Maybe<Team_Industry_Aggregate_Fields>;
  nodes: Array<Team_Industry>;
};

/** aggregate fields of "team_industry" */
export type Team_Industry_Aggregate_Fields = {
  __typename?: 'team_industry_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<Team_Industry_Max_Fields>;
  min?: Maybe<Team_Industry_Min_Fields>;
};

/** aggregate fields of "team_industry" */
export type Team_Industry_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Team_Industry_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "team_industry" */
export type Team_Industry_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Team_Industry_Max_Order_By>;
  min?: InputMaybe<Team_Industry_Min_Order_By>;
};

/** input type for inserting array relation for remote table "team_industry" */
export type Team_Industry_Arr_Rel_Insert_Input = {
  data: Array<Team_Industry_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Team_Industry_On_Conflict>;
};

/** Boolean expression to filter rows from the table "team_industry". All fields are combined with a logical 'AND'. */
export type Team_Industry_Bool_Exp = {
  _and?: InputMaybe<Array<Team_Industry_Bool_Exp>>;
  _not?: InputMaybe<Team_Industry_Bool_Exp>;
  _or?: InputMaybe<Array<Team_Industry_Bool_Exp>>;
  industry?: InputMaybe<Industry_Bool_Exp>;
  industryID?: InputMaybe<Uuid_Comparison_Exp>;
  team?: InputMaybe<Team_Bool_Exp>;
  teamID?: InputMaybe<Uuid_Comparison_Exp>;
};

/** unique or primary key constraints on table "team_industry" */
export enum Team_Industry_Constraint {
  /** unique or primary key constraint on columns "teamID", "industryID" */
  TeamIndustryPkey = 'team_industry_pkey',
}

/** input type for inserting data into table "team_industry" */
export type Team_Industry_Insert_Input = {
  industry?: InputMaybe<Industry_Obj_Rel_Insert_Input>;
  industryID?: InputMaybe<Scalars['uuid']>;
  team?: InputMaybe<Team_Obj_Rel_Insert_Input>;
  teamID?: InputMaybe<Scalars['uuid']>;
};

/** aggregate max on columns */
export type Team_Industry_Max_Fields = {
  __typename?: 'team_industry_max_fields';
  industryID?: Maybe<Scalars['uuid']>;
  teamID?: Maybe<Scalars['uuid']>;
};

/** order by max() on columns of table "team_industry" */
export type Team_Industry_Max_Order_By = {
  industryID?: InputMaybe<Order_By>;
  teamID?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Team_Industry_Min_Fields = {
  __typename?: 'team_industry_min_fields';
  industryID?: Maybe<Scalars['uuid']>;
  teamID?: Maybe<Scalars['uuid']>;
};

/** order by min() on columns of table "team_industry" */
export type Team_Industry_Min_Order_By = {
  industryID?: InputMaybe<Order_By>;
  teamID?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "team_industry" */
export type Team_Industry_Mutation_Response = {
  __typename?: 'team_industry_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Team_Industry>;
};

/** on_conflict condition type for table "team_industry" */
export type Team_Industry_On_Conflict = {
  constraint: Team_Industry_Constraint;
  update_columns?: Array<Team_Industry_Update_Column>;
  where?: InputMaybe<Team_Industry_Bool_Exp>;
};

/** Ordering options when selecting data from "team_industry". */
export type Team_Industry_Order_By = {
  industry?: InputMaybe<Industry_Order_By>;
  industryID?: InputMaybe<Order_By>;
  team?: InputMaybe<Team_Order_By>;
  teamID?: InputMaybe<Order_By>;
};

/** primary key columns input for table: team_industry */
export type Team_Industry_Pk_Columns_Input = {
  industryID: Scalars['uuid'];
  teamID: Scalars['uuid'];
};

/** select columns of table "team_industry" */
export enum Team_Industry_Select_Column {
  /** column name */
  IndustryId = 'industryID',
  /** column name */
  TeamId = 'teamID',
}

/** input type for updating data in table "team_industry" */
export type Team_Industry_Set_Input = {
  industryID?: InputMaybe<Scalars['uuid']>;
  teamID?: InputMaybe<Scalars['uuid']>;
};

/** Streaming cursor of the table "team_industry" */
export type Team_Industry_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Team_Industry_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Team_Industry_Stream_Cursor_Value_Input = {
  industryID?: InputMaybe<Scalars['uuid']>;
  teamID?: InputMaybe<Scalars['uuid']>;
};

/** update columns of table "team_industry" */
export enum Team_Industry_Update_Column {
  /** column name */
  IndustryId = 'industryID',
  /** column name */
  TeamId = 'teamID',
}

export type Team_Industry_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Team_Industry_Set_Input>;
  where: Team_Industry_Bool_Exp;
};

/** input type for inserting data into table "team" */
export type Team_Insert_Input = {
  case_study_teams?: InputMaybe<Case_Study_Team_Arr_Rel_Insert_Input>;
  description?: InputMaybe<Scalars['String']>;
  googleGroupIds?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['uuid']>;
  isPrivate?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  slackChannelIds?: InputMaybe<Scalars['String']>;
  team_google_groups?: InputMaybe<Team_Google_Group_Arr_Rel_Insert_Input>;
  team_industries?: InputMaybe<Team_Industry_Arr_Rel_Insert_Input>;
  team_skills?: InputMaybe<Team_Skill_Arr_Rel_Insert_Input>;
  team_slack_channels?: InputMaybe<Team_Slack_Channel_Arr_Rel_Insert_Input>;
  user_profile_teams?: InputMaybe<User_Profile_Team_Arr_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type Team_Max_Fields = {
  __typename?: 'team_max_fields';
  description?: Maybe<Scalars['String']>;
  googleGroupIds?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
  slackChannelIds?: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type Team_Min_Fields = {
  __typename?: 'team_min_fields';
  description?: Maybe<Scalars['String']>;
  googleGroupIds?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
  slackChannelIds?: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "team" */
export type Team_Mutation_Response = {
  __typename?: 'team_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Team>;
};

/** input type for inserting object relation for remote table "team" */
export type Team_Obj_Rel_Insert_Input = {
  data: Team_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Team_On_Conflict>;
};

/** on_conflict condition type for table "team" */
export type Team_On_Conflict = {
  constraint: Team_Constraint;
  update_columns?: Array<Team_Update_Column>;
  where?: InputMaybe<Team_Bool_Exp>;
};

/** Ordering options when selecting data from "team". */
export type Team_Order_By = {
  case_study_teams_aggregate?: InputMaybe<Case_Study_Team_Aggregate_Order_By>;
  description?: InputMaybe<Order_By>;
  googleGroupIds?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  isPrivate?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  slackChannelIds?: InputMaybe<Order_By>;
  team_google_groups_aggregate?: InputMaybe<Team_Google_Group_Aggregate_Order_By>;
  team_industries_aggregate?: InputMaybe<Team_Industry_Aggregate_Order_By>;
  team_skills_aggregate?: InputMaybe<Team_Skill_Aggregate_Order_By>;
  team_slack_channels_aggregate?: InputMaybe<Team_Slack_Channel_Aggregate_Order_By>;
  user_profile_teams_aggregate?: InputMaybe<User_Profile_Team_Aggregate_Order_By>;
};

/** primary key columns input for table: team */
export type Team_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "team" */
export enum Team_Select_Column {
  /** column name */
  Description = 'description',
  /** column name */
  GoogleGroupIds = 'googleGroupIds',
  /** column name */
  Id = 'id',
  /** column name */
  IsPrivate = 'isPrivate',
  /** column name */
  Name = 'name',
  /** column name */
  SlackChannelIds = 'slackChannelIds',
}

/** input type for updating data in table "team" */
export type Team_Set_Input = {
  description?: InputMaybe<Scalars['String']>;
  googleGroupIds?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['uuid']>;
  isPrivate?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  slackChannelIds?: InputMaybe<Scalars['String']>;
};

/** columns and relationships of "team_skill" */
export type Team_Skill = {
  __typename?: 'team_skill';
  /** An object relationship */
  skill: Skill;
  skillID: Scalars['uuid'];
  /** An object relationship */
  team: Team;
  teamID: Scalars['uuid'];
};

/** aggregated selection of "team_skill" */
export type Team_Skill_Aggregate = {
  __typename?: 'team_skill_aggregate';
  aggregate?: Maybe<Team_Skill_Aggregate_Fields>;
  nodes: Array<Team_Skill>;
};

/** aggregate fields of "team_skill" */
export type Team_Skill_Aggregate_Fields = {
  __typename?: 'team_skill_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<Team_Skill_Max_Fields>;
  min?: Maybe<Team_Skill_Min_Fields>;
};

/** aggregate fields of "team_skill" */
export type Team_Skill_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Team_Skill_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "team_skill" */
export type Team_Skill_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Team_Skill_Max_Order_By>;
  min?: InputMaybe<Team_Skill_Min_Order_By>;
};

/** input type for inserting array relation for remote table "team_skill" */
export type Team_Skill_Arr_Rel_Insert_Input = {
  data: Array<Team_Skill_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Team_Skill_On_Conflict>;
};

/** Boolean expression to filter rows from the table "team_skill". All fields are combined with a logical 'AND'. */
export type Team_Skill_Bool_Exp = {
  _and?: InputMaybe<Array<Team_Skill_Bool_Exp>>;
  _not?: InputMaybe<Team_Skill_Bool_Exp>;
  _or?: InputMaybe<Array<Team_Skill_Bool_Exp>>;
  skill?: InputMaybe<Skill_Bool_Exp>;
  skillID?: InputMaybe<Uuid_Comparison_Exp>;
  team?: InputMaybe<Team_Bool_Exp>;
  teamID?: InputMaybe<Uuid_Comparison_Exp>;
};

/** unique or primary key constraints on table "team_skill" */
export enum Team_Skill_Constraint {
  /** unique or primary key constraint on columns "teamID", "skillID" */
  TeamSkillPkey = 'team_skill_pkey',
}

/** input type for inserting data into table "team_skill" */
export type Team_Skill_Insert_Input = {
  skill?: InputMaybe<Skill_Obj_Rel_Insert_Input>;
  skillID?: InputMaybe<Scalars['uuid']>;
  team?: InputMaybe<Team_Obj_Rel_Insert_Input>;
  teamID?: InputMaybe<Scalars['uuid']>;
};

/** aggregate max on columns */
export type Team_Skill_Max_Fields = {
  __typename?: 'team_skill_max_fields';
  skillID?: Maybe<Scalars['uuid']>;
  teamID?: Maybe<Scalars['uuid']>;
};

/** order by max() on columns of table "team_skill" */
export type Team_Skill_Max_Order_By = {
  skillID?: InputMaybe<Order_By>;
  teamID?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Team_Skill_Min_Fields = {
  __typename?: 'team_skill_min_fields';
  skillID?: Maybe<Scalars['uuid']>;
  teamID?: Maybe<Scalars['uuid']>;
};

/** order by min() on columns of table "team_skill" */
export type Team_Skill_Min_Order_By = {
  skillID?: InputMaybe<Order_By>;
  teamID?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "team_skill" */
export type Team_Skill_Mutation_Response = {
  __typename?: 'team_skill_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Team_Skill>;
};

/** on_conflict condition type for table "team_skill" */
export type Team_Skill_On_Conflict = {
  constraint: Team_Skill_Constraint;
  update_columns?: Array<Team_Skill_Update_Column>;
  where?: InputMaybe<Team_Skill_Bool_Exp>;
};

/** Ordering options when selecting data from "team_skill". */
export type Team_Skill_Order_By = {
  skill?: InputMaybe<Skill_Order_By>;
  skillID?: InputMaybe<Order_By>;
  team?: InputMaybe<Team_Order_By>;
  teamID?: InputMaybe<Order_By>;
};

/** primary key columns input for table: team_skill */
export type Team_Skill_Pk_Columns_Input = {
  skillID: Scalars['uuid'];
  teamID: Scalars['uuid'];
};

/** select columns of table "team_skill" */
export enum Team_Skill_Select_Column {
  /** column name */
  SkillId = 'skillID',
  /** column name */
  TeamId = 'teamID',
}

/** input type for updating data in table "team_skill" */
export type Team_Skill_Set_Input = {
  skillID?: InputMaybe<Scalars['uuid']>;
  teamID?: InputMaybe<Scalars['uuid']>;
};

/** Streaming cursor of the table "team_skill" */
export type Team_Skill_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Team_Skill_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Team_Skill_Stream_Cursor_Value_Input = {
  skillID?: InputMaybe<Scalars['uuid']>;
  teamID?: InputMaybe<Scalars['uuid']>;
};

/** update columns of table "team_skill" */
export enum Team_Skill_Update_Column {
  /** column name */
  SkillId = 'skillID',
  /** column name */
  TeamId = 'teamID',
}

export type Team_Skill_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Team_Skill_Set_Input>;
  where: Team_Skill_Bool_Exp;
};

/** columns and relationships of "team_slack_channel" */
export type Team_Slack_Channel = {
  __typename?: 'team_slack_channel';
  slackChannelID: Scalars['String'];
  /** An object relationship */
  team: Team;
  teamID: Scalars['uuid'];
};

/** aggregated selection of "team_slack_channel" */
export type Team_Slack_Channel_Aggregate = {
  __typename?: 'team_slack_channel_aggregate';
  aggregate?: Maybe<Team_Slack_Channel_Aggregate_Fields>;
  nodes: Array<Team_Slack_Channel>;
};

/** aggregate fields of "team_slack_channel" */
export type Team_Slack_Channel_Aggregate_Fields = {
  __typename?: 'team_slack_channel_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<Team_Slack_Channel_Max_Fields>;
  min?: Maybe<Team_Slack_Channel_Min_Fields>;
};

/** aggregate fields of "team_slack_channel" */
export type Team_Slack_Channel_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Team_Slack_Channel_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "team_slack_channel" */
export type Team_Slack_Channel_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Team_Slack_Channel_Max_Order_By>;
  min?: InputMaybe<Team_Slack_Channel_Min_Order_By>;
};

/** input type for inserting array relation for remote table "team_slack_channel" */
export type Team_Slack_Channel_Arr_Rel_Insert_Input = {
  data: Array<Team_Slack_Channel_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Team_Slack_Channel_On_Conflict>;
};

/** Boolean expression to filter rows from the table "team_slack_channel". All fields are combined with a logical 'AND'. */
export type Team_Slack_Channel_Bool_Exp = {
  _and?: InputMaybe<Array<Team_Slack_Channel_Bool_Exp>>;
  _not?: InputMaybe<Team_Slack_Channel_Bool_Exp>;
  _or?: InputMaybe<Array<Team_Slack_Channel_Bool_Exp>>;
  slackChannelID?: InputMaybe<String_Comparison_Exp>;
  team?: InputMaybe<Team_Bool_Exp>;
  teamID?: InputMaybe<Uuid_Comparison_Exp>;
};

/** unique or primary key constraints on table "team_slack_channel" */
export enum Team_Slack_Channel_Constraint {
  /** unique or primary key constraint on columns "teamID", "slackChannelID" */
  TeamSlackChannelPkey = 'team_slack_channel_pkey',
}

/** input type for inserting data into table "team_slack_channel" */
export type Team_Slack_Channel_Insert_Input = {
  slackChannelID?: InputMaybe<Scalars['String']>;
  team?: InputMaybe<Team_Obj_Rel_Insert_Input>;
  teamID?: InputMaybe<Scalars['uuid']>;
};

/** aggregate max on columns */
export type Team_Slack_Channel_Max_Fields = {
  __typename?: 'team_slack_channel_max_fields';
  slackChannelID?: Maybe<Scalars['String']>;
  teamID?: Maybe<Scalars['uuid']>;
};

/** order by max() on columns of table "team_slack_channel" */
export type Team_Slack_Channel_Max_Order_By = {
  slackChannelID?: InputMaybe<Order_By>;
  teamID?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Team_Slack_Channel_Min_Fields = {
  __typename?: 'team_slack_channel_min_fields';
  slackChannelID?: Maybe<Scalars['String']>;
  teamID?: Maybe<Scalars['uuid']>;
};

/** order by min() on columns of table "team_slack_channel" */
export type Team_Slack_Channel_Min_Order_By = {
  slackChannelID?: InputMaybe<Order_By>;
  teamID?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "team_slack_channel" */
export type Team_Slack_Channel_Mutation_Response = {
  __typename?: 'team_slack_channel_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Team_Slack_Channel>;
};

/** on_conflict condition type for table "team_slack_channel" */
export type Team_Slack_Channel_On_Conflict = {
  constraint: Team_Slack_Channel_Constraint;
  update_columns?: Array<Team_Slack_Channel_Update_Column>;
  where?: InputMaybe<Team_Slack_Channel_Bool_Exp>;
};

/** Ordering options when selecting data from "team_slack_channel". */
export type Team_Slack_Channel_Order_By = {
  slackChannelID?: InputMaybe<Order_By>;
  team?: InputMaybe<Team_Order_By>;
  teamID?: InputMaybe<Order_By>;
};

/** primary key columns input for table: team_slack_channel */
export type Team_Slack_Channel_Pk_Columns_Input = {
  slackChannelID: Scalars['String'];
  teamID: Scalars['uuid'];
};

/** select columns of table "team_slack_channel" */
export enum Team_Slack_Channel_Select_Column {
  /** column name */
  SlackChannelId = 'slackChannelID',
  /** column name */
  TeamId = 'teamID',
}

/** input type for updating data in table "team_slack_channel" */
export type Team_Slack_Channel_Set_Input = {
  slackChannelID?: InputMaybe<Scalars['String']>;
  teamID?: InputMaybe<Scalars['uuid']>;
};

/** Streaming cursor of the table "team_slack_channel" */
export type Team_Slack_Channel_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Team_Slack_Channel_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Team_Slack_Channel_Stream_Cursor_Value_Input = {
  slackChannelID?: InputMaybe<Scalars['String']>;
  teamID?: InputMaybe<Scalars['uuid']>;
};

/** update columns of table "team_slack_channel" */
export enum Team_Slack_Channel_Update_Column {
  /** column name */
  SlackChannelId = 'slackChannelID',
  /** column name */
  TeamId = 'teamID',
}

export type Team_Slack_Channel_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Team_Slack_Channel_Set_Input>;
  where: Team_Slack_Channel_Bool_Exp;
};

/** Streaming cursor of the table "team" */
export type Team_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Team_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Team_Stream_Cursor_Value_Input = {
  description?: InputMaybe<Scalars['String']>;
  googleGroupIds?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['uuid']>;
  isPrivate?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  slackChannelIds?: InputMaybe<Scalars['String']>;
};

/** update columns of table "team" */
export enum Team_Update_Column {
  /** column name */
  Description = 'description',
  /** column name */
  GoogleGroupIds = 'googleGroupIds',
  /** column name */
  Id = 'id',
  /** column name */
  IsPrivate = 'isPrivate',
  /** column name */
  Name = 'name',
  /** column name */
  SlackChannelIds = 'slackChannelIds',
}

export type Team_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Team_Set_Input>;
  where: Team_Bool_Exp;
};

/** columns and relationships of "time_and_material_invoice_line_item" */
export type Time_And_Material_Invoice_Line_Item = {
  __typename?: 'time_and_material_invoice_line_item';
  description: Scalars['String'];
  id: Scalars['uuid'];
  /** An object relationship */
  invoice: Invoice;
  invoiceID: Scalars['Int'];
  /** An object relationship */
  invoice_distribution?: Maybe<Invoice_Distribution>;
  productOrServiceID: Scalars['uuid'];
  /** An object relationship */
  product_or_service_type: Product_Or_Service_Type;
  /** An object relationship */
  public_user_meta?: Maybe<Public_User_Meta>;
  quantity: Scalars['numeric'];
  rate: Scalars['numeric'];
  teamMemberID?: Maybe<Scalars['uuid']>;
  /** An object relationship */
  user_meta?: Maybe<User_Meta>;
};

/** aggregated selection of "time_and_material_invoice_line_item" */
export type Time_And_Material_Invoice_Line_Item_Aggregate = {
  __typename?: 'time_and_material_invoice_line_item_aggregate';
  aggregate?: Maybe<Time_And_Material_Invoice_Line_Item_Aggregate_Fields>;
  nodes: Array<Time_And_Material_Invoice_Line_Item>;
};

/** aggregate fields of "time_and_material_invoice_line_item" */
export type Time_And_Material_Invoice_Line_Item_Aggregate_Fields = {
  __typename?: 'time_and_material_invoice_line_item_aggregate_fields';
  avg?: Maybe<Time_And_Material_Invoice_Line_Item_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Time_And_Material_Invoice_Line_Item_Max_Fields>;
  min?: Maybe<Time_And_Material_Invoice_Line_Item_Min_Fields>;
  stddev?: Maybe<Time_And_Material_Invoice_Line_Item_Stddev_Fields>;
  stddev_pop?: Maybe<Time_And_Material_Invoice_Line_Item_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Time_And_Material_Invoice_Line_Item_Stddev_Samp_Fields>;
  sum?: Maybe<Time_And_Material_Invoice_Line_Item_Sum_Fields>;
  var_pop?: Maybe<Time_And_Material_Invoice_Line_Item_Var_Pop_Fields>;
  var_samp?: Maybe<Time_And_Material_Invoice_Line_Item_Var_Samp_Fields>;
  variance?: Maybe<Time_And_Material_Invoice_Line_Item_Variance_Fields>;
};

/** aggregate fields of "time_and_material_invoice_line_item" */
export type Time_And_Material_Invoice_Line_Item_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Time_And_Material_Invoice_Line_Item_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "time_and_material_invoice_line_item" */
export type Time_And_Material_Invoice_Line_Item_Aggregate_Order_By = {
  avg?: InputMaybe<Time_And_Material_Invoice_Line_Item_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Time_And_Material_Invoice_Line_Item_Max_Order_By>;
  min?: InputMaybe<Time_And_Material_Invoice_Line_Item_Min_Order_By>;
  stddev?: InputMaybe<Time_And_Material_Invoice_Line_Item_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Time_And_Material_Invoice_Line_Item_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Time_And_Material_Invoice_Line_Item_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Time_And_Material_Invoice_Line_Item_Sum_Order_By>;
  var_pop?: InputMaybe<Time_And_Material_Invoice_Line_Item_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Time_And_Material_Invoice_Line_Item_Var_Samp_Order_By>;
  variance?: InputMaybe<Time_And_Material_Invoice_Line_Item_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "time_and_material_invoice_line_item" */
export type Time_And_Material_Invoice_Line_Item_Arr_Rel_Insert_Input = {
  data: Array<Time_And_Material_Invoice_Line_Item_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Time_And_Material_Invoice_Line_Item_On_Conflict>;
};

/** aggregate avg on columns */
export type Time_And_Material_Invoice_Line_Item_Avg_Fields = {
  __typename?: 'time_and_material_invoice_line_item_avg_fields';
  invoiceID?: Maybe<Scalars['Float']>;
  quantity?: Maybe<Scalars['Float']>;
  rate?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "time_and_material_invoice_line_item" */
export type Time_And_Material_Invoice_Line_Item_Avg_Order_By = {
  invoiceID?: InputMaybe<Order_By>;
  quantity?: InputMaybe<Order_By>;
  rate?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "time_and_material_invoice_line_item". All fields are combined with a logical 'AND'. */
export type Time_And_Material_Invoice_Line_Item_Bool_Exp = {
  _and?: InputMaybe<Array<Time_And_Material_Invoice_Line_Item_Bool_Exp>>;
  _not?: InputMaybe<Time_And_Material_Invoice_Line_Item_Bool_Exp>;
  _or?: InputMaybe<Array<Time_And_Material_Invoice_Line_Item_Bool_Exp>>;
  description?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  invoice?: InputMaybe<Invoice_Bool_Exp>;
  invoiceID?: InputMaybe<Int_Comparison_Exp>;
  invoice_distribution?: InputMaybe<Invoice_Distribution_Bool_Exp>;
  productOrServiceID?: InputMaybe<Uuid_Comparison_Exp>;
  product_or_service_type?: InputMaybe<Product_Or_Service_Type_Bool_Exp>;
  public_user_meta?: InputMaybe<Public_User_Meta_Bool_Exp>;
  quantity?: InputMaybe<Numeric_Comparison_Exp>;
  rate?: InputMaybe<Numeric_Comparison_Exp>;
  teamMemberID?: InputMaybe<Uuid_Comparison_Exp>;
  user_meta?: InputMaybe<User_Meta_Bool_Exp>;
};

/** unique or primary key constraints on table "time_and_material_invoice_line_item" */
export enum Time_And_Material_Invoice_Line_Item_Constraint {
  /** unique or primary key constraint on columns "id" */
  TimeAndMaterialInvoiceLineItemPkey = 'time_and_material_invoice_line_item_pkey',
}

/** input type for incrementing numeric columns in table "time_and_material_invoice_line_item" */
export type Time_And_Material_Invoice_Line_Item_Inc_Input = {
  invoiceID?: InputMaybe<Scalars['Int']>;
  quantity?: InputMaybe<Scalars['numeric']>;
  rate?: InputMaybe<Scalars['numeric']>;
};

/** input type for inserting data into table "time_and_material_invoice_line_item" */
export type Time_And_Material_Invoice_Line_Item_Insert_Input = {
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['uuid']>;
  invoice?: InputMaybe<Invoice_Obj_Rel_Insert_Input>;
  invoiceID?: InputMaybe<Scalars['Int']>;
  invoice_distribution?: InputMaybe<Invoice_Distribution_Obj_Rel_Insert_Input>;
  productOrServiceID?: InputMaybe<Scalars['uuid']>;
  product_or_service_type?: InputMaybe<Product_Or_Service_Type_Obj_Rel_Insert_Input>;
  public_user_meta?: InputMaybe<Public_User_Meta_Obj_Rel_Insert_Input>;
  quantity?: InputMaybe<Scalars['numeric']>;
  rate?: InputMaybe<Scalars['numeric']>;
  teamMemberID?: InputMaybe<Scalars['uuid']>;
  user_meta?: InputMaybe<User_Meta_Obj_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type Time_And_Material_Invoice_Line_Item_Max_Fields = {
  __typename?: 'time_and_material_invoice_line_item_max_fields';
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  invoiceID?: Maybe<Scalars['Int']>;
  productOrServiceID?: Maybe<Scalars['uuid']>;
  quantity?: Maybe<Scalars['numeric']>;
  rate?: Maybe<Scalars['numeric']>;
  teamMemberID?: Maybe<Scalars['uuid']>;
};

/** order by max() on columns of table "time_and_material_invoice_line_item" */
export type Time_And_Material_Invoice_Line_Item_Max_Order_By = {
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  invoiceID?: InputMaybe<Order_By>;
  productOrServiceID?: InputMaybe<Order_By>;
  quantity?: InputMaybe<Order_By>;
  rate?: InputMaybe<Order_By>;
  teamMemberID?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Time_And_Material_Invoice_Line_Item_Min_Fields = {
  __typename?: 'time_and_material_invoice_line_item_min_fields';
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  invoiceID?: Maybe<Scalars['Int']>;
  productOrServiceID?: Maybe<Scalars['uuid']>;
  quantity?: Maybe<Scalars['numeric']>;
  rate?: Maybe<Scalars['numeric']>;
  teamMemberID?: Maybe<Scalars['uuid']>;
};

/** order by min() on columns of table "time_and_material_invoice_line_item" */
export type Time_And_Material_Invoice_Line_Item_Min_Order_By = {
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  invoiceID?: InputMaybe<Order_By>;
  productOrServiceID?: InputMaybe<Order_By>;
  quantity?: InputMaybe<Order_By>;
  rate?: InputMaybe<Order_By>;
  teamMemberID?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "time_and_material_invoice_line_item" */
export type Time_And_Material_Invoice_Line_Item_Mutation_Response = {
  __typename?: 'time_and_material_invoice_line_item_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Time_And_Material_Invoice_Line_Item>;
};

/** input type for inserting object relation for remote table "time_and_material_invoice_line_item" */
export type Time_And_Material_Invoice_Line_Item_Obj_Rel_Insert_Input = {
  data: Time_And_Material_Invoice_Line_Item_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Time_And_Material_Invoice_Line_Item_On_Conflict>;
};

/** on_conflict condition type for table "time_and_material_invoice_line_item" */
export type Time_And_Material_Invoice_Line_Item_On_Conflict = {
  constraint: Time_And_Material_Invoice_Line_Item_Constraint;
  update_columns?: Array<Time_And_Material_Invoice_Line_Item_Update_Column>;
  where?: InputMaybe<Time_And_Material_Invoice_Line_Item_Bool_Exp>;
};

/** Ordering options when selecting data from "time_and_material_invoice_line_item". */
export type Time_And_Material_Invoice_Line_Item_Order_By = {
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  invoice?: InputMaybe<Invoice_Order_By>;
  invoiceID?: InputMaybe<Order_By>;
  invoice_distribution?: InputMaybe<Invoice_Distribution_Order_By>;
  productOrServiceID?: InputMaybe<Order_By>;
  product_or_service_type?: InputMaybe<Product_Or_Service_Type_Order_By>;
  public_user_meta?: InputMaybe<Public_User_Meta_Order_By>;
  quantity?: InputMaybe<Order_By>;
  rate?: InputMaybe<Order_By>;
  teamMemberID?: InputMaybe<Order_By>;
  user_meta?: InputMaybe<User_Meta_Order_By>;
};

/** primary key columns input for table: time_and_material_invoice_line_item */
export type Time_And_Material_Invoice_Line_Item_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "time_and_material_invoice_line_item" */
export enum Time_And_Material_Invoice_Line_Item_Select_Column {
  /** column name */
  Description = 'description',
  /** column name */
  Id = 'id',
  /** column name */
  InvoiceId = 'invoiceID',
  /** column name */
  ProductOrServiceId = 'productOrServiceID',
  /** column name */
  Quantity = 'quantity',
  /** column name */
  Rate = 'rate',
  /** column name */
  TeamMemberId = 'teamMemberID',
}

/** input type for updating data in table "time_and_material_invoice_line_item" */
export type Time_And_Material_Invoice_Line_Item_Set_Input = {
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['uuid']>;
  invoiceID?: InputMaybe<Scalars['Int']>;
  productOrServiceID?: InputMaybe<Scalars['uuid']>;
  quantity?: InputMaybe<Scalars['numeric']>;
  rate?: InputMaybe<Scalars['numeric']>;
  teamMemberID?: InputMaybe<Scalars['uuid']>;
};

/** aggregate stddev on columns */
export type Time_And_Material_Invoice_Line_Item_Stddev_Fields = {
  __typename?: 'time_and_material_invoice_line_item_stddev_fields';
  invoiceID?: Maybe<Scalars['Float']>;
  quantity?: Maybe<Scalars['Float']>;
  rate?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "time_and_material_invoice_line_item" */
export type Time_And_Material_Invoice_Line_Item_Stddev_Order_By = {
  invoiceID?: InputMaybe<Order_By>;
  quantity?: InputMaybe<Order_By>;
  rate?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Time_And_Material_Invoice_Line_Item_Stddev_Pop_Fields = {
  __typename?: 'time_and_material_invoice_line_item_stddev_pop_fields';
  invoiceID?: Maybe<Scalars['Float']>;
  quantity?: Maybe<Scalars['Float']>;
  rate?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "time_and_material_invoice_line_item" */
export type Time_And_Material_Invoice_Line_Item_Stddev_Pop_Order_By = {
  invoiceID?: InputMaybe<Order_By>;
  quantity?: InputMaybe<Order_By>;
  rate?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Time_And_Material_Invoice_Line_Item_Stddev_Samp_Fields = {
  __typename?: 'time_and_material_invoice_line_item_stddev_samp_fields';
  invoiceID?: Maybe<Scalars['Float']>;
  quantity?: Maybe<Scalars['Float']>;
  rate?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "time_and_material_invoice_line_item" */
export type Time_And_Material_Invoice_Line_Item_Stddev_Samp_Order_By = {
  invoiceID?: InputMaybe<Order_By>;
  quantity?: InputMaybe<Order_By>;
  rate?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "time_and_material_invoice_line_item" */
export type Time_And_Material_Invoice_Line_Item_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Time_And_Material_Invoice_Line_Item_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Time_And_Material_Invoice_Line_Item_Stream_Cursor_Value_Input = {
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['uuid']>;
  invoiceID?: InputMaybe<Scalars['Int']>;
  productOrServiceID?: InputMaybe<Scalars['uuid']>;
  quantity?: InputMaybe<Scalars['numeric']>;
  rate?: InputMaybe<Scalars['numeric']>;
  teamMemberID?: InputMaybe<Scalars['uuid']>;
};

/** aggregate sum on columns */
export type Time_And_Material_Invoice_Line_Item_Sum_Fields = {
  __typename?: 'time_and_material_invoice_line_item_sum_fields';
  invoiceID?: Maybe<Scalars['Int']>;
  quantity?: Maybe<Scalars['numeric']>;
  rate?: Maybe<Scalars['numeric']>;
};

/** order by sum() on columns of table "time_and_material_invoice_line_item" */
export type Time_And_Material_Invoice_Line_Item_Sum_Order_By = {
  invoiceID?: InputMaybe<Order_By>;
  quantity?: InputMaybe<Order_By>;
  rate?: InputMaybe<Order_By>;
};

/** update columns of table "time_and_material_invoice_line_item" */
export enum Time_And_Material_Invoice_Line_Item_Update_Column {
  /** column name */
  Description = 'description',
  /** column name */
  Id = 'id',
  /** column name */
  InvoiceId = 'invoiceID',
  /** column name */
  ProductOrServiceId = 'productOrServiceID',
  /** column name */
  Quantity = 'quantity',
  /** column name */
  Rate = 'rate',
  /** column name */
  TeamMemberId = 'teamMemberID',
}

export type Time_And_Material_Invoice_Line_Item_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Time_And_Material_Invoice_Line_Item_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Time_And_Material_Invoice_Line_Item_Set_Input>;
  where: Time_And_Material_Invoice_Line_Item_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Time_And_Material_Invoice_Line_Item_Var_Pop_Fields = {
  __typename?: 'time_and_material_invoice_line_item_var_pop_fields';
  invoiceID?: Maybe<Scalars['Float']>;
  quantity?: Maybe<Scalars['Float']>;
  rate?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "time_and_material_invoice_line_item" */
export type Time_And_Material_Invoice_Line_Item_Var_Pop_Order_By = {
  invoiceID?: InputMaybe<Order_By>;
  quantity?: InputMaybe<Order_By>;
  rate?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Time_And_Material_Invoice_Line_Item_Var_Samp_Fields = {
  __typename?: 'time_and_material_invoice_line_item_var_samp_fields';
  invoiceID?: Maybe<Scalars['Float']>;
  quantity?: Maybe<Scalars['Float']>;
  rate?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "time_and_material_invoice_line_item" */
export type Time_And_Material_Invoice_Line_Item_Var_Samp_Order_By = {
  invoiceID?: InputMaybe<Order_By>;
  quantity?: InputMaybe<Order_By>;
  rate?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Time_And_Material_Invoice_Line_Item_Variance_Fields = {
  __typename?: 'time_and_material_invoice_line_item_variance_fields';
  invoiceID?: Maybe<Scalars['Float']>;
  quantity?: Maybe<Scalars['Float']>;
  rate?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "time_and_material_invoice_line_item" */
export type Time_And_Material_Invoice_Line_Item_Variance_Order_By = {
  invoiceID?: InputMaybe<Order_By>;
  quantity?: InputMaybe<Order_By>;
  rate?: InputMaybe<Order_By>;
};

/** Boolean expression to compare columns of type "time". All fields are combined with logical 'AND'. */
export type Time_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['time']>;
  _gt?: InputMaybe<Scalars['time']>;
  _gte?: InputMaybe<Scalars['time']>;
  _in?: InputMaybe<Array<Scalars['time']>>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  _lt?: InputMaybe<Scalars['time']>;
  _lte?: InputMaybe<Scalars['time']>;
  _neq?: InputMaybe<Scalars['time']>;
  _nin?: InputMaybe<Array<Scalars['time']>>;
};

/** Boolean expression to compare columns of type "timestamp". All fields are combined with logical 'AND'. */
export type Timestamp_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['timestamp']>;
  _gt?: InputMaybe<Scalars['timestamp']>;
  _gte?: InputMaybe<Scalars['timestamp']>;
  _in?: InputMaybe<Array<Scalars['timestamp']>>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  _lt?: InputMaybe<Scalars['timestamp']>;
  _lte?: InputMaybe<Scalars['timestamp']>;
  _neq?: InputMaybe<Scalars['timestamp']>;
  _nin?: InputMaybe<Array<Scalars['timestamp']>>;
};

/** Boolean expression to compare columns of type "timestamptz". All fields are combined with logical 'AND'. */
export type Timestamptz_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['timestamptz']>;
  _gt?: InputMaybe<Scalars['timestamptz']>;
  _gte?: InputMaybe<Scalars['timestamptz']>;
  _in?: InputMaybe<Array<Scalars['timestamptz']>>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  _lt?: InputMaybe<Scalars['timestamptz']>;
  _lte?: InputMaybe<Scalars['timestamptz']>;
  _neq?: InputMaybe<Scalars['timestamptz']>;
  _nin?: InputMaybe<Array<Scalars['timestamptz']>>;
};

/** columns and relationships of "tool" */
export type Tool = {
  __typename?: 'tool';
  id: Scalars['uuid'];
  link: Scalars['String'];
  orderDisplay: Scalars['Int'];
  teams: Scalars['String'];
  title: Scalars['String'];
  tool_logo?: Maybe<Scalars['String']>;
  user_type?: Maybe<Scalars['String']>;
};

/** aggregated selection of "tool" */
export type Tool_Aggregate = {
  __typename?: 'tool_aggregate';
  aggregate?: Maybe<Tool_Aggregate_Fields>;
  nodes: Array<Tool>;
};

/** aggregate fields of "tool" */
export type Tool_Aggregate_Fields = {
  __typename?: 'tool_aggregate_fields';
  avg?: Maybe<Tool_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Tool_Max_Fields>;
  min?: Maybe<Tool_Min_Fields>;
  stddev?: Maybe<Tool_Stddev_Fields>;
  stddev_pop?: Maybe<Tool_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Tool_Stddev_Samp_Fields>;
  sum?: Maybe<Tool_Sum_Fields>;
  var_pop?: Maybe<Tool_Var_Pop_Fields>;
  var_samp?: Maybe<Tool_Var_Samp_Fields>;
  variance?: Maybe<Tool_Variance_Fields>;
};

/** aggregate fields of "tool" */
export type Tool_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Tool_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Tool_Avg_Fields = {
  __typename?: 'tool_avg_fields';
  orderDisplay?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "tool". All fields are combined with a logical 'AND'. */
export type Tool_Bool_Exp = {
  _and?: InputMaybe<Array<Tool_Bool_Exp>>;
  _not?: InputMaybe<Tool_Bool_Exp>;
  _or?: InputMaybe<Array<Tool_Bool_Exp>>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  link?: InputMaybe<String_Comparison_Exp>;
  orderDisplay?: InputMaybe<Int_Comparison_Exp>;
  teams?: InputMaybe<String_Comparison_Exp>;
  title?: InputMaybe<String_Comparison_Exp>;
  tool_logo?: InputMaybe<String_Comparison_Exp>;
  user_type?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "tool" */
export enum Tool_Constraint {
  /** unique or primary key constraint on columns "id" */
  ToolPkey = 'tool_pkey',
}

/** input type for incrementing numeric columns in table "tool" */
export type Tool_Inc_Input = {
  orderDisplay?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "tool" */
export type Tool_Insert_Input = {
  id?: InputMaybe<Scalars['uuid']>;
  link?: InputMaybe<Scalars['String']>;
  orderDisplay?: InputMaybe<Scalars['Int']>;
  teams?: InputMaybe<Scalars['String']>;
  title?: InputMaybe<Scalars['String']>;
  tool_logo?: InputMaybe<Scalars['String']>;
  user_type?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Tool_Max_Fields = {
  __typename?: 'tool_max_fields';
  id?: Maybe<Scalars['uuid']>;
  link?: Maybe<Scalars['String']>;
  orderDisplay?: Maybe<Scalars['Int']>;
  teams?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  tool_logo?: Maybe<Scalars['String']>;
  user_type?: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type Tool_Min_Fields = {
  __typename?: 'tool_min_fields';
  id?: Maybe<Scalars['uuid']>;
  link?: Maybe<Scalars['String']>;
  orderDisplay?: Maybe<Scalars['Int']>;
  teams?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  tool_logo?: Maybe<Scalars['String']>;
  user_type?: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "tool" */
export type Tool_Mutation_Response = {
  __typename?: 'tool_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Tool>;
};

/** on_conflict condition type for table "tool" */
export type Tool_On_Conflict = {
  constraint: Tool_Constraint;
  update_columns?: Array<Tool_Update_Column>;
  where?: InputMaybe<Tool_Bool_Exp>;
};

/** Ordering options when selecting data from "tool". */
export type Tool_Order_By = {
  id?: InputMaybe<Order_By>;
  link?: InputMaybe<Order_By>;
  orderDisplay?: InputMaybe<Order_By>;
  teams?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  tool_logo?: InputMaybe<Order_By>;
  user_type?: InputMaybe<Order_By>;
};

/** primary key columns input for table: tool */
export type Tool_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "tool" */
export enum Tool_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Link = 'link',
  /** column name */
  OrderDisplay = 'orderDisplay',
  /** column name */
  Teams = 'teams',
  /** column name */
  Title = 'title',
  /** column name */
  ToolLogo = 'tool_logo',
  /** column name */
  UserType = 'user_type',
}

/** input type for updating data in table "tool" */
export type Tool_Set_Input = {
  id?: InputMaybe<Scalars['uuid']>;
  link?: InputMaybe<Scalars['String']>;
  orderDisplay?: InputMaybe<Scalars['Int']>;
  teams?: InputMaybe<Scalars['String']>;
  title?: InputMaybe<Scalars['String']>;
  tool_logo?: InputMaybe<Scalars['String']>;
  user_type?: InputMaybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type Tool_Stddev_Fields = {
  __typename?: 'tool_stddev_fields';
  orderDisplay?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Tool_Stddev_Pop_Fields = {
  __typename?: 'tool_stddev_pop_fields';
  orderDisplay?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Tool_Stddev_Samp_Fields = {
  __typename?: 'tool_stddev_samp_fields';
  orderDisplay?: Maybe<Scalars['Float']>;
};

/** Streaming cursor of the table "tool" */
export type Tool_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Tool_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Tool_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['uuid']>;
  link?: InputMaybe<Scalars['String']>;
  orderDisplay?: InputMaybe<Scalars['Int']>;
  teams?: InputMaybe<Scalars['String']>;
  title?: InputMaybe<Scalars['String']>;
  tool_logo?: InputMaybe<Scalars['String']>;
  user_type?: InputMaybe<Scalars['String']>;
};

/** aggregate sum on columns */
export type Tool_Sum_Fields = {
  __typename?: 'tool_sum_fields';
  orderDisplay?: Maybe<Scalars['Int']>;
};

/** update columns of table "tool" */
export enum Tool_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Link = 'link',
  /** column name */
  OrderDisplay = 'orderDisplay',
  /** column name */
  Teams = 'teams',
  /** column name */
  Title = 'title',
  /** column name */
  ToolLogo = 'tool_logo',
  /** column name */
  UserType = 'user_type',
}

export type Tool_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Tool_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Tool_Set_Input>;
  where: Tool_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Tool_Var_Pop_Fields = {
  __typename?: 'tool_var_pop_fields';
  orderDisplay?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Tool_Var_Samp_Fields = {
  __typename?: 'tool_var_samp_fields';
  orderDisplay?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Tool_Variance_Fields = {
  __typename?: 'tool_variance_fields';
  orderDisplay?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "trigger" */
export type Trigger = {
  __typename?: 'trigger';
  id: Scalars['uuid'];
  name: Scalars['String'];
  /** An array relationship */
  webhook_triggers: Array<Webhook_Trigger>;
  /** An aggregate relationship */
  webhook_triggers_aggregate: Webhook_Trigger_Aggregate;
};

/** columns and relationships of "trigger" */
export type TriggerWebhook_TriggersArgs = {
  distinct_on?: InputMaybe<Array<Webhook_Trigger_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Webhook_Trigger_Order_By>>;
  where?: InputMaybe<Webhook_Trigger_Bool_Exp>;
};

/** columns and relationships of "trigger" */
export type TriggerWebhook_Triggers_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Webhook_Trigger_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Webhook_Trigger_Order_By>>;
  where?: InputMaybe<Webhook_Trigger_Bool_Exp>;
};

/** aggregated selection of "trigger" */
export type Trigger_Aggregate = {
  __typename?: 'trigger_aggregate';
  aggregate?: Maybe<Trigger_Aggregate_Fields>;
  nodes: Array<Trigger>;
};

/** aggregate fields of "trigger" */
export type Trigger_Aggregate_Fields = {
  __typename?: 'trigger_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<Trigger_Max_Fields>;
  min?: Maybe<Trigger_Min_Fields>;
};

/** aggregate fields of "trigger" */
export type Trigger_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Trigger_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** Boolean expression to filter rows from the table "trigger". All fields are combined with a logical 'AND'. */
export type Trigger_Bool_Exp = {
  _and?: InputMaybe<Array<Trigger_Bool_Exp>>;
  _not?: InputMaybe<Trigger_Bool_Exp>;
  _or?: InputMaybe<Array<Trigger_Bool_Exp>>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  webhook_triggers?: InputMaybe<Webhook_Trigger_Bool_Exp>;
};

/** unique or primary key constraints on table "trigger" */
export enum Trigger_Constraint {
  /** unique or primary key constraint on columns "name" */
  TriggerNameKey = 'trigger_name_key',
  /** unique or primary key constraint on columns "id" */
  TriggerPkey = 'trigger_pkey',
}

/** input type for inserting data into table "trigger" */
export type Trigger_Insert_Input = {
  id?: InputMaybe<Scalars['uuid']>;
  name?: InputMaybe<Scalars['String']>;
  webhook_triggers?: InputMaybe<Webhook_Trigger_Arr_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type Trigger_Max_Fields = {
  __typename?: 'trigger_max_fields';
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type Trigger_Min_Fields = {
  __typename?: 'trigger_min_fields';
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "trigger" */
export type Trigger_Mutation_Response = {
  __typename?: 'trigger_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Trigger>;
};

/** input type for inserting object relation for remote table "trigger" */
export type Trigger_Obj_Rel_Insert_Input = {
  data: Trigger_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Trigger_On_Conflict>;
};

/** on_conflict condition type for table "trigger" */
export type Trigger_On_Conflict = {
  constraint: Trigger_Constraint;
  update_columns?: Array<Trigger_Update_Column>;
  where?: InputMaybe<Trigger_Bool_Exp>;
};

/** Ordering options when selecting data from "trigger". */
export type Trigger_Order_By = {
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  webhook_triggers_aggregate?: InputMaybe<Webhook_Trigger_Aggregate_Order_By>;
};

/** primary key columns input for table: trigger */
export type Trigger_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "trigger" */
export enum Trigger_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
}

/** input type for updating data in table "trigger" */
export type Trigger_Set_Input = {
  id?: InputMaybe<Scalars['uuid']>;
  name?: InputMaybe<Scalars['String']>;
};

/** Streaming cursor of the table "trigger" */
export type Trigger_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Trigger_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Trigger_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['uuid']>;
  name?: InputMaybe<Scalars['String']>;
};

/** update columns of table "trigger" */
export enum Trigger_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
}

export type Trigger_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Trigger_Set_Input>;
  where: Trigger_Bool_Exp;
};

/** columns and relationships of "user_basic_information" */
export type User_Basic_Information = {
  __typename?: 'user_basic_information';
  addressLine1: Scalars['String'];
  addressLine2?: Maybe<Scalars['String']>;
  city?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  id: Scalars['uuid'];
  phone: Scalars['String'];
  stateOrProvince?: Maybe<Scalars['String']>;
  userMetaID: Scalars['uuid'];
  /** An object relationship */
  user_meta: User_Meta;
  zipOrPostalCode?: Maybe<Scalars['String']>;
};

/** aggregated selection of "user_basic_information" */
export type User_Basic_Information_Aggregate = {
  __typename?: 'user_basic_information_aggregate';
  aggregate?: Maybe<User_Basic_Information_Aggregate_Fields>;
  nodes: Array<User_Basic_Information>;
};

/** aggregate fields of "user_basic_information" */
export type User_Basic_Information_Aggregate_Fields = {
  __typename?: 'user_basic_information_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<User_Basic_Information_Max_Fields>;
  min?: Maybe<User_Basic_Information_Min_Fields>;
};

/** aggregate fields of "user_basic_information" */
export type User_Basic_Information_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<User_Basic_Information_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** Boolean expression to filter rows from the table "user_basic_information". All fields are combined with a logical 'AND'. */
export type User_Basic_Information_Bool_Exp = {
  _and?: InputMaybe<Array<User_Basic_Information_Bool_Exp>>;
  _not?: InputMaybe<User_Basic_Information_Bool_Exp>;
  _or?: InputMaybe<Array<User_Basic_Information_Bool_Exp>>;
  addressLine1?: InputMaybe<String_Comparison_Exp>;
  addressLine2?: InputMaybe<String_Comparison_Exp>;
  city?: InputMaybe<String_Comparison_Exp>;
  country?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  phone?: InputMaybe<String_Comparison_Exp>;
  stateOrProvince?: InputMaybe<String_Comparison_Exp>;
  userMetaID?: InputMaybe<Uuid_Comparison_Exp>;
  user_meta?: InputMaybe<User_Meta_Bool_Exp>;
  zipOrPostalCode?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "user_basic_information" */
export enum User_Basic_Information_Constraint {
  /** unique or primary key constraint on columns "id" */
  UserBasicInformationPkey = 'user_basic_information_pkey',
  /** unique or primary key constraint on columns "userMetaID" */
  UserBasicInformationUserMetaIdKey = 'user_basic_information_userMetaID_key',
}

/** input type for inserting data into table "user_basic_information" */
export type User_Basic_Information_Insert_Input = {
  addressLine1?: InputMaybe<Scalars['String']>;
  addressLine2?: InputMaybe<Scalars['String']>;
  city?: InputMaybe<Scalars['String']>;
  country?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['uuid']>;
  phone?: InputMaybe<Scalars['String']>;
  stateOrProvince?: InputMaybe<Scalars['String']>;
  userMetaID?: InputMaybe<Scalars['uuid']>;
  user_meta?: InputMaybe<User_Meta_Obj_Rel_Insert_Input>;
  zipOrPostalCode?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type User_Basic_Information_Max_Fields = {
  __typename?: 'user_basic_information_max_fields';
  addressLine1?: Maybe<Scalars['String']>;
  addressLine2?: Maybe<Scalars['String']>;
  city?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  phone?: Maybe<Scalars['String']>;
  stateOrProvince?: Maybe<Scalars['String']>;
  userMetaID?: Maybe<Scalars['uuid']>;
  zipOrPostalCode?: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type User_Basic_Information_Min_Fields = {
  __typename?: 'user_basic_information_min_fields';
  addressLine1?: Maybe<Scalars['String']>;
  addressLine2?: Maybe<Scalars['String']>;
  city?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  phone?: Maybe<Scalars['String']>;
  stateOrProvince?: Maybe<Scalars['String']>;
  userMetaID?: Maybe<Scalars['uuid']>;
  zipOrPostalCode?: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "user_basic_information" */
export type User_Basic_Information_Mutation_Response = {
  __typename?: 'user_basic_information_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<User_Basic_Information>;
};

/** input type for inserting object relation for remote table "user_basic_information" */
export type User_Basic_Information_Obj_Rel_Insert_Input = {
  data: User_Basic_Information_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<User_Basic_Information_On_Conflict>;
};

/** on_conflict condition type for table "user_basic_information" */
export type User_Basic_Information_On_Conflict = {
  constraint: User_Basic_Information_Constraint;
  update_columns?: Array<User_Basic_Information_Update_Column>;
  where?: InputMaybe<User_Basic_Information_Bool_Exp>;
};

/** Ordering options when selecting data from "user_basic_information". */
export type User_Basic_Information_Order_By = {
  addressLine1?: InputMaybe<Order_By>;
  addressLine2?: InputMaybe<Order_By>;
  city?: InputMaybe<Order_By>;
  country?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  phone?: InputMaybe<Order_By>;
  stateOrProvince?: InputMaybe<Order_By>;
  userMetaID?: InputMaybe<Order_By>;
  user_meta?: InputMaybe<User_Meta_Order_By>;
  zipOrPostalCode?: InputMaybe<Order_By>;
};

/** primary key columns input for table: user_basic_information */
export type User_Basic_Information_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "user_basic_information" */
export enum User_Basic_Information_Select_Column {
  /** column name */
  AddressLine1 = 'addressLine1',
  /** column name */
  AddressLine2 = 'addressLine2',
  /** column name */
  City = 'city',
  /** column name */
  Country = 'country',
  /** column name */
  Id = 'id',
  /** column name */
  Phone = 'phone',
  /** column name */
  StateOrProvince = 'stateOrProvince',
  /** column name */
  UserMetaId = 'userMetaID',
  /** column name */
  ZipOrPostalCode = 'zipOrPostalCode',
}

/** input type for updating data in table "user_basic_information" */
export type User_Basic_Information_Set_Input = {
  addressLine1?: InputMaybe<Scalars['String']>;
  addressLine2?: InputMaybe<Scalars['String']>;
  city?: InputMaybe<Scalars['String']>;
  country?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['uuid']>;
  phone?: InputMaybe<Scalars['String']>;
  stateOrProvince?: InputMaybe<Scalars['String']>;
  userMetaID?: InputMaybe<Scalars['uuid']>;
  zipOrPostalCode?: InputMaybe<Scalars['String']>;
};

/** Streaming cursor of the table "user_basic_information" */
export type User_Basic_Information_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: User_Basic_Information_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type User_Basic_Information_Stream_Cursor_Value_Input = {
  addressLine1?: InputMaybe<Scalars['String']>;
  addressLine2?: InputMaybe<Scalars['String']>;
  city?: InputMaybe<Scalars['String']>;
  country?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['uuid']>;
  phone?: InputMaybe<Scalars['String']>;
  stateOrProvince?: InputMaybe<Scalars['String']>;
  userMetaID?: InputMaybe<Scalars['uuid']>;
  zipOrPostalCode?: InputMaybe<Scalars['String']>;
};

/** update columns of table "user_basic_information" */
export enum User_Basic_Information_Update_Column {
  /** column name */
  AddressLine1 = 'addressLine1',
  /** column name */
  AddressLine2 = 'addressLine2',
  /** column name */
  City = 'city',
  /** column name */
  Country = 'country',
  /** column name */
  Id = 'id',
  /** column name */
  Phone = 'phone',
  /** column name */
  StateOrProvince = 'stateOrProvince',
  /** column name */
  UserMetaId = 'userMetaID',
  /** column name */
  ZipOrPostalCode = 'zipOrPostalCode',
}

export type User_Basic_Information_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<User_Basic_Information_Set_Input>;
  where: User_Basic_Information_Bool_Exp;
};

/** columns and relationships of "user_company" */
export type User_Company = {
  __typename?: 'user_company';
  addressLine1: Scalars['String'];
  addressLine2?: Maybe<Scalars['String']>;
  city: Scalars['String'];
  companyImage?: Maybe<Scalars['String']>;
  companyLegalName?: Maybe<Scalars['String']>;
  contractorType: Scalars['String'];
  country: Scalars['String'];
  doingBusinessAsName?: Maybe<Scalars['String']>;
  ein?: Maybe<Scalars['String']>;
  email: Scalars['String'];
  entityTaxClassification?: Maybe<Scalars['String']>;
  entityType?: Maybe<Scalars['String']>;
  id: Scalars['uuid'];
  isLlcOwnBySingleMember?: Maybe<Scalars['Boolean']>;
  llcOwnerName?: Maybe<Scalars['String']>;
  locationType: Scalars['String'];
  phone: Scalars['String'];
  soleProprietorName?: Maybe<Scalars['String']>;
  state: Scalars['String'];
  taxClassificationOfOwner?: Maybe<Scalars['String']>;
  tin?: Maybe<Scalars['String']>;
  userMetaID: Scalars['uuid'];
  /** An object relationship */
  user_meta: User_Meta;
  website?: Maybe<Scalars['String']>;
  zipPostal: Scalars['String'];
};

/** aggregated selection of "user_company" */
export type User_Company_Aggregate = {
  __typename?: 'user_company_aggregate';
  aggregate?: Maybe<User_Company_Aggregate_Fields>;
  nodes: Array<User_Company>;
};

/** aggregate fields of "user_company" */
export type User_Company_Aggregate_Fields = {
  __typename?: 'user_company_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<User_Company_Max_Fields>;
  min?: Maybe<User_Company_Min_Fields>;
};

/** aggregate fields of "user_company" */
export type User_Company_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<User_Company_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** Boolean expression to filter rows from the table "user_company". All fields are combined with a logical 'AND'. */
export type User_Company_Bool_Exp = {
  _and?: InputMaybe<Array<User_Company_Bool_Exp>>;
  _not?: InputMaybe<User_Company_Bool_Exp>;
  _or?: InputMaybe<Array<User_Company_Bool_Exp>>;
  addressLine1?: InputMaybe<String_Comparison_Exp>;
  addressLine2?: InputMaybe<String_Comparison_Exp>;
  city?: InputMaybe<String_Comparison_Exp>;
  companyImage?: InputMaybe<String_Comparison_Exp>;
  companyLegalName?: InputMaybe<String_Comparison_Exp>;
  contractorType?: InputMaybe<String_Comparison_Exp>;
  country?: InputMaybe<String_Comparison_Exp>;
  doingBusinessAsName?: InputMaybe<String_Comparison_Exp>;
  ein?: InputMaybe<String_Comparison_Exp>;
  email?: InputMaybe<String_Comparison_Exp>;
  entityTaxClassification?: InputMaybe<String_Comparison_Exp>;
  entityType?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  isLlcOwnBySingleMember?: InputMaybe<Boolean_Comparison_Exp>;
  llcOwnerName?: InputMaybe<String_Comparison_Exp>;
  locationType?: InputMaybe<String_Comparison_Exp>;
  phone?: InputMaybe<String_Comparison_Exp>;
  soleProprietorName?: InputMaybe<String_Comparison_Exp>;
  state?: InputMaybe<String_Comparison_Exp>;
  taxClassificationOfOwner?: InputMaybe<String_Comparison_Exp>;
  tin?: InputMaybe<String_Comparison_Exp>;
  userMetaID?: InputMaybe<Uuid_Comparison_Exp>;
  user_meta?: InputMaybe<User_Meta_Bool_Exp>;
  website?: InputMaybe<String_Comparison_Exp>;
  zipPostal?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "user_company" */
export enum User_Company_Constraint {
  /** unique or primary key constraint on columns "id" */
  UserCompanyPkey = 'user_company_pkey',
  /** unique or primary key constraint on columns "userMetaID" */
  UserCompanyUserMetaIdKey = 'user_company_userMetaID_key',
}

/** input type for inserting data into table "user_company" */
export type User_Company_Insert_Input = {
  addressLine1?: InputMaybe<Scalars['String']>;
  addressLine2?: InputMaybe<Scalars['String']>;
  city?: InputMaybe<Scalars['String']>;
  companyImage?: InputMaybe<Scalars['String']>;
  companyLegalName?: InputMaybe<Scalars['String']>;
  contractorType?: InputMaybe<Scalars['String']>;
  country?: InputMaybe<Scalars['String']>;
  doingBusinessAsName?: InputMaybe<Scalars['String']>;
  ein?: InputMaybe<Scalars['String']>;
  email?: InputMaybe<Scalars['String']>;
  entityTaxClassification?: InputMaybe<Scalars['String']>;
  entityType?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['uuid']>;
  isLlcOwnBySingleMember?: InputMaybe<Scalars['Boolean']>;
  llcOwnerName?: InputMaybe<Scalars['String']>;
  locationType?: InputMaybe<Scalars['String']>;
  phone?: InputMaybe<Scalars['String']>;
  soleProprietorName?: InputMaybe<Scalars['String']>;
  state?: InputMaybe<Scalars['String']>;
  taxClassificationOfOwner?: InputMaybe<Scalars['String']>;
  tin?: InputMaybe<Scalars['String']>;
  userMetaID?: InputMaybe<Scalars['uuid']>;
  user_meta?: InputMaybe<User_Meta_Obj_Rel_Insert_Input>;
  website?: InputMaybe<Scalars['String']>;
  zipPostal?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type User_Company_Max_Fields = {
  __typename?: 'user_company_max_fields';
  addressLine1?: Maybe<Scalars['String']>;
  addressLine2?: Maybe<Scalars['String']>;
  city?: Maybe<Scalars['String']>;
  companyImage?: Maybe<Scalars['String']>;
  companyLegalName?: Maybe<Scalars['String']>;
  contractorType?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  doingBusinessAsName?: Maybe<Scalars['String']>;
  ein?: Maybe<Scalars['String']>;
  email?: Maybe<Scalars['String']>;
  entityTaxClassification?: Maybe<Scalars['String']>;
  entityType?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  llcOwnerName?: Maybe<Scalars['String']>;
  locationType?: Maybe<Scalars['String']>;
  phone?: Maybe<Scalars['String']>;
  soleProprietorName?: Maybe<Scalars['String']>;
  state?: Maybe<Scalars['String']>;
  taxClassificationOfOwner?: Maybe<Scalars['String']>;
  tin?: Maybe<Scalars['String']>;
  userMetaID?: Maybe<Scalars['uuid']>;
  website?: Maybe<Scalars['String']>;
  zipPostal?: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type User_Company_Min_Fields = {
  __typename?: 'user_company_min_fields';
  addressLine1?: Maybe<Scalars['String']>;
  addressLine2?: Maybe<Scalars['String']>;
  city?: Maybe<Scalars['String']>;
  companyImage?: Maybe<Scalars['String']>;
  companyLegalName?: Maybe<Scalars['String']>;
  contractorType?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  doingBusinessAsName?: Maybe<Scalars['String']>;
  ein?: Maybe<Scalars['String']>;
  email?: Maybe<Scalars['String']>;
  entityTaxClassification?: Maybe<Scalars['String']>;
  entityType?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  llcOwnerName?: Maybe<Scalars['String']>;
  locationType?: Maybe<Scalars['String']>;
  phone?: Maybe<Scalars['String']>;
  soleProprietorName?: Maybe<Scalars['String']>;
  state?: Maybe<Scalars['String']>;
  taxClassificationOfOwner?: Maybe<Scalars['String']>;
  tin?: Maybe<Scalars['String']>;
  userMetaID?: Maybe<Scalars['uuid']>;
  website?: Maybe<Scalars['String']>;
  zipPostal?: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "user_company" */
export type User_Company_Mutation_Response = {
  __typename?: 'user_company_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<User_Company>;
};

/** input type for inserting object relation for remote table "user_company" */
export type User_Company_Obj_Rel_Insert_Input = {
  data: User_Company_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<User_Company_On_Conflict>;
};

/** on_conflict condition type for table "user_company" */
export type User_Company_On_Conflict = {
  constraint: User_Company_Constraint;
  update_columns?: Array<User_Company_Update_Column>;
  where?: InputMaybe<User_Company_Bool_Exp>;
};

/** Ordering options when selecting data from "user_company". */
export type User_Company_Order_By = {
  addressLine1?: InputMaybe<Order_By>;
  addressLine2?: InputMaybe<Order_By>;
  city?: InputMaybe<Order_By>;
  companyImage?: InputMaybe<Order_By>;
  companyLegalName?: InputMaybe<Order_By>;
  contractorType?: InputMaybe<Order_By>;
  country?: InputMaybe<Order_By>;
  doingBusinessAsName?: InputMaybe<Order_By>;
  ein?: InputMaybe<Order_By>;
  email?: InputMaybe<Order_By>;
  entityTaxClassification?: InputMaybe<Order_By>;
  entityType?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  isLlcOwnBySingleMember?: InputMaybe<Order_By>;
  llcOwnerName?: InputMaybe<Order_By>;
  locationType?: InputMaybe<Order_By>;
  phone?: InputMaybe<Order_By>;
  soleProprietorName?: InputMaybe<Order_By>;
  state?: InputMaybe<Order_By>;
  taxClassificationOfOwner?: InputMaybe<Order_By>;
  tin?: InputMaybe<Order_By>;
  userMetaID?: InputMaybe<Order_By>;
  user_meta?: InputMaybe<User_Meta_Order_By>;
  website?: InputMaybe<Order_By>;
  zipPostal?: InputMaybe<Order_By>;
};

/** primary key columns input for table: user_company */
export type User_Company_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "user_company" */
export enum User_Company_Select_Column {
  /** column name */
  AddressLine1 = 'addressLine1',
  /** column name */
  AddressLine2 = 'addressLine2',
  /** column name */
  City = 'city',
  /** column name */
  CompanyImage = 'companyImage',
  /** column name */
  CompanyLegalName = 'companyLegalName',
  /** column name */
  ContractorType = 'contractorType',
  /** column name */
  Country = 'country',
  /** column name */
  DoingBusinessAsName = 'doingBusinessAsName',
  /** column name */
  Ein = 'ein',
  /** column name */
  Email = 'email',
  /** column name */
  EntityTaxClassification = 'entityTaxClassification',
  /** column name */
  EntityType = 'entityType',
  /** column name */
  Id = 'id',
  /** column name */
  IsLlcOwnBySingleMember = 'isLlcOwnBySingleMember',
  /** column name */
  LlcOwnerName = 'llcOwnerName',
  /** column name */
  LocationType = 'locationType',
  /** column name */
  Phone = 'phone',
  /** column name */
  SoleProprietorName = 'soleProprietorName',
  /** column name */
  State = 'state',
  /** column name */
  TaxClassificationOfOwner = 'taxClassificationOfOwner',
  /** column name */
  Tin = 'tin',
  /** column name */
  UserMetaId = 'userMetaID',
  /** column name */
  Website = 'website',
  /** column name */
  ZipPostal = 'zipPostal',
}

/** input type for updating data in table "user_company" */
export type User_Company_Set_Input = {
  addressLine1?: InputMaybe<Scalars['String']>;
  addressLine2?: InputMaybe<Scalars['String']>;
  city?: InputMaybe<Scalars['String']>;
  companyImage?: InputMaybe<Scalars['String']>;
  companyLegalName?: InputMaybe<Scalars['String']>;
  contractorType?: InputMaybe<Scalars['String']>;
  country?: InputMaybe<Scalars['String']>;
  doingBusinessAsName?: InputMaybe<Scalars['String']>;
  ein?: InputMaybe<Scalars['String']>;
  email?: InputMaybe<Scalars['String']>;
  entityTaxClassification?: InputMaybe<Scalars['String']>;
  entityType?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['uuid']>;
  isLlcOwnBySingleMember?: InputMaybe<Scalars['Boolean']>;
  llcOwnerName?: InputMaybe<Scalars['String']>;
  locationType?: InputMaybe<Scalars['String']>;
  phone?: InputMaybe<Scalars['String']>;
  soleProprietorName?: InputMaybe<Scalars['String']>;
  state?: InputMaybe<Scalars['String']>;
  taxClassificationOfOwner?: InputMaybe<Scalars['String']>;
  tin?: InputMaybe<Scalars['String']>;
  userMetaID?: InputMaybe<Scalars['uuid']>;
  website?: InputMaybe<Scalars['String']>;
  zipPostal?: InputMaybe<Scalars['String']>;
};

/** Streaming cursor of the table "user_company" */
export type User_Company_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: User_Company_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type User_Company_Stream_Cursor_Value_Input = {
  addressLine1?: InputMaybe<Scalars['String']>;
  addressLine2?: InputMaybe<Scalars['String']>;
  city?: InputMaybe<Scalars['String']>;
  companyImage?: InputMaybe<Scalars['String']>;
  companyLegalName?: InputMaybe<Scalars['String']>;
  contractorType?: InputMaybe<Scalars['String']>;
  country?: InputMaybe<Scalars['String']>;
  doingBusinessAsName?: InputMaybe<Scalars['String']>;
  ein?: InputMaybe<Scalars['String']>;
  email?: InputMaybe<Scalars['String']>;
  entityTaxClassification?: InputMaybe<Scalars['String']>;
  entityType?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['uuid']>;
  isLlcOwnBySingleMember?: InputMaybe<Scalars['Boolean']>;
  llcOwnerName?: InputMaybe<Scalars['String']>;
  locationType?: InputMaybe<Scalars['String']>;
  phone?: InputMaybe<Scalars['String']>;
  soleProprietorName?: InputMaybe<Scalars['String']>;
  state?: InputMaybe<Scalars['String']>;
  taxClassificationOfOwner?: InputMaybe<Scalars['String']>;
  tin?: InputMaybe<Scalars['String']>;
  userMetaID?: InputMaybe<Scalars['uuid']>;
  website?: InputMaybe<Scalars['String']>;
  zipPostal?: InputMaybe<Scalars['String']>;
};

/** update columns of table "user_company" */
export enum User_Company_Update_Column {
  /** column name */
  AddressLine1 = 'addressLine1',
  /** column name */
  AddressLine2 = 'addressLine2',
  /** column name */
  City = 'city',
  /** column name */
  CompanyImage = 'companyImage',
  /** column name */
  CompanyLegalName = 'companyLegalName',
  /** column name */
  ContractorType = 'contractorType',
  /** column name */
  Country = 'country',
  /** column name */
  DoingBusinessAsName = 'doingBusinessAsName',
  /** column name */
  Ein = 'ein',
  /** column name */
  Email = 'email',
  /** column name */
  EntityTaxClassification = 'entityTaxClassification',
  /** column name */
  EntityType = 'entityType',
  /** column name */
  Id = 'id',
  /** column name */
  IsLlcOwnBySingleMember = 'isLlcOwnBySingleMember',
  /** column name */
  LlcOwnerName = 'llcOwnerName',
  /** column name */
  LocationType = 'locationType',
  /** column name */
  Phone = 'phone',
  /** column name */
  SoleProprietorName = 'soleProprietorName',
  /** column name */
  State = 'state',
  /** column name */
  TaxClassificationOfOwner = 'taxClassificationOfOwner',
  /** column name */
  Tin = 'tin',
  /** column name */
  UserMetaId = 'userMetaID',
  /** column name */
  Website = 'website',
  /** column name */
  ZipPostal = 'zipPostal',
}

export type User_Company_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<User_Company_Set_Input>;
  where: User_Company_Bool_Exp;
};

/** columns and relationships of "user_completed_customer_sale" */
export type User_Completed_Customer_Sale = {
  __typename?: 'user_completed_customer_sale';
  /** An object relationship */
  customer: Customer;
  customerID: Scalars['uuid'];
  id: Scalars['uuid'];
  percentage: Scalars['Int'];
  /** An object relationship */
  public_user_meta?: Maybe<User_Meta>;
  userMetaID: Scalars['uuid'];
  /** An object relationship */
  user_meta: User_Meta;
};

/** aggregated selection of "user_completed_customer_sale" */
export type User_Completed_Customer_Sale_Aggregate = {
  __typename?: 'user_completed_customer_sale_aggregate';
  aggregate?: Maybe<User_Completed_Customer_Sale_Aggregate_Fields>;
  nodes: Array<User_Completed_Customer_Sale>;
};

/** aggregate fields of "user_completed_customer_sale" */
export type User_Completed_Customer_Sale_Aggregate_Fields = {
  __typename?: 'user_completed_customer_sale_aggregate_fields';
  avg?: Maybe<User_Completed_Customer_Sale_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<User_Completed_Customer_Sale_Max_Fields>;
  min?: Maybe<User_Completed_Customer_Sale_Min_Fields>;
  stddev?: Maybe<User_Completed_Customer_Sale_Stddev_Fields>;
  stddev_pop?: Maybe<User_Completed_Customer_Sale_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<User_Completed_Customer_Sale_Stddev_Samp_Fields>;
  sum?: Maybe<User_Completed_Customer_Sale_Sum_Fields>;
  var_pop?: Maybe<User_Completed_Customer_Sale_Var_Pop_Fields>;
  var_samp?: Maybe<User_Completed_Customer_Sale_Var_Samp_Fields>;
  variance?: Maybe<User_Completed_Customer_Sale_Variance_Fields>;
};

/** aggregate fields of "user_completed_customer_sale" */
export type User_Completed_Customer_Sale_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<User_Completed_Customer_Sale_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "user_completed_customer_sale" */
export type User_Completed_Customer_Sale_Aggregate_Order_By = {
  avg?: InputMaybe<User_Completed_Customer_Sale_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<User_Completed_Customer_Sale_Max_Order_By>;
  min?: InputMaybe<User_Completed_Customer_Sale_Min_Order_By>;
  stddev?: InputMaybe<User_Completed_Customer_Sale_Stddev_Order_By>;
  stddev_pop?: InputMaybe<User_Completed_Customer_Sale_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<User_Completed_Customer_Sale_Stddev_Samp_Order_By>;
  sum?: InputMaybe<User_Completed_Customer_Sale_Sum_Order_By>;
  var_pop?: InputMaybe<User_Completed_Customer_Sale_Var_Pop_Order_By>;
  var_samp?: InputMaybe<User_Completed_Customer_Sale_Var_Samp_Order_By>;
  variance?: InputMaybe<User_Completed_Customer_Sale_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "user_completed_customer_sale" */
export type User_Completed_Customer_Sale_Arr_Rel_Insert_Input = {
  data: Array<User_Completed_Customer_Sale_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<User_Completed_Customer_Sale_On_Conflict>;
};

/** aggregate avg on columns */
export type User_Completed_Customer_Sale_Avg_Fields = {
  __typename?: 'user_completed_customer_sale_avg_fields';
  percentage?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "user_completed_customer_sale" */
export type User_Completed_Customer_Sale_Avg_Order_By = {
  percentage?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "user_completed_customer_sale". All fields are combined with a logical 'AND'. */
export type User_Completed_Customer_Sale_Bool_Exp = {
  _and?: InputMaybe<Array<User_Completed_Customer_Sale_Bool_Exp>>;
  _not?: InputMaybe<User_Completed_Customer_Sale_Bool_Exp>;
  _or?: InputMaybe<Array<User_Completed_Customer_Sale_Bool_Exp>>;
  customer?: InputMaybe<Customer_Bool_Exp>;
  customerID?: InputMaybe<Uuid_Comparison_Exp>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  percentage?: InputMaybe<Int_Comparison_Exp>;
  public_user_meta?: InputMaybe<User_Meta_Bool_Exp>;
  userMetaID?: InputMaybe<Uuid_Comparison_Exp>;
  user_meta?: InputMaybe<User_Meta_Bool_Exp>;
};

/** unique or primary key constraints on table "user_completed_customer_sale" */
export enum User_Completed_Customer_Sale_Constraint {
  /** unique or primary key constraint on columns "id" */
  UserCompletedCustomerSalePkey = 'user_completed_customer_sale_pkey',
  /** unique or primary key constraint on columns "userMetaID", "customerID" */
  UserCompletedCustomerSaleUserMetaIdCustomerDetailIdKey = 'user_completed_customer_sale_userMetaID_customerDetailID_key',
}

/** input type for incrementing numeric columns in table "user_completed_customer_sale" */
export type User_Completed_Customer_Sale_Inc_Input = {
  percentage?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "user_completed_customer_sale" */
export type User_Completed_Customer_Sale_Insert_Input = {
  customer?: InputMaybe<Customer_Obj_Rel_Insert_Input>;
  customerID?: InputMaybe<Scalars['uuid']>;
  id?: InputMaybe<Scalars['uuid']>;
  percentage?: InputMaybe<Scalars['Int']>;
  public_user_meta?: InputMaybe<User_Meta_Obj_Rel_Insert_Input>;
  userMetaID?: InputMaybe<Scalars['uuid']>;
  user_meta?: InputMaybe<User_Meta_Obj_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type User_Completed_Customer_Sale_Max_Fields = {
  __typename?: 'user_completed_customer_sale_max_fields';
  customerID?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  percentage?: Maybe<Scalars['Int']>;
  userMetaID?: Maybe<Scalars['uuid']>;
};

/** order by max() on columns of table "user_completed_customer_sale" */
export type User_Completed_Customer_Sale_Max_Order_By = {
  customerID?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  percentage?: InputMaybe<Order_By>;
  userMetaID?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type User_Completed_Customer_Sale_Min_Fields = {
  __typename?: 'user_completed_customer_sale_min_fields';
  customerID?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  percentage?: Maybe<Scalars['Int']>;
  userMetaID?: Maybe<Scalars['uuid']>;
};

/** order by min() on columns of table "user_completed_customer_sale" */
export type User_Completed_Customer_Sale_Min_Order_By = {
  customerID?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  percentage?: InputMaybe<Order_By>;
  userMetaID?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "user_completed_customer_sale" */
export type User_Completed_Customer_Sale_Mutation_Response = {
  __typename?: 'user_completed_customer_sale_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<User_Completed_Customer_Sale>;
};

/** on_conflict condition type for table "user_completed_customer_sale" */
export type User_Completed_Customer_Sale_On_Conflict = {
  constraint: User_Completed_Customer_Sale_Constraint;
  update_columns?: Array<User_Completed_Customer_Sale_Update_Column>;
  where?: InputMaybe<User_Completed_Customer_Sale_Bool_Exp>;
};

/** Ordering options when selecting data from "user_completed_customer_sale". */
export type User_Completed_Customer_Sale_Order_By = {
  customer?: InputMaybe<Customer_Order_By>;
  customerID?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  percentage?: InputMaybe<Order_By>;
  public_user_meta?: InputMaybe<User_Meta_Order_By>;
  userMetaID?: InputMaybe<Order_By>;
  user_meta?: InputMaybe<User_Meta_Order_By>;
};

/** primary key columns input for table: user_completed_customer_sale */
export type User_Completed_Customer_Sale_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "user_completed_customer_sale" */
export enum User_Completed_Customer_Sale_Select_Column {
  /** column name */
  CustomerId = 'customerID',
  /** column name */
  Id = 'id',
  /** column name */
  Percentage = 'percentage',
  /** column name */
  UserMetaId = 'userMetaID',
}

/** input type for updating data in table "user_completed_customer_sale" */
export type User_Completed_Customer_Sale_Set_Input = {
  customerID?: InputMaybe<Scalars['uuid']>;
  id?: InputMaybe<Scalars['uuid']>;
  percentage?: InputMaybe<Scalars['Int']>;
  userMetaID?: InputMaybe<Scalars['uuid']>;
};

/** aggregate stddev on columns */
export type User_Completed_Customer_Sale_Stddev_Fields = {
  __typename?: 'user_completed_customer_sale_stddev_fields';
  percentage?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "user_completed_customer_sale" */
export type User_Completed_Customer_Sale_Stddev_Order_By = {
  percentage?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type User_Completed_Customer_Sale_Stddev_Pop_Fields = {
  __typename?: 'user_completed_customer_sale_stddev_pop_fields';
  percentage?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "user_completed_customer_sale" */
export type User_Completed_Customer_Sale_Stddev_Pop_Order_By = {
  percentage?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type User_Completed_Customer_Sale_Stddev_Samp_Fields = {
  __typename?: 'user_completed_customer_sale_stddev_samp_fields';
  percentage?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "user_completed_customer_sale" */
export type User_Completed_Customer_Sale_Stddev_Samp_Order_By = {
  percentage?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "user_completed_customer_sale" */
export type User_Completed_Customer_Sale_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: User_Completed_Customer_Sale_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type User_Completed_Customer_Sale_Stream_Cursor_Value_Input = {
  customerID?: InputMaybe<Scalars['uuid']>;
  id?: InputMaybe<Scalars['uuid']>;
  percentage?: InputMaybe<Scalars['Int']>;
  userMetaID?: InputMaybe<Scalars['uuid']>;
};

/** aggregate sum on columns */
export type User_Completed_Customer_Sale_Sum_Fields = {
  __typename?: 'user_completed_customer_sale_sum_fields';
  percentage?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "user_completed_customer_sale" */
export type User_Completed_Customer_Sale_Sum_Order_By = {
  percentage?: InputMaybe<Order_By>;
};

/** update columns of table "user_completed_customer_sale" */
export enum User_Completed_Customer_Sale_Update_Column {
  /** column name */
  CustomerId = 'customerID',
  /** column name */
  Id = 'id',
  /** column name */
  Percentage = 'percentage',
  /** column name */
  UserMetaId = 'userMetaID',
}

export type User_Completed_Customer_Sale_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<User_Completed_Customer_Sale_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<User_Completed_Customer_Sale_Set_Input>;
  where: User_Completed_Customer_Sale_Bool_Exp;
};

/** aggregate var_pop on columns */
export type User_Completed_Customer_Sale_Var_Pop_Fields = {
  __typename?: 'user_completed_customer_sale_var_pop_fields';
  percentage?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "user_completed_customer_sale" */
export type User_Completed_Customer_Sale_Var_Pop_Order_By = {
  percentage?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type User_Completed_Customer_Sale_Var_Samp_Fields = {
  __typename?: 'user_completed_customer_sale_var_samp_fields';
  percentage?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "user_completed_customer_sale" */
export type User_Completed_Customer_Sale_Var_Samp_Order_By = {
  percentage?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type User_Completed_Customer_Sale_Variance_Fields = {
  __typename?: 'user_completed_customer_sale_variance_fields';
  percentage?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "user_completed_customer_sale" */
export type User_Completed_Customer_Sale_Variance_Order_By = {
  percentage?: InputMaybe<Order_By>;
};

/** columns and relationships of "user_in_market_experience" */
export type User_In_Market_Experience = {
  __typename?: 'user_in_market_experience';
  countryCode: Scalars['String'];
  id: Scalars['uuid'];
  inMarketExperienceLevelID: Scalars['uuid'];
  /** An object relationship */
  in_market_experience_level: In_Market_Experience_Level;
  userMetaID: Scalars['uuid'];
  /** An object relationship */
  user_meta: User_Meta;
};

/** aggregated selection of "user_in_market_experience" */
export type User_In_Market_Experience_Aggregate = {
  __typename?: 'user_in_market_experience_aggregate';
  aggregate?: Maybe<User_In_Market_Experience_Aggregate_Fields>;
  nodes: Array<User_In_Market_Experience>;
};

/** aggregate fields of "user_in_market_experience" */
export type User_In_Market_Experience_Aggregate_Fields = {
  __typename?: 'user_in_market_experience_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<User_In_Market_Experience_Max_Fields>;
  min?: Maybe<User_In_Market_Experience_Min_Fields>;
};

/** aggregate fields of "user_in_market_experience" */
export type User_In_Market_Experience_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<User_In_Market_Experience_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "user_in_market_experience" */
export type User_In_Market_Experience_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<User_In_Market_Experience_Max_Order_By>;
  min?: InputMaybe<User_In_Market_Experience_Min_Order_By>;
};

/** input type for inserting array relation for remote table "user_in_market_experience" */
export type User_In_Market_Experience_Arr_Rel_Insert_Input = {
  data: Array<User_In_Market_Experience_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<User_In_Market_Experience_On_Conflict>;
};

/** Boolean expression to filter rows from the table "user_in_market_experience". All fields are combined with a logical 'AND'. */
export type User_In_Market_Experience_Bool_Exp = {
  _and?: InputMaybe<Array<User_In_Market_Experience_Bool_Exp>>;
  _not?: InputMaybe<User_In_Market_Experience_Bool_Exp>;
  _or?: InputMaybe<Array<User_In_Market_Experience_Bool_Exp>>;
  countryCode?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  inMarketExperienceLevelID?: InputMaybe<Uuid_Comparison_Exp>;
  in_market_experience_level?: InputMaybe<In_Market_Experience_Level_Bool_Exp>;
  userMetaID?: InputMaybe<Uuid_Comparison_Exp>;
  user_meta?: InputMaybe<User_Meta_Bool_Exp>;
};

/** unique or primary key constraints on table "user_in_market_experience" */
export enum User_In_Market_Experience_Constraint {
  /** unique or primary key constraint on columns "id" */
  UserInMarketExperiencePkey = 'user_in_market_experience_pkey',
  /** unique or primary key constraint on columns "userMetaID", "countryCode" */
  UserInMarketExperienceUserMetaIdCountryCodeKey = 'user_in_market_experience_userMetaID_countryCode_key',
}

/** input type for inserting data into table "user_in_market_experience" */
export type User_In_Market_Experience_Insert_Input = {
  countryCode?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['uuid']>;
  inMarketExperienceLevelID?: InputMaybe<Scalars['uuid']>;
  in_market_experience_level?: InputMaybe<In_Market_Experience_Level_Obj_Rel_Insert_Input>;
  userMetaID?: InputMaybe<Scalars['uuid']>;
  user_meta?: InputMaybe<User_Meta_Obj_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type User_In_Market_Experience_Max_Fields = {
  __typename?: 'user_in_market_experience_max_fields';
  countryCode?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  inMarketExperienceLevelID?: Maybe<Scalars['uuid']>;
  userMetaID?: Maybe<Scalars['uuid']>;
};

/** order by max() on columns of table "user_in_market_experience" */
export type User_In_Market_Experience_Max_Order_By = {
  countryCode?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  inMarketExperienceLevelID?: InputMaybe<Order_By>;
  userMetaID?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type User_In_Market_Experience_Min_Fields = {
  __typename?: 'user_in_market_experience_min_fields';
  countryCode?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  inMarketExperienceLevelID?: Maybe<Scalars['uuid']>;
  userMetaID?: Maybe<Scalars['uuid']>;
};

/** order by min() on columns of table "user_in_market_experience" */
export type User_In_Market_Experience_Min_Order_By = {
  countryCode?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  inMarketExperienceLevelID?: InputMaybe<Order_By>;
  userMetaID?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "user_in_market_experience" */
export type User_In_Market_Experience_Mutation_Response = {
  __typename?: 'user_in_market_experience_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<User_In_Market_Experience>;
};

/** on_conflict condition type for table "user_in_market_experience" */
export type User_In_Market_Experience_On_Conflict = {
  constraint: User_In_Market_Experience_Constraint;
  update_columns?: Array<User_In_Market_Experience_Update_Column>;
  where?: InputMaybe<User_In_Market_Experience_Bool_Exp>;
};

/** Ordering options when selecting data from "user_in_market_experience". */
export type User_In_Market_Experience_Order_By = {
  countryCode?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  inMarketExperienceLevelID?: InputMaybe<Order_By>;
  in_market_experience_level?: InputMaybe<In_Market_Experience_Level_Order_By>;
  userMetaID?: InputMaybe<Order_By>;
  user_meta?: InputMaybe<User_Meta_Order_By>;
};

/** primary key columns input for table: user_in_market_experience */
export type User_In_Market_Experience_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "user_in_market_experience" */
export enum User_In_Market_Experience_Select_Column {
  /** column name */
  CountryCode = 'countryCode',
  /** column name */
  Id = 'id',
  /** column name */
  InMarketExperienceLevelId = 'inMarketExperienceLevelID',
  /** column name */
  UserMetaId = 'userMetaID',
}

/** input type for updating data in table "user_in_market_experience" */
export type User_In_Market_Experience_Set_Input = {
  countryCode?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['uuid']>;
  inMarketExperienceLevelID?: InputMaybe<Scalars['uuid']>;
  userMetaID?: InputMaybe<Scalars['uuid']>;
};

/** Streaming cursor of the table "user_in_market_experience" */
export type User_In_Market_Experience_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: User_In_Market_Experience_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type User_In_Market_Experience_Stream_Cursor_Value_Input = {
  countryCode?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['uuid']>;
  inMarketExperienceLevelID?: InputMaybe<Scalars['uuid']>;
  userMetaID?: InputMaybe<Scalars['uuid']>;
};

/** update columns of table "user_in_market_experience" */
export enum User_In_Market_Experience_Update_Column {
  /** column name */
  CountryCode = 'countryCode',
  /** column name */
  Id = 'id',
  /** column name */
  InMarketExperienceLevelId = 'inMarketExperienceLevelID',
  /** column name */
  UserMetaId = 'userMetaID',
}

export type User_In_Market_Experience_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<User_In_Market_Experience_Set_Input>;
  where: User_In_Market_Experience_Bool_Exp;
};

/** columns and relationships of "user_industry_experience" */
export type User_Industry_Experience = {
  __typename?: 'user_industry_experience';
  id: Scalars['uuid'];
  /** An object relationship */
  industry: Industry;
  industryExperienceLevelID: Scalars['uuid'];
  industryID: Scalars['uuid'];
  /** An object relationship */
  industry_experience_level: Industry_Experience_Level;
  /** An object relationship */
  public_user_meta?: Maybe<Public_User_Meta>;
  userMetaID: Scalars['uuid'];
  /** An object relationship */
  user_meta: User_Meta;
};

/** aggregated selection of "user_industry_experience" */
export type User_Industry_Experience_Aggregate = {
  __typename?: 'user_industry_experience_aggregate';
  aggregate?: Maybe<User_Industry_Experience_Aggregate_Fields>;
  nodes: Array<User_Industry_Experience>;
};

/** aggregate fields of "user_industry_experience" */
export type User_Industry_Experience_Aggregate_Fields = {
  __typename?: 'user_industry_experience_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<User_Industry_Experience_Max_Fields>;
  min?: Maybe<User_Industry_Experience_Min_Fields>;
};

/** aggregate fields of "user_industry_experience" */
export type User_Industry_Experience_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<User_Industry_Experience_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "user_industry_experience" */
export type User_Industry_Experience_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<User_Industry_Experience_Max_Order_By>;
  min?: InputMaybe<User_Industry_Experience_Min_Order_By>;
};

/** input type for inserting array relation for remote table "user_industry_experience" */
export type User_Industry_Experience_Arr_Rel_Insert_Input = {
  data: Array<User_Industry_Experience_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<User_Industry_Experience_On_Conflict>;
};

/** Boolean expression to filter rows from the table "user_industry_experience". All fields are combined with a logical 'AND'. */
export type User_Industry_Experience_Bool_Exp = {
  _and?: InputMaybe<Array<User_Industry_Experience_Bool_Exp>>;
  _not?: InputMaybe<User_Industry_Experience_Bool_Exp>;
  _or?: InputMaybe<Array<User_Industry_Experience_Bool_Exp>>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  industry?: InputMaybe<Industry_Bool_Exp>;
  industryExperienceLevelID?: InputMaybe<Uuid_Comparison_Exp>;
  industryID?: InputMaybe<Uuid_Comparison_Exp>;
  industry_experience_level?: InputMaybe<Industry_Experience_Level_Bool_Exp>;
  public_user_meta?: InputMaybe<Public_User_Meta_Bool_Exp>;
  userMetaID?: InputMaybe<Uuid_Comparison_Exp>;
  user_meta?: InputMaybe<User_Meta_Bool_Exp>;
};

/** unique or primary key constraints on table "user_industry_experience" */
export enum User_Industry_Experience_Constraint {
  /** unique or primary key constraint on columns "userMetaID", "industryID" */
  UserIndustryExperienceIndustryIdUserMetaIdKey = 'user_industry_experience_industryID_userMetaID_key',
  /** unique or primary key constraint on columns "id" */
  UserIndustryExperiencePkey = 'user_industry_experience_pkey',
}

/** input type for inserting data into table "user_industry_experience" */
export type User_Industry_Experience_Insert_Input = {
  id?: InputMaybe<Scalars['uuid']>;
  industry?: InputMaybe<Industry_Obj_Rel_Insert_Input>;
  industryExperienceLevelID?: InputMaybe<Scalars['uuid']>;
  industryID?: InputMaybe<Scalars['uuid']>;
  industry_experience_level?: InputMaybe<Industry_Experience_Level_Obj_Rel_Insert_Input>;
  public_user_meta?: InputMaybe<Public_User_Meta_Obj_Rel_Insert_Input>;
  userMetaID?: InputMaybe<Scalars['uuid']>;
  user_meta?: InputMaybe<User_Meta_Obj_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type User_Industry_Experience_Max_Fields = {
  __typename?: 'user_industry_experience_max_fields';
  id?: Maybe<Scalars['uuid']>;
  industryExperienceLevelID?: Maybe<Scalars['uuid']>;
  industryID?: Maybe<Scalars['uuid']>;
  userMetaID?: Maybe<Scalars['uuid']>;
};

/** order by max() on columns of table "user_industry_experience" */
export type User_Industry_Experience_Max_Order_By = {
  id?: InputMaybe<Order_By>;
  industryExperienceLevelID?: InputMaybe<Order_By>;
  industryID?: InputMaybe<Order_By>;
  userMetaID?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type User_Industry_Experience_Min_Fields = {
  __typename?: 'user_industry_experience_min_fields';
  id?: Maybe<Scalars['uuid']>;
  industryExperienceLevelID?: Maybe<Scalars['uuid']>;
  industryID?: Maybe<Scalars['uuid']>;
  userMetaID?: Maybe<Scalars['uuid']>;
};

/** order by min() on columns of table "user_industry_experience" */
export type User_Industry_Experience_Min_Order_By = {
  id?: InputMaybe<Order_By>;
  industryExperienceLevelID?: InputMaybe<Order_By>;
  industryID?: InputMaybe<Order_By>;
  userMetaID?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "user_industry_experience" */
export type User_Industry_Experience_Mutation_Response = {
  __typename?: 'user_industry_experience_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<User_Industry_Experience>;
};

/** on_conflict condition type for table "user_industry_experience" */
export type User_Industry_Experience_On_Conflict = {
  constraint: User_Industry_Experience_Constraint;
  update_columns?: Array<User_Industry_Experience_Update_Column>;
  where?: InputMaybe<User_Industry_Experience_Bool_Exp>;
};

/** Ordering options when selecting data from "user_industry_experience". */
export type User_Industry_Experience_Order_By = {
  id?: InputMaybe<Order_By>;
  industry?: InputMaybe<Industry_Order_By>;
  industryExperienceLevelID?: InputMaybe<Order_By>;
  industryID?: InputMaybe<Order_By>;
  industry_experience_level?: InputMaybe<Industry_Experience_Level_Order_By>;
  public_user_meta?: InputMaybe<Public_User_Meta_Order_By>;
  userMetaID?: InputMaybe<Order_By>;
  user_meta?: InputMaybe<User_Meta_Order_By>;
};

/** primary key columns input for table: user_industry_experience */
export type User_Industry_Experience_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "user_industry_experience" */
export enum User_Industry_Experience_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  IndustryExperienceLevelId = 'industryExperienceLevelID',
  /** column name */
  IndustryId = 'industryID',
  /** column name */
  UserMetaId = 'userMetaID',
}

/** input type for updating data in table "user_industry_experience" */
export type User_Industry_Experience_Set_Input = {
  id?: InputMaybe<Scalars['uuid']>;
  industryExperienceLevelID?: InputMaybe<Scalars['uuid']>;
  industryID?: InputMaybe<Scalars['uuid']>;
  userMetaID?: InputMaybe<Scalars['uuid']>;
};

/** Streaming cursor of the table "user_industry_experience" */
export type User_Industry_Experience_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: User_Industry_Experience_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type User_Industry_Experience_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['uuid']>;
  industryExperienceLevelID?: InputMaybe<Scalars['uuid']>;
  industryID?: InputMaybe<Scalars['uuid']>;
  userMetaID?: InputMaybe<Scalars['uuid']>;
};

/** update columns of table "user_industry_experience" */
export enum User_Industry_Experience_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  IndustryExperienceLevelId = 'industryExperienceLevelID',
  /** column name */
  IndustryId = 'industryID',
  /** column name */
  UserMetaId = 'userMetaID',
}

export type User_Industry_Experience_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<User_Industry_Experience_Set_Input>;
  where: User_Industry_Experience_Bool_Exp;
};

/** columns and relationships of "user_language" */
export type User_Language = {
  __typename?: 'user_language';
  id: Scalars['uuid'];
  languageCode: Scalars['String'];
  languageLevelID: Scalars['uuid'];
  /** An object relationship */
  language_level: Language_Level;
  userMetaID: Scalars['uuid'];
  /** An object relationship */
  user_meta: User_Meta;
};

/** aggregated selection of "user_language" */
export type User_Language_Aggregate = {
  __typename?: 'user_language_aggregate';
  aggregate?: Maybe<User_Language_Aggregate_Fields>;
  nodes: Array<User_Language>;
};

/** aggregate fields of "user_language" */
export type User_Language_Aggregate_Fields = {
  __typename?: 'user_language_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<User_Language_Max_Fields>;
  min?: Maybe<User_Language_Min_Fields>;
};

/** aggregate fields of "user_language" */
export type User_Language_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<User_Language_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "user_language" */
export type User_Language_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<User_Language_Max_Order_By>;
  min?: InputMaybe<User_Language_Min_Order_By>;
};

/** input type for inserting array relation for remote table "user_language" */
export type User_Language_Arr_Rel_Insert_Input = {
  data: Array<User_Language_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<User_Language_On_Conflict>;
};

/** Boolean expression to filter rows from the table "user_language". All fields are combined with a logical 'AND'. */
export type User_Language_Bool_Exp = {
  _and?: InputMaybe<Array<User_Language_Bool_Exp>>;
  _not?: InputMaybe<User_Language_Bool_Exp>;
  _or?: InputMaybe<Array<User_Language_Bool_Exp>>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  languageCode?: InputMaybe<String_Comparison_Exp>;
  languageLevelID?: InputMaybe<Uuid_Comparison_Exp>;
  language_level?: InputMaybe<Language_Level_Bool_Exp>;
  userMetaID?: InputMaybe<Uuid_Comparison_Exp>;
  user_meta?: InputMaybe<User_Meta_Bool_Exp>;
};

/** unique or primary key constraints on table "user_language" */
export enum User_Language_Constraint {
  /** unique or primary key constraint on columns "userMetaID", "languageCode" */
  UserLanguageLanguageCodeUserMetaIdKey = 'user_language_languageCode_userMetaID_key',
  /** unique or primary key constraint on columns "id" */
  UserLanguagePkey = 'user_language_pkey',
}

/** input type for inserting data into table "user_language" */
export type User_Language_Insert_Input = {
  id?: InputMaybe<Scalars['uuid']>;
  languageCode?: InputMaybe<Scalars['String']>;
  languageLevelID?: InputMaybe<Scalars['uuid']>;
  language_level?: InputMaybe<Language_Level_Obj_Rel_Insert_Input>;
  userMetaID?: InputMaybe<Scalars['uuid']>;
  user_meta?: InputMaybe<User_Meta_Obj_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type User_Language_Max_Fields = {
  __typename?: 'user_language_max_fields';
  id?: Maybe<Scalars['uuid']>;
  languageCode?: Maybe<Scalars['String']>;
  languageLevelID?: Maybe<Scalars['uuid']>;
  userMetaID?: Maybe<Scalars['uuid']>;
};

/** order by max() on columns of table "user_language" */
export type User_Language_Max_Order_By = {
  id?: InputMaybe<Order_By>;
  languageCode?: InputMaybe<Order_By>;
  languageLevelID?: InputMaybe<Order_By>;
  userMetaID?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type User_Language_Min_Fields = {
  __typename?: 'user_language_min_fields';
  id?: Maybe<Scalars['uuid']>;
  languageCode?: Maybe<Scalars['String']>;
  languageLevelID?: Maybe<Scalars['uuid']>;
  userMetaID?: Maybe<Scalars['uuid']>;
};

/** order by min() on columns of table "user_language" */
export type User_Language_Min_Order_By = {
  id?: InputMaybe<Order_By>;
  languageCode?: InputMaybe<Order_By>;
  languageLevelID?: InputMaybe<Order_By>;
  userMetaID?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "user_language" */
export type User_Language_Mutation_Response = {
  __typename?: 'user_language_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<User_Language>;
};

/** on_conflict condition type for table "user_language" */
export type User_Language_On_Conflict = {
  constraint: User_Language_Constraint;
  update_columns?: Array<User_Language_Update_Column>;
  where?: InputMaybe<User_Language_Bool_Exp>;
};

/** Ordering options when selecting data from "user_language". */
export type User_Language_Order_By = {
  id?: InputMaybe<Order_By>;
  languageCode?: InputMaybe<Order_By>;
  languageLevelID?: InputMaybe<Order_By>;
  language_level?: InputMaybe<Language_Level_Order_By>;
  userMetaID?: InputMaybe<Order_By>;
  user_meta?: InputMaybe<User_Meta_Order_By>;
};

/** primary key columns input for table: user_language */
export type User_Language_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "user_language" */
export enum User_Language_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  LanguageCode = 'languageCode',
  /** column name */
  LanguageLevelId = 'languageLevelID',
  /** column name */
  UserMetaId = 'userMetaID',
}

/** input type for updating data in table "user_language" */
export type User_Language_Set_Input = {
  id?: InputMaybe<Scalars['uuid']>;
  languageCode?: InputMaybe<Scalars['String']>;
  languageLevelID?: InputMaybe<Scalars['uuid']>;
  userMetaID?: InputMaybe<Scalars['uuid']>;
};

/** Streaming cursor of the table "user_language" */
export type User_Language_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: User_Language_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type User_Language_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['uuid']>;
  languageCode?: InputMaybe<Scalars['String']>;
  languageLevelID?: InputMaybe<Scalars['uuid']>;
  userMetaID?: InputMaybe<Scalars['uuid']>;
};

/** update columns of table "user_language" */
export enum User_Language_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  LanguageCode = 'languageCode',
  /** column name */
  LanguageLevelId = 'languageLevelID',
  /** column name */
  UserMetaId = 'userMetaID',
}

export type User_Language_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<User_Language_Set_Input>;
  where: User_Language_Bool_Exp;
};

/** columns and relationships of "user_meta" */
export type User_Meta = {
  __typename?: 'user_meta';
  about?: Maybe<Scalars['String']>;
  avatarKey?: Maybe<Scalars['String']>;
  /** An array relationship */
  case_studies: Array<Case_Study>;
  /** An aggregate relationship */
  case_studies_aggregate: Case_Study_Aggregate;
  /** An array relationship */
  case_study_users: Array<Case_Study_User>;
  /** An aggregate relationship */
  case_study_users_aggregate: Case_Study_User_Aggregate;
  cognitoSub: Scalars['String'];
  /** An object relationship */
  company?: Maybe<Company>;
  companyID?: Maybe<Scalars['uuid']>;
  /** An array relationship */
  company_team_contributors: Array<Company_Team_Contributor>;
  /** An aggregate relationship */
  company_team_contributors_aggregate: Company_Team_Contributor_Aggregate;
  created_at: Scalars['timestamptz'];
  /** An array relationship */
  custom_payout_line_items: Array<Custom_Payout_Line_Item>;
  /** An aggregate relationship */
  custom_payout_line_items_aggregate: Custom_Payout_Line_Item_Aggregate;
  /** An array relationship */
  custom_project_payout_distributions: Array<Custom_Project_Payout_Distribution>;
  /** An aggregate relationship */
  custom_project_payout_distributions_aggregate: Custom_Project_Payout_Distribution_Aggregate;
  /** An array relationship */
  customer_closing_parties: Array<Customer_Closing_Party>;
  /** An aggregate relationship */
  customer_closing_parties_aggregate: Customer_Closing_Party_Aggregate;
  /** An array relationship */
  customer_originating_parties: Array<Customer_Originating_Party>;
  /** An aggregate relationship */
  customer_originating_parties_aggregate: Customer_Originating_Party_Aggregate;
  /** An array relationship */
  customer_referrers: Array<Customer_Referrer>;
  /** An aggregate relationship */
  customer_referrers_aggregate: Customer_Referrer_Aggregate;
  /** An array relationship */
  document_associated_users: Array<Document_Associated_User>;
  /** An aggregate relationship */
  document_associated_users_aggregate: Document_Associated_User_Aggregate;
  /** An array relationship */
  documents: Array<Document>;
  /** An aggregate relationship */
  documents_aggregate: Document_Aggregate;
  email: Scalars['String'];
  firstName: Scalars['String'];
  /** An array relationship */
  fixed_price_invoice_line_items: Array<Fixed_Price_Invoice_Line_Item>;
  /** An aggregate relationship */
  fixed_price_invoice_line_items_aggregate: Fixed_Price_Invoice_Line_Item_Aggregate;
  id: Scalars['uuid'];
  isAPIUser: Scalars['Boolean'];
  isAccountInitiated: Scalars['Boolean'];
  /** A computed field, executes function "get_user_sync_status" */
  isSynced?: Maybe<Scalars['Boolean']>;
  joinedDate?: Maybe<Scalars['timestamptz']>;
  lastName?: Maybe<Scalars['String']>;
  lastPasswordResetAt?: Maybe<Scalars['timestamptz']>;
  /** A computed field, executes function "get_user_full_name" */
  name?: Maybe<Scalars['String']>;
  /** An array relationship */
  partners: Array<Partner>;
  /** An aggregate relationship */
  partners_aggregate: Partner_Aggregate;
  /** An array relationship */
  payout_distributions: Array<Payout_Distribution>;
  /** An aggregate relationship */
  payout_distributions_aggregate: Payout_Distribution_Aggregate;
  privateInformation: GetUsersListForGoogleScriptsResult;
  ripplingID?: Maybe<Scalars['String']>;
  slackID?: Maybe<Scalars['String']>;
  slackNotificationPausedUntil?: Maybe<Scalars['timestamptz']>;
  slackNotificationPausingAt?: Maybe<Scalars['timestamptz']>;
  /** An array relationship */
  slack_availabilities: Array<Slack_Availability>;
  /** An aggregate relationship */
  slack_availabilities_aggregate: Slack_Availability_Aggregate;
  /** An array relationship */
  slack_outreaches: Array<Slack_Outreach>;
  /** An aggregate relationship */
  slack_outreaches_aggregate: Slack_Outreach_Aggregate;
  /** An array relationship */
  time_and_material_invoice_line_items: Array<Time_And_Material_Invoice_Line_Item>;
  /** An aggregate relationship */
  time_and_material_invoice_line_items_aggregate: Time_And_Material_Invoice_Line_Item_Aggregate;
  updated_at: Scalars['timestamptz'];
  userProfileVisibilityID?: Maybe<Scalars['uuid']>;
  /** An object relationship */
  user_basic_information?: Maybe<User_Basic_Information>;
  /** An object relationship */
  user_company?: Maybe<User_Company>;
  /** An array relationship */
  user_completed_customer_sales: Array<User_Completed_Customer_Sale>;
  /** An aggregate relationship */
  user_completed_customer_sales_aggregate: User_Completed_Customer_Sale_Aggregate;
  /** An array relationship */
  user_in_market_experiences: Array<User_In_Market_Experience>;
  /** An aggregate relationship */
  user_in_market_experiences_aggregate: User_In_Market_Experience_Aggregate;
  /** An array relationship */
  user_industry_experiences: Array<User_Industry_Experience>;
  /** An aggregate relationship */
  user_industry_experiences_aggregate: User_Industry_Experience_Aggregate;
  /** An array relationship */
  user_languages: Array<User_Language>;
  /** An aggregate relationship */
  user_languages_aggregate: User_Language_Aggregate;
  /** An array relationship */
  user_meta_user_roles: Array<User_Meta_User_Role>;
  /** An aggregate relationship */
  user_meta_user_roles_aggregate: User_Meta_User_Role_Aggregate;
  /** An object relationship */
  user_professional_information?: Maybe<User_Professional_Information>;
  /** An array relationship */
  user_profile_companies: Array<User_Profile_Company>;
  /** An aggregate relationship */
  user_profile_companies_aggregate: User_Profile_Company_Aggregate;
  /** An object relationship */
  user_profile_visibility?: Maybe<User_Profile_Visibility>;
  /** An array relationship */
  user_profiles: Array<User_Profile>;
  /** An aggregate relationship */
  user_profiles_aggregate: User_Profile_Aggregate;
  /** An array relationship */
  user_skills: Array<User_Skill>;
  /** An aggregate relationship */
  user_skills_aggregate: User_Skill_Aggregate;
  username: Scalars['String'];
  workEmail?: Maybe<Scalars['String']>;
};

/** columns and relationships of "user_meta" */
export type User_MetaCase_StudiesArgs = {
  distinct_on?: InputMaybe<Array<Case_Study_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Case_Study_Order_By>>;
  where?: InputMaybe<Case_Study_Bool_Exp>;
};

/** columns and relationships of "user_meta" */
export type User_MetaCase_Studies_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Case_Study_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Case_Study_Order_By>>;
  where?: InputMaybe<Case_Study_Bool_Exp>;
};

/** columns and relationships of "user_meta" */
export type User_MetaCase_Study_UsersArgs = {
  distinct_on?: InputMaybe<Array<Case_Study_User_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Case_Study_User_Order_By>>;
  where?: InputMaybe<Case_Study_User_Bool_Exp>;
};

/** columns and relationships of "user_meta" */
export type User_MetaCase_Study_Users_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Case_Study_User_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Case_Study_User_Order_By>>;
  where?: InputMaybe<Case_Study_User_Bool_Exp>;
};

/** columns and relationships of "user_meta" */
export type User_MetaCompany_Team_ContributorsArgs = {
  distinct_on?: InputMaybe<Array<Company_Team_Contributor_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Company_Team_Contributor_Order_By>>;
  where?: InputMaybe<Company_Team_Contributor_Bool_Exp>;
};

/** columns and relationships of "user_meta" */
export type User_MetaCompany_Team_Contributors_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Company_Team_Contributor_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Company_Team_Contributor_Order_By>>;
  where?: InputMaybe<Company_Team_Contributor_Bool_Exp>;
};

/** columns and relationships of "user_meta" */
export type User_MetaCustom_Payout_Line_ItemsArgs = {
  distinct_on?: InputMaybe<Array<Custom_Payout_Line_Item_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Custom_Payout_Line_Item_Order_By>>;
  where?: InputMaybe<Custom_Payout_Line_Item_Bool_Exp>;
};

/** columns and relationships of "user_meta" */
export type User_MetaCustom_Payout_Line_Items_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Custom_Payout_Line_Item_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Custom_Payout_Line_Item_Order_By>>;
  where?: InputMaybe<Custom_Payout_Line_Item_Bool_Exp>;
};

/** columns and relationships of "user_meta" */
export type User_MetaCustom_Project_Payout_DistributionsArgs = {
  distinct_on?: InputMaybe<Array<Custom_Project_Payout_Distribution_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Custom_Project_Payout_Distribution_Order_By>>;
  where?: InputMaybe<Custom_Project_Payout_Distribution_Bool_Exp>;
};

/** columns and relationships of "user_meta" */
export type User_MetaCustom_Project_Payout_Distributions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Custom_Project_Payout_Distribution_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Custom_Project_Payout_Distribution_Order_By>>;
  where?: InputMaybe<Custom_Project_Payout_Distribution_Bool_Exp>;
};

/** columns and relationships of "user_meta" */
export type User_MetaCustomer_Closing_PartiesArgs = {
  distinct_on?: InputMaybe<Array<Customer_Closing_Party_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Customer_Closing_Party_Order_By>>;
  where?: InputMaybe<Customer_Closing_Party_Bool_Exp>;
};

/** columns and relationships of "user_meta" */
export type User_MetaCustomer_Closing_Parties_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Customer_Closing_Party_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Customer_Closing_Party_Order_By>>;
  where?: InputMaybe<Customer_Closing_Party_Bool_Exp>;
};

/** columns and relationships of "user_meta" */
export type User_MetaCustomer_Originating_PartiesArgs = {
  distinct_on?: InputMaybe<Array<Customer_Originating_Party_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Customer_Originating_Party_Order_By>>;
  where?: InputMaybe<Customer_Originating_Party_Bool_Exp>;
};

/** columns and relationships of "user_meta" */
export type User_MetaCustomer_Originating_Parties_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Customer_Originating_Party_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Customer_Originating_Party_Order_By>>;
  where?: InputMaybe<Customer_Originating_Party_Bool_Exp>;
};

/** columns and relationships of "user_meta" */
export type User_MetaCustomer_ReferrersArgs = {
  distinct_on?: InputMaybe<Array<Customer_Referrer_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Customer_Referrer_Order_By>>;
  where?: InputMaybe<Customer_Referrer_Bool_Exp>;
};

/** columns and relationships of "user_meta" */
export type User_MetaCustomer_Referrers_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Customer_Referrer_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Customer_Referrer_Order_By>>;
  where?: InputMaybe<Customer_Referrer_Bool_Exp>;
};

/** columns and relationships of "user_meta" */
export type User_MetaDocument_Associated_UsersArgs = {
  distinct_on?: InputMaybe<Array<Document_Associated_User_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Document_Associated_User_Order_By>>;
  where?: InputMaybe<Document_Associated_User_Bool_Exp>;
};

/** columns and relationships of "user_meta" */
export type User_MetaDocument_Associated_Users_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Document_Associated_User_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Document_Associated_User_Order_By>>;
  where?: InputMaybe<Document_Associated_User_Bool_Exp>;
};

/** columns and relationships of "user_meta" */
export type User_MetaDocumentsArgs = {
  distinct_on?: InputMaybe<Array<Document_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Document_Order_By>>;
  where?: InputMaybe<Document_Bool_Exp>;
};

/** columns and relationships of "user_meta" */
export type User_MetaDocuments_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Document_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Document_Order_By>>;
  where?: InputMaybe<Document_Bool_Exp>;
};

/** columns and relationships of "user_meta" */
export type User_MetaFixed_Price_Invoice_Line_ItemsArgs = {
  distinct_on?: InputMaybe<Array<Fixed_Price_Invoice_Line_Item_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Fixed_Price_Invoice_Line_Item_Order_By>>;
  where?: InputMaybe<Fixed_Price_Invoice_Line_Item_Bool_Exp>;
};

/** columns and relationships of "user_meta" */
export type User_MetaFixed_Price_Invoice_Line_Items_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Fixed_Price_Invoice_Line_Item_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Fixed_Price_Invoice_Line_Item_Order_By>>;
  where?: InputMaybe<Fixed_Price_Invoice_Line_Item_Bool_Exp>;
};

/** columns and relationships of "user_meta" */
export type User_MetaPartnersArgs = {
  distinct_on?: InputMaybe<Array<Partner_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Partner_Order_By>>;
  where?: InputMaybe<Partner_Bool_Exp>;
};

/** columns and relationships of "user_meta" */
export type User_MetaPartners_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Partner_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Partner_Order_By>>;
  where?: InputMaybe<Partner_Bool_Exp>;
};

/** columns and relationships of "user_meta" */
export type User_MetaPayout_DistributionsArgs = {
  distinct_on?: InputMaybe<Array<Payout_Distribution_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Payout_Distribution_Order_By>>;
  where?: InputMaybe<Payout_Distribution_Bool_Exp>;
};

/** columns and relationships of "user_meta" */
export type User_MetaPayout_Distributions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Payout_Distribution_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Payout_Distribution_Order_By>>;
  where?: InputMaybe<Payout_Distribution_Bool_Exp>;
};

/** columns and relationships of "user_meta" */
export type User_MetaSlack_AvailabilitiesArgs = {
  distinct_on?: InputMaybe<Array<Slack_Availability_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Slack_Availability_Order_By>>;
  where?: InputMaybe<Slack_Availability_Bool_Exp>;
};

/** columns and relationships of "user_meta" */
export type User_MetaSlack_Availabilities_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Slack_Availability_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Slack_Availability_Order_By>>;
  where?: InputMaybe<Slack_Availability_Bool_Exp>;
};

/** columns and relationships of "user_meta" */
export type User_MetaSlack_OutreachesArgs = {
  distinct_on?: InputMaybe<Array<Slack_Outreach_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Slack_Outreach_Order_By>>;
  where?: InputMaybe<Slack_Outreach_Bool_Exp>;
};

/** columns and relationships of "user_meta" */
export type User_MetaSlack_Outreaches_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Slack_Outreach_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Slack_Outreach_Order_By>>;
  where?: InputMaybe<Slack_Outreach_Bool_Exp>;
};

/** columns and relationships of "user_meta" */
export type User_MetaTime_And_Material_Invoice_Line_ItemsArgs = {
  distinct_on?: InputMaybe<Array<Time_And_Material_Invoice_Line_Item_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Time_And_Material_Invoice_Line_Item_Order_By>>;
  where?: InputMaybe<Time_And_Material_Invoice_Line_Item_Bool_Exp>;
};

/** columns and relationships of "user_meta" */
export type User_MetaTime_And_Material_Invoice_Line_Items_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Time_And_Material_Invoice_Line_Item_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Time_And_Material_Invoice_Line_Item_Order_By>>;
  where?: InputMaybe<Time_And_Material_Invoice_Line_Item_Bool_Exp>;
};

/** columns and relationships of "user_meta" */
export type User_MetaUser_Completed_Customer_SalesArgs = {
  distinct_on?: InputMaybe<Array<User_Completed_Customer_Sale_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Completed_Customer_Sale_Order_By>>;
  where?: InputMaybe<User_Completed_Customer_Sale_Bool_Exp>;
};

/** columns and relationships of "user_meta" */
export type User_MetaUser_Completed_Customer_Sales_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Completed_Customer_Sale_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Completed_Customer_Sale_Order_By>>;
  where?: InputMaybe<User_Completed_Customer_Sale_Bool_Exp>;
};

/** columns and relationships of "user_meta" */
export type User_MetaUser_In_Market_ExperiencesArgs = {
  distinct_on?: InputMaybe<Array<User_In_Market_Experience_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_In_Market_Experience_Order_By>>;
  where?: InputMaybe<User_In_Market_Experience_Bool_Exp>;
};

/** columns and relationships of "user_meta" */
export type User_MetaUser_In_Market_Experiences_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_In_Market_Experience_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_In_Market_Experience_Order_By>>;
  where?: InputMaybe<User_In_Market_Experience_Bool_Exp>;
};

/** columns and relationships of "user_meta" */
export type User_MetaUser_Industry_ExperiencesArgs = {
  distinct_on?: InputMaybe<Array<User_Industry_Experience_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Industry_Experience_Order_By>>;
  where?: InputMaybe<User_Industry_Experience_Bool_Exp>;
};

/** columns and relationships of "user_meta" */
export type User_MetaUser_Industry_Experiences_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Industry_Experience_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Industry_Experience_Order_By>>;
  where?: InputMaybe<User_Industry_Experience_Bool_Exp>;
};

/** columns and relationships of "user_meta" */
export type User_MetaUser_LanguagesArgs = {
  distinct_on?: InputMaybe<Array<User_Language_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Language_Order_By>>;
  where?: InputMaybe<User_Language_Bool_Exp>;
};

/** columns and relationships of "user_meta" */
export type User_MetaUser_Languages_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Language_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Language_Order_By>>;
  where?: InputMaybe<User_Language_Bool_Exp>;
};

/** columns and relationships of "user_meta" */
export type User_MetaUser_Meta_User_RolesArgs = {
  distinct_on?: InputMaybe<Array<User_Meta_User_Role_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Meta_User_Role_Order_By>>;
  where?: InputMaybe<User_Meta_User_Role_Bool_Exp>;
};

/** columns and relationships of "user_meta" */
export type User_MetaUser_Meta_User_Roles_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Meta_User_Role_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Meta_User_Role_Order_By>>;
  where?: InputMaybe<User_Meta_User_Role_Bool_Exp>;
};

/** columns and relationships of "user_meta" */
export type User_MetaUser_Profile_CompaniesArgs = {
  distinct_on?: InputMaybe<Array<User_Profile_Company_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Profile_Company_Order_By>>;
  where?: InputMaybe<User_Profile_Company_Bool_Exp>;
};

/** columns and relationships of "user_meta" */
export type User_MetaUser_Profile_Companies_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Profile_Company_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Profile_Company_Order_By>>;
  where?: InputMaybe<User_Profile_Company_Bool_Exp>;
};

/** columns and relationships of "user_meta" */
export type User_MetaUser_ProfilesArgs = {
  distinct_on?: InputMaybe<Array<User_Profile_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Profile_Order_By>>;
  where?: InputMaybe<User_Profile_Bool_Exp>;
};

/** columns and relationships of "user_meta" */
export type User_MetaUser_Profiles_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Profile_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Profile_Order_By>>;
  where?: InputMaybe<User_Profile_Bool_Exp>;
};

/** columns and relationships of "user_meta" */
export type User_MetaUser_SkillsArgs = {
  distinct_on?: InputMaybe<Array<User_Skill_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Skill_Order_By>>;
  where?: InputMaybe<User_Skill_Bool_Exp>;
};

/** columns and relationships of "user_meta" */
export type User_MetaUser_Skills_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Skill_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Skill_Order_By>>;
  where?: InputMaybe<User_Skill_Bool_Exp>;
};

/** aggregated selection of "user_meta" */
export type User_Meta_Aggregate = {
  __typename?: 'user_meta_aggregate';
  aggregate?: Maybe<User_Meta_Aggregate_Fields>;
  nodes: Array<User_Meta>;
};

/** aggregate fields of "user_meta" */
export type User_Meta_Aggregate_Fields = {
  __typename?: 'user_meta_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<User_Meta_Max_Fields>;
  min?: Maybe<User_Meta_Min_Fields>;
};

/** aggregate fields of "user_meta" */
export type User_Meta_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<User_Meta_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "user_meta" */
export type User_Meta_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<User_Meta_Max_Order_By>;
  min?: InputMaybe<User_Meta_Min_Order_By>;
};

/** input type for inserting array relation for remote table "user_meta" */
export type User_Meta_Arr_Rel_Insert_Input = {
  data: Array<User_Meta_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<User_Meta_On_Conflict>;
};

/** Boolean expression to filter rows from the table "user_meta". All fields are combined with a logical 'AND'. */
export type User_Meta_Bool_Exp = {
  _and?: InputMaybe<Array<User_Meta_Bool_Exp>>;
  _not?: InputMaybe<User_Meta_Bool_Exp>;
  _or?: InputMaybe<Array<User_Meta_Bool_Exp>>;
  about?: InputMaybe<String_Comparison_Exp>;
  avatarKey?: InputMaybe<String_Comparison_Exp>;
  case_studies?: InputMaybe<Case_Study_Bool_Exp>;
  case_study_users?: InputMaybe<Case_Study_User_Bool_Exp>;
  cognitoSub?: InputMaybe<String_Comparison_Exp>;
  company?: InputMaybe<Company_Bool_Exp>;
  companyID?: InputMaybe<Uuid_Comparison_Exp>;
  company_team_contributors?: InputMaybe<Company_Team_Contributor_Bool_Exp>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  custom_payout_line_items?: InputMaybe<Custom_Payout_Line_Item_Bool_Exp>;
  custom_project_payout_distributions?: InputMaybe<Custom_Project_Payout_Distribution_Bool_Exp>;
  customer_closing_parties?: InputMaybe<Customer_Closing_Party_Bool_Exp>;
  customer_originating_parties?: InputMaybe<Customer_Originating_Party_Bool_Exp>;
  customer_referrers?: InputMaybe<Customer_Referrer_Bool_Exp>;
  document_associated_users?: InputMaybe<Document_Associated_User_Bool_Exp>;
  documents?: InputMaybe<Document_Bool_Exp>;
  email?: InputMaybe<String_Comparison_Exp>;
  firstName?: InputMaybe<String_Comparison_Exp>;
  fixed_price_invoice_line_items?: InputMaybe<Fixed_Price_Invoice_Line_Item_Bool_Exp>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  isAPIUser?: InputMaybe<Boolean_Comparison_Exp>;
  isAccountInitiated?: InputMaybe<Boolean_Comparison_Exp>;
  isSynced?: InputMaybe<Boolean_Comparison_Exp>;
  joinedDate?: InputMaybe<Timestamptz_Comparison_Exp>;
  lastName?: InputMaybe<String_Comparison_Exp>;
  lastPasswordResetAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  partners?: InputMaybe<Partner_Bool_Exp>;
  payout_distributions?: InputMaybe<Payout_Distribution_Bool_Exp>;
  ripplingID?: InputMaybe<String_Comparison_Exp>;
  slackID?: InputMaybe<String_Comparison_Exp>;
  slackNotificationPausedUntil?: InputMaybe<Timestamptz_Comparison_Exp>;
  slackNotificationPausingAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  slack_availabilities?: InputMaybe<Slack_Availability_Bool_Exp>;
  slack_outreaches?: InputMaybe<Slack_Outreach_Bool_Exp>;
  time_and_material_invoice_line_items?: InputMaybe<Time_And_Material_Invoice_Line_Item_Bool_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  userProfileVisibilityID?: InputMaybe<Uuid_Comparison_Exp>;
  user_basic_information?: InputMaybe<User_Basic_Information_Bool_Exp>;
  user_company?: InputMaybe<User_Company_Bool_Exp>;
  user_completed_customer_sales?: InputMaybe<User_Completed_Customer_Sale_Bool_Exp>;
  user_in_market_experiences?: InputMaybe<User_In_Market_Experience_Bool_Exp>;
  user_industry_experiences?: InputMaybe<User_Industry_Experience_Bool_Exp>;
  user_languages?: InputMaybe<User_Language_Bool_Exp>;
  user_meta_user_roles?: InputMaybe<User_Meta_User_Role_Bool_Exp>;
  user_professional_information?: InputMaybe<User_Professional_Information_Bool_Exp>;
  user_profile_companies?: InputMaybe<User_Profile_Company_Bool_Exp>;
  user_profile_visibility?: InputMaybe<User_Profile_Visibility_Bool_Exp>;
  user_profiles?: InputMaybe<User_Profile_Bool_Exp>;
  user_skills?: InputMaybe<User_Skill_Bool_Exp>;
  username?: InputMaybe<String_Comparison_Exp>;
  workEmail?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "user_meta" */
export enum User_Meta_Constraint {
  /** unique or primary key constraint on columns "cognitoSub" */
  UserMetaCognitoSubKey = 'user_meta_cognitoSub_key',
  /** unique or primary key constraint on columns "companyID" */
  UserMetaCompanyIdKey = 'user_meta_companyID_key',
  /** unique or primary key constraint on columns "id" */
  UserMetaPkey = 'user_meta_pkey',
  /** unique or primary key constraint on columns "ripplingID" */
  UserMetaRipplingIdKey = 'user_meta_ripplingID_key',
  /** unique or primary key constraint on columns "slackID" */
  UserMetaSlackIdKey = 'user_meta_slackID_key',
  /** unique or primary key constraint on columns "username" */
  UserMetaUsernameKey = 'user_meta_username_key',
  /** unique or primary key constraint on columns "workEmail" */
  UserMetaWorkEmailKey = 'user_meta_workEmail_key',
}

/** input type for inserting data into table "user_meta" */
export type User_Meta_Insert_Input = {
  about?: InputMaybe<Scalars['String']>;
  avatarKey?: InputMaybe<Scalars['String']>;
  case_studies?: InputMaybe<Case_Study_Arr_Rel_Insert_Input>;
  case_study_users?: InputMaybe<Case_Study_User_Arr_Rel_Insert_Input>;
  cognitoSub?: InputMaybe<Scalars['String']>;
  company?: InputMaybe<Company_Obj_Rel_Insert_Input>;
  companyID?: InputMaybe<Scalars['uuid']>;
  company_team_contributors?: InputMaybe<Company_Team_Contributor_Arr_Rel_Insert_Input>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  custom_payout_line_items?: InputMaybe<Custom_Payout_Line_Item_Arr_Rel_Insert_Input>;
  custom_project_payout_distributions?: InputMaybe<Custom_Project_Payout_Distribution_Arr_Rel_Insert_Input>;
  customer_closing_parties?: InputMaybe<Customer_Closing_Party_Arr_Rel_Insert_Input>;
  customer_originating_parties?: InputMaybe<Customer_Originating_Party_Arr_Rel_Insert_Input>;
  customer_referrers?: InputMaybe<Customer_Referrer_Arr_Rel_Insert_Input>;
  document_associated_users?: InputMaybe<Document_Associated_User_Arr_Rel_Insert_Input>;
  documents?: InputMaybe<Document_Arr_Rel_Insert_Input>;
  email?: InputMaybe<Scalars['String']>;
  firstName?: InputMaybe<Scalars['String']>;
  fixed_price_invoice_line_items?: InputMaybe<Fixed_Price_Invoice_Line_Item_Arr_Rel_Insert_Input>;
  id?: InputMaybe<Scalars['uuid']>;
  isAPIUser?: InputMaybe<Scalars['Boolean']>;
  isAccountInitiated?: InputMaybe<Scalars['Boolean']>;
  joinedDate?: InputMaybe<Scalars['timestamptz']>;
  lastName?: InputMaybe<Scalars['String']>;
  lastPasswordResetAt?: InputMaybe<Scalars['timestamptz']>;
  partners?: InputMaybe<Partner_Arr_Rel_Insert_Input>;
  payout_distributions?: InputMaybe<Payout_Distribution_Arr_Rel_Insert_Input>;
  ripplingID?: InputMaybe<Scalars['String']>;
  slackID?: InputMaybe<Scalars['String']>;
  slackNotificationPausedUntil?: InputMaybe<Scalars['timestamptz']>;
  slackNotificationPausingAt?: InputMaybe<Scalars['timestamptz']>;
  slack_availabilities?: InputMaybe<Slack_Availability_Arr_Rel_Insert_Input>;
  slack_outreaches?: InputMaybe<Slack_Outreach_Arr_Rel_Insert_Input>;
  time_and_material_invoice_line_items?: InputMaybe<Time_And_Material_Invoice_Line_Item_Arr_Rel_Insert_Input>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  userProfileVisibilityID?: InputMaybe<Scalars['uuid']>;
  user_basic_information?: InputMaybe<User_Basic_Information_Obj_Rel_Insert_Input>;
  user_company?: InputMaybe<User_Company_Obj_Rel_Insert_Input>;
  user_completed_customer_sales?: InputMaybe<User_Completed_Customer_Sale_Arr_Rel_Insert_Input>;
  user_in_market_experiences?: InputMaybe<User_In_Market_Experience_Arr_Rel_Insert_Input>;
  user_industry_experiences?: InputMaybe<User_Industry_Experience_Arr_Rel_Insert_Input>;
  user_languages?: InputMaybe<User_Language_Arr_Rel_Insert_Input>;
  user_meta_user_roles?: InputMaybe<User_Meta_User_Role_Arr_Rel_Insert_Input>;
  user_professional_information?: InputMaybe<User_Professional_Information_Obj_Rel_Insert_Input>;
  user_profile_companies?: InputMaybe<User_Profile_Company_Arr_Rel_Insert_Input>;
  user_profile_visibility?: InputMaybe<User_Profile_Visibility_Obj_Rel_Insert_Input>;
  user_profiles?: InputMaybe<User_Profile_Arr_Rel_Insert_Input>;
  user_skills?: InputMaybe<User_Skill_Arr_Rel_Insert_Input>;
  username?: InputMaybe<Scalars['String']>;
  workEmail?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type User_Meta_Max_Fields = {
  __typename?: 'user_meta_max_fields';
  about?: Maybe<Scalars['String']>;
  avatarKey?: Maybe<Scalars['String']>;
  cognitoSub?: Maybe<Scalars['String']>;
  companyID?: Maybe<Scalars['uuid']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  email?: Maybe<Scalars['String']>;
  firstName?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  joinedDate?: Maybe<Scalars['timestamptz']>;
  lastName?: Maybe<Scalars['String']>;
  lastPasswordResetAt?: Maybe<Scalars['timestamptz']>;
  ripplingID?: Maybe<Scalars['String']>;
  slackID?: Maybe<Scalars['String']>;
  slackNotificationPausedUntil?: Maybe<Scalars['timestamptz']>;
  slackNotificationPausingAt?: Maybe<Scalars['timestamptz']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  userProfileVisibilityID?: Maybe<Scalars['uuid']>;
  username?: Maybe<Scalars['String']>;
  workEmail?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "user_meta" */
export type User_Meta_Max_Order_By = {
  about?: InputMaybe<Order_By>;
  avatarKey?: InputMaybe<Order_By>;
  cognitoSub?: InputMaybe<Order_By>;
  companyID?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  email?: InputMaybe<Order_By>;
  firstName?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  joinedDate?: InputMaybe<Order_By>;
  lastName?: InputMaybe<Order_By>;
  lastPasswordResetAt?: InputMaybe<Order_By>;
  ripplingID?: InputMaybe<Order_By>;
  slackID?: InputMaybe<Order_By>;
  slackNotificationPausedUntil?: InputMaybe<Order_By>;
  slackNotificationPausingAt?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  userProfileVisibilityID?: InputMaybe<Order_By>;
  username?: InputMaybe<Order_By>;
  workEmail?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type User_Meta_Min_Fields = {
  __typename?: 'user_meta_min_fields';
  about?: Maybe<Scalars['String']>;
  avatarKey?: Maybe<Scalars['String']>;
  cognitoSub?: Maybe<Scalars['String']>;
  companyID?: Maybe<Scalars['uuid']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  email?: Maybe<Scalars['String']>;
  firstName?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  joinedDate?: Maybe<Scalars['timestamptz']>;
  lastName?: Maybe<Scalars['String']>;
  lastPasswordResetAt?: Maybe<Scalars['timestamptz']>;
  ripplingID?: Maybe<Scalars['String']>;
  slackID?: Maybe<Scalars['String']>;
  slackNotificationPausedUntil?: Maybe<Scalars['timestamptz']>;
  slackNotificationPausingAt?: Maybe<Scalars['timestamptz']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  userProfileVisibilityID?: Maybe<Scalars['uuid']>;
  username?: Maybe<Scalars['String']>;
  workEmail?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "user_meta" */
export type User_Meta_Min_Order_By = {
  about?: InputMaybe<Order_By>;
  avatarKey?: InputMaybe<Order_By>;
  cognitoSub?: InputMaybe<Order_By>;
  companyID?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  email?: InputMaybe<Order_By>;
  firstName?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  joinedDate?: InputMaybe<Order_By>;
  lastName?: InputMaybe<Order_By>;
  lastPasswordResetAt?: InputMaybe<Order_By>;
  ripplingID?: InputMaybe<Order_By>;
  slackID?: InputMaybe<Order_By>;
  slackNotificationPausedUntil?: InputMaybe<Order_By>;
  slackNotificationPausingAt?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  userProfileVisibilityID?: InputMaybe<Order_By>;
  username?: InputMaybe<Order_By>;
  workEmail?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "user_meta" */
export type User_Meta_Mutation_Response = {
  __typename?: 'user_meta_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<User_Meta>;
};

/** input type for inserting object relation for remote table "user_meta" */
export type User_Meta_Obj_Rel_Insert_Input = {
  data: User_Meta_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<User_Meta_On_Conflict>;
};

/** on_conflict condition type for table "user_meta" */
export type User_Meta_On_Conflict = {
  constraint: User_Meta_Constraint;
  update_columns?: Array<User_Meta_Update_Column>;
  where?: InputMaybe<User_Meta_Bool_Exp>;
};

/** Ordering options when selecting data from "user_meta". */
export type User_Meta_Order_By = {
  about?: InputMaybe<Order_By>;
  avatarKey?: InputMaybe<Order_By>;
  case_studies_aggregate?: InputMaybe<Case_Study_Aggregate_Order_By>;
  case_study_users_aggregate?: InputMaybe<Case_Study_User_Aggregate_Order_By>;
  cognitoSub?: InputMaybe<Order_By>;
  company?: InputMaybe<Company_Order_By>;
  companyID?: InputMaybe<Order_By>;
  company_team_contributors_aggregate?: InputMaybe<Company_Team_Contributor_Aggregate_Order_By>;
  created_at?: InputMaybe<Order_By>;
  custom_payout_line_items_aggregate?: InputMaybe<Custom_Payout_Line_Item_Aggregate_Order_By>;
  custom_project_payout_distributions_aggregate?: InputMaybe<Custom_Project_Payout_Distribution_Aggregate_Order_By>;
  customer_closing_parties_aggregate?: InputMaybe<Customer_Closing_Party_Aggregate_Order_By>;
  customer_originating_parties_aggregate?: InputMaybe<Customer_Originating_Party_Aggregate_Order_By>;
  customer_referrers_aggregate?: InputMaybe<Customer_Referrer_Aggregate_Order_By>;
  document_associated_users_aggregate?: InputMaybe<Document_Associated_User_Aggregate_Order_By>;
  documents_aggregate?: InputMaybe<Document_Aggregate_Order_By>;
  email?: InputMaybe<Order_By>;
  firstName?: InputMaybe<Order_By>;
  fixed_price_invoice_line_items_aggregate?: InputMaybe<Fixed_Price_Invoice_Line_Item_Aggregate_Order_By>;
  id?: InputMaybe<Order_By>;
  isAPIUser?: InputMaybe<Order_By>;
  isAccountInitiated?: InputMaybe<Order_By>;
  isSynced?: InputMaybe<Order_By>;
  joinedDate?: InputMaybe<Order_By>;
  lastName?: InputMaybe<Order_By>;
  lastPasswordResetAt?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  partners_aggregate?: InputMaybe<Partner_Aggregate_Order_By>;
  payout_distributions_aggregate?: InputMaybe<Payout_Distribution_Aggregate_Order_By>;
  ripplingID?: InputMaybe<Order_By>;
  slackID?: InputMaybe<Order_By>;
  slackNotificationPausedUntil?: InputMaybe<Order_By>;
  slackNotificationPausingAt?: InputMaybe<Order_By>;
  slack_availabilities_aggregate?: InputMaybe<Slack_Availability_Aggregate_Order_By>;
  slack_outreaches_aggregate?: InputMaybe<Slack_Outreach_Aggregate_Order_By>;
  time_and_material_invoice_line_items_aggregate?: InputMaybe<Time_And_Material_Invoice_Line_Item_Aggregate_Order_By>;
  updated_at?: InputMaybe<Order_By>;
  userProfileVisibilityID?: InputMaybe<Order_By>;
  user_basic_information?: InputMaybe<User_Basic_Information_Order_By>;
  user_company?: InputMaybe<User_Company_Order_By>;
  user_completed_customer_sales_aggregate?: InputMaybe<User_Completed_Customer_Sale_Aggregate_Order_By>;
  user_in_market_experiences_aggregate?: InputMaybe<User_In_Market_Experience_Aggregate_Order_By>;
  user_industry_experiences_aggregate?: InputMaybe<User_Industry_Experience_Aggregate_Order_By>;
  user_languages_aggregate?: InputMaybe<User_Language_Aggregate_Order_By>;
  user_meta_user_roles_aggregate?: InputMaybe<User_Meta_User_Role_Aggregate_Order_By>;
  user_professional_information?: InputMaybe<User_Professional_Information_Order_By>;
  user_profile_companies_aggregate?: InputMaybe<User_Profile_Company_Aggregate_Order_By>;
  user_profile_visibility?: InputMaybe<User_Profile_Visibility_Order_By>;
  user_profiles_aggregate?: InputMaybe<User_Profile_Aggregate_Order_By>;
  user_skills_aggregate?: InputMaybe<User_Skill_Aggregate_Order_By>;
  username?: InputMaybe<Order_By>;
  workEmail?: InputMaybe<Order_By>;
};

/** primary key columns input for table: user_meta */
export type User_Meta_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "user_meta" */
export enum User_Meta_Select_Column {
  /** column name */
  About = 'about',
  /** column name */
  AvatarKey = 'avatarKey',
  /** column name */
  CognitoSub = 'cognitoSub',
  /** column name */
  CompanyId = 'companyID',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Email = 'email',
  /** column name */
  FirstName = 'firstName',
  /** column name */
  Id = 'id',
  /** column name */
  IsApiUser = 'isAPIUser',
  /** column name */
  IsAccountInitiated = 'isAccountInitiated',
  /** column name */
  JoinedDate = 'joinedDate',
  /** column name */
  LastName = 'lastName',
  /** column name */
  LastPasswordResetAt = 'lastPasswordResetAt',
  /** column name */
  RipplingId = 'ripplingID',
  /** column name */
  SlackId = 'slackID',
  /** column name */
  SlackNotificationPausedUntil = 'slackNotificationPausedUntil',
  /** column name */
  SlackNotificationPausingAt = 'slackNotificationPausingAt',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserProfileVisibilityId = 'userProfileVisibilityID',
  /** column name */
  Username = 'username',
  /** column name */
  WorkEmail = 'workEmail',
}

/** input type for updating data in table "user_meta" */
export type User_Meta_Set_Input = {
  about?: InputMaybe<Scalars['String']>;
  avatarKey?: InputMaybe<Scalars['String']>;
  cognitoSub?: InputMaybe<Scalars['String']>;
  companyID?: InputMaybe<Scalars['uuid']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  email?: InputMaybe<Scalars['String']>;
  firstName?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['uuid']>;
  isAPIUser?: InputMaybe<Scalars['Boolean']>;
  isAccountInitiated?: InputMaybe<Scalars['Boolean']>;
  joinedDate?: InputMaybe<Scalars['timestamptz']>;
  lastName?: InputMaybe<Scalars['String']>;
  lastPasswordResetAt?: InputMaybe<Scalars['timestamptz']>;
  ripplingID?: InputMaybe<Scalars['String']>;
  slackID?: InputMaybe<Scalars['String']>;
  slackNotificationPausedUntil?: InputMaybe<Scalars['timestamptz']>;
  slackNotificationPausingAt?: InputMaybe<Scalars['timestamptz']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  userProfileVisibilityID?: InputMaybe<Scalars['uuid']>;
  username?: InputMaybe<Scalars['String']>;
  workEmail?: InputMaybe<Scalars['String']>;
};

/** Streaming cursor of the table "user_meta" */
export type User_Meta_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: User_Meta_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type User_Meta_Stream_Cursor_Value_Input = {
  about?: InputMaybe<Scalars['String']>;
  avatarKey?: InputMaybe<Scalars['String']>;
  cognitoSub?: InputMaybe<Scalars['String']>;
  companyID?: InputMaybe<Scalars['uuid']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  email?: InputMaybe<Scalars['String']>;
  firstName?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['uuid']>;
  isAPIUser?: InputMaybe<Scalars['Boolean']>;
  isAccountInitiated?: InputMaybe<Scalars['Boolean']>;
  joinedDate?: InputMaybe<Scalars['timestamptz']>;
  lastName?: InputMaybe<Scalars['String']>;
  lastPasswordResetAt?: InputMaybe<Scalars['timestamptz']>;
  ripplingID?: InputMaybe<Scalars['String']>;
  slackID?: InputMaybe<Scalars['String']>;
  slackNotificationPausedUntil?: InputMaybe<Scalars['timestamptz']>;
  slackNotificationPausingAt?: InputMaybe<Scalars['timestamptz']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  userProfileVisibilityID?: InputMaybe<Scalars['uuid']>;
  username?: InputMaybe<Scalars['String']>;
  workEmail?: InputMaybe<Scalars['String']>;
};

/** update columns of table "user_meta" */
export enum User_Meta_Update_Column {
  /** column name */
  About = 'about',
  /** column name */
  AvatarKey = 'avatarKey',
  /** column name */
  CognitoSub = 'cognitoSub',
  /** column name */
  CompanyId = 'companyID',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Email = 'email',
  /** column name */
  FirstName = 'firstName',
  /** column name */
  Id = 'id',
  /** column name */
  IsApiUser = 'isAPIUser',
  /** column name */
  IsAccountInitiated = 'isAccountInitiated',
  /** column name */
  JoinedDate = 'joinedDate',
  /** column name */
  LastName = 'lastName',
  /** column name */
  LastPasswordResetAt = 'lastPasswordResetAt',
  /** column name */
  RipplingId = 'ripplingID',
  /** column name */
  SlackId = 'slackID',
  /** column name */
  SlackNotificationPausedUntil = 'slackNotificationPausedUntil',
  /** column name */
  SlackNotificationPausingAt = 'slackNotificationPausingAt',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserProfileVisibilityId = 'userProfileVisibilityID',
  /** column name */
  Username = 'username',
  /** column name */
  WorkEmail = 'workEmail',
}

export type User_Meta_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<User_Meta_Set_Input>;
  where: User_Meta_Bool_Exp;
};

/** columns and relationships of "user_meta_user_role" */
export type User_Meta_User_Role = {
  __typename?: 'user_meta_user_role';
  created_at: Scalars['timestamptz'];
  id: Scalars['uuid'];
  /** An object relationship */
  public_user_meta?: Maybe<Public_User_Meta>;
  userMetaID: Scalars['uuid'];
  userRoleID: Scalars['uuid'];
  /** An object relationship */
  user_meta: User_Meta;
  /** An object relationship */
  user_role: User_Role;
};

/** aggregated selection of "user_meta_user_role" */
export type User_Meta_User_Role_Aggregate = {
  __typename?: 'user_meta_user_role_aggregate';
  aggregate?: Maybe<User_Meta_User_Role_Aggregate_Fields>;
  nodes: Array<User_Meta_User_Role>;
};

/** aggregate fields of "user_meta_user_role" */
export type User_Meta_User_Role_Aggregate_Fields = {
  __typename?: 'user_meta_user_role_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<User_Meta_User_Role_Max_Fields>;
  min?: Maybe<User_Meta_User_Role_Min_Fields>;
};

/** aggregate fields of "user_meta_user_role" */
export type User_Meta_User_Role_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<User_Meta_User_Role_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "user_meta_user_role" */
export type User_Meta_User_Role_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<User_Meta_User_Role_Max_Order_By>;
  min?: InputMaybe<User_Meta_User_Role_Min_Order_By>;
};

/** input type for inserting array relation for remote table "user_meta_user_role" */
export type User_Meta_User_Role_Arr_Rel_Insert_Input = {
  data: Array<User_Meta_User_Role_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<User_Meta_User_Role_On_Conflict>;
};

/** Boolean expression to filter rows from the table "user_meta_user_role". All fields are combined with a logical 'AND'. */
export type User_Meta_User_Role_Bool_Exp = {
  _and?: InputMaybe<Array<User_Meta_User_Role_Bool_Exp>>;
  _not?: InputMaybe<User_Meta_User_Role_Bool_Exp>;
  _or?: InputMaybe<Array<User_Meta_User_Role_Bool_Exp>>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  public_user_meta?: InputMaybe<Public_User_Meta_Bool_Exp>;
  userMetaID?: InputMaybe<Uuid_Comparison_Exp>;
  userRoleID?: InputMaybe<Uuid_Comparison_Exp>;
  user_meta?: InputMaybe<User_Meta_Bool_Exp>;
  user_role?: InputMaybe<User_Role_Bool_Exp>;
};

/** unique or primary key constraints on table "user_meta_user_role" */
export enum User_Meta_User_Role_Constraint {
  /** unique or primary key constraint on columns "id" */
  UserMetaUserRolePkey = 'user_meta_user_role_pkey',
  /** unique or primary key constraint on columns "userMetaID", "userRoleID" */
  UserMetaUserRoleUserMetaIdUserRoleIdKey = 'user_meta_user_role_userMetaID_userRoleID_key',
}

/** input type for inserting data into table "user_meta_user_role" */
export type User_Meta_User_Role_Insert_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['uuid']>;
  public_user_meta?: InputMaybe<Public_User_Meta_Obj_Rel_Insert_Input>;
  userMetaID?: InputMaybe<Scalars['uuid']>;
  userRoleID?: InputMaybe<Scalars['uuid']>;
  user_meta?: InputMaybe<User_Meta_Obj_Rel_Insert_Input>;
  user_role?: InputMaybe<User_Role_Obj_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type User_Meta_User_Role_Max_Fields = {
  __typename?: 'user_meta_user_role_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  userMetaID?: Maybe<Scalars['uuid']>;
  userRoleID?: Maybe<Scalars['uuid']>;
};

/** order by max() on columns of table "user_meta_user_role" */
export type User_Meta_User_Role_Max_Order_By = {
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  userMetaID?: InputMaybe<Order_By>;
  userRoleID?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type User_Meta_User_Role_Min_Fields = {
  __typename?: 'user_meta_user_role_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  userMetaID?: Maybe<Scalars['uuid']>;
  userRoleID?: Maybe<Scalars['uuid']>;
};

/** order by min() on columns of table "user_meta_user_role" */
export type User_Meta_User_Role_Min_Order_By = {
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  userMetaID?: InputMaybe<Order_By>;
  userRoleID?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "user_meta_user_role" */
export type User_Meta_User_Role_Mutation_Response = {
  __typename?: 'user_meta_user_role_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<User_Meta_User_Role>;
};

/** on_conflict condition type for table "user_meta_user_role" */
export type User_Meta_User_Role_On_Conflict = {
  constraint: User_Meta_User_Role_Constraint;
  update_columns?: Array<User_Meta_User_Role_Update_Column>;
  where?: InputMaybe<User_Meta_User_Role_Bool_Exp>;
};

/** Ordering options when selecting data from "user_meta_user_role". */
export type User_Meta_User_Role_Order_By = {
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  public_user_meta?: InputMaybe<Public_User_Meta_Order_By>;
  userMetaID?: InputMaybe<Order_By>;
  userRoleID?: InputMaybe<Order_By>;
  user_meta?: InputMaybe<User_Meta_Order_By>;
  user_role?: InputMaybe<User_Role_Order_By>;
};

/** primary key columns input for table: user_meta_user_role */
export type User_Meta_User_Role_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "user_meta_user_role" */
export enum User_Meta_User_Role_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  UserMetaId = 'userMetaID',
  /** column name */
  UserRoleId = 'userRoleID',
}

/** input type for updating data in table "user_meta_user_role" */
export type User_Meta_User_Role_Set_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['uuid']>;
  userMetaID?: InputMaybe<Scalars['uuid']>;
  userRoleID?: InputMaybe<Scalars['uuid']>;
};

/** Streaming cursor of the table "user_meta_user_role" */
export type User_Meta_User_Role_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: User_Meta_User_Role_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type User_Meta_User_Role_Stream_Cursor_Value_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['uuid']>;
  userMetaID?: InputMaybe<Scalars['uuid']>;
  userRoleID?: InputMaybe<Scalars['uuid']>;
};

/** update columns of table "user_meta_user_role" */
export enum User_Meta_User_Role_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  UserMetaId = 'userMetaID',
  /** column name */
  UserRoleId = 'userRoleID',
}

export type User_Meta_User_Role_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<User_Meta_User_Role_Set_Input>;
  where: User_Meta_User_Role_Bool_Exp;
};

/** columns and relationships of "user_professional_information" */
export type User_Professional_Information = {
  __typename?: 'user_professional_information';
  annualTargetEarnings?: Maybe<Scalars['Int']>;
  availabilityEndTime: Scalars['time'];
  availabilityStartTime: Scalars['time'];
  availabilityTimeZone: Scalars['String'];
  currencyType?: Maybe<Scalars['String']>;
  customLinkOneLink?: Maybe<Scalars['String']>;
  customLinkOneTitle?: Maybe<Scalars['String']>;
  customLinkTwoLink?: Maybe<Scalars['String']>;
  customLinkTwoTitle?: Maybe<Scalars['String']>;
  dailyRate?: Maybe<Scalars['Int']>;
  fourWeeklyRate?: Maybe<Scalars['Int']>;
  hourlyRate: Scalars['Int'];
  id: Scalars['uuid'];
  linkedInUrl?: Maybe<Scalars['String']>;
  meetingSchedulerURL?: Maybe<Scalars['String']>;
  monthlyTarget?: Maybe<Scalars['Int']>;
  twitterUrl?: Maybe<Scalars['String']>;
  userMetaID: Scalars['uuid'];
  /** An object relationship */
  user_meta: User_Meta;
  weeklyRate?: Maybe<Scalars['Int']>;
};

/** aggregated selection of "user_professional_information" */
export type User_Professional_Information_Aggregate = {
  __typename?: 'user_professional_information_aggregate';
  aggregate?: Maybe<User_Professional_Information_Aggregate_Fields>;
  nodes: Array<User_Professional_Information>;
};

/** aggregate fields of "user_professional_information" */
export type User_Professional_Information_Aggregate_Fields = {
  __typename?: 'user_professional_information_aggregate_fields';
  avg?: Maybe<User_Professional_Information_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<User_Professional_Information_Max_Fields>;
  min?: Maybe<User_Professional_Information_Min_Fields>;
  stddev?: Maybe<User_Professional_Information_Stddev_Fields>;
  stddev_pop?: Maybe<User_Professional_Information_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<User_Professional_Information_Stddev_Samp_Fields>;
  sum?: Maybe<User_Professional_Information_Sum_Fields>;
  var_pop?: Maybe<User_Professional_Information_Var_Pop_Fields>;
  var_samp?: Maybe<User_Professional_Information_Var_Samp_Fields>;
  variance?: Maybe<User_Professional_Information_Variance_Fields>;
};

/** aggregate fields of "user_professional_information" */
export type User_Professional_Information_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<User_Professional_Information_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type User_Professional_Information_Avg_Fields = {
  __typename?: 'user_professional_information_avg_fields';
  annualTargetEarnings?: Maybe<Scalars['Float']>;
  dailyRate?: Maybe<Scalars['Float']>;
  fourWeeklyRate?: Maybe<Scalars['Float']>;
  hourlyRate?: Maybe<Scalars['Float']>;
  monthlyTarget?: Maybe<Scalars['Float']>;
  weeklyRate?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "user_professional_information". All fields are combined with a logical 'AND'. */
export type User_Professional_Information_Bool_Exp = {
  _and?: InputMaybe<Array<User_Professional_Information_Bool_Exp>>;
  _not?: InputMaybe<User_Professional_Information_Bool_Exp>;
  _or?: InputMaybe<Array<User_Professional_Information_Bool_Exp>>;
  annualTargetEarnings?: InputMaybe<Int_Comparison_Exp>;
  availabilityEndTime?: InputMaybe<Time_Comparison_Exp>;
  availabilityStartTime?: InputMaybe<Time_Comparison_Exp>;
  availabilityTimeZone?: InputMaybe<String_Comparison_Exp>;
  currencyType?: InputMaybe<String_Comparison_Exp>;
  customLinkOneLink?: InputMaybe<String_Comparison_Exp>;
  customLinkOneTitle?: InputMaybe<String_Comparison_Exp>;
  customLinkTwoLink?: InputMaybe<String_Comparison_Exp>;
  customLinkTwoTitle?: InputMaybe<String_Comparison_Exp>;
  dailyRate?: InputMaybe<Int_Comparison_Exp>;
  fourWeeklyRate?: InputMaybe<Int_Comparison_Exp>;
  hourlyRate?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  linkedInUrl?: InputMaybe<String_Comparison_Exp>;
  meetingSchedulerURL?: InputMaybe<String_Comparison_Exp>;
  monthlyTarget?: InputMaybe<Int_Comparison_Exp>;
  twitterUrl?: InputMaybe<String_Comparison_Exp>;
  userMetaID?: InputMaybe<Uuid_Comparison_Exp>;
  user_meta?: InputMaybe<User_Meta_Bool_Exp>;
  weeklyRate?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "user_professional_information" */
export enum User_Professional_Information_Constraint {
  /** unique or primary key constraint on columns "id" */
  UserProfessionalInformationPkey = 'user_professional_information_pkey',
  /** unique or primary key constraint on columns "userMetaID" */
  UserProfessionalInformationUserMetaIdKey = 'user_professional_information_userMetaID_key',
}

/** input type for incrementing numeric columns in table "user_professional_information" */
export type User_Professional_Information_Inc_Input = {
  annualTargetEarnings?: InputMaybe<Scalars['Int']>;
  dailyRate?: InputMaybe<Scalars['Int']>;
  fourWeeklyRate?: InputMaybe<Scalars['Int']>;
  hourlyRate?: InputMaybe<Scalars['Int']>;
  monthlyTarget?: InputMaybe<Scalars['Int']>;
  weeklyRate?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "user_professional_information" */
export type User_Professional_Information_Insert_Input = {
  annualTargetEarnings?: InputMaybe<Scalars['Int']>;
  availabilityEndTime?: InputMaybe<Scalars['time']>;
  availabilityStartTime?: InputMaybe<Scalars['time']>;
  availabilityTimeZone?: InputMaybe<Scalars['String']>;
  currencyType?: InputMaybe<Scalars['String']>;
  customLinkOneLink?: InputMaybe<Scalars['String']>;
  customLinkOneTitle?: InputMaybe<Scalars['String']>;
  customLinkTwoLink?: InputMaybe<Scalars['String']>;
  customLinkTwoTitle?: InputMaybe<Scalars['String']>;
  dailyRate?: InputMaybe<Scalars['Int']>;
  fourWeeklyRate?: InputMaybe<Scalars['Int']>;
  hourlyRate?: InputMaybe<Scalars['Int']>;
  id?: InputMaybe<Scalars['uuid']>;
  linkedInUrl?: InputMaybe<Scalars['String']>;
  meetingSchedulerURL?: InputMaybe<Scalars['String']>;
  monthlyTarget?: InputMaybe<Scalars['Int']>;
  twitterUrl?: InputMaybe<Scalars['String']>;
  userMetaID?: InputMaybe<Scalars['uuid']>;
  user_meta?: InputMaybe<User_Meta_Obj_Rel_Insert_Input>;
  weeklyRate?: InputMaybe<Scalars['Int']>;
};

/** aggregate max on columns */
export type User_Professional_Information_Max_Fields = {
  __typename?: 'user_professional_information_max_fields';
  annualTargetEarnings?: Maybe<Scalars['Int']>;
  availabilityTimeZone?: Maybe<Scalars['String']>;
  currencyType?: Maybe<Scalars['String']>;
  customLinkOneLink?: Maybe<Scalars['String']>;
  customLinkOneTitle?: Maybe<Scalars['String']>;
  customLinkTwoLink?: Maybe<Scalars['String']>;
  customLinkTwoTitle?: Maybe<Scalars['String']>;
  dailyRate?: Maybe<Scalars['Int']>;
  fourWeeklyRate?: Maybe<Scalars['Int']>;
  hourlyRate?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['uuid']>;
  linkedInUrl?: Maybe<Scalars['String']>;
  meetingSchedulerURL?: Maybe<Scalars['String']>;
  monthlyTarget?: Maybe<Scalars['Int']>;
  twitterUrl?: Maybe<Scalars['String']>;
  userMetaID?: Maybe<Scalars['uuid']>;
  weeklyRate?: Maybe<Scalars['Int']>;
};

/** aggregate min on columns */
export type User_Professional_Information_Min_Fields = {
  __typename?: 'user_professional_information_min_fields';
  annualTargetEarnings?: Maybe<Scalars['Int']>;
  availabilityTimeZone?: Maybe<Scalars['String']>;
  currencyType?: Maybe<Scalars['String']>;
  customLinkOneLink?: Maybe<Scalars['String']>;
  customLinkOneTitle?: Maybe<Scalars['String']>;
  customLinkTwoLink?: Maybe<Scalars['String']>;
  customLinkTwoTitle?: Maybe<Scalars['String']>;
  dailyRate?: Maybe<Scalars['Int']>;
  fourWeeklyRate?: Maybe<Scalars['Int']>;
  hourlyRate?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['uuid']>;
  linkedInUrl?: Maybe<Scalars['String']>;
  meetingSchedulerURL?: Maybe<Scalars['String']>;
  monthlyTarget?: Maybe<Scalars['Int']>;
  twitterUrl?: Maybe<Scalars['String']>;
  userMetaID?: Maybe<Scalars['uuid']>;
  weeklyRate?: Maybe<Scalars['Int']>;
};

/** response of any mutation on the table "user_professional_information" */
export type User_Professional_Information_Mutation_Response = {
  __typename?: 'user_professional_information_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<User_Professional_Information>;
};

/** input type for inserting object relation for remote table "user_professional_information" */
export type User_Professional_Information_Obj_Rel_Insert_Input = {
  data: User_Professional_Information_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<User_Professional_Information_On_Conflict>;
};

/** on_conflict condition type for table "user_professional_information" */
export type User_Professional_Information_On_Conflict = {
  constraint: User_Professional_Information_Constraint;
  update_columns?: Array<User_Professional_Information_Update_Column>;
  where?: InputMaybe<User_Professional_Information_Bool_Exp>;
};

/** Ordering options when selecting data from "user_professional_information". */
export type User_Professional_Information_Order_By = {
  annualTargetEarnings?: InputMaybe<Order_By>;
  availabilityEndTime?: InputMaybe<Order_By>;
  availabilityStartTime?: InputMaybe<Order_By>;
  availabilityTimeZone?: InputMaybe<Order_By>;
  currencyType?: InputMaybe<Order_By>;
  customLinkOneLink?: InputMaybe<Order_By>;
  customLinkOneTitle?: InputMaybe<Order_By>;
  customLinkTwoLink?: InputMaybe<Order_By>;
  customLinkTwoTitle?: InputMaybe<Order_By>;
  dailyRate?: InputMaybe<Order_By>;
  fourWeeklyRate?: InputMaybe<Order_By>;
  hourlyRate?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  linkedInUrl?: InputMaybe<Order_By>;
  meetingSchedulerURL?: InputMaybe<Order_By>;
  monthlyTarget?: InputMaybe<Order_By>;
  twitterUrl?: InputMaybe<Order_By>;
  userMetaID?: InputMaybe<Order_By>;
  user_meta?: InputMaybe<User_Meta_Order_By>;
  weeklyRate?: InputMaybe<Order_By>;
};

/** primary key columns input for table: user_professional_information */
export type User_Professional_Information_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "user_professional_information" */
export enum User_Professional_Information_Select_Column {
  /** column name */
  AnnualTargetEarnings = 'annualTargetEarnings',
  /** column name */
  AvailabilityEndTime = 'availabilityEndTime',
  /** column name */
  AvailabilityStartTime = 'availabilityStartTime',
  /** column name */
  AvailabilityTimeZone = 'availabilityTimeZone',
  /** column name */
  CurrencyType = 'currencyType',
  /** column name */
  CustomLinkOneLink = 'customLinkOneLink',
  /** column name */
  CustomLinkOneTitle = 'customLinkOneTitle',
  /** column name */
  CustomLinkTwoLink = 'customLinkTwoLink',
  /** column name */
  CustomLinkTwoTitle = 'customLinkTwoTitle',
  /** column name */
  DailyRate = 'dailyRate',
  /** column name */
  FourWeeklyRate = 'fourWeeklyRate',
  /** column name */
  HourlyRate = 'hourlyRate',
  /** column name */
  Id = 'id',
  /** column name */
  LinkedInUrl = 'linkedInUrl',
  /** column name */
  MeetingSchedulerUrl = 'meetingSchedulerURL',
  /** column name */
  MonthlyTarget = 'monthlyTarget',
  /** column name */
  TwitterUrl = 'twitterUrl',
  /** column name */
  UserMetaId = 'userMetaID',
  /** column name */
  WeeklyRate = 'weeklyRate',
}

/** input type for updating data in table "user_professional_information" */
export type User_Professional_Information_Set_Input = {
  annualTargetEarnings?: InputMaybe<Scalars['Int']>;
  availabilityEndTime?: InputMaybe<Scalars['time']>;
  availabilityStartTime?: InputMaybe<Scalars['time']>;
  availabilityTimeZone?: InputMaybe<Scalars['String']>;
  currencyType?: InputMaybe<Scalars['String']>;
  customLinkOneLink?: InputMaybe<Scalars['String']>;
  customLinkOneTitle?: InputMaybe<Scalars['String']>;
  customLinkTwoLink?: InputMaybe<Scalars['String']>;
  customLinkTwoTitle?: InputMaybe<Scalars['String']>;
  dailyRate?: InputMaybe<Scalars['Int']>;
  fourWeeklyRate?: InputMaybe<Scalars['Int']>;
  hourlyRate?: InputMaybe<Scalars['Int']>;
  id?: InputMaybe<Scalars['uuid']>;
  linkedInUrl?: InputMaybe<Scalars['String']>;
  meetingSchedulerURL?: InputMaybe<Scalars['String']>;
  monthlyTarget?: InputMaybe<Scalars['Int']>;
  twitterUrl?: InputMaybe<Scalars['String']>;
  userMetaID?: InputMaybe<Scalars['uuid']>;
  weeklyRate?: InputMaybe<Scalars['Int']>;
};

/** aggregate stddev on columns */
export type User_Professional_Information_Stddev_Fields = {
  __typename?: 'user_professional_information_stddev_fields';
  annualTargetEarnings?: Maybe<Scalars['Float']>;
  dailyRate?: Maybe<Scalars['Float']>;
  fourWeeklyRate?: Maybe<Scalars['Float']>;
  hourlyRate?: Maybe<Scalars['Float']>;
  monthlyTarget?: Maybe<Scalars['Float']>;
  weeklyRate?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type User_Professional_Information_Stddev_Pop_Fields = {
  __typename?: 'user_professional_information_stddev_pop_fields';
  annualTargetEarnings?: Maybe<Scalars['Float']>;
  dailyRate?: Maybe<Scalars['Float']>;
  fourWeeklyRate?: Maybe<Scalars['Float']>;
  hourlyRate?: Maybe<Scalars['Float']>;
  monthlyTarget?: Maybe<Scalars['Float']>;
  weeklyRate?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type User_Professional_Information_Stddev_Samp_Fields = {
  __typename?: 'user_professional_information_stddev_samp_fields';
  annualTargetEarnings?: Maybe<Scalars['Float']>;
  dailyRate?: Maybe<Scalars['Float']>;
  fourWeeklyRate?: Maybe<Scalars['Float']>;
  hourlyRate?: Maybe<Scalars['Float']>;
  monthlyTarget?: Maybe<Scalars['Float']>;
  weeklyRate?: Maybe<Scalars['Float']>;
};

/** Streaming cursor of the table "user_professional_information" */
export type User_Professional_Information_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: User_Professional_Information_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type User_Professional_Information_Stream_Cursor_Value_Input = {
  annualTargetEarnings?: InputMaybe<Scalars['Int']>;
  availabilityEndTime?: InputMaybe<Scalars['time']>;
  availabilityStartTime?: InputMaybe<Scalars['time']>;
  availabilityTimeZone?: InputMaybe<Scalars['String']>;
  currencyType?: InputMaybe<Scalars['String']>;
  customLinkOneLink?: InputMaybe<Scalars['String']>;
  customLinkOneTitle?: InputMaybe<Scalars['String']>;
  customLinkTwoLink?: InputMaybe<Scalars['String']>;
  customLinkTwoTitle?: InputMaybe<Scalars['String']>;
  dailyRate?: InputMaybe<Scalars['Int']>;
  fourWeeklyRate?: InputMaybe<Scalars['Int']>;
  hourlyRate?: InputMaybe<Scalars['Int']>;
  id?: InputMaybe<Scalars['uuid']>;
  linkedInUrl?: InputMaybe<Scalars['String']>;
  meetingSchedulerURL?: InputMaybe<Scalars['String']>;
  monthlyTarget?: InputMaybe<Scalars['Int']>;
  twitterUrl?: InputMaybe<Scalars['String']>;
  userMetaID?: InputMaybe<Scalars['uuid']>;
  weeklyRate?: InputMaybe<Scalars['Int']>;
};

/** aggregate sum on columns */
export type User_Professional_Information_Sum_Fields = {
  __typename?: 'user_professional_information_sum_fields';
  annualTargetEarnings?: Maybe<Scalars['Int']>;
  dailyRate?: Maybe<Scalars['Int']>;
  fourWeeklyRate?: Maybe<Scalars['Int']>;
  hourlyRate?: Maybe<Scalars['Int']>;
  monthlyTarget?: Maybe<Scalars['Int']>;
  weeklyRate?: Maybe<Scalars['Int']>;
};

/** update columns of table "user_professional_information" */
export enum User_Professional_Information_Update_Column {
  /** column name */
  AnnualTargetEarnings = 'annualTargetEarnings',
  /** column name */
  AvailabilityEndTime = 'availabilityEndTime',
  /** column name */
  AvailabilityStartTime = 'availabilityStartTime',
  /** column name */
  AvailabilityTimeZone = 'availabilityTimeZone',
  /** column name */
  CurrencyType = 'currencyType',
  /** column name */
  CustomLinkOneLink = 'customLinkOneLink',
  /** column name */
  CustomLinkOneTitle = 'customLinkOneTitle',
  /** column name */
  CustomLinkTwoLink = 'customLinkTwoLink',
  /** column name */
  CustomLinkTwoTitle = 'customLinkTwoTitle',
  /** column name */
  DailyRate = 'dailyRate',
  /** column name */
  FourWeeklyRate = 'fourWeeklyRate',
  /** column name */
  HourlyRate = 'hourlyRate',
  /** column name */
  Id = 'id',
  /** column name */
  LinkedInUrl = 'linkedInUrl',
  /** column name */
  MeetingSchedulerUrl = 'meetingSchedulerURL',
  /** column name */
  MonthlyTarget = 'monthlyTarget',
  /** column name */
  TwitterUrl = 'twitterUrl',
  /** column name */
  UserMetaId = 'userMetaID',
  /** column name */
  WeeklyRate = 'weeklyRate',
}

export type User_Professional_Information_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<User_Professional_Information_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<User_Professional_Information_Set_Input>;
  where: User_Professional_Information_Bool_Exp;
};

/** aggregate var_pop on columns */
export type User_Professional_Information_Var_Pop_Fields = {
  __typename?: 'user_professional_information_var_pop_fields';
  annualTargetEarnings?: Maybe<Scalars['Float']>;
  dailyRate?: Maybe<Scalars['Float']>;
  fourWeeklyRate?: Maybe<Scalars['Float']>;
  hourlyRate?: Maybe<Scalars['Float']>;
  monthlyTarget?: Maybe<Scalars['Float']>;
  weeklyRate?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type User_Professional_Information_Var_Samp_Fields = {
  __typename?: 'user_professional_information_var_samp_fields';
  annualTargetEarnings?: Maybe<Scalars['Float']>;
  dailyRate?: Maybe<Scalars['Float']>;
  fourWeeklyRate?: Maybe<Scalars['Float']>;
  hourlyRate?: Maybe<Scalars['Float']>;
  monthlyTarget?: Maybe<Scalars['Float']>;
  weeklyRate?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type User_Professional_Information_Variance_Fields = {
  __typename?: 'user_professional_information_variance_fields';
  annualTargetEarnings?: Maybe<Scalars['Float']>;
  dailyRate?: Maybe<Scalars['Float']>;
  fourWeeklyRate?: Maybe<Scalars['Float']>;
  hourlyRate?: Maybe<Scalars['Float']>;
  monthlyTarget?: Maybe<Scalars['Float']>;
  weeklyRate?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "user_profile" */
export type User_Profile = {
  __typename?: 'user_profile';
  created_at: Scalars['timestamptz'];
  id: Scalars['uuid'];
  isDefault: Scalars['Boolean'];
  isHidden: Scalars['Boolean'];
  role: Scalars['String'];
  slideUrl?: Maybe<Scalars['String']>;
  summary: Scalars['String'];
  userMetaID: Scalars['uuid'];
  /** An object relationship */
  user_meta: User_Meta;
  /** An object relationship */
  user_profile?: Maybe<User_Profile>;
  /** An array relationship */
  user_profile_industries: Array<User_Profile_Industry>;
  /** An aggregate relationship */
  user_profile_industries_aggregate: User_Profile_Industry_Aggregate;
  /** An array relationship */
  user_profile_skills: Array<User_Profile_Skill>;
  /** An aggregate relationship */
  user_profile_skills_aggregate: User_Profile_Skill_Aggregate;
  /** An array relationship */
  user_profile_teams: Array<User_Profile_Team>;
  /** An aggregate relationship */
  user_profile_teams_aggregate: User_Profile_Team_Aggregate;
  /** An array relationship */
  user_work_experiences: Array<User_Work_Experience>;
  /** An aggregate relationship */
  user_work_experiences_aggregate: User_Work_Experience_Aggregate;
};

/** columns and relationships of "user_profile" */
export type User_ProfileUser_Profile_IndustriesArgs = {
  distinct_on?: InputMaybe<Array<User_Profile_Industry_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Profile_Industry_Order_By>>;
  where?: InputMaybe<User_Profile_Industry_Bool_Exp>;
};

/** columns and relationships of "user_profile" */
export type User_ProfileUser_Profile_Industries_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Profile_Industry_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Profile_Industry_Order_By>>;
  where?: InputMaybe<User_Profile_Industry_Bool_Exp>;
};

/** columns and relationships of "user_profile" */
export type User_ProfileUser_Profile_SkillsArgs = {
  distinct_on?: InputMaybe<Array<User_Profile_Skill_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Profile_Skill_Order_By>>;
  where?: InputMaybe<User_Profile_Skill_Bool_Exp>;
};

/** columns and relationships of "user_profile" */
export type User_ProfileUser_Profile_Skills_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Profile_Skill_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Profile_Skill_Order_By>>;
  where?: InputMaybe<User_Profile_Skill_Bool_Exp>;
};

/** columns and relationships of "user_profile" */
export type User_ProfileUser_Profile_TeamsArgs = {
  distinct_on?: InputMaybe<Array<User_Profile_Team_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Profile_Team_Order_By>>;
  where?: InputMaybe<User_Profile_Team_Bool_Exp>;
};

/** columns and relationships of "user_profile" */
export type User_ProfileUser_Profile_Teams_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Profile_Team_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Profile_Team_Order_By>>;
  where?: InputMaybe<User_Profile_Team_Bool_Exp>;
};

/** columns and relationships of "user_profile" */
export type User_ProfileUser_Work_ExperiencesArgs = {
  distinct_on?: InputMaybe<Array<User_Work_Experience_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Work_Experience_Order_By>>;
  where?: InputMaybe<User_Work_Experience_Bool_Exp>;
};

/** columns and relationships of "user_profile" */
export type User_ProfileUser_Work_Experiences_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Work_Experience_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Work_Experience_Order_By>>;
  where?: InputMaybe<User_Work_Experience_Bool_Exp>;
};

/** aggregated selection of "user_profile" */
export type User_Profile_Aggregate = {
  __typename?: 'user_profile_aggregate';
  aggregate?: Maybe<User_Profile_Aggregate_Fields>;
  nodes: Array<User_Profile>;
};

/** aggregate fields of "user_profile" */
export type User_Profile_Aggregate_Fields = {
  __typename?: 'user_profile_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<User_Profile_Max_Fields>;
  min?: Maybe<User_Profile_Min_Fields>;
};

/** aggregate fields of "user_profile" */
export type User_Profile_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<User_Profile_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "user_profile" */
export type User_Profile_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<User_Profile_Max_Order_By>;
  min?: InputMaybe<User_Profile_Min_Order_By>;
};

/** input type for inserting array relation for remote table "user_profile" */
export type User_Profile_Arr_Rel_Insert_Input = {
  data: Array<User_Profile_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<User_Profile_On_Conflict>;
};

/** Boolean expression to filter rows from the table "user_profile". All fields are combined with a logical 'AND'. */
export type User_Profile_Bool_Exp = {
  _and?: InputMaybe<Array<User_Profile_Bool_Exp>>;
  _not?: InputMaybe<User_Profile_Bool_Exp>;
  _or?: InputMaybe<Array<User_Profile_Bool_Exp>>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  isDefault?: InputMaybe<Boolean_Comparison_Exp>;
  isHidden?: InputMaybe<Boolean_Comparison_Exp>;
  role?: InputMaybe<String_Comparison_Exp>;
  slideUrl?: InputMaybe<String_Comparison_Exp>;
  summary?: InputMaybe<String_Comparison_Exp>;
  userMetaID?: InputMaybe<Uuid_Comparison_Exp>;
  user_meta?: InputMaybe<User_Meta_Bool_Exp>;
  user_profile?: InputMaybe<User_Profile_Bool_Exp>;
  user_profile_industries?: InputMaybe<User_Profile_Industry_Bool_Exp>;
  user_profile_skills?: InputMaybe<User_Profile_Skill_Bool_Exp>;
  user_profile_teams?: InputMaybe<User_Profile_Team_Bool_Exp>;
  user_work_experiences?: InputMaybe<User_Work_Experience_Bool_Exp>;
};

/** columns and relationships of "user_profile_company" */
export type User_Profile_Company = {
  __typename?: 'user_profile_company';
  companyLogoKey?: Maybe<Scalars['String']>;
  companySize?: Maybe<Scalars['String']>;
  createdByUserCognitoSub?: Maybe<Scalars['String']>;
  id: Scalars['uuid'];
  /** An object relationship */
  industry?: Maybe<Industry>;
  industryID?: Maybe<Scalars['uuid']>;
  isBrandFetch?: Maybe<Scalars['Boolean']>;
  name: Scalars['String'];
  /** An object relationship */
  user_meta?: Maybe<User_Meta>;
  /** An array relationship */
  user_work_experiences: Array<User_Work_Experience>;
  /** An aggregate relationship */
  user_work_experiences_aggregate: User_Work_Experience_Aggregate;
  website?: Maybe<Scalars['String']>;
};

/** columns and relationships of "user_profile_company" */
export type User_Profile_CompanyUser_Work_ExperiencesArgs = {
  distinct_on?: InputMaybe<Array<User_Work_Experience_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Work_Experience_Order_By>>;
  where?: InputMaybe<User_Work_Experience_Bool_Exp>;
};

/** columns and relationships of "user_profile_company" */
export type User_Profile_CompanyUser_Work_Experiences_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Work_Experience_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Work_Experience_Order_By>>;
  where?: InputMaybe<User_Work_Experience_Bool_Exp>;
};

/** aggregated selection of "user_profile_company" */
export type User_Profile_Company_Aggregate = {
  __typename?: 'user_profile_company_aggregate';
  aggregate?: Maybe<User_Profile_Company_Aggregate_Fields>;
  nodes: Array<User_Profile_Company>;
};

/** aggregate fields of "user_profile_company" */
export type User_Profile_Company_Aggregate_Fields = {
  __typename?: 'user_profile_company_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<User_Profile_Company_Max_Fields>;
  min?: Maybe<User_Profile_Company_Min_Fields>;
};

/** aggregate fields of "user_profile_company" */
export type User_Profile_Company_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<User_Profile_Company_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "user_profile_company" */
export type User_Profile_Company_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<User_Profile_Company_Max_Order_By>;
  min?: InputMaybe<User_Profile_Company_Min_Order_By>;
};

/** input type for inserting array relation for remote table "user_profile_company" */
export type User_Profile_Company_Arr_Rel_Insert_Input = {
  data: Array<User_Profile_Company_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<User_Profile_Company_On_Conflict>;
};

/** Boolean expression to filter rows from the table "user_profile_company". All fields are combined with a logical 'AND'. */
export type User_Profile_Company_Bool_Exp = {
  _and?: InputMaybe<Array<User_Profile_Company_Bool_Exp>>;
  _not?: InputMaybe<User_Profile_Company_Bool_Exp>;
  _or?: InputMaybe<Array<User_Profile_Company_Bool_Exp>>;
  companyLogoKey?: InputMaybe<String_Comparison_Exp>;
  companySize?: InputMaybe<String_Comparison_Exp>;
  createdByUserCognitoSub?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  industry?: InputMaybe<Industry_Bool_Exp>;
  industryID?: InputMaybe<Uuid_Comparison_Exp>;
  isBrandFetch?: InputMaybe<Boolean_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  user_meta?: InputMaybe<User_Meta_Bool_Exp>;
  user_work_experiences?: InputMaybe<User_Work_Experience_Bool_Exp>;
  website?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "user_profile_company" */
export enum User_Profile_Company_Constraint {
  /** unique or primary key constraint on columns "name" */
  UserProfileCompanyNameKey = 'user_profile_company_name_key',
  /** unique or primary key constraint on columns "id" */
  UserProfileCompanyPkey = 'user_profile_company_pkey',
}

/** input type for inserting data into table "user_profile_company" */
export type User_Profile_Company_Insert_Input = {
  companyLogoKey?: InputMaybe<Scalars['String']>;
  companySize?: InputMaybe<Scalars['String']>;
  createdByUserCognitoSub?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['uuid']>;
  industry?: InputMaybe<Industry_Obj_Rel_Insert_Input>;
  industryID?: InputMaybe<Scalars['uuid']>;
  isBrandFetch?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  user_meta?: InputMaybe<User_Meta_Obj_Rel_Insert_Input>;
  user_work_experiences?: InputMaybe<User_Work_Experience_Arr_Rel_Insert_Input>;
  website?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type User_Profile_Company_Max_Fields = {
  __typename?: 'user_profile_company_max_fields';
  companyLogoKey?: Maybe<Scalars['String']>;
  companySize?: Maybe<Scalars['String']>;
  createdByUserCognitoSub?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  industryID?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
  website?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "user_profile_company" */
export type User_Profile_Company_Max_Order_By = {
  companyLogoKey?: InputMaybe<Order_By>;
  companySize?: InputMaybe<Order_By>;
  createdByUserCognitoSub?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  industryID?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  website?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type User_Profile_Company_Min_Fields = {
  __typename?: 'user_profile_company_min_fields';
  companyLogoKey?: Maybe<Scalars['String']>;
  companySize?: Maybe<Scalars['String']>;
  createdByUserCognitoSub?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  industryID?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
  website?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "user_profile_company" */
export type User_Profile_Company_Min_Order_By = {
  companyLogoKey?: InputMaybe<Order_By>;
  companySize?: InputMaybe<Order_By>;
  createdByUserCognitoSub?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  industryID?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  website?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "user_profile_company" */
export type User_Profile_Company_Mutation_Response = {
  __typename?: 'user_profile_company_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<User_Profile_Company>;
};

/** input type for inserting object relation for remote table "user_profile_company" */
export type User_Profile_Company_Obj_Rel_Insert_Input = {
  data: User_Profile_Company_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<User_Profile_Company_On_Conflict>;
};

/** on_conflict condition type for table "user_profile_company" */
export type User_Profile_Company_On_Conflict = {
  constraint: User_Profile_Company_Constraint;
  update_columns?: Array<User_Profile_Company_Update_Column>;
  where?: InputMaybe<User_Profile_Company_Bool_Exp>;
};

/** Ordering options when selecting data from "user_profile_company". */
export type User_Profile_Company_Order_By = {
  companyLogoKey?: InputMaybe<Order_By>;
  companySize?: InputMaybe<Order_By>;
  createdByUserCognitoSub?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  industry?: InputMaybe<Industry_Order_By>;
  industryID?: InputMaybe<Order_By>;
  isBrandFetch?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  user_meta?: InputMaybe<User_Meta_Order_By>;
  user_work_experiences_aggregate?: InputMaybe<User_Work_Experience_Aggregate_Order_By>;
  website?: InputMaybe<Order_By>;
};

/** primary key columns input for table: user_profile_company */
export type User_Profile_Company_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "user_profile_company" */
export enum User_Profile_Company_Select_Column {
  /** column name */
  CompanyLogoKey = 'companyLogoKey',
  /** column name */
  CompanySize = 'companySize',
  /** column name */
  CreatedByUserCognitoSub = 'createdByUserCognitoSub',
  /** column name */
  Id = 'id',
  /** column name */
  IndustryId = 'industryID',
  /** column name */
  IsBrandFetch = 'isBrandFetch',
  /** column name */
  Name = 'name',
  /** column name */
  Website = 'website',
}

/** input type for updating data in table "user_profile_company" */
export type User_Profile_Company_Set_Input = {
  companyLogoKey?: InputMaybe<Scalars['String']>;
  companySize?: InputMaybe<Scalars['String']>;
  createdByUserCognitoSub?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['uuid']>;
  industryID?: InputMaybe<Scalars['uuid']>;
  isBrandFetch?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  website?: InputMaybe<Scalars['String']>;
};

/** Streaming cursor of the table "user_profile_company" */
export type User_Profile_Company_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: User_Profile_Company_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type User_Profile_Company_Stream_Cursor_Value_Input = {
  companyLogoKey?: InputMaybe<Scalars['String']>;
  companySize?: InputMaybe<Scalars['String']>;
  createdByUserCognitoSub?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['uuid']>;
  industryID?: InputMaybe<Scalars['uuid']>;
  isBrandFetch?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  website?: InputMaybe<Scalars['String']>;
};

/** update columns of table "user_profile_company" */
export enum User_Profile_Company_Update_Column {
  /** column name */
  CompanyLogoKey = 'companyLogoKey',
  /** column name */
  CompanySize = 'companySize',
  /** column name */
  CreatedByUserCognitoSub = 'createdByUserCognitoSub',
  /** column name */
  Id = 'id',
  /** column name */
  IndustryId = 'industryID',
  /** column name */
  IsBrandFetch = 'isBrandFetch',
  /** column name */
  Name = 'name',
  /** column name */
  Website = 'website',
}

export type User_Profile_Company_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<User_Profile_Company_Set_Input>;
  where: User_Profile_Company_Bool_Exp;
};

/** unique or primary key constraints on table "user_profile" */
export enum User_Profile_Constraint {
  /** unique or primary key constraint on columns "id" */
  UserProfilePkey = 'user_profile_pkey',
}

/** columns and relationships of "user_profile_industry" */
export type User_Profile_Industry = {
  __typename?: 'user_profile_industry';
  /** An object relationship */
  industry: Industry;
  industryID: Scalars['uuid'];
  userProfileID: Scalars['uuid'];
  /** An object relationship */
  user_profile: User_Profile;
};

/** aggregated selection of "user_profile_industry" */
export type User_Profile_Industry_Aggregate = {
  __typename?: 'user_profile_industry_aggregate';
  aggregate?: Maybe<User_Profile_Industry_Aggregate_Fields>;
  nodes: Array<User_Profile_Industry>;
};

/** aggregate fields of "user_profile_industry" */
export type User_Profile_Industry_Aggregate_Fields = {
  __typename?: 'user_profile_industry_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<User_Profile_Industry_Max_Fields>;
  min?: Maybe<User_Profile_Industry_Min_Fields>;
};

/** aggregate fields of "user_profile_industry" */
export type User_Profile_Industry_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<User_Profile_Industry_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "user_profile_industry" */
export type User_Profile_Industry_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<User_Profile_Industry_Max_Order_By>;
  min?: InputMaybe<User_Profile_Industry_Min_Order_By>;
};

/** input type for inserting array relation for remote table "user_profile_industry" */
export type User_Profile_Industry_Arr_Rel_Insert_Input = {
  data: Array<User_Profile_Industry_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<User_Profile_Industry_On_Conflict>;
};

/** Boolean expression to filter rows from the table "user_profile_industry". All fields are combined with a logical 'AND'. */
export type User_Profile_Industry_Bool_Exp = {
  _and?: InputMaybe<Array<User_Profile_Industry_Bool_Exp>>;
  _not?: InputMaybe<User_Profile_Industry_Bool_Exp>;
  _or?: InputMaybe<Array<User_Profile_Industry_Bool_Exp>>;
  industry?: InputMaybe<Industry_Bool_Exp>;
  industryID?: InputMaybe<Uuid_Comparison_Exp>;
  userProfileID?: InputMaybe<Uuid_Comparison_Exp>;
  user_profile?: InputMaybe<User_Profile_Bool_Exp>;
};

/** unique or primary key constraints on table "user_profile_industry" */
export enum User_Profile_Industry_Constraint {
  /** unique or primary key constraint on columns "userProfileID", "industryID" */
  UserProfileIndustryPkey = 'user_profile_industry_pkey',
}

/** input type for inserting data into table "user_profile_industry" */
export type User_Profile_Industry_Insert_Input = {
  industry?: InputMaybe<Industry_Obj_Rel_Insert_Input>;
  industryID?: InputMaybe<Scalars['uuid']>;
  userProfileID?: InputMaybe<Scalars['uuid']>;
  user_profile?: InputMaybe<User_Profile_Obj_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type User_Profile_Industry_Max_Fields = {
  __typename?: 'user_profile_industry_max_fields';
  industryID?: Maybe<Scalars['uuid']>;
  userProfileID?: Maybe<Scalars['uuid']>;
};

/** order by max() on columns of table "user_profile_industry" */
export type User_Profile_Industry_Max_Order_By = {
  industryID?: InputMaybe<Order_By>;
  userProfileID?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type User_Profile_Industry_Min_Fields = {
  __typename?: 'user_profile_industry_min_fields';
  industryID?: Maybe<Scalars['uuid']>;
  userProfileID?: Maybe<Scalars['uuid']>;
};

/** order by min() on columns of table "user_profile_industry" */
export type User_Profile_Industry_Min_Order_By = {
  industryID?: InputMaybe<Order_By>;
  userProfileID?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "user_profile_industry" */
export type User_Profile_Industry_Mutation_Response = {
  __typename?: 'user_profile_industry_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<User_Profile_Industry>;
};

/** on_conflict condition type for table "user_profile_industry" */
export type User_Profile_Industry_On_Conflict = {
  constraint: User_Profile_Industry_Constraint;
  update_columns?: Array<User_Profile_Industry_Update_Column>;
  where?: InputMaybe<User_Profile_Industry_Bool_Exp>;
};

/** Ordering options when selecting data from "user_profile_industry". */
export type User_Profile_Industry_Order_By = {
  industry?: InputMaybe<Industry_Order_By>;
  industryID?: InputMaybe<Order_By>;
  userProfileID?: InputMaybe<Order_By>;
  user_profile?: InputMaybe<User_Profile_Order_By>;
};

/** primary key columns input for table: user_profile_industry */
export type User_Profile_Industry_Pk_Columns_Input = {
  industryID: Scalars['uuid'];
  userProfileID: Scalars['uuid'];
};

/** select columns of table "user_profile_industry" */
export enum User_Profile_Industry_Select_Column {
  /** column name */
  IndustryId = 'industryID',
  /** column name */
  UserProfileId = 'userProfileID',
}

/** input type for updating data in table "user_profile_industry" */
export type User_Profile_Industry_Set_Input = {
  industryID?: InputMaybe<Scalars['uuid']>;
  userProfileID?: InputMaybe<Scalars['uuid']>;
};

/** Streaming cursor of the table "user_profile_industry" */
export type User_Profile_Industry_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: User_Profile_Industry_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type User_Profile_Industry_Stream_Cursor_Value_Input = {
  industryID?: InputMaybe<Scalars['uuid']>;
  userProfileID?: InputMaybe<Scalars['uuid']>;
};

/** update columns of table "user_profile_industry" */
export enum User_Profile_Industry_Update_Column {
  /** column name */
  IndustryId = 'industryID',
  /** column name */
  UserProfileId = 'userProfileID',
}

export type User_Profile_Industry_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<User_Profile_Industry_Set_Input>;
  where: User_Profile_Industry_Bool_Exp;
};

/** input type for inserting data into table "user_profile" */
export type User_Profile_Insert_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['uuid']>;
  isDefault?: InputMaybe<Scalars['Boolean']>;
  isHidden?: InputMaybe<Scalars['Boolean']>;
  role?: InputMaybe<Scalars['String']>;
  slideUrl?: InputMaybe<Scalars['String']>;
  summary?: InputMaybe<Scalars['String']>;
  userMetaID?: InputMaybe<Scalars['uuid']>;
  user_meta?: InputMaybe<User_Meta_Obj_Rel_Insert_Input>;
  user_profile?: InputMaybe<User_Profile_Obj_Rel_Insert_Input>;
  user_profile_industries?: InputMaybe<User_Profile_Industry_Arr_Rel_Insert_Input>;
  user_profile_skills?: InputMaybe<User_Profile_Skill_Arr_Rel_Insert_Input>;
  user_profile_teams?: InputMaybe<User_Profile_Team_Arr_Rel_Insert_Input>;
  user_work_experiences?: InputMaybe<User_Work_Experience_Arr_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type User_Profile_Max_Fields = {
  __typename?: 'user_profile_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  role?: Maybe<Scalars['String']>;
  slideUrl?: Maybe<Scalars['String']>;
  summary?: Maybe<Scalars['String']>;
  userMetaID?: Maybe<Scalars['uuid']>;
};

/** order by max() on columns of table "user_profile" */
export type User_Profile_Max_Order_By = {
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  role?: InputMaybe<Order_By>;
  slideUrl?: InputMaybe<Order_By>;
  summary?: InputMaybe<Order_By>;
  userMetaID?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type User_Profile_Min_Fields = {
  __typename?: 'user_profile_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  role?: Maybe<Scalars['String']>;
  slideUrl?: Maybe<Scalars['String']>;
  summary?: Maybe<Scalars['String']>;
  userMetaID?: Maybe<Scalars['uuid']>;
};

/** order by min() on columns of table "user_profile" */
export type User_Profile_Min_Order_By = {
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  role?: InputMaybe<Order_By>;
  slideUrl?: InputMaybe<Order_By>;
  summary?: InputMaybe<Order_By>;
  userMetaID?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "user_profile" */
export type User_Profile_Mutation_Response = {
  __typename?: 'user_profile_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<User_Profile>;
};

/** input type for inserting object relation for remote table "user_profile" */
export type User_Profile_Obj_Rel_Insert_Input = {
  data: User_Profile_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<User_Profile_On_Conflict>;
};

/** on_conflict condition type for table "user_profile" */
export type User_Profile_On_Conflict = {
  constraint: User_Profile_Constraint;
  update_columns?: Array<User_Profile_Update_Column>;
  where?: InputMaybe<User_Profile_Bool_Exp>;
};

/** Ordering options when selecting data from "user_profile". */
export type User_Profile_Order_By = {
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  isDefault?: InputMaybe<Order_By>;
  isHidden?: InputMaybe<Order_By>;
  role?: InputMaybe<Order_By>;
  slideUrl?: InputMaybe<Order_By>;
  summary?: InputMaybe<Order_By>;
  userMetaID?: InputMaybe<Order_By>;
  user_meta?: InputMaybe<User_Meta_Order_By>;
  user_profile?: InputMaybe<User_Profile_Order_By>;
  user_profile_industries_aggregate?: InputMaybe<User_Profile_Industry_Aggregate_Order_By>;
  user_profile_skills_aggregate?: InputMaybe<User_Profile_Skill_Aggregate_Order_By>;
  user_profile_teams_aggregate?: InputMaybe<User_Profile_Team_Aggregate_Order_By>;
  user_work_experiences_aggregate?: InputMaybe<User_Work_Experience_Aggregate_Order_By>;
};

/** primary key columns input for table: user_profile */
export type User_Profile_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "user_profile" */
export enum User_Profile_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  IsDefault = 'isDefault',
  /** column name */
  IsHidden = 'isHidden',
  /** column name */
  Role = 'role',
  /** column name */
  SlideUrl = 'slideUrl',
  /** column name */
  Summary = 'summary',
  /** column name */
  UserMetaId = 'userMetaID',
}

/** input type for updating data in table "user_profile" */
export type User_Profile_Set_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['uuid']>;
  isDefault?: InputMaybe<Scalars['Boolean']>;
  isHidden?: InputMaybe<Scalars['Boolean']>;
  role?: InputMaybe<Scalars['String']>;
  slideUrl?: InputMaybe<Scalars['String']>;
  summary?: InputMaybe<Scalars['String']>;
  userMetaID?: InputMaybe<Scalars['uuid']>;
};

/** columns and relationships of "user_profile_skill" */
export type User_Profile_Skill = {
  __typename?: 'user_profile_skill';
  /** An object relationship */
  skill: Skill;
  skillID: Scalars['uuid'];
  userProfileID: Scalars['uuid'];
  /** An object relationship */
  user_profile: User_Profile;
};

/** aggregated selection of "user_profile_skill" */
export type User_Profile_Skill_Aggregate = {
  __typename?: 'user_profile_skill_aggregate';
  aggregate?: Maybe<User_Profile_Skill_Aggregate_Fields>;
  nodes: Array<User_Profile_Skill>;
};

/** aggregate fields of "user_profile_skill" */
export type User_Profile_Skill_Aggregate_Fields = {
  __typename?: 'user_profile_skill_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<User_Profile_Skill_Max_Fields>;
  min?: Maybe<User_Profile_Skill_Min_Fields>;
};

/** aggregate fields of "user_profile_skill" */
export type User_Profile_Skill_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<User_Profile_Skill_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "user_profile_skill" */
export type User_Profile_Skill_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<User_Profile_Skill_Max_Order_By>;
  min?: InputMaybe<User_Profile_Skill_Min_Order_By>;
};

/** input type for inserting array relation for remote table "user_profile_skill" */
export type User_Profile_Skill_Arr_Rel_Insert_Input = {
  data: Array<User_Profile_Skill_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<User_Profile_Skill_On_Conflict>;
};

/** Boolean expression to filter rows from the table "user_profile_skill". All fields are combined with a logical 'AND'. */
export type User_Profile_Skill_Bool_Exp = {
  _and?: InputMaybe<Array<User_Profile_Skill_Bool_Exp>>;
  _not?: InputMaybe<User_Profile_Skill_Bool_Exp>;
  _or?: InputMaybe<Array<User_Profile_Skill_Bool_Exp>>;
  skill?: InputMaybe<Skill_Bool_Exp>;
  skillID?: InputMaybe<Uuid_Comparison_Exp>;
  userProfileID?: InputMaybe<Uuid_Comparison_Exp>;
  user_profile?: InputMaybe<User_Profile_Bool_Exp>;
};

/** unique or primary key constraints on table "user_profile_skill" */
export enum User_Profile_Skill_Constraint {
  /** unique or primary key constraint on columns "userProfileID", "skillID" */
  UserProfileSkillPkey = 'user_profile_skill_pkey',
}

/** input type for inserting data into table "user_profile_skill" */
export type User_Profile_Skill_Insert_Input = {
  skill?: InputMaybe<Skill_Obj_Rel_Insert_Input>;
  skillID?: InputMaybe<Scalars['uuid']>;
  userProfileID?: InputMaybe<Scalars['uuid']>;
  user_profile?: InputMaybe<User_Profile_Obj_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type User_Profile_Skill_Max_Fields = {
  __typename?: 'user_profile_skill_max_fields';
  skillID?: Maybe<Scalars['uuid']>;
  userProfileID?: Maybe<Scalars['uuid']>;
};

/** order by max() on columns of table "user_profile_skill" */
export type User_Profile_Skill_Max_Order_By = {
  skillID?: InputMaybe<Order_By>;
  userProfileID?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type User_Profile_Skill_Min_Fields = {
  __typename?: 'user_profile_skill_min_fields';
  skillID?: Maybe<Scalars['uuid']>;
  userProfileID?: Maybe<Scalars['uuid']>;
};

/** order by min() on columns of table "user_profile_skill" */
export type User_Profile_Skill_Min_Order_By = {
  skillID?: InputMaybe<Order_By>;
  userProfileID?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "user_profile_skill" */
export type User_Profile_Skill_Mutation_Response = {
  __typename?: 'user_profile_skill_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<User_Profile_Skill>;
};

/** on_conflict condition type for table "user_profile_skill" */
export type User_Profile_Skill_On_Conflict = {
  constraint: User_Profile_Skill_Constraint;
  update_columns?: Array<User_Profile_Skill_Update_Column>;
  where?: InputMaybe<User_Profile_Skill_Bool_Exp>;
};

/** Ordering options when selecting data from "user_profile_skill". */
export type User_Profile_Skill_Order_By = {
  skill?: InputMaybe<Skill_Order_By>;
  skillID?: InputMaybe<Order_By>;
  userProfileID?: InputMaybe<Order_By>;
  user_profile?: InputMaybe<User_Profile_Order_By>;
};

/** primary key columns input for table: user_profile_skill */
export type User_Profile_Skill_Pk_Columns_Input = {
  skillID: Scalars['uuid'];
  userProfileID: Scalars['uuid'];
};

/** select columns of table "user_profile_skill" */
export enum User_Profile_Skill_Select_Column {
  /** column name */
  SkillId = 'skillID',
  /** column name */
  UserProfileId = 'userProfileID',
}

/** input type for updating data in table "user_profile_skill" */
export type User_Profile_Skill_Set_Input = {
  skillID?: InputMaybe<Scalars['uuid']>;
  userProfileID?: InputMaybe<Scalars['uuid']>;
};

/** Streaming cursor of the table "user_profile_skill" */
export type User_Profile_Skill_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: User_Profile_Skill_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type User_Profile_Skill_Stream_Cursor_Value_Input = {
  skillID?: InputMaybe<Scalars['uuid']>;
  userProfileID?: InputMaybe<Scalars['uuid']>;
};

/** update columns of table "user_profile_skill" */
export enum User_Profile_Skill_Update_Column {
  /** column name */
  SkillId = 'skillID',
  /** column name */
  UserProfileId = 'userProfileID',
}

export type User_Profile_Skill_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<User_Profile_Skill_Set_Input>;
  where: User_Profile_Skill_Bool_Exp;
};

/** Streaming cursor of the table "user_profile" */
export type User_Profile_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: User_Profile_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type User_Profile_Stream_Cursor_Value_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['uuid']>;
  isDefault?: InputMaybe<Scalars['Boolean']>;
  isHidden?: InputMaybe<Scalars['Boolean']>;
  role?: InputMaybe<Scalars['String']>;
  slideUrl?: InputMaybe<Scalars['String']>;
  summary?: InputMaybe<Scalars['String']>;
  userMetaID?: InputMaybe<Scalars['uuid']>;
};

/** columns and relationships of "user_profile_tab" */
export type User_Profile_Tab = {
  __typename?: 'user_profile_tab';
  id: Scalars['uuid'];
  name: Scalars['String'];
  /** An array relationship */
  user_profile_tab_endpoints: Array<User_Profile_Tab_Endpoint>;
  /** An aggregate relationship */
  user_profile_tab_endpoints_aggregate: User_Profile_Tab_Endpoint_Aggregate;
  /** An array relationship */
  user_role_user_profile_tabs: Array<User_Role_User_Profile_Tab>;
  /** An aggregate relationship */
  user_role_user_profile_tabs_aggregate: User_Role_User_Profile_Tab_Aggregate;
};

/** columns and relationships of "user_profile_tab" */
export type User_Profile_TabUser_Profile_Tab_EndpointsArgs = {
  distinct_on?: InputMaybe<Array<User_Profile_Tab_Endpoint_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Profile_Tab_Endpoint_Order_By>>;
  where?: InputMaybe<User_Profile_Tab_Endpoint_Bool_Exp>;
};

/** columns and relationships of "user_profile_tab" */
export type User_Profile_TabUser_Profile_Tab_Endpoints_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Profile_Tab_Endpoint_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Profile_Tab_Endpoint_Order_By>>;
  where?: InputMaybe<User_Profile_Tab_Endpoint_Bool_Exp>;
};

/** columns and relationships of "user_profile_tab" */
export type User_Profile_TabUser_Role_User_Profile_TabsArgs = {
  distinct_on?: InputMaybe<Array<User_Role_User_Profile_Tab_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Role_User_Profile_Tab_Order_By>>;
  where?: InputMaybe<User_Role_User_Profile_Tab_Bool_Exp>;
};

/** columns and relationships of "user_profile_tab" */
export type User_Profile_TabUser_Role_User_Profile_Tabs_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Role_User_Profile_Tab_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Role_User_Profile_Tab_Order_By>>;
  where?: InputMaybe<User_Role_User_Profile_Tab_Bool_Exp>;
};

/** aggregated selection of "user_profile_tab" */
export type User_Profile_Tab_Aggregate = {
  __typename?: 'user_profile_tab_aggregate';
  aggregate?: Maybe<User_Profile_Tab_Aggregate_Fields>;
  nodes: Array<User_Profile_Tab>;
};

/** aggregate fields of "user_profile_tab" */
export type User_Profile_Tab_Aggregate_Fields = {
  __typename?: 'user_profile_tab_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<User_Profile_Tab_Max_Fields>;
  min?: Maybe<User_Profile_Tab_Min_Fields>;
};

/** aggregate fields of "user_profile_tab" */
export type User_Profile_Tab_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<User_Profile_Tab_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** Boolean expression to filter rows from the table "user_profile_tab". All fields are combined with a logical 'AND'. */
export type User_Profile_Tab_Bool_Exp = {
  _and?: InputMaybe<Array<User_Profile_Tab_Bool_Exp>>;
  _not?: InputMaybe<User_Profile_Tab_Bool_Exp>;
  _or?: InputMaybe<Array<User_Profile_Tab_Bool_Exp>>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  user_profile_tab_endpoints?: InputMaybe<User_Profile_Tab_Endpoint_Bool_Exp>;
  user_role_user_profile_tabs?: InputMaybe<User_Role_User_Profile_Tab_Bool_Exp>;
};

/** unique or primary key constraints on table "user_profile_tab" */
export enum User_Profile_Tab_Constraint {
  /** unique or primary key constraint on columns "name" */
  UserProfileTabNameKey = 'user_profile_tab_name_key',
  /** unique or primary key constraint on columns "id" */
  UserProfileTabPkey = 'user_profile_tab_pkey',
}

/** columns and relationships of "user_profile_tab_endpoint" */
export type User_Profile_Tab_Endpoint = {
  __typename?: 'user_profile_tab_endpoint';
  /** An object relationship */
  endpoint: Endpoint;
  endpointID: Scalars['uuid'];
  id: Scalars['uuid'];
  userProfileTabID: Scalars['uuid'];
  /** An object relationship */
  user_profile_tab: User_Profile_Tab;
};

/** aggregated selection of "user_profile_tab_endpoint" */
export type User_Profile_Tab_Endpoint_Aggregate = {
  __typename?: 'user_profile_tab_endpoint_aggregate';
  aggregate?: Maybe<User_Profile_Tab_Endpoint_Aggregate_Fields>;
  nodes: Array<User_Profile_Tab_Endpoint>;
};

/** aggregate fields of "user_profile_tab_endpoint" */
export type User_Profile_Tab_Endpoint_Aggregate_Fields = {
  __typename?: 'user_profile_tab_endpoint_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<User_Profile_Tab_Endpoint_Max_Fields>;
  min?: Maybe<User_Profile_Tab_Endpoint_Min_Fields>;
};

/** aggregate fields of "user_profile_tab_endpoint" */
export type User_Profile_Tab_Endpoint_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<User_Profile_Tab_Endpoint_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "user_profile_tab_endpoint" */
export type User_Profile_Tab_Endpoint_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<User_Profile_Tab_Endpoint_Max_Order_By>;
  min?: InputMaybe<User_Profile_Tab_Endpoint_Min_Order_By>;
};

/** input type for inserting array relation for remote table "user_profile_tab_endpoint" */
export type User_Profile_Tab_Endpoint_Arr_Rel_Insert_Input = {
  data: Array<User_Profile_Tab_Endpoint_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<User_Profile_Tab_Endpoint_On_Conflict>;
};

/** Boolean expression to filter rows from the table "user_profile_tab_endpoint". All fields are combined with a logical 'AND'. */
export type User_Profile_Tab_Endpoint_Bool_Exp = {
  _and?: InputMaybe<Array<User_Profile_Tab_Endpoint_Bool_Exp>>;
  _not?: InputMaybe<User_Profile_Tab_Endpoint_Bool_Exp>;
  _or?: InputMaybe<Array<User_Profile_Tab_Endpoint_Bool_Exp>>;
  endpoint?: InputMaybe<Endpoint_Bool_Exp>;
  endpointID?: InputMaybe<Uuid_Comparison_Exp>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  userProfileTabID?: InputMaybe<Uuid_Comparison_Exp>;
  user_profile_tab?: InputMaybe<User_Profile_Tab_Bool_Exp>;
};

/** unique or primary key constraints on table "user_profile_tab_endpoint" */
export enum User_Profile_Tab_Endpoint_Constraint {
  /** unique or primary key constraint on columns "id" */
  UserProfileTabEndpointPkey = 'user_profile_tab_endpoint_pkey',
  /** unique or primary key constraint on columns "endpointID", "userProfileTabID" */
  UserProfileTabEndpointUserProfileTabIdEndpointIdKey = 'user_profile_tab_endpoint_userProfileTabID_endpointID_key',
}

/** input type for inserting data into table "user_profile_tab_endpoint" */
export type User_Profile_Tab_Endpoint_Insert_Input = {
  endpoint?: InputMaybe<Endpoint_Obj_Rel_Insert_Input>;
  endpointID?: InputMaybe<Scalars['uuid']>;
  id?: InputMaybe<Scalars['uuid']>;
  userProfileTabID?: InputMaybe<Scalars['uuid']>;
  user_profile_tab?: InputMaybe<User_Profile_Tab_Obj_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type User_Profile_Tab_Endpoint_Max_Fields = {
  __typename?: 'user_profile_tab_endpoint_max_fields';
  endpointID?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  userProfileTabID?: Maybe<Scalars['uuid']>;
};

/** order by max() on columns of table "user_profile_tab_endpoint" */
export type User_Profile_Tab_Endpoint_Max_Order_By = {
  endpointID?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  userProfileTabID?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type User_Profile_Tab_Endpoint_Min_Fields = {
  __typename?: 'user_profile_tab_endpoint_min_fields';
  endpointID?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  userProfileTabID?: Maybe<Scalars['uuid']>;
};

/** order by min() on columns of table "user_profile_tab_endpoint" */
export type User_Profile_Tab_Endpoint_Min_Order_By = {
  endpointID?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  userProfileTabID?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "user_profile_tab_endpoint" */
export type User_Profile_Tab_Endpoint_Mutation_Response = {
  __typename?: 'user_profile_tab_endpoint_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<User_Profile_Tab_Endpoint>;
};

/** on_conflict condition type for table "user_profile_tab_endpoint" */
export type User_Profile_Tab_Endpoint_On_Conflict = {
  constraint: User_Profile_Tab_Endpoint_Constraint;
  update_columns?: Array<User_Profile_Tab_Endpoint_Update_Column>;
  where?: InputMaybe<User_Profile_Tab_Endpoint_Bool_Exp>;
};

/** Ordering options when selecting data from "user_profile_tab_endpoint". */
export type User_Profile_Tab_Endpoint_Order_By = {
  endpoint?: InputMaybe<Endpoint_Order_By>;
  endpointID?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  userProfileTabID?: InputMaybe<Order_By>;
  user_profile_tab?: InputMaybe<User_Profile_Tab_Order_By>;
};

/** primary key columns input for table: user_profile_tab_endpoint */
export type User_Profile_Tab_Endpoint_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "user_profile_tab_endpoint" */
export enum User_Profile_Tab_Endpoint_Select_Column {
  /** column name */
  EndpointId = 'endpointID',
  /** column name */
  Id = 'id',
  /** column name */
  UserProfileTabId = 'userProfileTabID',
}

/** input type for updating data in table "user_profile_tab_endpoint" */
export type User_Profile_Tab_Endpoint_Set_Input = {
  endpointID?: InputMaybe<Scalars['uuid']>;
  id?: InputMaybe<Scalars['uuid']>;
  userProfileTabID?: InputMaybe<Scalars['uuid']>;
};

/** Streaming cursor of the table "user_profile_tab_endpoint" */
export type User_Profile_Tab_Endpoint_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: User_Profile_Tab_Endpoint_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type User_Profile_Tab_Endpoint_Stream_Cursor_Value_Input = {
  endpointID?: InputMaybe<Scalars['uuid']>;
  id?: InputMaybe<Scalars['uuid']>;
  userProfileTabID?: InputMaybe<Scalars['uuid']>;
};

/** update columns of table "user_profile_tab_endpoint" */
export enum User_Profile_Tab_Endpoint_Update_Column {
  /** column name */
  EndpointId = 'endpointID',
  /** column name */
  Id = 'id',
  /** column name */
  UserProfileTabId = 'userProfileTabID',
}

export type User_Profile_Tab_Endpoint_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<User_Profile_Tab_Endpoint_Set_Input>;
  where: User_Profile_Tab_Endpoint_Bool_Exp;
};

/** input type for inserting data into table "user_profile_tab" */
export type User_Profile_Tab_Insert_Input = {
  id?: InputMaybe<Scalars['uuid']>;
  name?: InputMaybe<Scalars['String']>;
  user_profile_tab_endpoints?: InputMaybe<User_Profile_Tab_Endpoint_Arr_Rel_Insert_Input>;
  user_role_user_profile_tabs?: InputMaybe<User_Role_User_Profile_Tab_Arr_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type User_Profile_Tab_Max_Fields = {
  __typename?: 'user_profile_tab_max_fields';
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type User_Profile_Tab_Min_Fields = {
  __typename?: 'user_profile_tab_min_fields';
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "user_profile_tab" */
export type User_Profile_Tab_Mutation_Response = {
  __typename?: 'user_profile_tab_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<User_Profile_Tab>;
};

/** input type for inserting object relation for remote table "user_profile_tab" */
export type User_Profile_Tab_Obj_Rel_Insert_Input = {
  data: User_Profile_Tab_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<User_Profile_Tab_On_Conflict>;
};

/** on_conflict condition type for table "user_profile_tab" */
export type User_Profile_Tab_On_Conflict = {
  constraint: User_Profile_Tab_Constraint;
  update_columns?: Array<User_Profile_Tab_Update_Column>;
  where?: InputMaybe<User_Profile_Tab_Bool_Exp>;
};

/** Ordering options when selecting data from "user_profile_tab". */
export type User_Profile_Tab_Order_By = {
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  user_profile_tab_endpoints_aggregate?: InputMaybe<User_Profile_Tab_Endpoint_Aggregate_Order_By>;
  user_role_user_profile_tabs_aggregate?: InputMaybe<User_Role_User_Profile_Tab_Aggregate_Order_By>;
};

/** primary key columns input for table: user_profile_tab */
export type User_Profile_Tab_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "user_profile_tab" */
export enum User_Profile_Tab_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
}

/** input type for updating data in table "user_profile_tab" */
export type User_Profile_Tab_Set_Input = {
  id?: InputMaybe<Scalars['uuid']>;
  name?: InputMaybe<Scalars['String']>;
};

/** Streaming cursor of the table "user_profile_tab" */
export type User_Profile_Tab_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: User_Profile_Tab_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type User_Profile_Tab_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['uuid']>;
  name?: InputMaybe<Scalars['String']>;
};

/** update columns of table "user_profile_tab" */
export enum User_Profile_Tab_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
}

export type User_Profile_Tab_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<User_Profile_Tab_Set_Input>;
  where: User_Profile_Tab_Bool_Exp;
};

/** columns and relationships of "user_profile_team" */
export type User_Profile_Team = {
  __typename?: 'user_profile_team';
  id: Scalars['uuid'];
  /** An object relationship */
  team: Team;
  teamID: Scalars['uuid'];
  userProfileID: Scalars['uuid'];
  /** An object relationship */
  user_profile: User_Profile;
};

/** aggregated selection of "user_profile_team" */
export type User_Profile_Team_Aggregate = {
  __typename?: 'user_profile_team_aggregate';
  aggregate?: Maybe<User_Profile_Team_Aggregate_Fields>;
  nodes: Array<User_Profile_Team>;
};

/** aggregate fields of "user_profile_team" */
export type User_Profile_Team_Aggregate_Fields = {
  __typename?: 'user_profile_team_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<User_Profile_Team_Max_Fields>;
  min?: Maybe<User_Profile_Team_Min_Fields>;
};

/** aggregate fields of "user_profile_team" */
export type User_Profile_Team_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<User_Profile_Team_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "user_profile_team" */
export type User_Profile_Team_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<User_Profile_Team_Max_Order_By>;
  min?: InputMaybe<User_Profile_Team_Min_Order_By>;
};

/** input type for inserting array relation for remote table "user_profile_team" */
export type User_Profile_Team_Arr_Rel_Insert_Input = {
  data: Array<User_Profile_Team_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<User_Profile_Team_On_Conflict>;
};

/** Boolean expression to filter rows from the table "user_profile_team". All fields are combined with a logical 'AND'. */
export type User_Profile_Team_Bool_Exp = {
  _and?: InputMaybe<Array<User_Profile_Team_Bool_Exp>>;
  _not?: InputMaybe<User_Profile_Team_Bool_Exp>;
  _or?: InputMaybe<Array<User_Profile_Team_Bool_Exp>>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  team?: InputMaybe<Team_Bool_Exp>;
  teamID?: InputMaybe<Uuid_Comparison_Exp>;
  userProfileID?: InputMaybe<Uuid_Comparison_Exp>;
  user_profile?: InputMaybe<User_Profile_Bool_Exp>;
};

/** unique or primary key constraints on table "user_profile_team" */
export enum User_Profile_Team_Constraint {
  /** unique or primary key constraint on columns "id" */
  UserProfileTeamPkey = 'user_profile_team_pkey',
  /** unique or primary key constraint on columns "userProfileID", "teamID" */
  UserProfileTeamUserProfileIdTeamIdKey = 'user_profile_team_userProfileID_teamID_key',
}

/** input type for inserting data into table "user_profile_team" */
export type User_Profile_Team_Insert_Input = {
  id?: InputMaybe<Scalars['uuid']>;
  team?: InputMaybe<Team_Obj_Rel_Insert_Input>;
  teamID?: InputMaybe<Scalars['uuid']>;
  userProfileID?: InputMaybe<Scalars['uuid']>;
  user_profile?: InputMaybe<User_Profile_Obj_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type User_Profile_Team_Max_Fields = {
  __typename?: 'user_profile_team_max_fields';
  id?: Maybe<Scalars['uuid']>;
  teamID?: Maybe<Scalars['uuid']>;
  userProfileID?: Maybe<Scalars['uuid']>;
};

/** order by max() on columns of table "user_profile_team" */
export type User_Profile_Team_Max_Order_By = {
  id?: InputMaybe<Order_By>;
  teamID?: InputMaybe<Order_By>;
  userProfileID?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type User_Profile_Team_Min_Fields = {
  __typename?: 'user_profile_team_min_fields';
  id?: Maybe<Scalars['uuid']>;
  teamID?: Maybe<Scalars['uuid']>;
  userProfileID?: Maybe<Scalars['uuid']>;
};

/** order by min() on columns of table "user_profile_team" */
export type User_Profile_Team_Min_Order_By = {
  id?: InputMaybe<Order_By>;
  teamID?: InputMaybe<Order_By>;
  userProfileID?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "user_profile_team" */
export type User_Profile_Team_Mutation_Response = {
  __typename?: 'user_profile_team_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<User_Profile_Team>;
};

/** on_conflict condition type for table "user_profile_team" */
export type User_Profile_Team_On_Conflict = {
  constraint: User_Profile_Team_Constraint;
  update_columns?: Array<User_Profile_Team_Update_Column>;
  where?: InputMaybe<User_Profile_Team_Bool_Exp>;
};

/** Ordering options when selecting data from "user_profile_team". */
export type User_Profile_Team_Order_By = {
  id?: InputMaybe<Order_By>;
  team?: InputMaybe<Team_Order_By>;
  teamID?: InputMaybe<Order_By>;
  userProfileID?: InputMaybe<Order_By>;
  user_profile?: InputMaybe<User_Profile_Order_By>;
};

/** primary key columns input for table: user_profile_team */
export type User_Profile_Team_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "user_profile_team" */
export enum User_Profile_Team_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  TeamId = 'teamID',
  /** column name */
  UserProfileId = 'userProfileID',
}

/** input type for updating data in table "user_profile_team" */
export type User_Profile_Team_Set_Input = {
  id?: InputMaybe<Scalars['uuid']>;
  teamID?: InputMaybe<Scalars['uuid']>;
  userProfileID?: InputMaybe<Scalars['uuid']>;
};

/** Streaming cursor of the table "user_profile_team" */
export type User_Profile_Team_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: User_Profile_Team_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type User_Profile_Team_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['uuid']>;
  teamID?: InputMaybe<Scalars['uuid']>;
  userProfileID?: InputMaybe<Scalars['uuid']>;
};

/** update columns of table "user_profile_team" */
export enum User_Profile_Team_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  TeamId = 'teamID',
  /** column name */
  UserProfileId = 'userProfileID',
}

export type User_Profile_Team_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<User_Profile_Team_Set_Input>;
  where: User_Profile_Team_Bool_Exp;
};

/** update columns of table "user_profile" */
export enum User_Profile_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  IsDefault = 'isDefault',
  /** column name */
  IsHidden = 'isHidden',
  /** column name */
  Role = 'role',
  /** column name */
  SlideUrl = 'slideUrl',
  /** column name */
  Summary = 'summary',
  /** column name */
  UserMetaId = 'userMetaID',
}

export type User_Profile_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<User_Profile_Set_Input>;
  where: User_Profile_Bool_Exp;
};

/** columns and relationships of "user_profile_visibility" */
export type User_Profile_Visibility = {
  __typename?: 'user_profile_visibility';
  id: Scalars['uuid'];
  name: Scalars['String'];
  /** An array relationship */
  user_meta: Array<User_Meta>;
  /** An aggregate relationship */
  user_meta_aggregate: User_Meta_Aggregate;
};

/** columns and relationships of "user_profile_visibility" */
export type User_Profile_VisibilityUser_MetaArgs = {
  distinct_on?: InputMaybe<Array<User_Meta_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Meta_Order_By>>;
  where?: InputMaybe<User_Meta_Bool_Exp>;
};

/** columns and relationships of "user_profile_visibility" */
export type User_Profile_VisibilityUser_Meta_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Meta_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Meta_Order_By>>;
  where?: InputMaybe<User_Meta_Bool_Exp>;
};

/** aggregated selection of "user_profile_visibility" */
export type User_Profile_Visibility_Aggregate = {
  __typename?: 'user_profile_visibility_aggregate';
  aggregate?: Maybe<User_Profile_Visibility_Aggregate_Fields>;
  nodes: Array<User_Profile_Visibility>;
};

/** aggregate fields of "user_profile_visibility" */
export type User_Profile_Visibility_Aggregate_Fields = {
  __typename?: 'user_profile_visibility_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<User_Profile_Visibility_Max_Fields>;
  min?: Maybe<User_Profile_Visibility_Min_Fields>;
};

/** aggregate fields of "user_profile_visibility" */
export type User_Profile_Visibility_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<User_Profile_Visibility_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** Boolean expression to filter rows from the table "user_profile_visibility". All fields are combined with a logical 'AND'. */
export type User_Profile_Visibility_Bool_Exp = {
  _and?: InputMaybe<Array<User_Profile_Visibility_Bool_Exp>>;
  _not?: InputMaybe<User_Profile_Visibility_Bool_Exp>;
  _or?: InputMaybe<Array<User_Profile_Visibility_Bool_Exp>>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  user_meta?: InputMaybe<User_Meta_Bool_Exp>;
};

/** unique or primary key constraints on table "user_profile_visibility" */
export enum User_Profile_Visibility_Constraint {
  /** unique or primary key constraint on columns "name" */
  UserProfileVisibilityNameKey = 'user_profile_visibility_name_key',
  /** unique or primary key constraint on columns "id" */
  UserProfileVisibilityPkey = 'user_profile_visibility_pkey',
}

/** input type for inserting data into table "user_profile_visibility" */
export type User_Profile_Visibility_Insert_Input = {
  id?: InputMaybe<Scalars['uuid']>;
  name?: InputMaybe<Scalars['String']>;
  user_meta?: InputMaybe<User_Meta_Arr_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type User_Profile_Visibility_Max_Fields = {
  __typename?: 'user_profile_visibility_max_fields';
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type User_Profile_Visibility_Min_Fields = {
  __typename?: 'user_profile_visibility_min_fields';
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "user_profile_visibility" */
export type User_Profile_Visibility_Mutation_Response = {
  __typename?: 'user_profile_visibility_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<User_Profile_Visibility>;
};

/** input type for inserting object relation for remote table "user_profile_visibility" */
export type User_Profile_Visibility_Obj_Rel_Insert_Input = {
  data: User_Profile_Visibility_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<User_Profile_Visibility_On_Conflict>;
};

/** on_conflict condition type for table "user_profile_visibility" */
export type User_Profile_Visibility_On_Conflict = {
  constraint: User_Profile_Visibility_Constraint;
  update_columns?: Array<User_Profile_Visibility_Update_Column>;
  where?: InputMaybe<User_Profile_Visibility_Bool_Exp>;
};

/** Ordering options when selecting data from "user_profile_visibility". */
export type User_Profile_Visibility_Order_By = {
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  user_meta_aggregate?: InputMaybe<User_Meta_Aggregate_Order_By>;
};

/** primary key columns input for table: user_profile_visibility */
export type User_Profile_Visibility_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "user_profile_visibility" */
export enum User_Profile_Visibility_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
}

/** input type for updating data in table "user_profile_visibility" */
export type User_Profile_Visibility_Set_Input = {
  id?: InputMaybe<Scalars['uuid']>;
  name?: InputMaybe<Scalars['String']>;
};

/** Streaming cursor of the table "user_profile_visibility" */
export type User_Profile_Visibility_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: User_Profile_Visibility_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type User_Profile_Visibility_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['uuid']>;
  name?: InputMaybe<Scalars['String']>;
};

/** update columns of table "user_profile_visibility" */
export enum User_Profile_Visibility_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
}

export type User_Profile_Visibility_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<User_Profile_Visibility_Set_Input>;
  where: User_Profile_Visibility_Bool_Exp;
};

/** columns and relationships of "user_role" */
export type User_Role = {
  __typename?: 'user_role';
  description?: Maybe<Scalars['String']>;
  id: Scalars['uuid'];
  isHidden: Scalars['Boolean'];
  name: Scalars['String'];
  /** An array relationship */
  user_meta_user_roles: Array<User_Meta_User_Role>;
  /** An aggregate relationship */
  user_meta_user_roles_aggregate: User_Meta_User_Role_Aggregate;
  /** An array relationship */
  user_role_capabilities: Array<User_Role_Capability>;
  /** An aggregate relationship */
  user_role_capabilities_aggregate: User_Role_Capability_Aggregate;
  /** An array relationship */
  user_role_routes: Array<User_Role_Route>;
  /** An aggregate relationship */
  user_role_routes_aggregate: User_Role_Route_Aggregate;
  /** An array relationship */
  user_role_user_profile_tabs: Array<User_Role_User_Profile_Tab>;
  /** An aggregate relationship */
  user_role_user_profile_tabs_aggregate: User_Role_User_Profile_Tab_Aggregate;
};

/** columns and relationships of "user_role" */
export type User_RoleUser_Meta_User_RolesArgs = {
  distinct_on?: InputMaybe<Array<User_Meta_User_Role_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Meta_User_Role_Order_By>>;
  where?: InputMaybe<User_Meta_User_Role_Bool_Exp>;
};

/** columns and relationships of "user_role" */
export type User_RoleUser_Meta_User_Roles_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Meta_User_Role_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Meta_User_Role_Order_By>>;
  where?: InputMaybe<User_Meta_User_Role_Bool_Exp>;
};

/** columns and relationships of "user_role" */
export type User_RoleUser_Role_CapabilitiesArgs = {
  distinct_on?: InputMaybe<Array<User_Role_Capability_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Role_Capability_Order_By>>;
  where?: InputMaybe<User_Role_Capability_Bool_Exp>;
};

/** columns and relationships of "user_role" */
export type User_RoleUser_Role_Capabilities_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Role_Capability_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Role_Capability_Order_By>>;
  where?: InputMaybe<User_Role_Capability_Bool_Exp>;
};

/** columns and relationships of "user_role" */
export type User_RoleUser_Role_RoutesArgs = {
  distinct_on?: InputMaybe<Array<User_Role_Route_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Role_Route_Order_By>>;
  where?: InputMaybe<User_Role_Route_Bool_Exp>;
};

/** columns and relationships of "user_role" */
export type User_RoleUser_Role_Routes_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Role_Route_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Role_Route_Order_By>>;
  where?: InputMaybe<User_Role_Route_Bool_Exp>;
};

/** columns and relationships of "user_role" */
export type User_RoleUser_Role_User_Profile_TabsArgs = {
  distinct_on?: InputMaybe<Array<User_Role_User_Profile_Tab_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Role_User_Profile_Tab_Order_By>>;
  where?: InputMaybe<User_Role_User_Profile_Tab_Bool_Exp>;
};

/** columns and relationships of "user_role" */
export type User_RoleUser_Role_User_Profile_Tabs_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Role_User_Profile_Tab_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Role_User_Profile_Tab_Order_By>>;
  where?: InputMaybe<User_Role_User_Profile_Tab_Bool_Exp>;
};

/** aggregated selection of "user_role" */
export type User_Role_Aggregate = {
  __typename?: 'user_role_aggregate';
  aggregate?: Maybe<User_Role_Aggregate_Fields>;
  nodes: Array<User_Role>;
};

/** aggregate fields of "user_role" */
export type User_Role_Aggregate_Fields = {
  __typename?: 'user_role_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<User_Role_Max_Fields>;
  min?: Maybe<User_Role_Min_Fields>;
};

/** aggregate fields of "user_role" */
export type User_Role_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<User_Role_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** Boolean expression to filter rows from the table "user_role". All fields are combined with a logical 'AND'. */
export type User_Role_Bool_Exp = {
  _and?: InputMaybe<Array<User_Role_Bool_Exp>>;
  _not?: InputMaybe<User_Role_Bool_Exp>;
  _or?: InputMaybe<Array<User_Role_Bool_Exp>>;
  description?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  isHidden?: InputMaybe<Boolean_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  user_meta_user_roles?: InputMaybe<User_Meta_User_Role_Bool_Exp>;
  user_role_capabilities?: InputMaybe<User_Role_Capability_Bool_Exp>;
  user_role_routes?: InputMaybe<User_Role_Route_Bool_Exp>;
  user_role_user_profile_tabs?: InputMaybe<User_Role_User_Profile_Tab_Bool_Exp>;
};

/** columns and relationships of "user_role_capability" */
export type User_Role_Capability = {
  __typename?: 'user_role_capability';
  /** An object relationship */
  capability: Capability;
  capabilityID: Scalars['uuid'];
  id: Scalars['uuid'];
  userRoleID: Scalars['uuid'];
  /** An object relationship */
  user_role: User_Role;
};

/** aggregated selection of "user_role_capability" */
export type User_Role_Capability_Aggregate = {
  __typename?: 'user_role_capability_aggregate';
  aggregate?: Maybe<User_Role_Capability_Aggregate_Fields>;
  nodes: Array<User_Role_Capability>;
};

/** aggregate fields of "user_role_capability" */
export type User_Role_Capability_Aggregate_Fields = {
  __typename?: 'user_role_capability_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<User_Role_Capability_Max_Fields>;
  min?: Maybe<User_Role_Capability_Min_Fields>;
};

/** aggregate fields of "user_role_capability" */
export type User_Role_Capability_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<User_Role_Capability_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "user_role_capability" */
export type User_Role_Capability_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<User_Role_Capability_Max_Order_By>;
  min?: InputMaybe<User_Role_Capability_Min_Order_By>;
};

/** input type for inserting array relation for remote table "user_role_capability" */
export type User_Role_Capability_Arr_Rel_Insert_Input = {
  data: Array<User_Role_Capability_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<User_Role_Capability_On_Conflict>;
};

/** Boolean expression to filter rows from the table "user_role_capability". All fields are combined with a logical 'AND'. */
export type User_Role_Capability_Bool_Exp = {
  _and?: InputMaybe<Array<User_Role_Capability_Bool_Exp>>;
  _not?: InputMaybe<User_Role_Capability_Bool_Exp>;
  _or?: InputMaybe<Array<User_Role_Capability_Bool_Exp>>;
  capability?: InputMaybe<Capability_Bool_Exp>;
  capabilityID?: InputMaybe<Uuid_Comparison_Exp>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  userRoleID?: InputMaybe<Uuid_Comparison_Exp>;
  user_role?: InputMaybe<User_Role_Bool_Exp>;
};

/** unique or primary key constraints on table "user_role_capability" */
export enum User_Role_Capability_Constraint {
  /** unique or primary key constraint on columns "userRoleID", "capabilityID" */
  UserRoleCapabilityCapabilityIdUserRoleIdKey = 'user_role_capability_capabilityID_userRoleID_key',
  /** unique or primary key constraint on columns "id" */
  UserRoleCapabilityPkey = 'user_role_capability_pkey',
}

/** input type for inserting data into table "user_role_capability" */
export type User_Role_Capability_Insert_Input = {
  capability?: InputMaybe<Capability_Obj_Rel_Insert_Input>;
  capabilityID?: InputMaybe<Scalars['uuid']>;
  id?: InputMaybe<Scalars['uuid']>;
  userRoleID?: InputMaybe<Scalars['uuid']>;
  user_role?: InputMaybe<User_Role_Obj_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type User_Role_Capability_Max_Fields = {
  __typename?: 'user_role_capability_max_fields';
  capabilityID?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  userRoleID?: Maybe<Scalars['uuid']>;
};

/** order by max() on columns of table "user_role_capability" */
export type User_Role_Capability_Max_Order_By = {
  capabilityID?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  userRoleID?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type User_Role_Capability_Min_Fields = {
  __typename?: 'user_role_capability_min_fields';
  capabilityID?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  userRoleID?: Maybe<Scalars['uuid']>;
};

/** order by min() on columns of table "user_role_capability" */
export type User_Role_Capability_Min_Order_By = {
  capabilityID?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  userRoleID?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "user_role_capability" */
export type User_Role_Capability_Mutation_Response = {
  __typename?: 'user_role_capability_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<User_Role_Capability>;
};

/** on_conflict condition type for table "user_role_capability" */
export type User_Role_Capability_On_Conflict = {
  constraint: User_Role_Capability_Constraint;
  update_columns?: Array<User_Role_Capability_Update_Column>;
  where?: InputMaybe<User_Role_Capability_Bool_Exp>;
};

/** Ordering options when selecting data from "user_role_capability". */
export type User_Role_Capability_Order_By = {
  capability?: InputMaybe<Capability_Order_By>;
  capabilityID?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  userRoleID?: InputMaybe<Order_By>;
  user_role?: InputMaybe<User_Role_Order_By>;
};

/** primary key columns input for table: user_role_capability */
export type User_Role_Capability_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "user_role_capability" */
export enum User_Role_Capability_Select_Column {
  /** column name */
  CapabilityId = 'capabilityID',
  /** column name */
  Id = 'id',
  /** column name */
  UserRoleId = 'userRoleID',
}

/** input type for updating data in table "user_role_capability" */
export type User_Role_Capability_Set_Input = {
  capabilityID?: InputMaybe<Scalars['uuid']>;
  id?: InputMaybe<Scalars['uuid']>;
  userRoleID?: InputMaybe<Scalars['uuid']>;
};

/** Streaming cursor of the table "user_role_capability" */
export type User_Role_Capability_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: User_Role_Capability_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type User_Role_Capability_Stream_Cursor_Value_Input = {
  capabilityID?: InputMaybe<Scalars['uuid']>;
  id?: InputMaybe<Scalars['uuid']>;
  userRoleID?: InputMaybe<Scalars['uuid']>;
};

/** update columns of table "user_role_capability" */
export enum User_Role_Capability_Update_Column {
  /** column name */
  CapabilityId = 'capabilityID',
  /** column name */
  Id = 'id',
  /** column name */
  UserRoleId = 'userRoleID',
}

export type User_Role_Capability_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<User_Role_Capability_Set_Input>;
  where: User_Role_Capability_Bool_Exp;
};

/** unique or primary key constraints on table "user_role" */
export enum User_Role_Constraint {
  /** unique or primary key constraint on columns "name" */
  UserRoleNameKey = 'user_role_name_key',
  /** unique or primary key constraint on columns "id" */
  UserRolePkey = 'user_role_pkey',
}

/** input type for inserting data into table "user_role" */
export type User_Role_Insert_Input = {
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['uuid']>;
  isHidden?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  user_meta_user_roles?: InputMaybe<User_Meta_User_Role_Arr_Rel_Insert_Input>;
  user_role_capabilities?: InputMaybe<User_Role_Capability_Arr_Rel_Insert_Input>;
  user_role_routes?: InputMaybe<User_Role_Route_Arr_Rel_Insert_Input>;
  user_role_user_profile_tabs?: InputMaybe<User_Role_User_Profile_Tab_Arr_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type User_Role_Max_Fields = {
  __typename?: 'user_role_max_fields';
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type User_Role_Min_Fields = {
  __typename?: 'user_role_min_fields';
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "user_role" */
export type User_Role_Mutation_Response = {
  __typename?: 'user_role_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<User_Role>;
};

/** input type for inserting object relation for remote table "user_role" */
export type User_Role_Obj_Rel_Insert_Input = {
  data: User_Role_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<User_Role_On_Conflict>;
};

/** on_conflict condition type for table "user_role" */
export type User_Role_On_Conflict = {
  constraint: User_Role_Constraint;
  update_columns?: Array<User_Role_Update_Column>;
  where?: InputMaybe<User_Role_Bool_Exp>;
};

/** Ordering options when selecting data from "user_role". */
export type User_Role_Order_By = {
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  isHidden?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  user_meta_user_roles_aggregate?: InputMaybe<User_Meta_User_Role_Aggregate_Order_By>;
  user_role_capabilities_aggregate?: InputMaybe<User_Role_Capability_Aggregate_Order_By>;
  user_role_routes_aggregate?: InputMaybe<User_Role_Route_Aggregate_Order_By>;
  user_role_user_profile_tabs_aggregate?: InputMaybe<User_Role_User_Profile_Tab_Aggregate_Order_By>;
};

/** primary key columns input for table: user_role */
export type User_Role_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** columns and relationships of "user_role_route" */
export type User_Role_Route = {
  __typename?: 'user_role_route';
  id: Scalars['uuid'];
  /** An object relationship */
  route: Route;
  routeID: Scalars['uuid'];
  userRoleID: Scalars['uuid'];
  /** An object relationship */
  user_role: User_Role;
};

/** aggregated selection of "user_role_route" */
export type User_Role_Route_Aggregate = {
  __typename?: 'user_role_route_aggregate';
  aggregate?: Maybe<User_Role_Route_Aggregate_Fields>;
  nodes: Array<User_Role_Route>;
};

/** aggregate fields of "user_role_route" */
export type User_Role_Route_Aggregate_Fields = {
  __typename?: 'user_role_route_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<User_Role_Route_Max_Fields>;
  min?: Maybe<User_Role_Route_Min_Fields>;
};

/** aggregate fields of "user_role_route" */
export type User_Role_Route_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<User_Role_Route_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "user_role_route" */
export type User_Role_Route_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<User_Role_Route_Max_Order_By>;
  min?: InputMaybe<User_Role_Route_Min_Order_By>;
};

/** input type for inserting array relation for remote table "user_role_route" */
export type User_Role_Route_Arr_Rel_Insert_Input = {
  data: Array<User_Role_Route_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<User_Role_Route_On_Conflict>;
};

/** Boolean expression to filter rows from the table "user_role_route". All fields are combined with a logical 'AND'. */
export type User_Role_Route_Bool_Exp = {
  _and?: InputMaybe<Array<User_Role_Route_Bool_Exp>>;
  _not?: InputMaybe<User_Role_Route_Bool_Exp>;
  _or?: InputMaybe<Array<User_Role_Route_Bool_Exp>>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  route?: InputMaybe<Route_Bool_Exp>;
  routeID?: InputMaybe<Uuid_Comparison_Exp>;
  userRoleID?: InputMaybe<Uuid_Comparison_Exp>;
  user_role?: InputMaybe<User_Role_Bool_Exp>;
};

/** unique or primary key constraints on table "user_role_route" */
export enum User_Role_Route_Constraint {
  /** unique or primary key constraint on columns "id" */
  UserRoleRoutePkey = 'user_role_route_pkey',
  /** unique or primary key constraint on columns "userRoleID", "routeID" */
  UserRoleRouteUserRoleIdRouteIdKey = 'user_role_route_userRoleID_routeID_key',
}

/** input type for inserting data into table "user_role_route" */
export type User_Role_Route_Insert_Input = {
  id?: InputMaybe<Scalars['uuid']>;
  route?: InputMaybe<Route_Obj_Rel_Insert_Input>;
  routeID?: InputMaybe<Scalars['uuid']>;
  userRoleID?: InputMaybe<Scalars['uuid']>;
  user_role?: InputMaybe<User_Role_Obj_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type User_Role_Route_Max_Fields = {
  __typename?: 'user_role_route_max_fields';
  id?: Maybe<Scalars['uuid']>;
  routeID?: Maybe<Scalars['uuid']>;
  userRoleID?: Maybe<Scalars['uuid']>;
};

/** order by max() on columns of table "user_role_route" */
export type User_Role_Route_Max_Order_By = {
  id?: InputMaybe<Order_By>;
  routeID?: InputMaybe<Order_By>;
  userRoleID?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type User_Role_Route_Min_Fields = {
  __typename?: 'user_role_route_min_fields';
  id?: Maybe<Scalars['uuid']>;
  routeID?: Maybe<Scalars['uuid']>;
  userRoleID?: Maybe<Scalars['uuid']>;
};

/** order by min() on columns of table "user_role_route" */
export type User_Role_Route_Min_Order_By = {
  id?: InputMaybe<Order_By>;
  routeID?: InputMaybe<Order_By>;
  userRoleID?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "user_role_route" */
export type User_Role_Route_Mutation_Response = {
  __typename?: 'user_role_route_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<User_Role_Route>;
};

/** on_conflict condition type for table "user_role_route" */
export type User_Role_Route_On_Conflict = {
  constraint: User_Role_Route_Constraint;
  update_columns?: Array<User_Role_Route_Update_Column>;
  where?: InputMaybe<User_Role_Route_Bool_Exp>;
};

/** Ordering options when selecting data from "user_role_route". */
export type User_Role_Route_Order_By = {
  id?: InputMaybe<Order_By>;
  route?: InputMaybe<Route_Order_By>;
  routeID?: InputMaybe<Order_By>;
  userRoleID?: InputMaybe<Order_By>;
  user_role?: InputMaybe<User_Role_Order_By>;
};

/** primary key columns input for table: user_role_route */
export type User_Role_Route_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "user_role_route" */
export enum User_Role_Route_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  RouteId = 'routeID',
  /** column name */
  UserRoleId = 'userRoleID',
}

/** input type for updating data in table "user_role_route" */
export type User_Role_Route_Set_Input = {
  id?: InputMaybe<Scalars['uuid']>;
  routeID?: InputMaybe<Scalars['uuid']>;
  userRoleID?: InputMaybe<Scalars['uuid']>;
};

/** Streaming cursor of the table "user_role_route" */
export type User_Role_Route_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: User_Role_Route_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type User_Role_Route_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['uuid']>;
  routeID?: InputMaybe<Scalars['uuid']>;
  userRoleID?: InputMaybe<Scalars['uuid']>;
};

/** update columns of table "user_role_route" */
export enum User_Role_Route_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  RouteId = 'routeID',
  /** column name */
  UserRoleId = 'userRoleID',
}

export type User_Role_Route_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<User_Role_Route_Set_Input>;
  where: User_Role_Route_Bool_Exp;
};

/** select columns of table "user_role" */
export enum User_Role_Select_Column {
  /** column name */
  Description = 'description',
  /** column name */
  Id = 'id',
  /** column name */
  IsHidden = 'isHidden',
  /** column name */
  Name = 'name',
}

/** input type for updating data in table "user_role" */
export type User_Role_Set_Input = {
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['uuid']>;
  isHidden?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
};

/** Streaming cursor of the table "user_role" */
export type User_Role_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: User_Role_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type User_Role_Stream_Cursor_Value_Input = {
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['uuid']>;
  isHidden?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
};

/** update columns of table "user_role" */
export enum User_Role_Update_Column {
  /** column name */
  Description = 'description',
  /** column name */
  Id = 'id',
  /** column name */
  IsHidden = 'isHidden',
  /** column name */
  Name = 'name',
}

export type User_Role_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<User_Role_Set_Input>;
  where: User_Role_Bool_Exp;
};

/** columns and relationships of "user_role_user_profile_tab" */
export type User_Role_User_Profile_Tab = {
  __typename?: 'user_role_user_profile_tab';
  id: Scalars['uuid'];
  userProfileTabID: Scalars['uuid'];
  userRoleID: Scalars['uuid'];
  /** An object relationship */
  user_profile_tab: User_Profile_Tab;
  /** An object relationship */
  user_role: User_Role;
};

/** aggregated selection of "user_role_user_profile_tab" */
export type User_Role_User_Profile_Tab_Aggregate = {
  __typename?: 'user_role_user_profile_tab_aggregate';
  aggregate?: Maybe<User_Role_User_Profile_Tab_Aggregate_Fields>;
  nodes: Array<User_Role_User_Profile_Tab>;
};

/** aggregate fields of "user_role_user_profile_tab" */
export type User_Role_User_Profile_Tab_Aggregate_Fields = {
  __typename?: 'user_role_user_profile_tab_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<User_Role_User_Profile_Tab_Max_Fields>;
  min?: Maybe<User_Role_User_Profile_Tab_Min_Fields>;
};

/** aggregate fields of "user_role_user_profile_tab" */
export type User_Role_User_Profile_Tab_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<User_Role_User_Profile_Tab_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "user_role_user_profile_tab" */
export type User_Role_User_Profile_Tab_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<User_Role_User_Profile_Tab_Max_Order_By>;
  min?: InputMaybe<User_Role_User_Profile_Tab_Min_Order_By>;
};

/** input type for inserting array relation for remote table "user_role_user_profile_tab" */
export type User_Role_User_Profile_Tab_Arr_Rel_Insert_Input = {
  data: Array<User_Role_User_Profile_Tab_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<User_Role_User_Profile_Tab_On_Conflict>;
};

/** Boolean expression to filter rows from the table "user_role_user_profile_tab". All fields are combined with a logical 'AND'. */
export type User_Role_User_Profile_Tab_Bool_Exp = {
  _and?: InputMaybe<Array<User_Role_User_Profile_Tab_Bool_Exp>>;
  _not?: InputMaybe<User_Role_User_Profile_Tab_Bool_Exp>;
  _or?: InputMaybe<Array<User_Role_User_Profile_Tab_Bool_Exp>>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  userProfileTabID?: InputMaybe<Uuid_Comparison_Exp>;
  userRoleID?: InputMaybe<Uuid_Comparison_Exp>;
  user_profile_tab?: InputMaybe<User_Profile_Tab_Bool_Exp>;
  user_role?: InputMaybe<User_Role_Bool_Exp>;
};

/** unique or primary key constraints on table "user_role_user_profile_tab" */
export enum User_Role_User_Profile_Tab_Constraint {
  /** unique or primary key constraint on columns "id" */
  UserRoleUserProfileTabPkey = 'user_role_user_profile_tab_pkey',
  /** unique or primary key constraint on columns "userRoleID", "userProfileTabID" */
  UserRoleUserProfileTabUserRoleIdUserProfileTabIdKey = 'user_role_user_profile_tab_userRoleID_userProfileTabID_key',
}

/** input type for inserting data into table "user_role_user_profile_tab" */
export type User_Role_User_Profile_Tab_Insert_Input = {
  id?: InputMaybe<Scalars['uuid']>;
  userProfileTabID?: InputMaybe<Scalars['uuid']>;
  userRoleID?: InputMaybe<Scalars['uuid']>;
  user_profile_tab?: InputMaybe<User_Profile_Tab_Obj_Rel_Insert_Input>;
  user_role?: InputMaybe<User_Role_Obj_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type User_Role_User_Profile_Tab_Max_Fields = {
  __typename?: 'user_role_user_profile_tab_max_fields';
  id?: Maybe<Scalars['uuid']>;
  userProfileTabID?: Maybe<Scalars['uuid']>;
  userRoleID?: Maybe<Scalars['uuid']>;
};

/** order by max() on columns of table "user_role_user_profile_tab" */
export type User_Role_User_Profile_Tab_Max_Order_By = {
  id?: InputMaybe<Order_By>;
  userProfileTabID?: InputMaybe<Order_By>;
  userRoleID?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type User_Role_User_Profile_Tab_Min_Fields = {
  __typename?: 'user_role_user_profile_tab_min_fields';
  id?: Maybe<Scalars['uuid']>;
  userProfileTabID?: Maybe<Scalars['uuid']>;
  userRoleID?: Maybe<Scalars['uuid']>;
};

/** order by min() on columns of table "user_role_user_profile_tab" */
export type User_Role_User_Profile_Tab_Min_Order_By = {
  id?: InputMaybe<Order_By>;
  userProfileTabID?: InputMaybe<Order_By>;
  userRoleID?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "user_role_user_profile_tab" */
export type User_Role_User_Profile_Tab_Mutation_Response = {
  __typename?: 'user_role_user_profile_tab_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<User_Role_User_Profile_Tab>;
};

/** on_conflict condition type for table "user_role_user_profile_tab" */
export type User_Role_User_Profile_Tab_On_Conflict = {
  constraint: User_Role_User_Profile_Tab_Constraint;
  update_columns?: Array<User_Role_User_Profile_Tab_Update_Column>;
  where?: InputMaybe<User_Role_User_Profile_Tab_Bool_Exp>;
};

/** Ordering options when selecting data from "user_role_user_profile_tab". */
export type User_Role_User_Profile_Tab_Order_By = {
  id?: InputMaybe<Order_By>;
  userProfileTabID?: InputMaybe<Order_By>;
  userRoleID?: InputMaybe<Order_By>;
  user_profile_tab?: InputMaybe<User_Profile_Tab_Order_By>;
  user_role?: InputMaybe<User_Role_Order_By>;
};

/** primary key columns input for table: user_role_user_profile_tab */
export type User_Role_User_Profile_Tab_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "user_role_user_profile_tab" */
export enum User_Role_User_Profile_Tab_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  UserProfileTabId = 'userProfileTabID',
  /** column name */
  UserRoleId = 'userRoleID',
}

/** input type for updating data in table "user_role_user_profile_tab" */
export type User_Role_User_Profile_Tab_Set_Input = {
  id?: InputMaybe<Scalars['uuid']>;
  userProfileTabID?: InputMaybe<Scalars['uuid']>;
  userRoleID?: InputMaybe<Scalars['uuid']>;
};

/** Streaming cursor of the table "user_role_user_profile_tab" */
export type User_Role_User_Profile_Tab_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: User_Role_User_Profile_Tab_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type User_Role_User_Profile_Tab_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['uuid']>;
  userProfileTabID?: InputMaybe<Scalars['uuid']>;
  userRoleID?: InputMaybe<Scalars['uuid']>;
};

/** update columns of table "user_role_user_profile_tab" */
export enum User_Role_User_Profile_Tab_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  UserProfileTabId = 'userProfileTabID',
  /** column name */
  UserRoleId = 'userRoleID',
}

export type User_Role_User_Profile_Tab_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<User_Role_User_Profile_Tab_Set_Input>;
  where: User_Role_User_Profile_Tab_Bool_Exp;
};

/** columns and relationships of "user_skill" */
export type User_Skill = {
  __typename?: 'user_skill';
  id: Scalars['uuid'];
  /** An object relationship */
  public_user_meta?: Maybe<Public_User_Meta>;
  /** An object relationship */
  skill: Skill;
  skillID: Scalars['uuid'];
  skillLevelID: Scalars['uuid'];
  /** An object relationship */
  skill_level: Skill_Level;
  userMetaID: Scalars['uuid'];
  /** An object relationship */
  user_meta: User_Meta;
};

/** aggregated selection of "user_skill" */
export type User_Skill_Aggregate = {
  __typename?: 'user_skill_aggregate';
  aggregate?: Maybe<User_Skill_Aggregate_Fields>;
  nodes: Array<User_Skill>;
};

/** aggregate fields of "user_skill" */
export type User_Skill_Aggregate_Fields = {
  __typename?: 'user_skill_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<User_Skill_Max_Fields>;
  min?: Maybe<User_Skill_Min_Fields>;
};

/** aggregate fields of "user_skill" */
export type User_Skill_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<User_Skill_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "user_skill" */
export type User_Skill_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<User_Skill_Max_Order_By>;
  min?: InputMaybe<User_Skill_Min_Order_By>;
};

/** input type for inserting array relation for remote table "user_skill" */
export type User_Skill_Arr_Rel_Insert_Input = {
  data: Array<User_Skill_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<User_Skill_On_Conflict>;
};

/** Boolean expression to filter rows from the table "user_skill". All fields are combined with a logical 'AND'. */
export type User_Skill_Bool_Exp = {
  _and?: InputMaybe<Array<User_Skill_Bool_Exp>>;
  _not?: InputMaybe<User_Skill_Bool_Exp>;
  _or?: InputMaybe<Array<User_Skill_Bool_Exp>>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  public_user_meta?: InputMaybe<Public_User_Meta_Bool_Exp>;
  skill?: InputMaybe<Skill_Bool_Exp>;
  skillID?: InputMaybe<Uuid_Comparison_Exp>;
  skillLevelID?: InputMaybe<Uuid_Comparison_Exp>;
  skill_level?: InputMaybe<Skill_Level_Bool_Exp>;
  userMetaID?: InputMaybe<Uuid_Comparison_Exp>;
  user_meta?: InputMaybe<User_Meta_Bool_Exp>;
};

/** unique or primary key constraints on table "user_skill" */
export enum User_Skill_Constraint {
  /** unique or primary key constraint on columns "id" */
  UserSkillPkey = 'user_skill_pkey',
  /** unique or primary key constraint on columns "userMetaID", "skillID" */
  UserSkillSkillIdUserMetaIdKey = 'user_skill_skillID_userMetaID_key',
}

/** input type for inserting data into table "user_skill" */
export type User_Skill_Insert_Input = {
  id?: InputMaybe<Scalars['uuid']>;
  public_user_meta?: InputMaybe<Public_User_Meta_Obj_Rel_Insert_Input>;
  skill?: InputMaybe<Skill_Obj_Rel_Insert_Input>;
  skillID?: InputMaybe<Scalars['uuid']>;
  skillLevelID?: InputMaybe<Scalars['uuid']>;
  skill_level?: InputMaybe<Skill_Level_Obj_Rel_Insert_Input>;
  userMetaID?: InputMaybe<Scalars['uuid']>;
  user_meta?: InputMaybe<User_Meta_Obj_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type User_Skill_Max_Fields = {
  __typename?: 'user_skill_max_fields';
  id?: Maybe<Scalars['uuid']>;
  skillID?: Maybe<Scalars['uuid']>;
  skillLevelID?: Maybe<Scalars['uuid']>;
  userMetaID?: Maybe<Scalars['uuid']>;
};

/** order by max() on columns of table "user_skill" */
export type User_Skill_Max_Order_By = {
  id?: InputMaybe<Order_By>;
  skillID?: InputMaybe<Order_By>;
  skillLevelID?: InputMaybe<Order_By>;
  userMetaID?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type User_Skill_Min_Fields = {
  __typename?: 'user_skill_min_fields';
  id?: Maybe<Scalars['uuid']>;
  skillID?: Maybe<Scalars['uuid']>;
  skillLevelID?: Maybe<Scalars['uuid']>;
  userMetaID?: Maybe<Scalars['uuid']>;
};

/** order by min() on columns of table "user_skill" */
export type User_Skill_Min_Order_By = {
  id?: InputMaybe<Order_By>;
  skillID?: InputMaybe<Order_By>;
  skillLevelID?: InputMaybe<Order_By>;
  userMetaID?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "user_skill" */
export type User_Skill_Mutation_Response = {
  __typename?: 'user_skill_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<User_Skill>;
};

/** on_conflict condition type for table "user_skill" */
export type User_Skill_On_Conflict = {
  constraint: User_Skill_Constraint;
  update_columns?: Array<User_Skill_Update_Column>;
  where?: InputMaybe<User_Skill_Bool_Exp>;
};

/** Ordering options when selecting data from "user_skill". */
export type User_Skill_Order_By = {
  id?: InputMaybe<Order_By>;
  public_user_meta?: InputMaybe<Public_User_Meta_Order_By>;
  skill?: InputMaybe<Skill_Order_By>;
  skillID?: InputMaybe<Order_By>;
  skillLevelID?: InputMaybe<Order_By>;
  skill_level?: InputMaybe<Skill_Level_Order_By>;
  userMetaID?: InputMaybe<Order_By>;
  user_meta?: InputMaybe<User_Meta_Order_By>;
};

/** primary key columns input for table: user_skill */
export type User_Skill_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "user_skill" */
export enum User_Skill_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  SkillId = 'skillID',
  /** column name */
  SkillLevelId = 'skillLevelID',
  /** column name */
  UserMetaId = 'userMetaID',
}

/** input type for updating data in table "user_skill" */
export type User_Skill_Set_Input = {
  id?: InputMaybe<Scalars['uuid']>;
  skillID?: InputMaybe<Scalars['uuid']>;
  skillLevelID?: InputMaybe<Scalars['uuid']>;
  userMetaID?: InputMaybe<Scalars['uuid']>;
};

/** Streaming cursor of the table "user_skill" */
export type User_Skill_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: User_Skill_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type User_Skill_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['uuid']>;
  skillID?: InputMaybe<Scalars['uuid']>;
  skillLevelID?: InputMaybe<Scalars['uuid']>;
  userMetaID?: InputMaybe<Scalars['uuid']>;
};

/** update columns of table "user_skill" */
export enum User_Skill_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  SkillId = 'skillID',
  /** column name */
  SkillLevelId = 'skillLevelID',
  /** column name */
  UserMetaId = 'userMetaID',
}

export type User_Skill_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<User_Skill_Set_Input>;
  where: User_Skill_Bool_Exp;
};

/** columns and relationships of "user_work_experience" */
export type User_Work_Experience = {
  __typename?: 'user_work_experience';
  description: Scalars['String'];
  id: Scalars['uuid'];
  jobTitle: Scalars['String'];
  userProfileCompanyID: Scalars['uuid'];
  userProfileID: Scalars['uuid'];
  /** An object relationship */
  user_profile: User_Profile;
  /** An object relationship */
  user_profile_company: User_Profile_Company;
};

/** aggregated selection of "user_work_experience" */
export type User_Work_Experience_Aggregate = {
  __typename?: 'user_work_experience_aggregate';
  aggregate?: Maybe<User_Work_Experience_Aggregate_Fields>;
  nodes: Array<User_Work_Experience>;
};

/** aggregate fields of "user_work_experience" */
export type User_Work_Experience_Aggregate_Fields = {
  __typename?: 'user_work_experience_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<User_Work_Experience_Max_Fields>;
  min?: Maybe<User_Work_Experience_Min_Fields>;
};

/** aggregate fields of "user_work_experience" */
export type User_Work_Experience_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<User_Work_Experience_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "user_work_experience" */
export type User_Work_Experience_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<User_Work_Experience_Max_Order_By>;
  min?: InputMaybe<User_Work_Experience_Min_Order_By>;
};

/** input type for inserting array relation for remote table "user_work_experience" */
export type User_Work_Experience_Arr_Rel_Insert_Input = {
  data: Array<User_Work_Experience_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<User_Work_Experience_On_Conflict>;
};

/** Boolean expression to filter rows from the table "user_work_experience". All fields are combined with a logical 'AND'. */
export type User_Work_Experience_Bool_Exp = {
  _and?: InputMaybe<Array<User_Work_Experience_Bool_Exp>>;
  _not?: InputMaybe<User_Work_Experience_Bool_Exp>;
  _or?: InputMaybe<Array<User_Work_Experience_Bool_Exp>>;
  description?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  jobTitle?: InputMaybe<String_Comparison_Exp>;
  userProfileCompanyID?: InputMaybe<Uuid_Comparison_Exp>;
  userProfileID?: InputMaybe<Uuid_Comparison_Exp>;
  user_profile?: InputMaybe<User_Profile_Bool_Exp>;
  user_profile_company?: InputMaybe<User_Profile_Company_Bool_Exp>;
};

/** unique or primary key constraints on table "user_work_experience" */
export enum User_Work_Experience_Constraint {
  /** unique or primary key constraint on columns "id" */
  UserWorkExperiencePkey = 'user_work_experience_pkey',
}

/** input type for inserting data into table "user_work_experience" */
export type User_Work_Experience_Insert_Input = {
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['uuid']>;
  jobTitle?: InputMaybe<Scalars['String']>;
  userProfileCompanyID?: InputMaybe<Scalars['uuid']>;
  userProfileID?: InputMaybe<Scalars['uuid']>;
  user_profile?: InputMaybe<User_Profile_Obj_Rel_Insert_Input>;
  user_profile_company?: InputMaybe<User_Profile_Company_Obj_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type User_Work_Experience_Max_Fields = {
  __typename?: 'user_work_experience_max_fields';
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  jobTitle?: Maybe<Scalars['String']>;
  userProfileCompanyID?: Maybe<Scalars['uuid']>;
  userProfileID?: Maybe<Scalars['uuid']>;
};

/** order by max() on columns of table "user_work_experience" */
export type User_Work_Experience_Max_Order_By = {
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  jobTitle?: InputMaybe<Order_By>;
  userProfileCompanyID?: InputMaybe<Order_By>;
  userProfileID?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type User_Work_Experience_Min_Fields = {
  __typename?: 'user_work_experience_min_fields';
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  jobTitle?: Maybe<Scalars['String']>;
  userProfileCompanyID?: Maybe<Scalars['uuid']>;
  userProfileID?: Maybe<Scalars['uuid']>;
};

/** order by min() on columns of table "user_work_experience" */
export type User_Work_Experience_Min_Order_By = {
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  jobTitle?: InputMaybe<Order_By>;
  userProfileCompanyID?: InputMaybe<Order_By>;
  userProfileID?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "user_work_experience" */
export type User_Work_Experience_Mutation_Response = {
  __typename?: 'user_work_experience_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<User_Work_Experience>;
};

/** on_conflict condition type for table "user_work_experience" */
export type User_Work_Experience_On_Conflict = {
  constraint: User_Work_Experience_Constraint;
  update_columns?: Array<User_Work_Experience_Update_Column>;
  where?: InputMaybe<User_Work_Experience_Bool_Exp>;
};

/** Ordering options when selecting data from "user_work_experience". */
export type User_Work_Experience_Order_By = {
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  jobTitle?: InputMaybe<Order_By>;
  userProfileCompanyID?: InputMaybe<Order_By>;
  userProfileID?: InputMaybe<Order_By>;
  user_profile?: InputMaybe<User_Profile_Order_By>;
  user_profile_company?: InputMaybe<User_Profile_Company_Order_By>;
};

/** primary key columns input for table: user_work_experience */
export type User_Work_Experience_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "user_work_experience" */
export enum User_Work_Experience_Select_Column {
  /** column name */
  Description = 'description',
  /** column name */
  Id = 'id',
  /** column name */
  JobTitle = 'jobTitle',
  /** column name */
  UserProfileCompanyId = 'userProfileCompanyID',
  /** column name */
  UserProfileId = 'userProfileID',
}

/** input type for updating data in table "user_work_experience" */
export type User_Work_Experience_Set_Input = {
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['uuid']>;
  jobTitle?: InputMaybe<Scalars['String']>;
  userProfileCompanyID?: InputMaybe<Scalars['uuid']>;
  userProfileID?: InputMaybe<Scalars['uuid']>;
};

/** Streaming cursor of the table "user_work_experience" */
export type User_Work_Experience_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: User_Work_Experience_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type User_Work_Experience_Stream_Cursor_Value_Input = {
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['uuid']>;
  jobTitle?: InputMaybe<Scalars['String']>;
  userProfileCompanyID?: InputMaybe<Scalars['uuid']>;
  userProfileID?: InputMaybe<Scalars['uuid']>;
};

/** update columns of table "user_work_experience" */
export enum User_Work_Experience_Update_Column {
  /** column name */
  Description = 'description',
  /** column name */
  Id = 'id',
  /** column name */
  JobTitle = 'jobTitle',
  /** column name */
  UserProfileCompanyId = 'userProfileCompanyID',
  /** column name */
  UserProfileId = 'userProfileID',
}

export type User_Work_Experience_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<User_Work_Experience_Set_Input>;
  where: User_Work_Experience_Bool_Exp;
};

/** Boolean expression to compare columns of type "uuid". All fields are combined with logical 'AND'. */
export type Uuid_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['uuid']>;
  _gt?: InputMaybe<Scalars['uuid']>;
  _gte?: InputMaybe<Scalars['uuid']>;
  _in?: InputMaybe<Array<Scalars['uuid']>>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  _lt?: InputMaybe<Scalars['uuid']>;
  _lte?: InputMaybe<Scalars['uuid']>;
  _neq?: InputMaybe<Scalars['uuid']>;
  _nin?: InputMaybe<Array<Scalars['uuid']>>;
};

/** columns and relationships of "webhook" */
export type Webhook = {
  __typename?: 'webhook';
  created_at: Scalars['timestamptz'];
  id: Scalars['uuid'];
  name: Scalars['String'];
  updated_at: Scalars['timestamptz'];
  url: Scalars['String'];
  /** An array relationship */
  webhook_triggers: Array<Webhook_Trigger>;
  /** An aggregate relationship */
  webhook_triggers_aggregate: Webhook_Trigger_Aggregate;
};

/** columns and relationships of "webhook" */
export type WebhookWebhook_TriggersArgs = {
  distinct_on?: InputMaybe<Array<Webhook_Trigger_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Webhook_Trigger_Order_By>>;
  where?: InputMaybe<Webhook_Trigger_Bool_Exp>;
};

/** columns and relationships of "webhook" */
export type WebhookWebhook_Triggers_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Webhook_Trigger_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Webhook_Trigger_Order_By>>;
  where?: InputMaybe<Webhook_Trigger_Bool_Exp>;
};

/** aggregated selection of "webhook" */
export type Webhook_Aggregate = {
  __typename?: 'webhook_aggregate';
  aggregate?: Maybe<Webhook_Aggregate_Fields>;
  nodes: Array<Webhook>;
};

/** aggregate fields of "webhook" */
export type Webhook_Aggregate_Fields = {
  __typename?: 'webhook_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<Webhook_Max_Fields>;
  min?: Maybe<Webhook_Min_Fields>;
};

/** aggregate fields of "webhook" */
export type Webhook_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Webhook_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** Boolean expression to filter rows from the table "webhook". All fields are combined with a logical 'AND'. */
export type Webhook_Bool_Exp = {
  _and?: InputMaybe<Array<Webhook_Bool_Exp>>;
  _not?: InputMaybe<Webhook_Bool_Exp>;
  _or?: InputMaybe<Array<Webhook_Bool_Exp>>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  url?: InputMaybe<String_Comparison_Exp>;
  webhook_triggers?: InputMaybe<Webhook_Trigger_Bool_Exp>;
};

/** unique or primary key constraints on table "webhook" */
export enum Webhook_Constraint {
  /** unique or primary key constraint on columns "name" */
  WebhookNameKey = 'webhook_name_key',
  /** unique or primary key constraint on columns "id" */
  WebhookPkey = 'webhook_pkey',
  /** unique or primary key constraint on columns "url" */
  WebhookUrlKey = 'webhook_url_key',
}

/** input type for inserting data into table "webhook" */
export type Webhook_Insert_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['uuid']>;
  name?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  url?: InputMaybe<Scalars['String']>;
  webhook_triggers?: InputMaybe<Webhook_Trigger_Arr_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type Webhook_Max_Fields = {
  __typename?: 'webhook_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  url?: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type Webhook_Min_Fields = {
  __typename?: 'webhook_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  url?: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "webhook" */
export type Webhook_Mutation_Response = {
  __typename?: 'webhook_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Webhook>;
};

/** input type for inserting object relation for remote table "webhook" */
export type Webhook_Obj_Rel_Insert_Input = {
  data: Webhook_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Webhook_On_Conflict>;
};

/** on_conflict condition type for table "webhook" */
export type Webhook_On_Conflict = {
  constraint: Webhook_Constraint;
  update_columns?: Array<Webhook_Update_Column>;
  where?: InputMaybe<Webhook_Bool_Exp>;
};

/** Ordering options when selecting data from "webhook". */
export type Webhook_Order_By = {
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  url?: InputMaybe<Order_By>;
  webhook_triggers_aggregate?: InputMaybe<Webhook_Trigger_Aggregate_Order_By>;
};

/** primary key columns input for table: webhook */
export type Webhook_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "webhook" */
export enum Webhook_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  Url = 'url',
}

/** input type for updating data in table "webhook" */
export type Webhook_Set_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['uuid']>;
  name?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  url?: InputMaybe<Scalars['String']>;
};

/** Streaming cursor of the table "webhook" */
export type Webhook_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Webhook_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Webhook_Stream_Cursor_Value_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['uuid']>;
  name?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  url?: InputMaybe<Scalars['String']>;
};

/** columns and relationships of "webhook_trigger" */
export type Webhook_Trigger = {
  __typename?: 'webhook_trigger';
  id: Scalars['uuid'];
  /** An object relationship */
  trigger: Trigger;
  triggerID: Scalars['uuid'];
  /** An object relationship */
  webhook: Webhook;
  webhookID: Scalars['uuid'];
};

/** aggregated selection of "webhook_trigger" */
export type Webhook_Trigger_Aggregate = {
  __typename?: 'webhook_trigger_aggregate';
  aggregate?: Maybe<Webhook_Trigger_Aggregate_Fields>;
  nodes: Array<Webhook_Trigger>;
};

/** aggregate fields of "webhook_trigger" */
export type Webhook_Trigger_Aggregate_Fields = {
  __typename?: 'webhook_trigger_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<Webhook_Trigger_Max_Fields>;
  min?: Maybe<Webhook_Trigger_Min_Fields>;
};

/** aggregate fields of "webhook_trigger" */
export type Webhook_Trigger_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Webhook_Trigger_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "webhook_trigger" */
export type Webhook_Trigger_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Webhook_Trigger_Max_Order_By>;
  min?: InputMaybe<Webhook_Trigger_Min_Order_By>;
};

/** input type for inserting array relation for remote table "webhook_trigger" */
export type Webhook_Trigger_Arr_Rel_Insert_Input = {
  data: Array<Webhook_Trigger_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Webhook_Trigger_On_Conflict>;
};

/** Boolean expression to filter rows from the table "webhook_trigger". All fields are combined with a logical 'AND'. */
export type Webhook_Trigger_Bool_Exp = {
  _and?: InputMaybe<Array<Webhook_Trigger_Bool_Exp>>;
  _not?: InputMaybe<Webhook_Trigger_Bool_Exp>;
  _or?: InputMaybe<Array<Webhook_Trigger_Bool_Exp>>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  trigger?: InputMaybe<Trigger_Bool_Exp>;
  triggerID?: InputMaybe<Uuid_Comparison_Exp>;
  webhook?: InputMaybe<Webhook_Bool_Exp>;
  webhookID?: InputMaybe<Uuid_Comparison_Exp>;
};

/** unique or primary key constraints on table "webhook_trigger" */
export enum Webhook_Trigger_Constraint {
  /** unique or primary key constraint on columns "id" */
  WebhookTriggerPkey = 'webhook_trigger_pkey',
  /** unique or primary key constraint on columns "webhookID", "triggerID" */
  WebhookTriggerWebhookIdTriggerIdKey = 'webhook_trigger_webhookID_triggerID_key',
}

/** input type for inserting data into table "webhook_trigger" */
export type Webhook_Trigger_Insert_Input = {
  id?: InputMaybe<Scalars['uuid']>;
  trigger?: InputMaybe<Trigger_Obj_Rel_Insert_Input>;
  triggerID?: InputMaybe<Scalars['uuid']>;
  webhook?: InputMaybe<Webhook_Obj_Rel_Insert_Input>;
  webhookID?: InputMaybe<Scalars['uuid']>;
};

/** aggregate max on columns */
export type Webhook_Trigger_Max_Fields = {
  __typename?: 'webhook_trigger_max_fields';
  id?: Maybe<Scalars['uuid']>;
  triggerID?: Maybe<Scalars['uuid']>;
  webhookID?: Maybe<Scalars['uuid']>;
};

/** order by max() on columns of table "webhook_trigger" */
export type Webhook_Trigger_Max_Order_By = {
  id?: InputMaybe<Order_By>;
  triggerID?: InputMaybe<Order_By>;
  webhookID?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Webhook_Trigger_Min_Fields = {
  __typename?: 'webhook_trigger_min_fields';
  id?: Maybe<Scalars['uuid']>;
  triggerID?: Maybe<Scalars['uuid']>;
  webhookID?: Maybe<Scalars['uuid']>;
};

/** order by min() on columns of table "webhook_trigger" */
export type Webhook_Trigger_Min_Order_By = {
  id?: InputMaybe<Order_By>;
  triggerID?: InputMaybe<Order_By>;
  webhookID?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "webhook_trigger" */
export type Webhook_Trigger_Mutation_Response = {
  __typename?: 'webhook_trigger_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Webhook_Trigger>;
};

/** on_conflict condition type for table "webhook_trigger" */
export type Webhook_Trigger_On_Conflict = {
  constraint: Webhook_Trigger_Constraint;
  update_columns?: Array<Webhook_Trigger_Update_Column>;
  where?: InputMaybe<Webhook_Trigger_Bool_Exp>;
};

/** Ordering options when selecting data from "webhook_trigger". */
export type Webhook_Trigger_Order_By = {
  id?: InputMaybe<Order_By>;
  trigger?: InputMaybe<Trigger_Order_By>;
  triggerID?: InputMaybe<Order_By>;
  webhook?: InputMaybe<Webhook_Order_By>;
  webhookID?: InputMaybe<Order_By>;
};

/** primary key columns input for table: webhook_trigger */
export type Webhook_Trigger_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "webhook_trigger" */
export enum Webhook_Trigger_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  TriggerId = 'triggerID',
  /** column name */
  WebhookId = 'webhookID',
}

/** input type for updating data in table "webhook_trigger" */
export type Webhook_Trigger_Set_Input = {
  id?: InputMaybe<Scalars['uuid']>;
  triggerID?: InputMaybe<Scalars['uuid']>;
  webhookID?: InputMaybe<Scalars['uuid']>;
};

/** Streaming cursor of the table "webhook_trigger" */
export type Webhook_Trigger_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Webhook_Trigger_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Webhook_Trigger_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['uuid']>;
  triggerID?: InputMaybe<Scalars['uuid']>;
  webhookID?: InputMaybe<Scalars['uuid']>;
};

/** update columns of table "webhook_trigger" */
export enum Webhook_Trigger_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  TriggerId = 'triggerID',
  /** column name */
  WebhookId = 'webhookID',
}

export type Webhook_Trigger_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Webhook_Trigger_Set_Input>;
  where: Webhook_Trigger_Bool_Exp;
};

/** update columns of table "webhook" */
export enum Webhook_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  Url = 'url',
}

export type Webhook_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Webhook_Set_Input>;
  where: Webhook_Bool_Exp;
};
